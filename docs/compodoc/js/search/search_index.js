var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.151,1,2.788]],["body/interfaces/ActionCache.html",[0,0.266,1,4.221,2,1.094,3,0.242,4,0.242,5,0.149,6,3.301,7,0.406,8,0.581,9,5.213,10,1.684,11,0.528,12,0.012,13,0.422,14,4.905,15,3.757,16,1.424,17,4.946,18,2.003,19,0.709,20,3.301,21,1.304,22,1.605,23,4.654,24,3.301,25,2.948,26,3.508,27,3.508,28,3.301,29,2.968,30,3.508,31,3.301,32,3.301,33,3.301,34,3.123,35,3.123,36,4.805,37,2.968,38,3.508,39,2.562,40,3.508,41,2.843,42,3.508,43,3.062,44,3.508,45,3.796,46,3.508,47,3.123,48,3.508,49,3.301,50,3.508,51,3.301,52,3.508,53,3.301,54,3.508,55,3.123,56,3.508,57,3.301,58,3.508,59,2.83,60,3.508,61,3.123,62,3.508,63,3.301,64,3.508,65,3.301,66,3.508,67,3.301,68,3.508,69,3.301,70,3.123,71,3.508,72,3.508,73,3.508,74,3.508,75,0.009,76,0.009]],["title/interfaces/AnalyserConfig.html",[0,0.151,77,2.39]],["body/interfaces/AnalyserConfig.html",[0,0.286,2,1.038,3,0.23,4,0.23,5,0.141,7,0.245,8,0.561,10,1.765,11,0.542,12,0.012,13,0.425,18,2.754,19,1.033,22,1.522,25,2.849,75,0.008,76,0.008,77,3.498,78,2.684,79,4.026,80,4.323,81,4.323,82,4.323,83,2.566,84,2.459,85,2.566,86,2.566,87,2.566,88,2.566,89,2.566,90,2.566,91,2.566,92,2.684,93,2.684,94,2.459,95,3.344,96,3.205,97,3.205,98,3.205,99,2.459,100,3.205,101,2.566,102,2.849,103,2.849,104,3.205,105,2.566,106,2.566,107,2.459,108,2.684,109,2.815,110,2.361,111,3.423,112,2.566,113,2.361,114,3.891,115,2.959,116,2.566,117,3.205,118,3.487,119,3.487,120,2.271,121,3.205,122,3.627]],["title/components/AppComponent.html",[123,1.009,124,1.75]],["body/components/AppComponent.html",[3,0.229,4,0.229,5,0.183,12,0.011,13,0.244,75,0.008,76,0.008,123,1.639,124,3.013,125,2.039,126,2.025,127,2.025,128,2.025,129,4.834,130,1.655,131,4.068,132,4.068,133,3.285,134,3.378,135,1.755,136,2.469,137,3.013,138,2.469,139,6.309,140,3.049,141,0.945,142,4.834,143,0.732,144,3.117,145,0.917,146,0.67,147,4.834,148,2.802,149,4.834,150,2.949,151,2.448,152,4.068,153,3.547,154,5.014,155,4.834,156,4.834,157,0.605,158,1.953,159,4.834,160,4.834,161,4.834,162,4.834,163,4.834,164,3.547,165,4.834,166,4.834,167,4.834,168,4.834,169,4.834,170,4.834,171,4.834,172,2.025,173,2.554,174,2.169,175,1.715,176,3.119,177,2.025,178,1.5,179,2.025,180,1.957,181,1.516,182,2.025,183,1.957,184,2.025,185,1.957,186,1.83,187,2.025,188,1.715,189,1.771,190,1.771,191,2.643,192,1.957,193,1.957,194,3.119,195,1.957,196,2.025,197,1.957,198,2.025,199,1.83,200,1.957,201,1.957,202,2.025,203,1.957,204,1.891,205,2.025,206,1.957,207,2.025,208,1.957,209,1.83,210,1.957,211,1.957,212,1.957,213,1.891,214,1.957,215,2.025]],["title/injectables/AudioService.html",[216,0.726,217,2.19]],["body/injectables/AudioService.html",[0,0.086,3,0.116,4,0.116,5,0.171,7,0.124,8,0.342,10,1.532,11,0.455,12,0.012,13,0.241,16,2.061,21,1.887,22,1.496,39,3.147,41,1.674,75,0.005,76,0.005,110,2.632,120,2.231,135,0.681,140,2.071,141,1.608,143,0.5,145,0.464,146,0.339,157,0.306,158,1.943,174,0.842,178,1.366,216,0.648,217,1.953,218,0.958,219,1.945,220,2.483,221,4.18,222,3.501,223,3.269,224,4.302,225,3.791,226,4.18,227,4.18,228,3.791,229,4.18,230,4.302,231,0.849,232,4.743,233,3.856,234,3.856,235,3.709,236,1.64,237,4.302,238,4.743,239,3.856,240,3.856,241,3.856,242,3.856,243,3.856,244,3.856,245,3.064,246,4.18,247,2.448,248,2.448,249,1.606,250,3.379,251,4.321,252,2.448,253,2.063,254,1.287,255,3.269,256,3.379,257,3.932,258,2.448,259,3.856,260,2.448,261,2.448,262,1.419,263,2.448,264,3.379,265,4.68,266,2.448,267,2.017,268,2.486,269,2.863,270,2.448,271,2.448,272,3.379,273,2.448,274,3.379,275,5.16,276,2.448,277,3.379,278,2.448,279,3.379,280,3.379,281,2.448,282,2.448,283,3.379,284,2.448,285,4.743,286,2.448,287,2.448,288,2.416,289,3.379,290,2.637,291,2.766,292,2.766,293,2.91,294,2.637,295,2.91,296,2.91,297,3.076,298,3.076,299,3.076,300,2.448,301,4.59,302,2.448,303,2.448,304,4.743,305,2.448,306,2.448,307,2.448,308,3.379,309,2.448,310,3.379,311,2.829,312,2.448,313,2.448,314,2.448,315,2.352,316,1.419,317,1.19,318,1.294,319,1.419,320,2.829,321,0.869,322,2.829,323,3.269,324,0.701,325,1.448,326,2.145,327,1.419,328,2.145,329,4.033,330,2.145,331,2.145,332,2.145,333,2.145,334,4.302,335,2.145,336,2.145,337,2.145,338,3.379,339,2.145,340,2.145,341,2.145,342,2.145,343,2.191,344,2.829,345,1.945,346,2.829,347,2.145,348,1.227,349,2.145,350,2.486,351,3.064,352,2.145,353,2.145,354,2.145,355,2.145,356,1.677,357,2.145,358,2.145,359,2.145,360,3.379,361,2.145,362,1.796,363,1.353,364,1.796,365,1.493,366,2.145,367,1.578,368,1.945,369,2.145,370,2.145,371,3.379,372,3.379,373,2.145,374,2.642,375,3.379,376,3.379,377,2.145,378,2.145,379,2.145,380,2.145,381,2.145,382,2.145,383,2.145,384,2.145,385,1.578,386,1.294,387,1.796,388,1.945,389,2.145,390,2.145,391,2.145,392,2.145,393,2.145,394,2.145,395,3.379,396,2.145,397,2.145,398,2.145,399,2.145,400,2.145,401,1.285,402,2.145,403,3.064,404,2.145,405,2.145,406,1.945,407,2.145,408,1.796,409,1.19,410,2.145,411,1.578,412,2.145,413,2.145,414,2.145,415,2.145,416,2.145,417,2.145,418,2.145,419,2.145,420,2.145,421,2.145,422,2.145,423,2.145,424,2.145,425,2.145,426,2.145,427,2.145,428,2.145,429,2.145,430,3.379,431,2.145,432,1.945,433,1.945,434,1.945,435,1.945,436,1.578,437,2.145,438,2.145,439,2.145,440,2.145,441,3.379,442,2.145,443,2.145,444,2.145,445,2.145,446,0.897,447,2.145,448,2.145,449,3.379,450,2.145,451,2.145,452,2.145,453,2.145,454,2.145,455,2.145,456,2.145,457,2.145,458,2.145,459,2.145,460,2.145,461,2.145,462,2.145,463,2.145]],["title/interfaces/AxisGamepadAction.html",[0,0.151,24,2.788]],["body/interfaces/AxisGamepadAction.html",[0,0.266,1,3.29,2,1.091,3,0.242,4,0.242,5,0.148,6,3.29,7,0.364,8,0.579,9,3.497,10,1.582,11,0.527,12,0.012,13,0.422,14,5.334,15,3.745,16,1.42,17,5.207,18,1.997,19,0.707,20,3.29,21,1.3,22,1.6,23,4.647,24,4.213,25,3.246,26,5.207,27,5.207,28,3.29,29,2.959,30,3.497,31,3.29,32,3.29,33,3.29,34,3.113,35,3.113,36,4.795,37,2.959,38,3.497,39,2.557,40,3.497,41,2.837,42,3.497,43,3.056,44,3.497,45,3.788,46,3.497,47,3.113,48,3.497,49,3.29,50,3.497,51,3.29,52,3.497,53,3.29,54,3.497,55,3.113,56,3.497,57,3.29,58,3.497,59,2.821,60,3.497,61,3.113,62,3.497,63,3.29,64,3.497,65,3.29,66,3.497,67,3.29,68,3.497,69,3.29,70,3.113,71,3.497,72,3.497,73,3.497,74,3.497,75,0.009,76,0.009]],["title/pipes/BandPipe.html",[464,2.39,465,3.436]],["body/pipes/BandPipe.html",[3,0.275,4,0.275,5,0.169,11,0.39,12,0.012,13,0.293,19,0.981,43,2.715,75,0.009,76,0.009,130,1.523,141,1.135,143,0.655,146,0.804,157,0.726,178,1.54,231,1.278,249,1.241,253,1.766,254,1.102,257,4.613,262,3.366,267,2.088,294,3.21,319,3.366,323,4.853,348,1.732,464,3.915,465,5.629,466,3.744,467,5.807,468,6.207,469,2.572,470,4.853,471,4.261,472,5.629,473,6.698,474,5.807,475,5.629,476,2.824,477,5.807,478,5.807,479,5.807,480,5.807]],["title/interfaces/BarsVisualizerOptions.html",[0,0.151,117,2.19]],["body/interfaces/BarsVisualizerOptions.html",[0,0.284,2,0.994,3,0.22,4,0.22,5,0.135,7,0.235,8,0.545,10,1.773,11,0.556,12,0.012,13,0.422,18,3.066,19,1.016,22,1.458,25,3.104,75,0.008,76,0.008,77,2.571,78,2.571,79,3.887,80,2.697,81,2.697,82,2.697,83,2.458,84,2.356,85,2.458,86,2.458,87,2.458,88,2.458,89,2.458,90,2.458,91,2.458,92,2.571,93,2.571,94,2.356,95,4.031,96,3.863,97,3.863,98,3.863,99,2.356,100,3.116,101,2.458,102,2.77,103,2.77,104,3.116,105,2.458,106,2.458,107,2.356,108,2.571,109,2.697,110,2.262,111,3.352,112,2.458,113,2.262,114,4.054,115,2.877,116,2.458,117,3.491,118,3.794,119,3.664,120,3.43,121,3.116,122,3.566]],["title/interfaces/BaseVisualizerOptions.html",[0,0.151,114,2.39]],["body/interfaces/BaseVisualizerOptions.html",[0,0.286,2,1.027,3,0.227,4,0.227,5,0.139,7,0.243,8,0.557,10,1.758,11,0.548,12,0.012,13,0.424,18,3.094,19,1.132,22,1.506,25,2.83,75,0.008,76,0.008,77,2.656,78,2.656,79,3.612,80,2.786,81,2.786,82,2.786,83,2.539,84,2.434,85,2.539,86,2.539,87,2.539,88,2.539,89,2.539,90,2.539,91,2.539,92,2.656,93,2.656,94,2.434,95,3.321,96,3.183,97,3.183,98,3.183,99,2.434,100,3.183,101,2.539,102,3.471,103,3.471,104,3.904,105,2.539,106,2.539,107,2.434,108,2.656,109,2.786,110,2.337,111,3.405,112,2.539,113,2.337,114,4.106,115,3.473,116,3.926,117,3.183,118,3.473,119,3.473,120,2.247,121,3.183,122,3.612]],["title/pipes/BitratePipe.html",[464,2.39,481,3.436]],["body/pipes/BitratePipe.html",[3,0.282,4,0.282,5,0.173,10,1.557,11,0.4,12,0.012,13,0.301,19,0.997,39,2.331,75,0.009,76,0.009,130,1.563,141,1.165,143,0.551,146,0.825,157,0.745,158,1.563,178,1.557,231,1.311,249,1.273,253,1.812,254,1.13,267,1.887,294,3.293,348,1.63,464,3.977,466,3.841,469,2.325,470,4.93,471,4.372,472,5.718,475,5.718,476,2.897,481,5.718,482,6.304,483,5.958,484,6.38,485,2.926,486,5.958,487,5.958,488,5.958]],["title/interfaces/ButtonGamepadAction.html",[0,0.151,28,2.788]],["body/interfaces/ButtonGamepadAction.html",[0,0.267,1,3.327,2,1.103,3,0.244,4,0.244,5,0.15,6,3.327,7,0.366,8,0.584,9,3.536,10,1.588,11,0.512,12,0.012,13,0.423,14,5.196,15,3.787,16,1.436,17,5.229,18,2.019,19,0.715,20,3.327,21,1.315,22,1.618,23,4.672,24,3.327,25,3.263,26,3.536,27,3.536,28,4.243,29,4.424,30,3.536,31,3.327,32,3.327,33,3.327,34,3.149,35,3.149,36,4.829,37,2.992,38,3.536,39,2.575,40,3.536,41,2.857,42,3.536,43,3.078,44,3.536,45,3.815,46,3.536,47,3.149,48,3.536,49,3.327,50,3.536,51,3.327,52,3.536,53,3.327,54,3.536,55,3.149,56,3.536,57,3.327,58,3.536,59,2.853,60,3.536,61,3.149,62,3.536,63,3.327,64,3.536,65,3.327,66,3.536,67,3.327,68,3.536,69,3.327,70,3.149,71,3.536,72,3.536,73,3.536,74,3.536,75,0.009,76,0.009]],["title/interfaces/Chainable.html",[0,0.151,489,3.789]],["body/interfaces/Chainable.html",[0,0.184,2,1.125,3,0.249,4,0.249,5,0.193,7,0.266,12,0.012,16,1.854,75,0.009,76,0.009,141,1.029,143,0.616,174,1.81,231,1.466,249,1.125,254,0.999,320,4.89,350,3.393,364,4.89,489,5.839,490,5.263,491,6.108,492,5.263,493,5.263,494,4.612,495,5.263,496,4.612,497,5.263,498,5.263,499,5.263,500,5.839,501,7.686,502,5.839,503,5.839,504,5.295,505,5.263,506,5.263,507,5.263,508,5.263,509,4.612,510,5.263,511,5.263,512,5.263,513,5.263,514,7.686,515,5.263,516,5.263,517,3.211,518,5.263,519,5.263,520,6.663,521,5.263,522,6.663,523,6.663,524,5.263,525,5.263,526,5.263,527,5.263,528,6.663,529,4.714,530,5.263,531,5.263,532,5.263,533,5.263,534,2.461]],["title/interfaces/Color.html",[0,0.151,535,2.788]],["body/interfaces/Color.html",[0,0.222,2,1.354,3,0.3,4,0.3,5,0.184,7,0.32,8,0.662,11,0.532,12,0.011,13,0.32,19,1.173,22,2.487,75,0.01,76,0.01,178,1.65,535,4.812,536,6.335,537,7.178,538,4.749]],["title/interfaces/ColorConfig.html",[0,0.151,539,2.506]],["body/interfaces/ColorConfig.html",[0,0.26,2,1.167,3,0.258,4,0.258,5,0.216,7,0.276,8,0.605,11,0.523,12,0.012,13,0.405,19,1.192,75,0.009,76,0.009,102,3.507,103,3.507,130,2.043,143,0.688,254,1.478,257,3.165,290,3.018,291,3.165,292,3.165,293,3.331,294,3.018,295,3.331,296,3.331,297,3.52,298,3.52,299,3.52,385,3.52,539,3.953,540,4.007,541,4.397,542,3.52,543,2.067,544,3.604,545,2.499,546,4.339,547,4.673,548,3.018,549,2.961,550,4.397,551,3.741,552,2.288,553,1.877,554,1.938,555,3.331,556,2.655,557,3.741,558,4.007,559,3.741,560,3.741,561,3.331]],["title/interfaces/CoverArtImage.html",[0,0.151,562,2.788]],["body/interfaces/CoverArtImage.html",[0,0.248,2,0.918,3,0.203,4,0.203,5,0.125,7,0.217,8,0.517,10,0.865,11,0.498,12,0.012,13,0.217,19,1.151,22,2.076,75,0.008,76,0.008,135,1.195,143,0.724,145,0.815,146,0.595,157,0.537,158,2.055,181,1.347,216,0.98,220,1.722,236,2.277,321,1.524,324,1.231,325,1.541,348,1.851,401,2.553,446,2.602,469,1.388,485,2.965,534,2.727,543,1.626,545,1.574,553,1.477,554,1.524,562,4.269,563,1.524,564,2.943,565,4.866,566,3.454,567,4.866,568,5.11,569,2.27,570,2.176,571,2.943,572,2.77,573,2.77,574,3.354,575,2.009,576,2.137,577,1.681,578,2.089,579,2.176,580,2.27,581,3.76,582,2.727,583,2.77,584,4.269,585,2.621,586,2.77,587,3.996,588,2.943,589,2.943,590,2.621,591,2.77,592,2.77,593,2.27,594,2.621,595,2.176,596,2.27,597,2.27,598,2.943,599,2.943,600,2.943,601,2.27,602,2.506,603,2.176,604,2.954,605,2.982,606,3.996,607,2.943,608,2.943,609,3.096,610,3.082,611,2.49,612,2.943,613,2.943,614,2.943,615,2.943,616,2.943,617,2.943,618,1.388,619,3.082,620,3.996,621,2.943,622,2.943,623,2.621,624,2.943,625,2.943,626,2.943,627,2.943,628,3.996,629,2.943,630,2.943,631,1.8,632,2.943,633,2.943,634,2.361,635,2.943,636,2.943,637,2.943,638,2.943]],["title/interfaces/CoverArtResponse.html",[0,0.151,592,2.788]],["body/interfaces/CoverArtResponse.html",[0,0.251,2,0.938,3,0.208,4,0.208,5,0.127,7,0.222,8,0.525,10,0.884,11,0.295,12,0.012,13,0.222,19,1.137,22,1.376,75,0.008,76,0.008,135,1.221,143,0.728,145,0.833,146,0.608,157,0.549,158,2.066,181,1.376,216,0.994,220,1.747,236,2.302,321,1.558,324,1.258,325,1.552,348,1.859,401,2.569,446,2.626,469,1.419,485,2.982,534,2.768,543,1.662,545,1.609,553,1.51,554,1.558,562,4.62,563,1.558,564,3.008,565,3.008,566,2.135,567,3.008,569,2.32,570,2.223,571,3.008,572,2.83,573,2.83,574,3.391,575,2.053,576,2.169,577,1.718,578,2.135,579,2.223,580,2.32,581,3.816,582,2.768,583,2.83,584,4.317,585,2.678,586,2.83,587,4.055,588,3.008,589,3.008,590,2.678,591,2.83,592,3.816,593,3.787,594,2.678,595,2.223,596,2.32,597,2.32,598,3.008,599,3.008,600,3.008,601,2.32,602,2.534,603,2.223,604,2.998,605,3.015,606,4.055,607,3.008,608,3.008,609,3.131,610,3.128,611,2.545,612,3.008,613,3.008,614,3.008,615,3.008,616,3.008,617,3.008,618,1.419,619,3.128,620,4.055,621,3.008,622,3.008,623,2.678,624,3.008,625,3.008,626,3.008,627,3.008,628,4.055,629,3.008,630,3.008,631,1.839,632,3.008,633,3.008,634,2.395,635,3.008,636,3.008,637,3.008,638,3.008]],["title/interfaces/CoverColor.html",[0,0.151,639,2.788]],["body/interfaces/CoverColor.html",[0,0.285,2,1.236,3,0.274,4,0.274,5,0.222,7,0.292,8,0.627,11,0.474,12,0.011,13,0.412,19,1.196,75,0.009,76,0.009,143,0.535,254,1.508,401,1.928,538,4.608,543,2.19,544,3.058,545,2.12,563,2.053,576,2.59,577,2.264,582,3.305,631,2.424,634,2.342,639,5.465,640,3.964,641,5.124,642,3.058,643,3.73,644,3.73,645,3.73,646,3.73,647,3.73,648,3.53,649,3.53,650,2.706]],["title/interfaces/CoverColorPalette.html",[0,0.151,544,2.285]],["body/interfaces/CoverColorPalette.html",[0,0.28,2,1.161,3,0.257,4,0.257,5,0.215,7,0.274,8,0.603,11,0.548,12,0.011,13,0.404,19,1.148,75,0.009,76,0.009,143,0.502,254,1.632,401,1.811,538,3.149,543,2.056,544,3.593,545,1.99,563,1.928,576,2.491,577,2.126,582,3.179,631,2.276,634,2.199,639,5.654,640,3.722,641,3.502,642,4.109,643,5.012,644,5.012,645,5.012,646,5.012,647,5.012,648,3.314,649,3.314,650,2.54]],["title/components/CoverDisplayComponent.html",[123,1.009,180,1.75]],["body/components/CoverDisplayComponent.html",[3,0.172,4,0.172,5,0.15,7,0.183,8,0.459,12,0.012,13,0.183,21,1.54,75,0.007,76,0.007,123,1.411,124,1.467,125,1.675,126,1.519,127,1.519,128,1.519,130,1.359,131,3.34,132,3.34,133,3.185,134,3.264,136,2.027,137,1.467,138,2.027,141,1.182,143,0.671,144,2.337,145,0.688,146,0.502,152,3.34,153,2.66,157,0.453,158,1.359,164,2.66,172,1.519,173,2.097,174,1.782,175,1.286,176,2.764,177,1.519,178,1.329,179,1.519,180,2.67,181,2.504,182,1.519,183,1.467,184,1.519,185,1.467,186,1.372,187,1.519,188,1.286,189,1.328,190,1.328,191,2.171,192,1.467,193,1.467,194,2.764,195,1.467,196,1.519,197,1.467,198,1.519,199,1.372,200,1.467,201,1.467,202,1.519,203,1.467,204,1.418,205,1.519,206,1.467,207,1.519,208,1.467,209,1.372,210,1.467,211,1.467,212,1.467,213,1.418,214,1.467,215,1.519,220,2.297,223,3.55,267,1.586,315,4.258,319,2.101,325,0.752,348,1.174,481,4.805,482,5.781,484,5.243,549,3.03,554,1.839,555,3.161,556,2.519,557,4.782,651,5.781,652,3.625,653,3.55,654,6.047,655,4.437,656,4.805,657,5.181,658,2.519,659,5.181,660,6.047,661,6.598,662,5.181,663,5.181,664,5.181,665,5.181,666,3.625,667,5.181,668,3.625,669,5.181,670,3.625,671,2.211,672,3.176,673,2.101,674,3.625,675,5.781,676,5.181,677,5.181,678,5.181,679,6.598,680,6.598,681,3.625,682,6.598,683,3.34,684,6.598,685,6.598,686,6.598,687,6.598,688,5.181,689,5.181,690,3.625]],["title/components/EqualizerComponent.html",[123,1.009,183,1.75]],["body/components/EqualizerComponent.html",[3,0.212,4,0.212,5,0.174,7,0.342,8,0.532,10,1.362,11,0.3,12,0.012,13,0.226,19,0.831,21,1.722,75,0.008,76,0.008,123,1.578,124,1.812,125,1.938,126,1.875,127,1.875,128,1.875,130,1.573,131,3.866,132,3.866,133,3.26,134,3.35,136,2.346,137,1.812,138,2.346,141,1.322,143,0.668,144,2.886,145,0.849,146,0.62,157,0.56,158,1.174,172,1.875,173,2.427,174,2.062,175,1.588,176,3.026,177,1.875,178,1.517,179,1.875,180,1.812,181,1.403,182,1.875,183,2.923,184,1.875,185,1.812,186,1.694,187,1.875,188,1.588,189,1.64,190,1.64,191,2.512,192,1.812,193,1.812,194,3.026,195,1.812,196,1.875,197,1.812,198,1.875,199,1.694,200,1.812,201,1.812,202,1.875,203,1.812,204,1.751,205,1.875,206,1.812,207,1.875,208,1.812,209,1.694,210,1.812,211,1.812,212,1.812,213,1.751,214,1.812,215,1.875,217,3.658,231,1.32,249,0.956,253,1.362,254,0.849,267,1.774,322,4.962,323,5.513,348,1.014,374,4.108,465,5.373,549,2.603,658,2.916,691,4.476,692,4.765,693,5.373,694,5.996,695,5.996,696,7.531,697,5.996,698,5.996,699,4.476,700,3.658,701,4.476,702,4.476,703,2.886,704,4.476,705,3.557,706,5.996,707,4.476,708,2.595]],["title/interfaces/EqualizerGainValues.html",[0,0.151,224,3.436]],["body/interfaces/EqualizerGainValues.html",[0,0.114,2,0.697,3,0.154,4,0.154,5,0.139,10,1.496,12,0.012,13,0.288,16,1.336,22,1.023,39,3.057,41,1.417,75,0.006,76,0.006,110,1.587,120,1.526,135,0.908,140,1.417,141,0.638,143,0.581,145,0.619,146,0.452,157,0.408,158,2.074,174,1.122,216,0.806,217,1.653,219,2.593,220,2.334,221,2.859,222,2.394,223,2.236,224,4.526,225,2.593,226,2.859,227,2.859,228,2.593,229,2.859,230,2.593,232,2.859,235,2.236,236,1.122,237,2.593,238,2.859,246,2.859,250,2.859,251,3.523,255,3.289,256,2.859,257,3.641,264,2.859,265,4.526,267,1.259,268,2.104,269,3.054,272,2.859,274,2.859,275,4.991,277,2.859,279,2.859,280,2.859,283,2.859,285,4.207,288,2.431,289,2.859,290,2.654,291,2.783,292,2.783,293,2.929,294,2.654,295,2.929,296,2.929,297,3.095,298,3.095,299,3.095,301,4.179,304,4.207,308,2.859,310,2.859,311,2.394,315,2.929,316,1.892,317,1.587,318,1.725,319,1.892,320,3.523,321,1.158,322,3.523,323,4.303,324,0.935,325,1.572,326,2.859,327,1.892,328,2.859,329,4.513,330,2.859,331,2.859,332,2.859,333,2.859,334,4.991,335,2.859,336,2.859,337,2.859,338,4.207,339,2.859,340,2.859,341,2.859,342,2.859,343,2.542,344,3.523,345,2.593,346,3.523,347,2.859,348,1.423,349,2.859,350,3.095,351,3.815,352,2.859,353,2.859,354,2.859,355,2.859,356,2.236,357,2.859,358,2.859,359,2.859,360,4.207,361,2.859,362,2.394,363,1.804,364,2.394,365,1.991,366,2.859,367,2.104,368,2.593,369,2.859,370,2.859,371,4.207,372,4.207,373,2.859,374,3.289,375,4.207,376,4.207,377,2.859,378,2.859,379,2.859,380,2.859,381,2.859,382,2.859,383,2.859,384,2.859,385,2.104,386,1.725,387,2.394,388,2.593,389,2.859,390,2.859,391,2.859,392,2.859,393,2.859,394,2.859,395,4.207,396,2.859,397,2.859,398,2.859,399,2.859,400,2.859,401,1.6,402,2.859,403,3.815,404,2.859,405,2.859,406,2.593,407,2.859,408,2.394,409,1.587,410,2.859,411,2.104,412,2.859,413,2.859,414,2.859,415,2.859,416,2.859,417,2.859,418,2.859,419,2.859,420,2.859,421,2.859,422,2.859,423,2.859,424,2.859,425,2.859,426,2.859,427,2.859,428,2.859,429,2.859,430,4.207,431,2.859,432,2.593,433,2.593,434,2.593,435,2.593,436,2.104,437,2.859,438,2.859,439,2.859,440,2.859,441,4.207,442,2.859,443,2.859,444,2.859,445,2.859,446,1.196,447,2.859,448,2.859,449,4.207,450,2.859,451,2.859,452,2.859,453,2.859,454,2.859,455,2.859,456,2.859,457,2.859,458,2.859,459,2.859,460,2.859,461,2.859,462,2.859,463,2.859,709,3.263,710,3.263]],["title/components/FileDropOverlayComponent.html",[123,1.009,185,1.75]],["body/components/FileDropOverlayComponent.html",[3,0.168,4,0.168,5,0.228,7,0.33,8,0.452,11,0.401,12,0.011,13,0.179,16,1.661,21,1.299,39,1.995,75,0.007,76,0.007,123,1.393,124,1.435,125,1.648,126,1.485,127,1.485,128,1.485,130,1.338,133,3.176,134,3.254,137,1.435,138,1.995,141,1.353,143,0.328,145,0.673,146,0.491,157,0.443,158,0.93,172,1.485,173,2.064,174,1.753,175,1.258,176,2.899,177,1.485,178,1.495,179,1.485,180,1.435,181,1.111,182,1.485,183,1.435,184,1.485,185,2.643,186,3.272,187,1.485,188,1.258,189,1.299,190,1.299,191,2.136,192,1.435,193,1.435,194,2.736,195,1.435,196,1.485,197,1.435,198,1.485,199,1.342,200,1.435,201,1.435,202,1.485,203,1.435,204,1.387,205,1.485,206,1.435,207,1.485,208,1.435,209,1.93,210,1.435,211,1.435,212,1.435,213,1.387,214,1.435,215,1.485,220,2.127,231,1.122,249,1.276,253,1.817,254,1.133,267,1.338,268,2.285,325,1.576,356,2.429,409,2.904,435,2.817,476,2.479,509,4.468,517,3.643,535,3.287,548,2.818,653,2.429,671,3.643,711,3.545,712,5.287,713,6.313,714,7.205,715,7.205,716,3.545,717,5.972,718,3.85,719,3.494,720,5.099,721,5.972,722,5.099,723,5.972,724,5.972,725,5.099,726,5.099,727,5.099,728,7.737,729,3.545,730,5.099,731,3.545,732,5.099,733,3.545,734,3.545,735,5.972,736,3.545,737,3.106,738,3.545,739,3.545,740,3.545,741,3.545,742,3.545,743,3.545,744,3.545,745,3.545,746,3.545,747,3.545,748,3.545,749,5.099,750,6.919,751,3.545,752,5.099,753,5.099,754,3.545,755,5.099,756,3.545,757,5.099,758,5.099,759,3.545,760,5.099,761,3.545,762,2.285,763,5.972,764,5.232,765,5.099,766,3.545,767,3.545,768,5.099,769,5.972,770,3.106,771,5.099,772,3.545,773,3.545,774,3.545,775,3.545,776,3.545,777,3.545,778,3.106,779,3.106,780,5.099,781,3.545,782,5.099,783,3.545,784,3.545,785,3.106,786,3.106,787,3.545,788,3.545,789,3.545,790,3.545,791,3.106,792,4.468,793,3.545,794,3.106,795,3.545,796,3.545,797,3.545,798,5.099,799,2.601]],["title/classes/FileLoaderService.html",[157,0.541,800,2.638]],["body/classes/FileLoaderService.html",[3,0.276,4,0.276,5,0.169,7,0.294,8,0.629,11,0.391,12,0.011,13,0.294,75,0.009,76,0.009,141,1.558,157,0.729,231,1.562,249,1.636,254,1.347,602,3.144,800,4.331,801,5.828,802,5.597,803,4.983,804,5.597,805,5.828,806,8.706,807,6.084,808,5.46,809,6.332,810,5.847,811,5.209,812,5.828,813,5.828,814,5.828,815,5.828]],["title/interfaces/FrequencyBarsConfig.html",[0,0.151,94,2.19]],["body/interfaces/FrequencyBarsConfig.html",[0,0.286,2,1.038,3,0.23,4,0.23,5,0.141,7,0.245,8,0.561,10,1.77,11,0.542,12,0.012,13,0.425,18,2.754,19,1.033,22,1.522,25,2.849,75,0.008,76,0.008,77,2.684,78,2.684,79,3.627,80,2.815,81,2.815,82,2.815,83,2.566,84,2.459,85,2.566,86,2.566,87,2.566,88,2.566,89,2.566,90,2.566,91,2.566,92,2.684,93,2.684,94,3.205,95,4.088,96,3.917,97,3.917,98,3.917,99,2.459,100,3.205,101,2.566,102,2.849,103,2.849,104,3.205,105,2.566,106,2.566,107,2.459,108,2.684,109,2.815,110,2.361,111,3.423,112,2.566,113,2.361,114,3.891,115,2.959,116,2.566,117,3.205,118,3.487,119,3.487,120,2.271,121,3.205,122,3.627]],["title/interfaces/GamepadAction.html",[0,0.151,17,2.963]],["body/interfaces/GamepadAction.html",[0,0.262,1,3.174,2,1.052,3,0.233,4,0.233,5,0.143,6,3.174,7,0.402,8,0.566,9,3.373,10,1.672,11,0.551,12,0.012,13,0.419,14,4.834,15,3.613,16,1.37,17,5.137,18,2.933,19,0.982,20,4.834,21,1.91,22,2.221,23,5.295,24,3.174,25,2.875,26,3.373,27,3.373,28,3.174,29,2.854,30,3.373,31,3.174,32,3.174,33,3.174,34,3.003,35,3.003,36,4.685,37,2.854,38,3.373,39,2.498,40,3.373,41,2.772,42,3.373,43,2.986,44,3.373,45,3.701,46,3.373,47,3.003,48,3.373,49,3.174,50,3.373,51,3.174,52,3.373,53,3.174,54,3.373,55,3.003,56,3.373,57,3.174,58,3.373,59,2.721,60,3.373,61,3.003,62,3.373,63,3.174,64,3.373,65,3.174,66,3.373,67,3.174,68,3.373,69,3.174,70,3.003,71,3.373,72,3.373,73,3.373,74,3.373,75,0.008,76,0.008,254,1.423]],["title/injectables/GamepadService.html",[216,0.726,816,2.788]],["body/injectables/GamepadService.html",[1,3.378,3,0.134,4,0.134,5,0.082,7,0.369,8,0.383,9,2.963,10,1.663,11,0.446,12,0.012,13,0.143,14,5.059,16,1.754,18,3.002,20,4.947,21,1.693,22,0.89,23,1.83,24,3.777,26,4.553,27,4.553,28,3.777,29,3.396,31,1.83,32,4.454,33,3.777,34,3.196,35,2.638,37,3.037,39,2.467,70,3.196,75,0.006,76,0.006,135,0.79,140,2.274,141,1.351,143,0.4,146,0.393,157,0.355,158,2.077,178,1.18,216,0.726,218,1.11,220,1.277,231,0.952,249,1.252,253,1.782,254,1.112,267,1.985,324,0.813,325,1.611,348,1.506,409,2.103,469,1.398,476,1.38,718,2.788,762,1.83,816,2.788,817,2.838,818,5.239,819,5.239,820,4.324,821,4.324,822,5.239,823,4.324,824,4.324,825,4.324,826,2.838,827,7.443,828,4.324,829,2.838,830,7.443,831,2.838,832,5.859,833,2.838,834,7.122,835,4.324,836,2.838,837,2.838,838,2.838,839,2.838,840,2.838,841,2.838,842,2.838,843,2.838,844,2.838,845,2.838,846,5.239,847,2.838,848,5.239,849,2.838,850,2.838,851,5.859,852,2.838,853,2.838,854,2.838,855,2.838,856,4.324,857,5.239,858,5.011,859,4.324,860,2.487,861,4.324,862,2.838,863,2.838,864,2.838,865,2.838,866,2.838,867,4.324,868,2.838,869,2.838,870,2.838,871,2.255,872,2.838,873,2.838,874,3.844,875,6.306,876,2.838,877,2.838,878,5.239,879,2.838,880,2.838,881,2.838,882,2.838,883,1.731,884,2.838,885,2.838,886,2.838,887,4.324,888,2.838,889,2.838,890,2.838,891,2.838,892,2.838,893,2.838,894,4.591,895,4.324,896,3.173,897,4.324,898,4.324,899,2.838,900,2.838,901,2.838,902,4.324,903,2.838,904,2.838,905,2.838,906,4.324,907,4.324,908,5.239,909,5.239,910,5.859,911,4.321,912,5.239,913,2.838,914,5.859,915,2.838,916,5.822,917,4.324,918,4.324,919,4.324,920,2.838,921,5.859,922,2.838,923,2.838,924,4.324,925,2.838,926,2.838,927,4.324,928,4.324,929,2.838,930,2.838,931,2.838,932,2.838]],["title/interfaces/Hotkey.html",[0,0.151,933,2.963]],["body/interfaces/Hotkey.html",[0,0.198,2,0.879,3,0.195,4,0.195,5,0.119,7,0.208,8,0.502,11,0.468,12,0.012,13,0.327,19,1.109,75,0.007,76,0.007,135,1.145,143,0.699,145,0.781,146,0.57,150,2.51,151,2.084,157,0.515,158,2.1,174,2.515,188,1.46,189,2.075,190,1.507,216,0.951,235,2.819,269,3.766,321,1.46,324,1.179,325,1.343,343,2.292,348,1.657,367,2.652,409,2.753,469,1.83,485,1.557,529,2.652,618,1.33,673,2.385,874,3.019,896,3.019,933,3.88,934,3.269,935,5.367,936,4.993,937,5.683,938,3.65,939,3.88,940,3.019,941,3.454,942,2.385,943,4.5,944,3.88,945,5.543,946,3.269,947,2.652,948,2.51,949,3.269,950,3.269,951,3.282,952,3.019,953,3.019,954,4.155,955,3.269,956,3.454,957,3.269,958,2.51,959,3.269,960,3.269,961,3.269,962,3.269,963,3.269,964,3.269,965,3.269,966,3.269,967,4.5,968,3.269,969,4.5,970,4.5,971,4.5,972,3.019,973,3.269,974,3.269,975,3.269,976,3.269,977,3.88,978,3.269,979,3.269,980,3.269,981,3.269,982,5.145,983,3.269,984,4.5,985,3.269,986,3.269,987,4.5,988,3.269,989,3.269,990,3.269,991,3.269,992,3.269,993,3.269,994,3.269,995,4.5,996,3.269,997,3.269,998,3.019,999,3.269,1000,5.543,1001,3.269,1002,4.5,1003,3.269,1004,3.019,1005,3.269,1006,3.269,1007,2.819,1008,3.269,1009,3.269,1010,3.269]],["title/interfaces/HotkeyInfo.html",[0,0.151,947,2.788]],["body/interfaces/HotkeyInfo.html",[0,0.2,2,0.893,3,0.198,4,0.198,5,0.121,7,0.211,8,0.507,11,0.384,12,0.012,13,0.33,19,1.077,75,0.007,76,0.007,135,1.162,143,0.702,145,0.793,146,0.579,150,2.549,151,2.116,157,0.523,158,2.107,174,1.968,188,1.483,189,2.097,190,1.531,216,0.961,235,2.863,269,3.781,321,1.483,324,1.197,325,1.354,343,2.316,348,1.667,367,2.694,409,2.783,469,1.85,485,1.582,529,2.694,618,1.35,673,2.422,874,3.066,896,3.066,933,2.863,934,3.32,935,4.2,936,5.014,937,5.152,939,3.921,940,3.066,941,3.491,942,2.422,943,4.548,944,3.921,945,6.384,946,3.32,947,3.69,948,2.549,949,3.32,950,3.32,951,3.318,952,3.066,953,3.066,954,4.2,955,3.32,956,3.491,957,3.32,958,2.549,959,3.32,960,3.32,961,3.32,962,3.32,963,3.32,964,3.32,965,3.32,966,3.32,967,4.548,968,3.32,969,4.548,970,4.548,971,4.548,972,3.066,973,3.32,974,3.32,975,3.32,976,3.32,977,3.921,978,3.32,979,3.32,980,3.32,981,3.32,982,5.187,983,3.32,984,4.548,985,3.32,986,3.32,987,4.548,988,3.32,989,3.32,990,3.32,991,3.32,992,3.32,993,3.32,994,3.32,995,4.548,996,3.32,997,3.32,998,3.066,999,3.32,1000,5.579,1001,3.32,1002,4.548,1003,3.32,1004,3.066,1005,3.32,1006,3.32,1007,2.863,1008,3.32,1009,3.32,1010,3.32]],["title/interfaces/HotkeysData.html",[0,0.151,1011,3.436]],["body/interfaces/HotkeysData.html",[0,0.199,2,1.217,3,0.269,4,0.269,5,0.165,7,0.288,8,0.621,11,0.382,12,0.012,13,0.353,75,0.009,76,0.009,123,1.633,133,2.155,134,2.228,136,2.228,138,2.228,143,0.764,145,1.08,146,0.789,148,3.3,157,0.712,188,2.02,189,2.776,190,2.896,348,1.29,618,1.84,658,2.768,941,3.473,942,3.3,947,3.67,951,3.3,956,4.622,958,3.473,1007,5.416,1011,5.562,1012,4.989,1013,4.178,1014,4.178,1015,5.135,1016,4.989,1017,4.795,1018,3.901,1019,4.269,1020,3.544,1021,2.883,1022,4.989,1023,4.178,1024,4.178,1025,4.178,1026,4.989,1027,4.989,1028,4.524,1029,4.989]],["title/components/HotkeysHelpDialogComponent.html",[123,1.009,188,1.534]],["body/components/HotkeysHelpDialogComponent.html",[0,0.142,3,0.192,4,0.192,5,0.163,7,0.205,8,0.498,12,0.012,13,0.283,16,1.13,21,1.43,41,3.012,43,2.625,75,0.007,76,0.007,123,1.501,124,1.644,125,1.814,126,1.702,127,1.702,128,1.702,130,1.472,133,3.227,134,3.312,136,2.196,137,1.644,138,2.196,141,1.356,143,0.696,145,0.771,146,0.563,148,2.355,157,0.508,172,1.702,173,2.272,174,1.93,175,1.441,176,2.907,177,1.702,178,1.397,179,1.702,180,1.644,181,1.273,182,1.702,183,1.644,184,1.702,185,1.644,186,1.537,187,1.702,188,2.462,189,2.828,190,3.016,191,2.352,192,1.644,193,1.644,194,2.907,195,1.644,196,1.702,197,1.644,198,1.702,199,1.537,200,1.644,201,1.644,202,1.702,203,1.644,204,1.589,205,1.702,206,1.644,207,1.702,208,1.644,209,1.537,210,1.644,211,1.644,212,1.644,213,1.589,214,1.644,215,1.702,231,1.235,245,4.46,249,0.868,267,1.472,348,0.92,549,2.437,618,2.079,658,2.729,933,3.846,941,2.478,942,2.355,947,2.619,951,3.254,956,2.478,958,3.923,1007,2.783,1011,3.228,1012,6.38,1013,2.98,1014,2.98,1015,4.719,1016,3.559,1017,4.407,1018,2.783,1019,3.923,1020,3.257,1021,2.057,1022,4.918,1023,4.119,1024,4.119,1025,4.119,1026,6.38,1027,3.559,1028,5.513,1029,3.559,1030,4.062,1031,3.559,1032,4.062,1033,4.062,1034,4.062,1035,6.937,1036,7.529,1037,6.937,1038,5.613,1039,5.613,1040,6.937,1041,5.613,1042,5.613,1043,4.918,1044,4.918,1045,5.613,1046,5.613,1047,5.613]],["title/injectables/HotkeysService.html",[216,0.726,948,2.638]],["body/injectables/HotkeysService.html",[0,0.183,3,0.174,4,0.174,5,0.107,7,0.186,8,0.464,11,0.471,12,0.012,13,0.308,16,1.952,19,1.063,21,1.691,75,0.007,76,0.007,135,1.022,141,1.566,143,0.674,145,0.697,146,0.509,150,2.242,151,1.861,157,0.46,158,2.047,174,2.095,178,1.054,188,1.304,189,2.432,190,1.346,216,0.879,218,1.438,231,1.151,235,4.549,249,1.558,253,1.592,254,1.26,267,1.741,269,3.795,321,1.304,324,1.053,325,1.264,343,2.466,348,1.59,367,4.28,409,2.544,469,1.691,485,1.98,529,3.373,618,1.188,673,2.13,874,2.697,896,2.697,933,2.518,934,2.92,935,3.839,936,4.28,937,5.148,939,3.585,940,2.697,941,3.717,942,2.13,943,4.158,944,3.585,945,5.276,946,2.92,947,2.369,948,3.192,949,2.92,950,2.92,951,3.033,952,2.697,953,4.471,954,5.148,955,4.158,956,4.05,957,4.842,958,3.717,959,4.842,960,2.92,961,2.92,962,2.92,963,2.92,964,2.92,965,2.92,966,4.158,967,4.158,968,2.92,969,4.158,970,4.158,971,4.158,972,2.697,973,2.92,974,2.92,975,2.92,976,2.92,977,3.585,978,2.92,979,2.92,980,2.92,981,2.92,982,4.842,983,2.92,984,4.158,985,2.92,986,2.92,987,4.158,988,2.92,989,2.92,990,2.92,991,2.92,992,4.158,993,2.92,994,2.92,995,4.158,996,2.92,997,2.92,998,4.872,999,5.276,1000,5.276,1001,2.92,1002,4.158,1003,2.92,1004,2.697,1005,2.92,1006,2.92,1007,2.518,1008,2.92,1009,2.92,1010,2.92,1048,5.232,1049,5.232,1050,3.675,1051,3.675,1052,3.675,1053,3.675,1054,3.675,1055,3.675,1056,3.675,1057,3.675,1058,3.675,1059,3.675,1060,3.675]],["title/interfaces/Id3CoverPicture.html",[0,0.151,541,2.788]],["body/interfaces/Id3CoverPicture.html",[0,0.254,2,1.29,3,0.286,4,0.286,5,0.175,7,0.305,8,0.643,10,1.461,11,0.487,12,0.011,13,0.366,19,1.173,75,0.009,76,0.009,113,3.78,130,1.584,143,0.558,541,5.012,542,3.892,547,4.969,548,3.337,549,2.621,552,2.529,553,2.076,554,2.142,555,3.683,556,4.011,563,2.142,576,2.212,618,2.606,883,4.424,1061,5.289,1062,4.797]],["title/interfaces/Id3Tags.html",[0,0.151,576,1.584]],["body/interfaces/Id3Tags.html",[0,0.24,2,1.181,3,0.262,4,0.262,5,0.16,7,0.279,8,0.609,10,1.384,11,0.569,12,0.011,13,0.347,19,1.199,75,0.009,76,0.009,113,2.687,130,1.45,143,0.511,254,1.635,541,5.043,542,3.563,547,5.36,548,3.055,549,3.396,552,3.277,553,2.69,554,2.776,555,4.772,556,3.912,563,1.961,568,6.02,576,2.517,618,1.786,883,4.191,1061,4.842,1062,6.216]],["title/injectables/Id3TagsService.html",[216,0.726,1063,3.436]],["body/injectables/Id3TagsService.html",[3,0.207,4,0.207,5,0.224,7,0.221,10,1.19,11,0.396,12,0.012,13,0.221,16,2.079,20,2.823,21,1.115,39,1.713,75,0.008,76,0.008,135,1.218,140,2.903,141,1.155,143,0.618,146,0.607,157,0.548,158,2.02,178,0.882,216,0.992,218,1.713,231,1.3,249,0.936,253,1.332,254,0.831,262,2.538,267,1.148,324,1.255,325,1.551,343,2.706,344,3.213,348,1.339,401,2.668,409,3.251,476,2.129,542,4.311,543,1.657,563,2.373,576,1.604,577,1.713,578,2.129,582,3.495,602,2.236,648,3.604,649,2.671,650,2.762,718,3.809,762,2.823,956,2.671,1063,4.695,1064,4.378,1065,5.176,1066,4.378,1067,5.176,1068,7.158,1069,4.378,1070,5.908,1071,5.121,1072,4.378,1073,4.378,1074,7.474,1075,6.686,1076,3.836,1077,4.378,1078,3.836,1079,3.479,1080,4.378,1081,5.908,1082,4.378,1083,5.908,1084,4.378,1085,5.908,1086,3.479,1087,4.378,1088,3.836,1089,3.836,1090,4.378,1091,4.378,1092,4.378,1093,3.836,1094,6.686,1095,4.378,1096,3.213,1097,4.378,1098,4.378,1099,4.378,1100,3.836,1101,5.908,1102,4.378,1103,4.378,1104,4.378,1105,4.378,1106,4.378,1107,4.378,1108,5.253,1109,4.378,1110,6.686,1111,4.378,1112,4.378,1113,4.378,1114,4.378,1115,4.378,1116,5.908,1117,5.176,1118,4.378,1119,4.378,1120,4.378,1121,4.378,1122,4.378,1123,4.378,1124,4.378,1125,4.378,1126,4.378,1127,4.378]],["title/interfaces/LastfmAlbum.html",[0,0.151,1128,2.788]],["body/interfaces/LastfmAlbum.html",[0,0.255,2,0.976,3,0.216,4,0.216,5,0.133,7,0.231,8,0.539,10,0.92,11,0.489,12,0.012,13,0.231,19,1.169,75,0.008,76,0.008,135,1.27,143,0.721,145,0.866,146,0.632,157,0.571,158,1.91,178,1.466,216,1.02,220,1.794,236,2.089,321,1.62,324,1.308,325,1.617,343,1.848,348,1.831,401,2.426,446,1.673,485,2.869,534,2.135,543,1.728,545,2.226,552,3.176,554,2.583,556,2.22,563,1.62,566,3.54,569,2.413,570,2.312,574,2.312,575,2.135,576,2.226,577,1.786,578,2.22,579,2.312,580,2.413,593,3.211,595,2.312,596,2.413,597,2.413,601,2.413,602,2.3,603,2.312,604,3.077,605,2.056,609,2.135,610,2.413,618,2.207,619,2.413,631,1.913,634,1.848,1128,4.403,1129,2.943,1130,2.943,1131,4.693,1132,2.647,1133,2.647,1134,3.706,1135,3.706,1136,2.943,1137,3.917,1138,2.785,1139,3.128,1140,3.128,1141,3.128,1142,3.128,1143,3.128,1144,2.943,1145,3.128,1146,3.128,1147,3.128,1148,3.128,1149,3.128,1150,3.917,1151,3.128,1152,3.128,1153,3.128,1154,3.128,1155,3.128,1156,3.128,1157,2.943,1158,3.128,1159,3.128,1160,3.128,1161,3.128,1162,3.128,1163,3.128]],["title/interfaces/LastfmErrorResponse.html",[0,0.151,1135,2.638]],["body/interfaces/LastfmErrorResponse.html",[0,0.256,2,0.985,3,0.218,4,0.218,5,0.134,7,0.233,8,0.542,10,1.382,11,0.461,12,0.012,13,0.233,19,1.156,75,0.008,76,0.008,135,1.283,143,0.723,145,0.875,146,0.639,157,0.577,158,1.917,178,0.929,216,1.027,220,1.806,236,2.103,321,1.636,324,1.321,325,1.622,343,1.866,348,1.835,401,2.658,446,1.69,485,2.879,534,2.156,543,1.745,545,2.241,552,2.563,554,2.594,556,2.242,563,1.636,566,2.242,569,2.437,570,2.335,574,2.335,575,2.156,576,2.241,577,1.804,578,2.242,579,2.335,580,2.437,593,3.233,595,2.335,596,2.437,597,2.437,601,2.437,602,2.315,603,2.335,604,3.098,605,2.076,609,2.156,610,2.437,618,2.218,619,2.437,631,1.932,634,1.866,1128,3.943,1129,2.973,1130,2.973,1131,3.943,1132,2.673,1133,2.673,1134,3.731,1135,4.187,1136,4.712,1137,3.943,1138,2.813,1139,3.16,1140,3.16,1141,3.16,1142,3.16,1143,3.16,1144,2.973,1145,3.16,1146,3.16,1147,3.16,1148,3.16,1149,3.16,1150,3.943,1151,3.16,1152,3.16,1153,3.16,1154,3.16,1155,3.16,1156,3.16,1157,2.973,1158,3.16,1159,3.16,1160,3.16,1161,3.16,1162,3.16,1163,3.16]],["title/interfaces/LastfmImage.html",[0,0.151,1131,2.788]],["body/interfaces/LastfmImage.html",[0,0.256,2,0.985,3,0.218,4,0.218,5,0.134,7,0.233,8,0.542,10,0.929,11,0.461,12,0.012,13,0.233,19,1.171,75,0.008,76,0.008,135,1.283,143,0.723,145,0.875,146,0.639,157,0.577,158,1.917,178,0.929,216,1.027,220,1.806,236,2.103,321,1.636,324,1.321,325,1.622,343,1.866,348,1.835,401,2.436,446,1.69,485,2.879,534,2.156,543,1.745,545,2.241,552,2.563,554,2.594,556,2.242,563,1.636,566,2.242,569,2.437,570,2.335,574,2.335,575,2.156,576,2.241,577,1.804,578,2.242,579,2.335,580,2.437,593,3.233,595,2.335,596,2.437,597,2.437,601,2.437,602,2.315,603,2.335,604,3.098,605,2.076,609,2.156,610,2.437,618,2.218,619,2.437,631,1.932,634,1.866,1128,3.943,1129,2.973,1130,2.973,1131,4.425,1132,4.237,1133,4.237,1134,3.731,1135,3.731,1136,2.973,1137,3.943,1138,2.813,1139,3.16,1140,3.16,1141,3.16,1142,3.16,1143,3.16,1144,2.973,1145,3.16,1146,3.16,1147,3.16,1148,3.16,1149,3.16,1150,3.943,1151,3.16,1152,3.16,1153,3.16,1154,3.16,1155,3.16,1156,3.16,1157,2.973,1158,3.16,1159,3.16,1160,3.16,1161,3.16,1162,3.16,1163,3.16]],["title/injectables/LastfmMetadataService.html",[216,0.726,1138,2.638]],["body/injectables/LastfmMetadataService.html",[0,0.255,3,0.216,4,0.216,5,0.133,7,0.231,10,0.921,11,0.408,12,0.012,13,0.231,19,1.134,75,0.008,76,0.008,135,1.272,141,0.894,143,0.721,145,0.867,146,0.633,157,0.572,158,1.911,178,1.225,216,1.021,218,1.789,220,1.795,231,1.338,236,2.505,249,0.977,253,1.391,254,0.867,321,1.622,324,1.31,325,1.618,343,1.85,348,1.832,401,2.428,446,1.675,485,2.871,534,2.138,543,1.731,545,2.228,552,2.548,554,2.585,556,2.223,563,2.158,566,2.223,569,2.416,570,2.315,574,2.315,575,2.138,576,2.669,577,1.789,578,2.223,579,2.315,580,2.416,593,3.214,595,2.315,596,2.416,597,2.416,601,3.214,602,2.587,603,2.315,604,3.08,605,2.059,609,2.138,610,2.416,618,2.209,619,2.416,631,1.916,634,1.85,650,2.138,1128,3.921,1129,3.921,1130,2.947,1131,3.921,1132,2.65,1133,2.65,1134,3.71,1135,3.71,1136,2.947,1137,3.921,1138,3.71,1139,3.133,1140,3.133,1141,3.133,1142,3.133,1143,3.133,1144,2.947,1145,3.133,1146,3.133,1147,3.133,1148,3.133,1149,3.133,1150,3.921,1151,3.133,1152,3.133,1153,3.133,1154,3.133,1155,3.133,1156,3.133,1157,2.947,1158,3.133,1159,3.133,1160,3.133,1161,3.133,1162,3.133,1163,3.133,1164,5.329,1165,4.572]],["title/interfaces/LastfmSuccessResponse.html",[0,0.151,1134,2.638]],["body/interfaces/LastfmSuccessResponse.html",[0,0.257,2,0.995,3,0.22,4,0.22,5,0.135,7,0.235,8,0.546,10,0.938,11,0.413,12,0.012,13,0.235,19,1.138,75,0.008,76,0.008,135,1.296,143,0.725,145,0.884,146,0.645,157,0.583,158,1.925,178,0.938,216,1.034,220,1.818,236,2.117,321,1.653,324,1.335,325,1.627,343,1.885,348,1.839,401,2.446,446,1.707,485,2.888,534,2.178,543,1.763,545,2.256,552,2.58,554,2.837,556,2.265,563,1.653,566,2.265,569,2.462,570,2.359,574,2.359,575,2.178,576,2.256,577,1.823,578,2.265,579,2.359,580,2.462,593,3.254,595,2.359,596,2.462,597,2.462,601,2.462,602,2.331,603,2.359,604,3.119,605,2.098,609,2.178,610,2.462,618,2.229,619,2.462,631,1.952,634,1.885,1128,4.731,1129,3.003,1130,3.003,1131,3.97,1132,2.7,1133,2.7,1134,4.208,1135,3.756,1136,3.003,1137,3.97,1138,2.842,1139,3.192,1140,3.192,1141,3.192,1142,3.192,1143,3.192,1144,3.003,1145,3.192,1146,3.192,1147,3.192,1148,3.192,1149,3.192,1150,3.97,1151,3.192,1152,3.192,1153,3.192,1154,3.192,1155,3.192,1156,3.192,1157,3.003,1158,3.192,1159,3.192,1160,3.192,1161,3.192,1162,3.192,1163,3.192]],["title/injectables/LegacyFileLoaderService.html",[216,0.726,1166,3.789]],["body/injectables/LegacyFileLoaderService.html",[3,0.235,4,0.235,5,0.243,7,0.359,8,0.569,11,0.333,12,0.012,13,0.251,25,2.889,39,1.941,75,0.008,76,0.008,135,1.38,140,3.088,141,1.522,143,0.658,146,0.687,157,0.621,158,1.683,216,1.078,218,1.941,231,1.412,236,2.828,249,1.52,254,1.217,324,1.422,325,1.476,343,2.008,348,1.124,356,3.399,409,2.413,446,1.818,469,1.604,517,4.587,602,2.692,671,3.027,800,4.952,802,4.397,803,3.914,807,5.652,808,5.152,809,5.976,810,5.219,811,4.708,1088,4.347,1100,4.347,1166,5.622,1167,6.417,1168,3.943,1169,4.961,1170,6.589,1171,4.961,1172,4.961,1173,4.961,1174,4.961,1175,3.399,1176,3.641,1177,3.641,1178,4.961,1179,4.961,1180,4.961,1181,4.961,1182,4.961,1183,4.961,1184,4.961,1185,4.961,1186,4.961,1187,4.961,1188,4.961,1189,4.961,1190,4.961,1191,6.417,1192,4.961,1193,4.961,1194,4.961,1195,4.961,1196,4.961]],["title/components/LibraryComponent.html",[123,1.009,192,1.75]],["body/components/LibraryComponent.html",[3,0.166,4,0.166,5,0.147,7,0.177,8,0.449,11,0.482,12,0.012,13,0.177,16,1.809,19,1.156,21,1.656,75,0.007,76,0.007,123,1.386,124,1.421,125,1.636,126,1.471,127,1.471,128,1.471,130,1.328,133,3.143,134,3.213,136,1.981,137,1.421,138,1.981,141,1.447,143,0.637,145,0.666,146,0.486,157,0.439,172,1.471,173,2.049,174,1.741,175,1.245,176,2.724,177,1.471,178,1.491,179,1.471,180,1.421,181,1.1,182,1.471,183,1.421,184,1.471,185,1.421,186,1.329,187,1.471,188,1.245,189,1.286,190,1.286,191,2.121,192,2.631,193,1.421,194,2.724,195,1.421,196,1.471,197,1.421,198,1.471,199,1.329,200,1.421,201,1.421,202,1.471,203,1.421,204,1.373,205,1.471,206,1.421,207,1.471,208,1.421,209,1.329,210,1.421,211,1.421,212,1.421,213,1.373,214,1.421,215,1.471,231,1.114,236,1.207,249,1.389,253,1.806,254,1.127,267,1.558,317,2.462,319,2.035,325,1.43,401,1.979,446,1.286,466,2.263,476,2.462,485,2.922,549,3.565,550,3.264,552,3.283,553,1.207,554,2.781,618,1.134,658,2.462,708,2.035,1017,4.069,1018,2.405,1197,3.51,1198,4.719,1199,5.938,1200,5.063,1201,5.063,1202,6.892,1203,6.892,1204,6.892,1205,5.063,1206,5.063,1207,5.063,1208,6.501,1209,5.063,1210,3.51,1211,5.063,1212,3.51,1213,5.063,1214,3.51,1215,3.51,1216,3.51,1217,3.51,1218,3.51,1219,2.405,1220,2.405,1221,2.575,1222,2.575,1223,3.51,1224,3.51,1225,3.075,1226,2.789,1227,3.51,1228,3.51,1229,3.51,1230,4.719,1231,5.203,1232,3.51,1233,5.938,1234,3.51,1235,3.51,1236,3.51,1237,3.51,1238,3.51,1239,3.51,1240,3.51,1241,3.075,1242,6.292]],["title/interceptors/LoaderInterceptor.html",[1243,4.324,1244,3.436]],["body/interceptors/LoaderInterceptor.html",[3,0.277,4,0.277,5,0.17,7,0.296,11,0.393,12,0.012,13,0.296,75,0.009,76,0.009,141,1.146,143,0.756,145,1.112,146,0.812,157,0.733,178,1.18,216,1.196,231,1.568,249,1.252,253,1.783,254,1.112,321,2.079,325,1.216,348,1.328,476,2.849,570,2.968,944,5.258,1108,4.3,1244,5.661,1245,5.86,1246,5.86,1247,7.123,1248,7.123,1249,7.983,1250,6.724,1251,7.983,1252,5.86,1253,5.86,1254,7.123,1255,5.86,1256,5.135,1257,4.88,1258,5.86,1259,4.657,1260,5.135,1261,5.86,1262,5.135]],["title/injectables/LoaderService.html",[216,0.726,1257,2.963]],["body/injectables/LoaderService.html",[3,0.269,4,0.269,5,0.165,7,0.288,8,0.621,12,0.012,13,0.288,16,1.947,21,1.45,39,3.093,41,3.038,75,0.009,76,0.01,135,1.584,141,1.481,143,0.526,146,0.789,157,0.712,216,1.175,218,2.228,220,2.237,225,6.022,231,1.54,249,1.495,267,1.493,288,2.883,301,5.135,324,1.631,325,1.181,403,4.524,406,4.524,432,4.524,1257,4.795,1263,5.693,1264,8.114,1265,8.114,1266,5.693,1267,5.693,1268,5.693,1269,5.693,1270,8.114,1271,5.693,1272,5.693,1273,4.524]],["title/injectables/MediaSessionService.html",[216,0.726,1274,2.963]],["body/injectables/MediaSessionService.html",[3,0.213,4,0.213,5,0.13,7,0.227,10,1.563,11,0.486,12,0.012,13,0.227,16,2.159,29,4.372,75,0.008,76,0.008,130,1.179,135,1.251,140,2.942,141,1.474,143,0.556,145,0.853,146,0.623,157,0.562,158,1.777,178,1.457,216,1.01,217,3.045,218,1.759,222,5.695,223,4.957,231,1.323,249,1.546,253,2.201,254,1.373,268,2.898,324,1.288,325,1.248,343,1.819,345,3.572,401,2.004,605,2.708,609,2.812,700,2.742,938,3.877,977,4.957,1274,4.12,1275,6.8,1276,6.167,1277,4.495,1278,6.013,1279,6.013,1280,6.013,1281,6.013,1282,4.495,1283,6.013,1284,6.776,1285,7.541,1286,6.339,1287,4.495,1288,6.013,1289,6.776,1290,4.495,1291,6.013,1292,4.495,1293,6.013,1294,4.495,1295,4.643,1296,4.495,1297,4.779,1298,5.269,1299,4.495,1300,3.572,1301,4.495,1302,4.495,1303,4.495,1304,4.495,1305,3.939,1306,4.495,1307,4.495,1308,6.013,1309,4.779,1310,5.269,1311,6.013,1312,4.495,1313,4.495,1314,3.939,1315,4.495,1316,4.495,1317,4.495,1318,4.495,1319,4.495,1320,4.495,1321,4.495]],["title/injectables/MetadataService.html",[216,0.726,1322,3.173]],["body/injectables/MetadataService.html",[3,0.145,4,0.145,5,0.216,7,0.155,8,0.407,11,0.409,12,0.012,13,0.155,19,0.844,21,1.553,75,0.006,76,0.006,130,0.805,135,0.854,141,1.276,143,0.722,145,0.582,146,0.425,157,0.384,158,1.956,178,0.618,181,1.438,216,0.77,218,1.201,220,2.33,231,1.01,236,2.243,249,0.656,253,0.934,254,0.582,267,1.599,288,1.554,316,2.659,317,2.231,318,1.622,319,1.779,321,1.089,324,0.88,325,1.472,327,1.779,348,1.69,363,2.536,446,2.673,469,2.358,485,2.079,502,4.02,517,1.872,534,3.411,538,4.113,544,2.425,545,1.681,549,1.332,550,4.206,551,4.177,552,1.286,553,1.055,554,1.089,555,1.872,556,1.492,557,3.764,558,2.252,559,2.103,563,2.429,575,1.435,577,1.201,578,1.492,590,1.872,594,2.799,602,2.307,603,2.323,604,2.323,631,2.302,634,2.223,641,4.413,642,2.425,643,1.979,644,1.979,645,1.979,646,1.979,647,1.979,650,2.85,708,1.779,938,3.542,1063,3.646,1138,2.799,1219,2.103,1220,2.103,1221,2.252,1222,2.252,1322,3.366,1323,2.689,1324,5.494,1325,5.494,1326,5.494,1327,5.494,1328,4.588,1329,4.588,1330,3.069,1331,4.588,1332,3.069,1333,4.588,1334,3.069,1335,4.588,1336,3.069,1337,4.588,1338,3.069,1339,3.069,1340,2.689,1341,3.069,1342,2.689,1343,3.069,1344,3.069,1345,2.103,1346,3.069,1347,3.069,1348,2.689,1349,2.689,1350,3.069,1351,3.069,1352,3.069,1353,3.069,1354,3.069,1355,3.069,1356,4.02,1357,3.069,1358,4.588,1359,4.814,1360,3.069,1361,3.069,1362,4.588,1363,3.069,1364,4.588,1365,4.588,1366,3.646,1367,4.02,1368,4.02,1369,5.494,1370,3.069,1371,3.069,1372,4.588,1373,5.494,1374,3.646,1375,3.646,1376,3.069,1377,3.069,1378,3.069,1379,3.069,1380,6.524,1381,3.069,1382,3.069,1383,3.069,1384,3.069,1385,3.069,1386,3.069,1387,3.069,1388,6.524,1389,3.069,1390,4.588,1391,3.069,1392,4.588,1393,4.588,1394,3.069,1395,3.069,1396,3.069,1397,3.069,1398,4.588,1399,3.069,1400,3.069,1401,3.069,1402,3.069,1403,3.069,1404,3.069,1405,3.069,1406,3.069,1407,3.069,1408,3.069,1409,3.069,1410,3.069,1411,3.069,1412,3.069,1413,3.069,1414,3.069,1415,3.646,1416,2.689,1417,3.069,1418,4.588,1419,3.069,1420,3.069,1421,3.069,1422,3.069,1423,3.069,1424,3.069,1425,3.069,1426,3.069,1427,3.069,1428,3.069,1429,2.689,1430,3.069,1431,3.069,1432,3.069,1433,3.069,1434,3.069,1435,3.069,1436,3.069,1437,3.069,1438,3.069,1439,3.069,1440,3.069,1441,3.069,1442,3.069]],["title/components/MetadataSettingsComponent.html",[123,1.009,193,1.75]],["body/components/MetadataSettingsComponent.html",[3,0.186,4,0.186,5,0.216,7,0.198,8,0.486,11,0.459,12,0.012,13,0.198,16,1.902,21,1,75,0.007,76,0.007,123,1.474,124,1.589,125,1.772,126,1.645,127,1.645,128,1.645,130,2.106,133,3.215,134,3.298,136,2.145,137,1.589,138,2.145,141,1.457,143,0.689,145,0.745,146,0.544,157,0.491,172,1.645,173,2.219,174,1.885,175,1.394,176,2.865,177,1.645,178,1.571,179,1.645,180,1.589,181,1.231,182,1.645,183,1.589,184,1.645,185,1.589,186,1.487,187,1.645,188,1.394,189,1.439,190,1.439,191,2.297,192,1.589,193,2.767,194,2.865,195,1.589,196,1.645,197,1.589,198,1.645,199,1.487,200,1.589,201,1.589,202,1.645,203,1.589,204,1.537,205,1.645,206,1.589,207,1.645,208,1.589,209,1.487,210,1.589,211,1.589,212,1.589,213,1.537,214,1.589,215,1.645,231,1.207,236,2.172,249,1.537,253,2.08,254,1.297,267,1.03,317,1.91,325,0.815,386,3.613,409,3.325,446,1.439,611,3.178,650,3.648,708,4.169,911,3.757,1020,3.199,1021,1.989,1144,3.535,1219,2.691,1220,4.328,1221,2.882,1222,2.882,1322,5.017,1443,7.647,1444,6.7,1445,3.121,1446,5.02,1447,6.317,1448,4.023,1449,6.837,1450,5.483,1451,5.483,1452,5.483,1453,5.483,1454,3.927,1455,5.483,1456,8.247,1457,3.927,1458,5.483,1459,3.927,1460,5.483,1461,3.927,1462,5.483,1463,3.927,1464,4.804,1465,3.121,1466,3.927,1467,3.441,1468,3.927,1469,3.441,1470,3.121,1471,3.927,1472,3.927,1473,3.927,1474,3.927,1475,3.927,1476,5.483,1477,3.535,1478,5.991,1479,5.483,1480,4.804]],["title/interfaces/MusicbrainzReleaseGroup.html",[0,0.151,581,2.788]],["body/interfaces/MusicbrainzReleaseGroup.html",[0,0.248,2,0.911,3,0.202,4,0.202,5,0.124,7,0.215,8,0.514,10,0.858,11,0.443,12,0.012,13,0.215,19,1.175,22,1.336,75,0.008,76,0.008,135,1.186,143,0.723,145,0.809,146,0.59,157,0.533,158,2.051,181,1.336,216,0.974,220,1.712,236,2.267,254,1.101,321,1.512,324,1.221,325,1.536,348,1.849,401,2.546,446,2.594,469,1.377,485,2.959,534,2.712,543,1.613,545,1.561,553,2.434,554,1.512,562,3.74,563,1.512,564,2.92,565,2.92,566,2.072,567,2.92,569,2.252,570,2.158,571,2.92,572,2.747,573,2.747,574,3.34,575,1.993,576,2.125,577,1.667,578,2.072,579,2.158,580,2.252,581,4.252,582,3.463,583,4.564,584,4.926,585,4.318,586,2.747,587,3.975,588,2.92,589,2.92,590,2.6,591,2.747,592,2.747,593,2.252,594,2.6,595,2.158,596,2.252,597,2.252,598,2.92,599,2.92,600,2.92,601,2.252,602,2.496,603,2.158,604,2.938,605,2.97,606,3.975,607,2.92,608,2.92,609,3.084,610,3.066,611,2.47,612,2.92,613,2.92,614,2.92,615,2.92,616,2.92,617,2.92,618,1.377,619,3.066,620,3.975,621,2.92,622,2.92,623,2.6,624,2.92,625,2.92,626,2.92,627,2.92,628,3.975,629,2.92,630,2.92,631,1.786,632,2.92,633,2.92,634,2.348,635,2.92,636,2.92,637,2.92,638,2.92]],["title/interfaces/MusicbrainzResponse.html",[0,0.151,586,2.788]],["body/interfaces/MusicbrainzResponse.html",[0,0.249,2,0.925,3,0.205,4,0.205,5,0.126,7,0.219,8,0.52,10,1.339,11,0.394,12,0.012,13,0.219,19,1.134,22,1.358,75,0.008,76,0.008,135,1.205,143,0.726,145,0.822,146,0.6,157,0.542,158,2.059,181,1.358,216,0.985,220,1.731,236,2.286,321,1.537,324,1.241,325,1.545,348,1.854,401,2.559,446,2.611,469,1.4,485,2.971,534,2.742,543,1.639,545,1.587,553,1.489,554,1.537,562,3.781,563,1.537,564,2.967,565,2.967,566,2.106,567,2.967,569,2.289,570,2.193,571,2.967,572,2.792,573,2.792,574,3.368,575,2.025,576,2.149,577,1.694,578,2.106,579,2.193,580,2.289,581,4.594,582,2.742,583,2.792,584,4.949,585,2.642,586,3.781,587,5.102,588,4.883,589,2.967,590,2.642,591,2.792,592,2.792,593,2.289,594,2.642,595,2.193,596,2.289,597,2.289,598,2.967,599,2.967,600,2.967,601,2.289,602,2.517,603,2.193,604,2.97,605,2.994,606,4.018,607,2.967,608,2.967,609,3.109,610,3.099,611,2.511,612,2.967,613,2.967,614,2.967,615,2.967,616,2.967,617,2.967,618,1.4,619,3.099,620,4.018,621,2.967,622,2.967,623,2.642,624,2.967,625,2.967,626,2.967,627,2.967,628,4.018,629,2.967,630,2.967,631,1.815,632,2.967,633,2.967,634,2.374,635,2.967,636,2.967,637,2.967,638,2.967]],["title/injectables/MusicbrainzService.html",[216,0.726,594,2.638]],["body/injectables/MusicbrainzService.html",[0,0.249,3,0.204,4,0.204,5,0.125,7,0.218,10,0.87,11,0.29,12,0.012,13,0.218,19,1.133,22,1.354,75,0.008,76,0.008,135,1.202,141,0.844,143,0.725,145,0.82,146,0.598,157,0.54,158,2.058,178,0.87,181,1.354,216,0.983,218,1.69,220,1.728,231,1.288,236,2.558,249,0.923,253,1.314,254,0.82,321,1.533,324,1.238,325,1.544,348,1.853,401,2.557,446,2.608,469,1.396,485,2.969,534,2.737,543,1.635,545,1.583,553,1.485,554,1.533,562,3.774,563,2.077,564,2.959,565,2.959,566,2.1,567,2.959,569,2.283,570,2.187,571,2.959,572,2.785,573,2.785,574,3.363,575,2.02,576,2.608,577,1.69,578,2.1,579,2.187,580,2.283,581,3.774,582,2.737,583,2.785,584,4.281,585,2.635,586,2.785,587,4.011,588,2.959,589,2.959,590,2.635,591,2.785,592,2.785,593,2.283,594,3.571,595,2.187,596,2.283,597,2.283,598,2.959,599,2.959,600,2.959,601,3.094,602,2.694,603,2.187,604,2.965,605,2.99,606,4.011,607,2.959,608,2.959,609,3.105,610,3.094,611,2.504,612,2.959,613,2.959,614,2.959,615,2.959,616,2.959,617,2.959,618,1.396,619,3.094,620,4.011,621,2.959,622,2.959,623,2.635,624,2.959,625,2.959,626,2.959,627,2.959,628,4.011,629,2.959,630,2.959,631,1.81,632,2.959,633,2.959,634,2.369,635,2.959,636,2.959,637,2.959,638,2.959,650,2.02,1164,5.129,1481,4.319]],["title/injectables/NativeBrowserFileLoaderService.html",[216,0.726,1482,3.789]],["body/injectables/NativeBrowserFileLoaderService.html",[3,0.206,4,0.206,5,0.228,7,0.22,8,0.522,11,0.293,12,0.012,13,0.22,25,2.653,41,2.558,75,0.008,76,0.008,135,1.213,141,1.397,143,0.69,145,0.827,146,0.604,151,2.208,157,0.545,158,2.063,216,0.989,218,1.706,231,1.297,236,2.864,249,1.426,254,1.118,269,2.865,317,2.12,321,1.547,324,1.249,325,1.222,348,1.812,363,2.41,401,1.964,446,2.97,469,1.904,517,4.07,575,2.039,582,2.039,602,2.912,605,1.963,609,2.039,708,2.528,800,4.797,802,2.988,803,2.66,807,5.303,808,4.896,809,5.679,810,5.244,811,5.477,938,3.798,1108,3.2,1168,3.465,1170,6.262,1175,2.988,1176,3.2,1177,3.2,1219,2.988,1220,2.988,1221,3.2,1222,3.2,1482,5.162,1483,3.821,1484,4.36,1485,4.36,1486,4.36,1487,4.36,1488,5.846,1489,4.36,1490,6.672,1491,4.36,1492,6.672,1493,4.36,1494,5.244,1495,4.36,1496,4.36,1497,4.36,1498,4.36,1499,4.36,1500,4.36,1501,4.36,1502,3.821,1503,4.36,1504,4.36,1505,4.36,1506,3.821,1507,3.821,1508,4.36,1509,4.36,1510,4.36,1511,3.821,1512,4.36,1513,3.821,1514,4.36,1515,4.36,1516,4.36,1517,4.36,1518,3.821,1519,6.672,1520,5.162,1521,3.821,1522,4.36,1523,4.36,1524,4.36]],["title/interfaces/OscVisualizerOptions.html",[0,0.151,121,2.19]],["body/interfaces/OscVisualizerOptions.html",[0,0.287,2,1.047,3,0.232,4,0.232,5,0.142,7,0.248,8,0.564,10,1.754,11,0.521,12,0.012,13,0.426,18,3.111,19,1.037,22,1.536,25,3.184,75,0.008,76,0.008,77,2.709,78,2.709,79,3.639,80,2.841,81,2.841,82,2.841,83,2.59,84,2.482,85,2.59,86,2.59,87,2.59,88,2.59,89,2.59,90,2.59,91,2.59,92,2.709,93,2.709,94,2.482,95,3.364,96,3.224,97,3.224,98,3.224,99,2.482,100,3.929,101,2.59,102,2.866,103,2.866,104,3.224,105,2.59,106,2.59,107,2.482,108,2.709,109,2.841,110,2.383,111,3.438,112,2.59,113,2.383,114,4.137,115,2.977,116,2.59,117,3.224,118,3.5,119,3.717,120,2.292,121,3.581,122,3.99]],["title/interfaces/OsciloscopeConfig.html",[0,0.151,99,2.19]],["body/interfaces/OsciloscopeConfig.html",[0,0.288,2,1.072,3,0.237,4,0.237,5,0.146,7,0.253,8,0.573,10,1.758,11,0.507,12,0.012,13,0.427,18,2.797,19,1.046,22,1.573,25,2.91,75,0.008,76,0.008,77,2.772,78,2.772,79,3.671,80,2.908,81,2.908,82,2.908,83,2.651,84,2.54,85,2.651,86,2.651,87,2.651,88,2.651,89,2.651,90,2.651,91,2.651,92,2.772,93,2.772,94,2.54,95,3.415,96,3.273,97,3.273,98,3.273,99,3.273,100,3.957,101,2.651,102,2.91,103,2.91,104,3.273,105,2.651,106,2.651,107,2.54,108,2.772,109,2.908,110,2.439,111,3.476,112,2.651,113,2.439,114,3.952,115,3.022,116,2.651,117,3.273,118,3.531,119,3.531,120,2.345,121,3.273,122,3.671]],["title/components/PlayerComponent.html",[123,1.009,195,1.75]],["body/components/PlayerComponent.html",[3,0.109,4,0.109,5,0.186,7,0.117,8,0.327,10,1.614,11,0.446,12,0.012,13,0.117,16,1.954,19,0.637,21,1.554,34,1.41,35,3.722,37,1.34,39,2.241,59,2.037,70,1.41,75,0.005,76,0.005,84,1.171,123,1.072,124,0.936,125,1.191,126,0.969,127,0.969,128,0.969,130,0.967,131,2.376,132,2.376,133,2.978,134,3.031,136,1.442,137,0.936,138,1.442,140,1.995,141,1.549,143,0.741,144,1.49,145,0.439,146,0.32,148,1.34,157,0.289,172,0.969,173,1.491,174,1.267,175,0.82,176,2.197,177,0.969,178,1.47,179,0.969,180,2.122,181,1.155,182,0.969,183,0.936,184,0.969,185,2.122,186,1.395,187,0.969,188,0.82,189,0.847,190,0.847,191,1.544,192,0.936,193,0.936,194,2.197,195,2.122,196,0.969,197,2.122,198,0.969,199,0.875,200,0.936,201,0.936,202,0.969,203,0.936,204,0.904,205,0.969,206,0.936,207,0.969,208,0.936,209,0.875,210,2.122,211,0.936,212,0.936,213,0.904,214,0.936,215,0.969,217,2.655,220,1.962,230,1.837,231,0.811,236,2.548,249,1.605,253,2.022,254,1.333,262,3.039,267,2.09,269,1.124,315,3.198,325,1.188,348,1.383,363,1.278,446,1.35,469,1.191,476,1.792,491,4.166,517,1.41,561,2.248,651,2.026,655,3.372,658,1.792,672,2.026,673,1.34,683,3.38,693,3.652,700,2.248,703,1.49,705,1.837,713,2.026,718,2.963,719,1.584,762,1.49,800,2.248,803,2.248,804,2.525,810,3.847,816,2.376,883,1.41,935,1.696,936,1.49,937,1.696,948,2.248,1019,2.803,1020,2.327,1021,1.171,1175,3.149,1176,1.696,1177,1.696,1198,3.652,1226,1.837,1525,2.312,1526,2.525,1527,4.026,1528,3.652,1529,4.595,1530,3.652,1531,3.685,1532,3.685,1533,4.595,1534,5.726,1535,3.592,1536,3.685,1537,3.685,1538,3.685,1539,3.685,1540,3.685,1541,5.242,1542,3.685,1543,3.685,1544,3.229,1545,3.229,1546,5.242,1547,4.594,1548,4.594,1549,3.685,1550,3.685,1551,2.312,1552,3.685,1553,2.312,1554,3.685,1555,2.312,1556,2.312,1557,3.685,1558,2.312,1559,2.312,1560,3.685,1561,2.312,1562,3.685,1563,2.312,1564,3.685,1565,2.312,1566,3.685,1567,2.312,1568,2.312,1569,2.312,1570,2.312,1571,2.312,1572,2.312,1573,3.685,1574,2.312,1575,2.929,1576,2.312,1577,3.685,1578,2.312,1579,1.837,1580,2.026,1581,1.837,1582,2.312,1583,2.026,1584,2.026,1585,2.704,1586,2.026,1587,1.837,1588,2.312,1589,1.837,1590,2.026,1591,2.312,1592,2.312,1593,2.312,1594,2.026,1595,2.026,1596,2.312,1597,2.026,1598,2.312,1599,2.312,1600,2.312,1601,2.312,1602,2.312,1603,3.685,1604,2.312,1605,3.685,1606,2.312,1607,2.312,1608,2.312,1609,2.312,1610,2.312,1611,2.312,1612,2.312,1613,2.312,1614,3.685,1615,2.312,1616,3.685,1617,4.595,1618,2.312,1619,2.312,1620,2.312,1621,2.312,1622,2.312,1623,2.312,1624,2.312,1625,3.685,1626,2.312,1627,3.685,1628,2.312,1629,2.312,1630,2.312,1631,2.312,1632,2.312,1633,2.312,1634,3.685,1635,2.312,1636,2.312,1637,3.685,1638,2.312,1639,2.312,1640,2.312,1641,2.026,1642,3.685,1643,3.229,1644,2.312,1645,2.312,1646,2.312,1647,5.242,1648,2.312,1649,2.312,1650,2.312,1651,2.312,1652,1.837,1653,2.312,1654,2.312,1655,2.312,1656,2.312,1657,2.312,1658,2.312,1659,2.312,1660,2.312,1661,2.312,1662,2.312,1663,2.312,1664,2.312,1665,2.312,1666,2.312,1667,2.312,1668,2.312,1669,2.312,1670,3.229,1671,3.229,1672,3.229,1673,3.229,1674,3.685,1675,3.685,1676,3.685,1677,2.136,1678,3.685,1679,3.537]],["title/injectables/PlayerService.html",[216,0.726,1535,2.963]],["body/injectables/PlayerService.html",[3,0.103,4,0.103,5,0.208,7,0.11,8,0.31,10,1.418,11,0.419,12,0.012,13,0.11,16,1.736,21,1.708,39,2.441,41,2.194,43,1.014,75,0.005,76,0.005,102,2.671,103,2.671,110,2.458,130,1.637,140,1.912,141,1.567,143,0.663,145,0.412,146,0.301,152,2.258,153,1.592,157,0.271,158,2.054,164,1.592,178,1.195,216,0.588,217,1.774,218,0.849,220,2.354,222,3.231,231,0.771,236,2.792,249,1.6,253,1.804,254,1.232,262,2.553,265,3.499,267,1.913,269,2.458,288,2.23,315,3.618,316,2.03,317,1.055,318,1.146,319,1.257,324,0.622,325,1.535,327,1.257,348,1.825,363,1.199,401,0.723,446,2.71,469,1.423,485,2.362,491,4.017,517,2.136,539,2.93,549,2.989,552,0.909,553,0.746,554,0.77,559,2.399,560,1.486,561,1.323,602,2.099,700,1.323,703,1.398,800,2.136,803,2.136,804,2.399,938,1.398,1043,1.901,1089,1.901,1150,1.398,1175,1.486,1176,1.592,1177,1.592,1225,4.86,1230,2.783,1231,1.901,1241,3.858,1250,4.429,1257,2.399,1259,1.724,1260,1.901,1262,1.901,1274,2.399,1276,1.724,1286,1.901,1295,2.399,1300,1.724,1305,3.068,1322,2.57,1464,1.901,1469,1.901,1506,1.901,1535,2.399,1544,3.068,1545,3.068,1547,4.429,1548,4.429,1597,1.901,1677,1.257,1679,2.553,1680,1.901,1681,4.404,1682,3.858,1683,3.502,1684,4.404,1685,4.404,1686,3.502,1687,5.054,1688,3.502,1689,4.404,1690,5.054,1691,4.404,1692,3.502,1693,3.502,1694,2.169,1695,3.502,1696,2.169,1697,2.169,1698,2.169,1699,2.169,1700,3.502,1701,2.169,1702,2.169,1703,3.502,1704,2.169,1705,5.054,1706,3.502,1707,2.169,1708,2.169,1709,2.169,1710,3.502,1711,2.169,1712,4.017,1713,3.502,1714,2.169,1715,2.169,1716,2.169,1717,2.169,1718,3.502,1719,3.502,1720,3.502,1721,2.169,1722,5.054,1723,2.169,1724,2.169,1725,6.24,1726,5.054,1727,3.502,1728,3.502,1729,2.169,1730,3.502,1731,2.169,1732,3.502,1733,2.169,1734,2.169,1735,3.502,1736,2.169,1737,1.592,1738,1.901,1739,2.399,1740,2.169,1741,2.169,1742,2.169,1743,1.724,1744,1.592,1745,1.592,1746,2.169,1747,2.169,1748,1.724,1749,1.724,1750,3.502,1751,2.169,1752,4.404,1753,2.169,1754,2.169,1755,2.169,1756,2.169,1757,3.502,1758,2.169,1759,2.169,1760,2.169,1761,2.169,1762,2.169,1763,2.169,1764,2.169,1765,2.169,1766,2.169,1767,3.502,1768,2.169,1769,1.901,1770,2.169,1771,3.502,1772,2.169,1773,2.169,1774,2.169,1775,2.169,1776,2.169,1777,2.169,1778,2.169,1779,2.169,1780,2.169,1781,2.169,1782,2.169,1783,2.169,1784,2.169,1785,2.169,1786,2.169,1787,2.169,1788,2.169,1789,2.169,1790,2.169,1791,2.169,1792,2.169,1793,2.169,1794,2.169,1795,2.169,1796,2.169,1797,2.169,1798,2.169,1799,2.169,1800,2.169,1801,3.502,1802,2.169,1803,3.502,1804,2.169,1805,2.169,1806,2.169,1807,2.169,1808,2.169,1809,2.169,1810,2.169,1811,3.231,1812,1.901,1813,2.169,1814,2.169,1815,1.901,1816,2.169,1817,2.169,1818,2.169,1819,2.169,1820,2.169,1821,2.169,1822,5.054,1823,2.169,1824,1.901,1825,2.169,1826,2.169,1827,2.169,1828,3.502,1829,2.169,1830,2.169,1831,3.502,1832,2.169,1833,2.169,1834,2.169,1835,2.169,1836,1.901,1837,2.169,1838,5.054,1839,2.169,1840,2.169,1841,2.169,1842,2.169,1843,2.169,1844,3.502,1845,2.169,1846,2.169,1847,2.169,1848,3.502,1849,2.169,1850,2.169,1851,3.017,1852,2.169,1853,2.169,1854,2.169,1855,2.169,1856,2.169,1857,1.901,1858,3.499,1859,3.499,1860,2.169,1861,2.169,1862,2.169]],["title/components/PlaylistComponent.html",[123,1.009,197,1.75]],["body/components/PlaylistComponent.html",[3,0.111,4,0.111,5,0.154,7,0.189,8,0.331,10,0.935,11,0.355,12,0.012,13,0.119,16,0.653,19,0.517,21,1.565,39,1.46,41,1.62,43,2.172,45,1.362,75,0.005,76,0.005,123,1.084,124,0.951,125,1.206,126,0.984,127,0.984,128,0.984,130,0.979,131,2.406,132,2.406,133,2.986,134,3.04,136,1.46,137,0.951,138,1.46,140,2.016,141,1.408,143,0.718,144,1.514,145,0.446,146,0.325,148,1.362,157,0.294,158,2.107,172,0.984,173,1.511,174,1.283,175,0.834,176,2.217,177,0.984,178,1.422,179,0.984,180,0.951,181,0.736,182,0.984,183,0.951,184,0.984,185,0.951,186,0.889,187,0.984,188,0.834,189,0.861,190,0.861,191,1.564,192,0.951,193,0.951,194,2.217,195,0.951,196,0.984,197,2.141,198,0.984,199,0.889,200,0.951,201,0.951,202,0.984,203,0.951,204,0.919,205,0.984,206,0.951,207,0.984,208,0.951,209,0.889,210,0.951,211,0.951,212,0.951,213,2.07,214,0.951,215,0.984,217,2.679,220,2.083,228,4.204,231,0.821,236,1.597,249,1.13,253,1.609,254,1.004,267,1.612,288,3.386,290,1.298,301,1.724,315,3.521,319,1.362,325,1.098,348,1.632,362,1.724,409,2.572,464,1.298,549,3.343,552,1.564,553,1.283,591,1.514,602,1.413,623,2.277,656,3.691,658,1.815,673,1.362,675,4.635,700,2.277,703,1.514,764,2.058,770,3.27,791,3.27,792,3.27,799,1.724,1017,3.182,1018,1.609,1019,2.833,1020,2.352,1021,1.19,1028,1.867,1093,3.27,1295,3.625,1297,1.867,1298,4.069,1300,1.867,1477,1.514,1520,3.27,1530,3.691,1535,3.625,1575,2.966,1581,1.867,1682,3.27,1712,5.609,1737,1.724,1743,1.867,1744,1.724,1745,1.724,1748,1.867,1749,1.867,1811,4.906,1812,3.27,1815,3.27,1824,2.058,1836,3.27,1863,2.349,1864,4.069,1865,4.644,1866,4.644,1867,4.644,1868,4.644,1869,4.644,1870,4.644,1871,4.644,1872,3.732,1873,3.732,1874,4.644,1875,4.644,1876,6.442,1877,3.882,1878,3.732,1879,3.732,1880,3.732,1881,2.349,1882,5.29,1883,2.349,1884,5.29,1885,2.349,1886,3.732,1887,2.349,1888,3.732,1889,2.349,1890,2.349,1891,5.29,1892,3.732,1893,3.732,1894,3.732,1895,3.732,1896,3.732,1897,3.732,1898,3.732,1899,3.732,1900,2.349,1901,2.349,1902,3.732,1903,2.349,1904,2.349,1905,3.27,1906,2.349,1907,2.349,1908,2.058,1909,2.349,1910,2.349,1911,2.058,1912,2.058,1913,2.058,1914,2.349,1915,2.349,1916,2.058,1917,2.349,1918,2.058,1919,2.349,1920,2.349,1921,5.384,1922,2.349,1923,4.069,1924,6.887,1925,4.644,1926,2.349,1927,2.349,1928,2.349,1929,3.732,1930,2.349,1931,3.732,1932,2.349,1933,2.349,1934,3.732,1935,2.349,1936,3.27,1937,2.349,1938,1.867,1939,4.644,1940,2.349,1941,2.058,1942,2.058,1943,2.058,1944,2.349,1945,2.058,1946,3.732,1947,2.349,1948,2.349,1949,2.349,1950,1.362,1951,2.058,1952,2.349,1953,2.349,1954,2.349,1955,4.644,1956,2.349,1957,5.29,1958,2.349,1959,2.349,1960,3.27,1961,2.349,1962,2.349,1963,2.349,1964,3.732,1965,3.732,1966,4.644,1967,2.349,1968,2.349,1969,3.732,1970,2.349,1971,2.349,1972,3.732,1973,2.349,1974,4.644,1975,2.349,1976,2.349,1977,3.732,1978,3.691,1979,3.732,1980,2.349,1981,4.644,1982,2.349,1983,1.867,1984,2.058,1985,1.867,1986,3.732,1987,2.349,1988,2.349,1989,3.732,1990,2.349,1991,2.349,1992,3.732,1993,3.732,1994,3.732,1995,5.29,1996,3.27,1997,3.732,1998,3.732,1999,3.732]],["title/components/PromptDialogComponent.html",[123,1.009,199,1.637]],["body/components/PromptDialogComponent.html",[0,0.157,3,0.213,4,0.213,5,0.175,7,0.227,8,0.534,12,0.012,13,0.304,16,1.674,19,0.939,21,1.533,75,0.008,76,0.008,123,1.582,124,1.822,125,1.945,126,1.886,127,1.886,128,1.886,130,1.579,133,3.262,134,3.352,136,2.355,137,1.822,138,2.355,141,1.415,143,0.627,145,0.854,146,0.624,157,0.563,172,1.886,173,2.436,174,2.069,175,1.597,176,3.033,177,1.886,178,1.458,179,1.886,180,1.822,181,1.411,182,1.886,183,1.822,184,1.886,185,1.822,186,1.704,187,1.886,188,1.597,189,1.649,190,1.649,191,2.522,192,1.822,193,1.822,194,3.033,195,1.822,196,1.886,197,1.822,198,1.886,199,2.74,200,3.054,201,1.822,202,1.886,203,1.822,204,1.761,205,1.886,206,1.822,207,1.886,208,1.822,209,1.704,210,1.822,211,1.822,212,1.822,213,1.761,214,1.822,215,1.886,231,1.325,249,1.286,267,1.579,411,5.005,553,1.548,618,2.192,712,5.536,941,2.746,942,2.609,951,3.489,958,4.136,1013,3.303,1014,3.303,1015,4.976,1020,3.434,1021,2.28,1023,4.417,1024,4.417,1025,4.417,1031,3.944,1132,2.609,2000,6.611,2001,6.611,2002,6.343,2003,4.501,2004,4.501,2005,4.501,2006,3.303,2007,3.577,2008,3.944,2009,3.944,2010,6.019,2011,6.019,2012,6.019]],["title/interfaces/PromptDialogData.html",[0,0.151,2006,3.173]],["body/interfaces/PromptDialogData.html",[0,0.201,2,1.228,3,0.272,4,0.272,5,0.167,7,0.29,8,0.624,11,0.511,12,0.012,13,0.355,19,1.182,75,0.009,76,0.009,123,1.642,133,2.174,134,2.248,136,2.248,138,2.248,143,0.703,145,1.09,146,0.796,157,0.718,199,2.174,200,2.848,411,3.703,553,2.726,618,1.857,712,4.215,941,3.504,942,3.33,951,3.33,958,3.504,1013,4.215,1014,4.215,1015,5.164,1020,3.564,1021,2.909,1023,4.215,1024,4.215,1025,4.215,1132,4.596,2000,5.033,2001,5.033,2002,5.033,2006,5.164,2007,6.301,2008,5.033,2009,5.033]],["title/interfaces/RemoteCoverPicture.html",[0,0.151,545,1.584]],["body/interfaces/RemoteCoverPicture.html",[0,0.286,2,1.245,3,0.276,4,0.276,5,0.222,7,0.294,8,0.629,11,0.476,12,0.011,13,0.413,19,1.197,75,0.009,76,0.009,143,0.539,401,1.942,538,3.379,543,2.206,544,3.08,545,2.601,563,2.068,576,2.601,577,2.28,582,3.32,631,3.339,634,3.225,639,5.422,640,3.993,641,3.757,642,3.08,643,3.757,644,3.757,645,3.757,646,3.757,647,3.757,648,3.555,649,3.555,650,2.725]],["title/components/SettingsComponent.html",[123,1.009,201,1.75]],["body/components/SettingsComponent.html",[3,0.241,4,0.241,5,0.189,12,0.011,13,0.257,21,1.296,75,0.009,76,0.009,123,1.679,124,2.059,125,2.108,126,2.132,127,2.132,128,2.132,130,1.888,133,3.3,134,3.396,136,2.551,137,2.059,138,2.551,143,0.702,146,0.705,157,0.636,172,2.132,173,2.639,174,2.242,175,1.805,176,3.18,177,2.132,178,1.529,179,2.132,180,2.059,181,1.595,182,2.132,183,2.059,184,2.132,185,2.059,186,1.926,187,2.132,188,1.805,189,1.864,190,1.864,191,2.732,192,2.059,193,3.072,194,3.18,195,2.059,196,2.132,197,2.059,198,2.132,199,1.926,200,2.059,201,3.072,202,2.132,203,2.059,204,1.991,205,2.132,206,3.072,207,2.732,208,3.072,209,2.468,210,2.059,211,2.059,212,2.059,213,1.991,214,2.059,215,2.132,386,3.446,658,3.171,1444,4.458,1448,4.785,2013,5.087,2014,6.521,2015,4.458,2016,7.197,2017,4.458]],["title/components/ShellComponent.html",[123,1.009,137,1.75]],["body/components/ShellComponent.html",[3,0.18,4,0.18,5,0.155,7,0.192,8,0.475,11,0.255,12,0.012,13,0.192,16,1.056,19,0.859,21,1.809,75,0.007,76,0.007,123,1.447,124,1.537,125,1.731,126,1.591,127,1.591,128,1.591,130,1.405,133,3.202,134,3.284,136,2.095,137,2.726,138,2.095,141,1.389,143,0.764,145,0.72,146,0.526,148,2.201,157,0.475,172,1.591,173,2.167,174,1.841,175,1.347,176,2.823,177,1.591,178,1.431,179,1.591,180,1.537,181,1.19,182,1.591,183,1.537,184,1.591,185,1.537,186,1.437,187,1.591,188,1.347,189,1.391,190,1.391,191,2.244,192,1.537,193,1.537,194,2.823,195,1.537,196,1.591,197,1.537,198,1.591,199,1.437,200,1.537,201,1.537,202,1.591,203,1.537,204,1.486,205,1.591,206,1.537,207,1.591,208,1.537,209,1.437,210,1.537,211,1.537,212,1.537,213,1.486,214,1.537,215,1.591,220,2.176,231,1.178,249,0.811,253,1.155,254,0.72,267,1.863,269,3.276,321,1.347,325,1.287,386,2.83,464,2.099,658,2.604,692,4.255,944,3.669,956,2.316,1017,4.25,1018,2.602,1019,3.784,1020,3.142,1021,1.923,1256,3.327,1257,4.616,1259,4.255,1526,3.669,1527,5.435,1585,4.943,1586,3.327,1590,3.327,1594,4.692,1738,3.327,1744,2.786,1745,2.786,1864,5.435,1908,3.327,1911,3.327,1912,3.327,2018,3.797,2019,5.355,2020,6.203,2021,6.203,2022,5.355,2023,5.355,2024,7.371,2025,5.435,2026,5.355,2027,5.355,2028,7.103,2029,3.797,2030,3.327,2031,5.355,2032,5.355,2033,3.797,2034,3.797,2035,5.355,2036,3.797,2037,3.797,2038,5.355,2039,3.797,2040,3.797,2041,3.797,2042,3.797,2043,4.692,2044,3.327,2045,5.355,2046,3.797,2047,3.797,2048,3.797,2049,3.797,2050,3.797,2051,3.797,2052,3.797,2053,3.797,2054,3.797,2055,3.797,2056,3.797,2057,3.797,2058,3.797,2059,6.736,2060,3.452,2061,5.355]],["title/components/SlidePanelComponent.html",[123,1.009,203,1.75]],["body/components/SlidePanelComponent.html",[3,0.142,4,0.142,5,0.131,7,0.151,8,0.399,11,0.497,12,0.012,13,0.151,16,1.505,19,1.003,21,1.886,22,1.696,75,0.006,76,0.006,123,1.262,124,1.211,125,1.455,126,1.254,127,1.254,128,1.254,130,1.181,133,3.104,134,3.173,136,1.761,137,1.211,138,1.761,141,1.55,143,0.597,146,0.414,148,1.734,157,0.374,172,1.254,173,1.822,174,1.548,175,1.062,176,2.522,177,1.254,178,1.212,179,1.254,180,1.211,181,0.938,182,1.254,183,1.211,184,1.254,185,1.211,186,1.132,187,1.254,188,1.062,189,1.096,190,1.096,191,1.886,192,1.211,193,1.211,194,2.522,195,1.211,196,1.254,197,1.211,198,1.254,199,1.132,200,1.211,201,1.211,202,1.254,203,2.436,204,3.128,205,1.254,206,1.211,207,1.254,208,1.211,209,1.132,210,1.211,211,1.211,212,1.211,213,1.171,214,1.211,215,1.254,220,1.597,231,0.99,249,0.962,267,1.943,269,3.52,363,3.889,469,2.438,471,2.195,476,2.188,658,2.188,671,4.976,673,1.734,712,5.867,1004,3.97,1019,3.3,1020,2.74,1021,1.515,1528,4.299,1530,4.299,1589,2.378,1677,2.609,1679,3.489,1851,4.646,1923,4.74,1983,4.299,2062,7.006,2063,7.995,2064,2.992,2065,5.41,2066,5.536,2067,4.501,2068,4.501,2069,5.41,2070,5.41,2071,4.74,2072,6.018,2073,6.018,2074,3.577,2075,5.41,2076,6.453,2077,7.035,2078,5.41,2079,4.501,2080,4.501,2081,4.501,2082,2.992,2083,6.018,2084,2.992,2085,2.992,2086,6.78,2087,5.273,2088,2.992,2089,2.992,2090,2.992,2091,2.992,2092,4.501,2093,4.501,2094,2.992,2095,2.992,2096,2.992,2097,4.501,2098,4.501,2099,4.501,2100,4.501,2101,6.78,2102,7.035,2103,6.343,2104,2.621,2105,2.621,2106,2.992,2107,2.992,2108,6.78,2109,6.453,2110,6.78,2111,2.992,2112,2.992,2113,2.992,2114,2.992,2115,2.992,2116,2.621,2117,2.621,2118,2.992,2119,2.992,2120,2.992,2121,2.992,2122,2.992,2123,2.992,2124,5.41,2125,6.018,2126,6.018]],["title/components/StorageSettingsComponent.html",[123,1.009,206,1.75]],["body/components/StorageSettingsComponent.html",[3,0.23,4,0.23,5,0.184,7,0.245,12,0.011,13,0.245,16,1.351,75,0.008,76,0.008,123,1.643,124,1.965,125,2.045,126,2.035,127,2.035,128,2.035,130,1.66,133,3.286,134,3.38,136,2.476,137,1.965,138,2.476,141,0.949,143,0.69,145,0.921,146,0.673,157,0.607,172,2.035,173,2.561,174,2.176,175,1.723,176,3.125,177,2.035,178,1.502,179,2.035,180,1.965,181,1.522,182,2.035,183,1.965,184,2.035,185,1.965,186,1.838,187,2.035,188,1.723,189,1.779,190,1.779,191,2.651,192,1.965,193,1.965,194,3.125,195,1.965,196,2.035,197,1.965,198,2.035,199,1.838,200,1.965,201,1.965,202,2.035,203,1.965,204,1.9,205,2.035,206,3.019,207,3.384,208,1.965,209,1.838,210,1.965,211,1.965,212,1.965,213,1.9,214,1.965,215,2.035,231,1.393,249,1.038,316,2.815,317,2.361,318,2.566,325,1.008,327,2.815,386,4.191,387,3.563,911,4.336,1020,3.565,1021,2.459,1366,5.029,1445,3.859,1446,5.594,1448,4.643,1465,3.859,1470,3.859,1480,5.545,2015,5.545,2127,6.328,2128,7.458,2129,4.856]],["title/interfaces/TagsWorkerRequest.html",[0,0.151,648,2.638]],["body/interfaces/TagsWorkerRequest.html",[0,0.286,2,1.245,3,0.276,4,0.276,5,0.246,7,0.294,8,0.629,11,0.476,12,0.011,13,0.413,19,1.184,75,0.009,76,0.009,143,0.539,401,1.942,538,3.379,543,2.206,544,3.08,545,2.135,563,2.068,576,2.601,577,2.28,582,3.82,631,2.442,634,2.359,639,5.422,640,3.993,641,3.757,642,3.08,643,3.757,644,3.757,645,3.757,646,3.757,647,3.757,648,4.331,649,3.555,650,2.725]],["title/interfaces/TagsWorkerResponse.html",[0,0.151,649,2.638]],["body/interfaces/TagsWorkerResponse.html",[0,0.284,2,1.221,3,0.27,4,0.27,5,0.22,7,0.289,8,0.622,11,0.509,12,0.011,13,0.41,19,1.194,75,0.009,76,0.009,143,0.528,254,1.502,401,2.638,538,3.312,543,2.163,544,3.02,545,2.093,563,2.028,576,2.9,577,2.236,582,3.798,631,2.394,634,2.312,639,5.399,640,3.915,641,3.684,642,3.02,643,3.684,644,3.684,645,3.684,646,3.684,647,3.684,648,3.485,649,4.279,650,3.701]],["title/injectables/ThemeService.html",[152,2.788,216,0.726]],["body/injectables/ThemeService.html",[3,0.183,4,0.183,5,0.112,7,0.195,8,0.481,11,0.456,12,0.012,13,0.195,16,1.743,19,0.941,21,1.73,22,1.964,39,1.512,59,2.137,75,0.007,76,0.007,135,1.075,141,1.449,143,0.704,145,0.733,146,0.536,150,2.358,151,1.958,152,3.496,157,0.484,158,1.781,178,1.533,209,2.57,216,0.911,218,1.512,220,1.849,231,1.193,249,1.338,253,1.65,254,1.029,267,1.643,288,1.958,290,2.137,316,3.144,317,1.88,318,2.043,324,1.108,325,1.638,327,2.241,343,1.565,348,1.229,436,3.496,469,1.249,535,5.399,537,4.751,538,2.241,539,3.936,785,3.387,786,3.387,794,4.751,799,2.837,1415,4.309,1643,3.387,2130,3.866,2131,6.264,2132,7.151,2133,6.264,2134,6.79,2135,5.423,2136,5.423,2137,3.866,2138,5.423,2139,3.866,2140,3.979,2141,5.423,2142,3.866,2143,3.866,2144,5.423,2145,5.423,2146,6.79,2147,5.423,2148,3.866,2149,3.866,2150,5.488,2151,3.387,2152,3.866,2153,4.978,2154,4.978,2155,3.866,2156,3.866,2157,3.866,2158,3.866,2159,5.423,2160,3.866,2161,3.866,2162,3.866,2163,3.866,2164,3.866,2165,3.866,2166,3.866,2167,6.264,2168,5.423,2169,3.866,2170,5.423,2171,6.79,2172,3.866,2173,5.423,2174,5.423,2175,3.866,2176,3.866,2177,3.866,2178,3.866,2179,5.423,2180,3.866,2181,3.866,2182,5.423,2183,3.072,2184,3.866,2185,3.866,2186,8.374,2187,3.866,2188,3.866,2189,3.866,2190,3.866,2191,3.387,2192,3.866,2193,3.387,2194,3.866,2195,3.866,2196,3.866,2197,3.866,2198,3.866,2199,3.866,2200,3.866,2201,3.866,2202,3.866,2203,3.866,2204,3.866,2205,3.866,2206,3.866,2207,3.866,2208,3.866,2209,3.866,2210,3.866,2211,3.866,2212,3.866,2213,3.866,2214,3.866,2215,5.423,2216,3.387,2217,3.387,2218,3.866,2219,3.866,2220,3.866]],["title/components/ThemeSettingsComponent.html",[123,1.009,208,1.75]],["body/components/ThemeSettingsComponent.html",[3,0.224,4,0.224,5,0.181,7,0.239,8,0.552,11,0.318,12,0.011,13,0.239,16,1.319,18,2.437,21,1.208,75,0.008,76,0.008,123,1.624,124,1.919,125,2.013,126,1.986,127,1.986,128,1.986,130,1.634,133,3.279,134,3.371,136,2.437,137,1.919,138,2.437,141,1.218,143,0.683,145,0.9,146,0.657,152,4.764,153,3.479,157,0.593,164,4.571,172,1.986,173,2.521,174,2.142,175,1.682,176,3.096,177,1.986,178,1.546,179,1.986,180,1.919,181,1.486,182,1.986,183,1.919,184,1.986,185,1.919,186,1.795,187,1.986,188,1.682,189,1.737,190,1.737,191,2.61,192,1.919,193,1.919,194,3.096,195,1.919,196,1.986,197,1.919,198,1.986,199,1.795,200,1.919,201,1.919,202,1.986,203,1.919,204,1.855,205,1.986,206,1.919,207,1.986,208,2.991,209,3.039,210,1.919,211,1.919,212,1.919,213,1.855,214,1.919,215,1.986,231,1.371,249,1.013,253,1.442,254,0.9,267,1.244,386,3.292,409,2.305,1445,3.768,1446,5.529,1448,4.571,1465,3.768,1470,3.768,2017,6.096,2140,4.571,2183,4.95,2221,6.957,2222,6.957,2223,6.229,2224,6.229,2225,7.389,2226,4.741,2227,4.741,2228,4.741]],["title/pipes/TimePipe.html",[464,2.39,655,3.173]],["body/pipes/TimePipe.html",[3,0.281,4,0.281,5,0.173,10,1.556,11,0.399,12,0.012,13,0.3,19,0.996,75,0.009,76,0.009,130,1.56,141,1.163,143,0.664,146,0.824,157,0.744,178,1.556,231,1.309,249,1.271,253,1.809,254,1.128,262,3.448,267,1.56,348,1.348,464,3.973,466,3.834,468,6.297,469,2.593,470,4.924,471,4.364,472,5.711,473,6.768,475,5.711,476,2.892,485,2.923,655,5.274,683,4.633,1579,4.726,1580,5.211,1652,4.726,2229,5.947,2230,5.947]],["title/injectables/TitleService.html",[216,0.726,1585,3.173]],["body/injectables/TitleService.html",[3,0.282,4,0.282,5,0.173,7,0.301,8,0.638,11,0.4,12,0.011,13,0.301,16,1.658,19,1.071,21,1.518,75,0.009,76,0.009,135,1.658,141,1.407,143,0.665,145,1.13,146,0.825,150,3.635,151,3.018,157,0.745,178,1.2,216,1.208,218,2.331,220,2.282,231,1.583,249,1.273,253,1.812,254,1.13,267,1.563,288,3.915,324,1.707,325,1.236,553,2.826,1585,5.28,2231,5.958,2232,7.195,2233,7.195,2234,5.958,2235,5.958,2236,5.958,2237,5.958,2238,5.958,2239,5.958]],["title/interfaces/Track.html",[0,0.151,549,1.877]],["body/interfaces/Track.html",[0,0.261,2,1.175,3,0.26,4,0.26,5,0.244,7,0.278,8,0.607,11,0.524,12,0.012,13,0.406,19,1.163,75,0.009,76,0.009,102,2.476,103,2.476,130,2.179,143,0.69,257,3.187,290,3.039,291,3.187,292,3.187,293,3.354,294,3.039,295,3.354,296,3.354,297,3.544,298,3.544,299,3.544,385,3.544,539,3.187,540,4.034,541,4.415,542,3.544,543,2.081,544,3.62,545,2.509,546,4.369,547,4.693,548,3.039,549,3.239,550,5.034,551,3.767,552,2.304,553,1.89,554,1.951,555,3.354,556,2.673,557,3.767,558,4.034,559,3.767,560,3.767,561,3.354]],["title/interfaces/TrackMetadata.html",[0,0.151,550,2.788]],["body/interfaces/TrackMetadata.html",[0,0.248,2,1.052,3,0.233,4,0.233,5,0.206,7,0.249,8,0.566,11,0.569,12,0.012,13,0.392,19,1.207,75,0.008,76,0.008,102,2.217,103,2.217,130,1.967,143,0.655,254,1.61,257,2.854,290,2.721,291,2.854,292,2.854,293,3.003,294,2.721,295,3.003,296,3.003,297,3.174,298,3.174,299,3.174,385,3.174,539,2.854,540,3.613,541,4.834,542,3.174,543,1.864,544,3.962,545,2.747,546,3.912,547,5.137,548,2.721,549,3.372,550,4.568,551,5.137,552,3.141,553,2.578,554,2.66,555,4.574,556,3.646,557,5.137,558,5.502,559,5.137,560,3.373,561,3.003]],["title/injectables/UpdateService.html",[154,3.436,216,0.726]],["body/injectables/UpdateService.html",[3,0.227,4,0.227,5,0.139,7,0.242,12,0.012,13,0.242,75,0.008,76,0.008,135,1.335,140,3.038,141,1.368,143,0.731,145,0.91,146,0.665,154,4.989,157,0.6,158,1.836,199,1.816,216,1.054,218,1.877,231,1.382,236,2.718,249,1.342,269,2.333,321,1.703,324,1.375,325,1.452,343,1.942,348,1.586,411,4.786,436,4.786,469,1.551,553,1.65,575,2.244,602,2.81,618,2.262,808,5.086,860,4.204,940,3.521,942,2.781,951,2.781,952,3.521,1071,3.287,1132,2.781,1477,3.093,1587,3.813,1677,2.781,1679,4.057,1737,3.521,1743,3.813,1744,3.521,1745,3.521,1748,3.813,1749,3.813,1851,4.795,2006,4.607,2007,3.813,2240,4.798,2241,7.423,2242,4.798,2243,4.798,2244,4.798,2245,6.278,2246,6.132,2247,4.204,2248,4.798,2249,4.798,2250,4.798,2251,4.798,2252,4.798,2253,4.798,2254,4.798,2255,4.798,2256,5.086,2257,6.278,2258,4.798,2259,4.798,2260,4.798,2261,4.798,2262,4.798,2263,4.798,2264,4.798,2265,4.798,2266,4.798,2267,4.798,2268,4.798,2269,4.798,2270,4.798,2271,4.798,2272,4.798,2273,4.798,2274,4.798,2275,4.798,2276,4.798,2277,4.204,2278,4.798,2279,4.798,2280,4.798,2281,4.798]],["title/components/VisualizerComponent.html",[123,1.009,210,1.75]],["body/components/VisualizerComponent.html",[3,0.094,4,0.094,5,0.094,7,0.1,8,0.288,10,1.591,11,0.469,12,0.012,13,0.1,16,1.905,21,1.946,37,1.148,43,1.52,47,1.983,55,1.983,75,0.004,76,0.004,79,3.157,83,1.718,84,1.647,85,1.718,86,1.718,87,1.718,88,1.718,89,2.53,90,1.718,91,1.718,92,1.797,93,1.797,94,1.003,95,2.795,96,2.678,97,3.041,98,2.678,99,1.003,100,2.425,104,2.678,115,3.38,118,3.125,119,2.932,122,3.049,123,0.965,124,0.801,125,1.051,126,0.83,127,0.83,128,0.83,130,0.853,131,2.096,132,2.096,133,2.891,134,2.934,136,1.272,137,0.801,138,1.272,140,1.796,141,1.58,143,0.686,144,1.277,145,0.376,146,0.274,148,1.148,157,0.248,172,0.83,173,1.316,174,1.118,175,0.703,176,2.006,177,0.83,178,1.433,179,0.83,180,0.801,181,0.621,182,0.83,183,0.801,184,0.83,185,0.801,186,0.749,187,0.83,188,0.703,189,0.726,190,0.726,191,1.362,192,0.801,193,0.801,194,2.006,195,0.801,196,0.83,197,0.801,198,0.83,199,0.749,200,0.801,201,0.801,202,0.83,203,1.938,204,0.775,205,0.83,206,0.801,207,0.83,208,0.801,209,0.749,210,1.938,211,2.14,212,0.801,213,1.873,214,0.801,215,0.83,217,2.425,220,2.47,231,0.715,249,1.388,251,2.386,253,1.975,254,1.268,255,2.834,267,2.216,288,1.003,311,2.386,315,3.961,316,2.776,317,0.963,318,1.047,325,0.411,327,1.885,348,1.421,469,0.64,476,1.581,539,2.398,549,1.411,658,1.581,693,3.287,700,1.983,703,1.277,705,1.574,708,1.885,718,2.667,762,1.277,816,2.096,883,4.981,1019,2.523,1020,2.095,1021,1.003,1133,1.885,1198,3.287,1226,1.574,1528,3.287,1535,3.281,1575,2.584,1581,1.574,1583,1.735,1584,1.735,1587,1.574,1589,1.574,1595,1.735,1673,2.849,1677,1.885,1679,3.874,1859,2.584,1877,3.513,1905,2.849,1983,2.584,1996,2.849,2062,1.735,2066,1.453,2282,1.98,2283,4.136,2284,4.136,2285,3.251,2286,3.251,2287,3.624,2288,5.288,2289,4.136,2290,3.624,2291,3.624,2292,5.288,2293,5.288,2294,3.251,2295,3.251,2296,3.251,2297,3.251,2298,3.251,2299,3.251,2300,3.251,2301,3.251,2302,3.251,2303,3.251,2304,3.251,2305,1.98,2306,3.251,2307,1.98,2308,3.251,2309,1.98,2310,3.251,2311,1.98,2312,3.251,2313,1.98,2314,3.251,2315,1.98,2316,3.251,2317,1.98,2318,3.251,2319,1.98,2320,3.251,2321,1.98,2322,3.251,2323,3.251,2324,1.98,2325,2.849,2326,1.98,2327,3.251,2328,2.584,2329,1.98,2330,3.251,2331,3.251,2332,3.251,2333,3.251,2334,1.98,2335,3.251,2336,1.98,2337,3.251,2338,1.98,2339,3.251,2340,3.251,2341,1.98,2342,1.98,2343,3.251,2344,1.98,2345,3.251,2346,1.98,2347,3.251,2348,1.98,2349,1.98,2350,3.251,2351,3.251,2352,1.98,2353,3.251,2354,1.98,2355,1.98,2356,3.251,2357,1.98,2358,3.251,2359,3.251,2360,1.98,2361,1.98,2362,1.98,2363,1.98,2364,1.98,2365,1.98,2366,1.98,2367,3.251,2368,1.98,2369,3.251,2370,1.98,2371,3.251,2372,1.98,2373,1.98,2374,1.735,2375,1.98,2376,1.98,2377,1.98,2378,1.98,2379,1.98,2380,1.98,2381,1.98,2382,1.98,2383,1.98,2384,1.98,2385,1.98,2386,1.98,2387,1.98,2388,1.98,2389,1.98,2390,1.98,2391,1.98,2392,1.98,2393,1.98,2394,1.98,2395,1.98,2396,1.98,2397,3.251,2398,5.683,2399,2.849,2400,4.788,2401,3.251]],["title/interfaces/VisualsColorConfig.html",[0,0.151,101,2.285]],["body/interfaces/VisualsColorConfig.html",[0,0.287,2,1.039,3,0.23,4,0.23,5,0.141,7,0.246,8,0.562,10,1.753,11,0.532,12,0.012,13,0.425,18,2.756,19,1.135,22,1.525,25,2.852,75,0.008,76,0.008,77,2.688,78,2.688,79,3.629,80,2.819,81,2.819,82,2.819,83,2.57,84,2.463,85,2.57,86,2.57,87,2.57,88,2.57,89,2.57,90,2.57,91,2.57,92,2.688,93,2.688,94,2.463,95,3.348,96,3.208,97,3.208,98,3.208,99,2.463,100,3.208,101,3.348,102,3.484,103,3.484,104,3.919,105,2.57,106,2.57,107,2.463,108,2.688,109,2.819,110,2.365,111,3.425,112,2.57,113,2.365,114,3.894,115,2.962,116,2.57,117,3.208,118,3.489,119,3.489,120,2.274,121,3.208,122,3.629,254,1.505]],["title/directives/VisualsDirective.html",[175,1.534,213,1.692]],["body/directives/VisualsDirective.html",[3,0.138,4,0.138,5,0.085,7,0.147,8,0.392,10,0.588,11,0.399,12,0.012,13,0.147,16,1.483,18,2.498,21,1.514,22,2.106,39,2.325,41,2.58,43,2.065,75,0.006,76,0.006,79,1.419,94,1.478,95,2.816,96,2.699,97,2.699,98,2.699,99,1.478,100,2.699,101,1.542,102,1.989,103,1.989,104,2.237,105,3.687,106,2.816,107,3.01,108,2.441,110,1.419,111,2.148,112,1.542,113,1.419,115,1.365,116,2.334,118,2.779,119,3.359,120,1.365,122,2.89,130,0.765,133,1.672,140,2.314,141,1.489,143,0.493,145,0.554,146,0.404,157,0.365,158,2.164,175,1.567,178,0.89,212,1.181,213,1.728,214,1.788,217,2.237,220,2.35,231,0.972,245,3.51,249,1.139,251,4.685,253,1.344,254,0.838,255,4.374,267,1.559,311,3.241,325,1.526,343,1.788,346,2.141,348,1.208,350,1.881,408,2.141,469,1.722,470,3.026,476,2.148,485,1.672,504,2.319,539,3.701,618,1.722,671,4.382,683,1.881,700,1.78,703,1.881,718,3.436,737,2.557,762,1.881,916,2.557,1071,3.651,1076,2.557,1078,2.557,1079,2.319,1086,4.235,1133,1.692,1136,1.881,1295,3.026,1677,1.692,1679,3.445,1851,4.072,2074,3.51,2153,4.235,2154,4.235,2287,4.669,2291,4.669,2325,2.557,2328,3.51,2402,2.557,2403,5.943,2404,4.417,2405,4.417,2406,2.918,2407,4.417,2408,2.918,2409,4.417,2410,2.918,2411,4.417,2412,2.918,2413,2.918,2414,2.918,2415,4.417,2416,2.918,2417,2.918,2418,2.918,2419,2.918,2420,2.557,2421,2.557,2422,2.557,2423,2.557,2424,2.918,2425,2.918,2426,2.918,2427,2.918,2428,2.918,2429,4.417,2430,2.918,2431,2.918,2432,2.918,2433,2.918,2434,2.918,2435,2.918,2436,2.918,2437,2.918,2438,2.918,2439,6.976,2440,2.918,2441,2.918,2442,2.918,2443,2.918,2444,2,2445,4.417,2446,2.918,2447,2.918,2448,2.918,2449,2.918,2450,2.918,2451,2.918,2452,5.329,2453,2.918,2454,4.417,2455,4.417,2456,2.918,2457,2.918,2458,2.918,2459,5.943,2460,2.918,2461,2.918,2462,2.918,2463,2.918,2464,2.918,2465,2.918,2466,4.417,2467,2.918,2468,2.918,2469,2.918,2470,5.329,2471,5.943,2472,2.918,2473,2.918,2474,2.918,2475,2.918,2476,4.417,2477,4.417,2478,4.417,2479,5.329,2480,2.918,2481,2.918,2482,2.918,2483,2.918,2484,2.918,2485,2.918,2486,2.918,2487,2.918,2488,2.918,2489,6.112,2490,4.417,2491,4.417,2492,2.557,2493,2.557,2494,2.918,2495,2.918,2496,2.918,2497,2.918,2498,2.918,2499,2.918,2500,4.417,2501,4.669,2502,4.417,2503,4.417,2504,2.918,2505,2.918,2506,2.918,2507,2.918,2508,2.918,2509,2.918,2510,2.918,2511,2.918,2512,2.918,2513,2.918,2514,2.918,2515,2.918,2516,4.417,2517,2.918,2518,2.918,2519,2.918,2520,2.557,2521,2.918,2522,2.557,2523,2.918,2524,2.918,2525,2.918]],["title/injectables/VisualsService.html",[216,0.726,1877,3.173]],["body/injectables/VisualsService.html",[3,0.259,4,0.259,5,0.159,7,0.276,8,0.605,11,0.367,12,0.012,13,0.276,16,1.522,21,1.393,75,0.009,76,0.009,115,3.192,118,3.644,119,3.644,122,3.79,135,1.522,141,1.335,143,0.688,145,1.038,146,0.758,157,0.684,216,1.147,218,2.14,220,2.197,231,1.502,249,1.169,267,1.435,288,2.77,316,3.958,317,2.66,318,2.891,324,1.567,325,1.135,327,3.171,1677,3.171,1679,4.65,1851,5.496,1877,5.01,2420,4.793,2526,5.47,2527,7.442,2528,7.794,2529,5.47,2530,6.827,2531,5.47,2532,8.297,2533,5.47,2534,5.47,2535,5.47]],["title/interfaces/VisualsWorkerMessage.html",[0,0.151,105,2.285]],["body/interfaces/VisualsWorkerMessage.html",[0,0.285,2,1.015,3,0.225,4,0.225,5,0.138,7,0.24,8,0.553,10,1.741,11,0.547,12,0.012,13,0.424,18,2.724,19,1.024,22,2.183,25,2.808,75,0.008,76,0.008,77,2.625,78,2.625,79,3.595,80,2.752,81,2.752,82,2.752,83,2.509,84,2.405,85,2.509,86,2.509,87,2.509,88,2.509,89,2.509,90,2.509,91,2.509,92,2.625,93,2.625,94,2.405,95,3.295,96,3.158,97,3.158,98,3.158,99,2.405,100,3.158,101,2.509,102,2.808,103,2.808,104,3.158,105,3.295,106,3.907,107,3.526,108,4.087,109,4.036,110,3.595,111,3.963,112,3.907,113,3.386,114,3.849,115,2.916,116,2.509,117,3.158,118,3.457,119,3.457,120,2.22,121,3.158,122,3.595,254,1.546]],["title/injectables/WakelockService.html",[216,0.726,1739,2.963]],["body/injectables/WakelockService.html",[3,0.266,4,0.266,5,0.163,7,0.284,8,0.616,11,0.377,12,0.012,13,0.284,75,0.009,76,0.009,135,1.564,140,3.272,141,1.539,143,0.52,146,0.779,157,0.703,216,1.166,218,2.2,231,1.528,236,2.87,249,1.484,254,1.318,262,4.026,324,1.611,325,1.167,348,1.574,401,1.874,446,2.06,605,2.532,609,2.63,1739,4.759,2536,5.623,2537,5.989,2538,7.87,2539,7.87,2540,6.945,2541,5.623,2542,5.623,2543,6.945,2544,7.536,2545,5.623,2546,5.623,2547,5.623,2548,5.623,2549,5.623,2550,5.623,2551,5.623,2552,5.623]],["title/changelog.html",[2553,2.489,2554,2.665,2555,3.182]],["body/changelog.html",[5,0.114,11,0.097,12,0.004,18,0.211,21,0.259,29,4.256,41,1.082,43,2.368,45,2.035,47,3.019,49,3.524,51,3.112,53,3.524,55,2.386,57,3.636,59,2.596,61,3.089,63,2.119,65,1.607,67,3.335,69,3.914,75,0.001,76,0.001,107,0.273,111,0.262,118,0.252,119,0.475,120,0.475,123,0.237,125,0.591,130,0.921,135,0.15,136,0.851,140,0.234,143,0.094,145,0.102,151,1.102,157,0.067,173,0.74,175,0.191,178,0.205,181,0.573,186,0.385,209,0.385,211,0.411,217,0.273,237,0.428,254,0.102,255,0.369,268,0.931,288,0.515,291,0.312,292,0.312,318,0.537,329,1.179,334,0.428,343,0.584,344,0.746,346,0.746,350,0.347,351,0.428,356,0.369,362,0.395,363,1.011,364,1.829,365,1.115,367,0.347,374,0.369,385,0.655,386,1.15,388,0.428,408,2.234,411,5.139,433,1.148,434,1.98,436,1.179,470,1.491,484,0.428,500,1.602,504,0.428,535,1.403,548,1.537,549,0.441,553,0.185,561,0.328,566,0.262,576,0.197,577,0.211,583,0.347,584,5.661,595,0.273,605,0.458,611,0.312,618,0.174,623,0.328,642,0.763,650,0.855,653,0.369,656,0.428,658,0.262,671,0.881,683,0.655,708,0.312,719,0.697,778,0.891,779,5.475,799,2.728,808,0.697,858,0.808,871,2.955,894,0.891,911,0.697,936,0.347,939,0.369,953,0.746,972,0.395,977,0.369,998,0.395,1044,0.472,1071,1.253,1079,1.148,1096,1.06,1108,0.395,1117,0.472,1133,0.312,1157,0.347,1230,1.148,1273,0.428,1297,0.808,1309,0.808,1310,0.472,1314,0.472,1345,1.491,1368,0.472,1374,0.428,1375,0.428,1416,0.472,1467,0.472,1477,2.521,1478,0.472,1488,0.472,1494,1.06,1507,1.602,1513,0.891,1641,0.472,1670,0.472,1671,0.472,1672,0.472,1677,0.312,1712,0.428,1737,0.395,1769,2.183,1811,2.576,1858,0.428,1918,0.472,1921,0.472,1936,1.602,1938,0.428,1941,1.265,1942,0.472,1943,0.472,1950,0.589,1951,3.995,1960,0.472,1978,0.428,1985,0.428,2025,0.472,2043,0.472,2060,0.347,2071,0.472,2074,0.428,2103,2.183,2104,0.891,2116,0.891,2117,0.472,2140,0.395,2183,0.428,2191,3.583,2193,4.116,2216,0.472,2217,0.472,2246,0.891,2256,0.989,2277,4.336,2290,0.472,2328,4.344,2374,0.472,2399,0.472,2423,0.472,2444,2.405,2489,0.472,2492,3.076,2520,0.472,2522,0.472,2537,1.148,2555,1.265,2556,0.538,2557,2.78,2558,0.538,2559,0.538,2560,0.538,2561,0.538,2562,0.347,2563,0.538,2564,5.374,2565,4.413,2566,1.265,2567,2.667,2568,1.828,2569,0.538,2570,0.538,2571,5.98,2572,6.07,2573,1.444,2574,5.796,2575,0.538,2576,0.538,2577,2.492,2578,4.336,2579,4.257,2580,0.538,2581,0.538,2582,0.538,2583,0.538,2584,0.538,2585,4.948,2586,0.538,2587,1.017,2588,0.538,2589,1.828,2590,3.044,2591,0.538,2592,0.538,2593,0.538,2594,0.538,2595,0.538,2596,0.538,2597,2.492,2598,0.538,2599,0.538,2600,0.538,2601,0.538,2602,0.538,2603,0.538,2604,0.538,2605,1.444,2606,1.017,2607,2.78,2608,0.538,2609,0.538,2610,0.538,2611,0.538,2612,0.538,2613,0.538,2614,0.538,2615,0.538,2616,0.538,2617,0.538,2618,0.538,2619,2.176,2620,0.538,2621,2.492,2622,0.538,2623,0.538,2624,0.538,2625,0.538,2626,0.538,2627,0.538,2628,0.538,2629,1.017,2630,0.538,2631,0.538,2632,1.907,2633,0.538,2634,5.719,2635,1.444,2636,1.148,2637,1.444,2638,0.538,2639,0.538,2640,1.265,2641,0.538,2642,0.538,2643,1.265,2644,1.017,2645,1.017,2646,0.538,2647,0.538,2648,0.472,2649,0.538,2650,0.538,2651,0.538,2652,1.828,2653,0.538,2654,0.538,2655,0.538,2656,0.538,2657,1.017,2658,0.538,2659,0.538,2660,0.538,2661,6.006,2662,0.538,2663,0.538,2664,0.538,2665,0.538,2666,1.017,2667,0.538,2668,0.538,2669,1.828,2670,1.444,2671,0.538,2672,0.538,2673,0.538,2674,0.538,2675,0.538,2676,1.444,2677,1.017,2678,0.538,2679,0.538,2680,0.538,2681,0.538,2682,0.538,2683,0.538,2684,1.017,2685,0.538,2686,0.472,2687,0.538,2688,5.796,2689,0.538,2690,1.602,2691,0.538,2692,0.538,2693,0.538,2694,0.538,2695,0.538,2696,0.891,2697,0.538,2698,0.538,2699,1.017,2700,0.538,2701,0.538,2702,0.538,2703,0.538,2704,0.538,2705,0.538,2706,0.538,2707,0.538,2708,0.538,2709,0.538,2710,0.538,2711,1.828,2712,5.173,2713,0.538,2714,0.538,2715,0.538,2716,0.538,2717,0.538,2718,0.538,2719,0.538,2720,2.176,2721,0.538,2722,0.538,2723,0.538,2724,0.538,2725,0.538,2726,0.538,2727,0.538,2728,0.538,2729,0.538,2730,0.538,2731,0.538,2732,0.538,2733,0.538,2734,0.538,2735,0.538,2736,2.78,2737,0.538,2738,0.538,2739,5.796,2740,0.538,2741,0.538,2742,0.428,2743,0.538,2744,0.538,2745,0.538,2746,0.538,2747,0.538,2748,0.538,2749,0.538,2750,0.538,2751,0.538,2752,0.428,2753,1.017,2754,0.808,2755,0.538,2756,0.538,2757,0.538,2758,0.538,2759,6.597,2760,0.538,2761,0.538,2762,0.538,2763,0.538,2764,0.538,2765,0.538,2766,0.538,2767,0.538,2768,0.538,2769,0.538,2770,0.538,2771,0.538,2772,0.538,2773,0.538,2774,0.538,2775,0.538,2776,0.538,2777,0.538,2778,0.538,2779,1.444,2780,0.538,2781,0.538,2782,0.538,2783,0.538,2784,0.538,2785,0.538,2786,0.538,2787,0.538,2788,6.191,2789,0.538,2790,0.538,2791,0.538,2792,0.538,2793,0.538,2794,0.538,2795,0.538,2796,0.538,2797,6.713,2798,0.538,2799,0.538,2800,0.538,2801,1.017,2802,0.538,2803,0.538,2804,4.336,2805,0.538,2806,0.538,2807,0.538,2808,1.828,2809,0.538,2810,0.538,2811,0.538,2812,0.538,2813,0.538,2814,0.538,2815,0.538,2816,0.538,2817,0.538,2818,0.538,2819,0.538,2820,0.538,2821,0.538,2822,0.538,2823,0.538,2824,7.757,2825,7.362,2826,0.538,2827,0.538,2828,0.538,2829,0.538,2830,0.538,2831,0.538,2832,0.538,2833,3.746,2834,0.538,2835,0.538,2836,0.538,2837,0.538,2838,0.538,2839,1.828,2840,1.828,2841,1.017,2842,1.444,2843,0.538,2844,0.538,2845,0.538,2846,0.538,2847,0.538,2848,0.538,2849,0.538,2850,0.538,2851,0.538,2852,5.939,2853,0.472,2854,0.538,2855,1.828,2856,1.828,2857,0.538,2858,0.538,2859,2.176,2860,2.78,2861,0.538,2862,0.472,2863,0.538,2864,0.538,2865,0.538,2866,0.538,2867,1.265,2868,0.538,2869,0.538,2870,0.538,2871,0.538,2872,0.538,2873,0.538,2874,0.538,2875,0.538,2876,0.538,2877,0.538,2878,1.017,2879,0.538,2880,0.538,2881,0.538,2882,2.492,2883,0.538,2884,0.538,2885,0.538,2886,0.538,2887,2.78,2888,1.017,2889,0.538,2890,1.017,2891,1.017,2892,0.538,2893,0.538,2894,0.538,2895,0.538,2896,0.538,2897,0.538,2898,3.511,2899,0.538,2900,0.538,2901,0.538,2902,0.538,2903,0.538,2904,0.538,2905,0.538,2906,0.538,2907,2.667,2908,0.538,2909,0.538,2910,0.538,2911,0.538,2912,0.538,2913,3.718,2914,0.538,2915,0.538,2916,0.538,2917,0.538,2918,7.018,2919,0.538,2920,0.538,2921,1.828,2922,2.183,2923,0.538,2924,0.538,2925,0.538,2926,0.538,2927,0.538,2928,1.828,2929,0.538,2930,0.538,2931,0.538,2932,0.538,2933,0.538,2934,0.538,2935,0.538,2936,0.538,2937,0.538,2938,0.538,2939,0.538,2940,0.538,2941,0.538,2942,0.538,2943,0.538,2944,0.538,2945,0.538,2946,0.538,2947,0.538,2948,0.538,2949,0.538,2950,4.826,2951,0.538,2952,0.538,2953,0.538,2954,0.538,2955,0.538,2956,0.538,2957,0.538,2958,0.472,2959,0.538,2960,0.538,2961,0.538,2962,0.538,2963,0.538,2964,0.538,2965,0.538,2966,0.538,2967,0.538,2968,0.538,2969,3.287,2970,7.253,2971,0.538,2972,0.538,2973,0.538,2974,0.538,2975,0.538,2976,0.538,2977,0.538,2978,0.538,2979,0.538,2980,0.538,2981,0.538,2982,0.538,2983,1.907,2984,0.538,2985,0.538,2986,0.538,2987,0.538,2988,0.538,2989,0.538,2990,1.017,2991,1.444,2992,1.444,2993,0.538,2994,0.538,2995,0.538,2996,0.538,2997,0.538,2998,1.017,2999,0.538,3000,0.538,3001,0.538,3002,0.538,3003,0.538,3004,0.538,3005,0.538,3006,0.538,3007,0.538,3008,0.538,3009,0.538,3010,0.538,3011,0.538,3012,0.538,3013,0.538,3014,0.538,3015,1.444,3016,1.017,3017,1.017,3018,0.538,3019,0.538,3020,0.538,3021,0.538,3022,0.538,3023,0.538,3024,0.538,3025,0.538,3026,0.538,3027,0.538,3028,0.538,3029,0.538,3030,0.538,3031,0.538,3032,0.538,3033,0.538,3034,0.538,3035,1.017,3036,0.538,3037,0.538,3038,0.538,3039,0.538,3040,0.538,3041,0.538,3042,0.538,3043,0.538,3044,0.538,3045,2.78,3046,6.006,3047,0.538,3048,0.538,3049,0.538,3050,0.538,3051,0.538,3052,0.538,3053,0.538,3054,0.538,3055,0.538,3056,0.538,3057,0.538,3058,0.538,3059,0.538,3060,0.538,3061,0.538,3062,1.017,3063,0.538,3064,0.538,3065,0.538,3066,0.538,3067,0.538,3068,0.538,3069,0.538,3070,0.538,3071,0.538,3072,0.538,3073,0.538,3074,0.538,3075,0.538,3076,4.826,3077,0.538,3078,0.538,3079,0.538,3080,0.538,3081,0.538,3082,0.538,3083,0.538,3084,0.538,3085,0.538,3086,0.538,3087,0.538,3088,0.538,3089,0.538,3090,0.538,3091,0.538,3092,0.538,3093,0.538,3094,0.538,3095,0.538,3096,0.538,3097,0.538,3098,0.538,3099,0.538,3100,0.538,3101,0.538,3102,0.538,3103,0.538,3104,0.538,3105,0.538,3106,1.017,3107,0.538,3108,1.017,3109,0.538,3110,0.538,3111,0.538,3112,0.538,3113,0.538,3114,0.538,3115,0.538,3116,0.538,3117,0.538,3118,3.044,3119,0.538,3120,0.538,3121,0.538,3122,0.538,3123,0.538,3124,0.538,3125,0.538,3126,0.538,3127,0.538,3128,0.538,3129,0.538,3130,0.538,3131,0.538,3132,2.176,3133,0.538,3134,0.538,3135,0.538,3136,0.538,3137,4.697,3138,5.064,3139,0.538,3140,0.538,3141,0.538,3142,0.538,3143,0.538,3144,0.538,3145,0.538,3146,0.538,3147,0.538,3148,0.538,3149,0.538,3150,0.538,3151,0.538,3152,0.538,3153,0.538,3154,0.538,3155,0.538,3156,0.538,3157,0.538,3158,0.472,3159,0.538,3160,0.538,3161,0.538,3162,0.538,3163,0.538,3164,1.828,3165,1.444,3166,0.538,3167,0.538,3168,0.538,3169,0.538,3170,0.538,3171,0.538,3172,0.538,3173,0.538,3174,1.017,3175,0.538,3176,0.538,3177,0.538,3178,0.538,3179,0.538,3180,0.538,3181,0.538,3182,0.538,3183,0.538,3184,0.538,3185,0.538,3186,0.538,3187,0.538,3188,0.538,3189,1.017,3190,0.538,3191,0.538,3192,0.538,3193,1.017,3194,0.538,3195,0.538,3196,0.538,3197,0.538,3198,0.538,3199,0.538,3200,0.538,3201,0.538,3202,0.538,3203,0.538,3204,0.538,3205,0.538,3206,1.444,3207,0.538,3208,0.538,3209,0.538,3210,0.538,3211,0.538,3212,0.538,3213,0.538,3214,0.538,3215,0.538,3216,0.538,3217,0.538,3218,0.538,3219,0.538,3220,0.538,3221,0.538,3222,0.538,3223,0.472,3224,0.538,3225,0.538,3226,0.538,3227,0.538,3228,0.538,3229,0.538,3230,7.512,3231,1.017,3232,0.538,3233,0.538,3234,0.538,3235,0.538,3236,0.538,3237,0.538,3238,0.538,3239,0.538,3240,0.538,3241,0.538,3242,0.538,3243,0.538,3244,0.538,3245,0.538,3246,0.538,3247,0.538,3248,0.538,3249,1.444,3250,1.444,3251,0.538,3252,0.538,3253,0.538,3254,0.538,3255,0.538,3256,0.538,3257,0.538,3258,0.538,3259,0.538,3260,0.538,3261,1.017,3262,0.538,3263,0.538,3264,0.538,3265,1.017,3266,1.907,3267,0.538,3268,0.538,3269,0.538,3270,0.538,3271,1.017,3272,0.538,3273,0.538,3274,0.538,3275,0.538,3276,0.538,3277,0.538,3278,0.538,3279,0.538,3280,0.538,3281,0.538,3282,0.538,3283,0.538,3284,0.538,3285,0.538,3286,0.538,3287,0.538,3288,0.538,3289,2.78,3290,0.538,3291,0.538,3292,0.538,3293,1.017,3294,0.538,3295,0.538,3296,0.538,3297,0.538,3298,0.538,3299,0.538,3300,0.538,3301,0.538,3302,0.538,3303,0.538,3304,0.538,3305,0.538,3306,0.538,3307,0.538,3308,0.538,3309,0.538,3310,1.444,3311,0.538,3312,0.538,3313,0.538,3314,0.538,3315,0.538,3316,0.538,3317,0.538,3318,0.538,3319,0.538,3320,1.017,3321,0.538,3322,0.538,3323,0.538,3324,0.538,3325,0.538,3326,0.538,3327,0.538,3328,0.538,3329,0.538,3330,0.538,3331,0.538,3332,0.538,3333,0.538,3334,0.538,3335,0.538,3336,0.538,3337,1.017,3338,0.538,3339,0.538,3340,0.538,3341,0.538,3342,0.538,3343,0.538,3344,0.538,3345,0.538,3346,0.538,3347,0.538,3348,0.538,3349,0.538,3350,0.538,3351,0.538,3352,0.538,3353,0.538,3354,0.538,3355,0.538,3356,0.538,3357,0.538,3358,0.538,3359,0.538,3360,0.538,3361,0.538,3362,0.538,3363,0.538,3364,0.538,3365,0.538,3366,4.09,3367,0.538,3368,0.538,3369,1.017,3370,1.017,3371,0.538,3372,0.538,3373,0.538,3374,0.538,3375,0.538,3376,0.538,3377,0.538,3378,0.538,3379,0.538,3380,0.538,3381,0.538,3382,0.538,3383,0.538,3384,0.538,3385,0.538,3386,0.538,3387,0.538,3388,2.78,3389,0.538,3390,1.017,3391,1.017,3392,0.538,3393,0.538,3394,0.538,3395,0.538,3396,0.538,3397,0.538,3398,0.538,3399,0.538,3400,0.538,3401,0.538,3402,0.538,3403,0.538,3404,0.538,3405,0.538,3406,0.538,3407,0.538,3408,0.538,3409,0.538,3410,0.538,3411,0.538,3412,0.538,3413,0.538,3414,0.538,3415,0.538,3416,0.538,3417,1.017,3418,0.538,3419,0.538,3420,0.538,3421,0.538,3422,0.538,3423,0.538,3424,0.538,3425,0.538,3426,0.538,3427,0.538,3428,0.538,3429,0.538,3430,0.538,3431,0.538,3432,0.538,3433,0.538,3434,0.538,3435,0.538,3436,0.538,3437,0.538,3438,0.538,3439,0.538,3440,0.538,3441,0.538,3442,0.538,3443,0.538,3444,0.538,3445,0.538,3446,0.538,3447,0.538,3448,0.538,3449,0.538,3450,1.017,3451,0.538,3452,0.538,3453,0.538,3454,0.538,3455,0.538,3456,0.538,3457,0.538,3458,0.697,3459,1.253,3460,0.538,3461,0.538,3462,0.538,3463,0.538,3464,0.538,3465,0.538,3466,0.538,3467,0.538,3468,0.538,3469,0.538,3470,0.538,3471,0.538,3472,0.538,3473,0.538,3474,0.538,3475,0.538,3476,0.538,3477,0.538,3478,0.538,3479,0.538,3480,0.538,3481,1.828,3482,0.538,3483,0.538,3484,0.538,3485,0.538,3486,1.017,3487,0.538,3488,1.017,3489,0.538,3490,0.538,3491,0.538,3492,0.538,3493,0.538,3494,0.538,3495,0.538,3496,0.538,3497,0.538,3498,0.538,3499,0.538,3500,0.538,3501,0.538,3502,0.538,3503,0.538,3504,0.538,3505,0.538,3506,0.538,3507,0.538,3508,0.538,3509,0.538,3510,0.538,3511,0.538,3512,0.538,3513,0.538,3514,0.538,3515,0.538,3516,0.538,3517,0.538,3518,0.538,3519,0.538,3520,0.538,3521,0.538,3522,0.538,3523,0.538,3524,0.538,3525,0.538,3526,0.538,3527,0.538,3528,0.538,3529,0.538,3530,0.538,3531,0.538,3532,0.538,3533,0.472,3534,0.538,3535,0.538,3536,0.538,3537,0.538,3538,0.538,3539,0.538,3540,0.538,3541,0.538,3542,0.538,3543,0.538,3544,0.538,3545,0.538,3546,0.538,3547,0.538,3548,0.538,3549,0.538,3550,0.538,3551,0.538,3552,0.538,3553,0.538,3554,0.538,3555,0.538,3556,0.538,3557,0.538,3558,0.538,3559,1.017,3560,0.538,3561,0.538,3562,0.538,3563,0.538,3564,0.538,3565,0.538,3566,0.538,3567,0.538,3568,0.538,3569,0.538,3570,0.538,3571,0.538,3572,0.538,3573,0.538,3574,0.538,3575,0.538,3576,0.538,3577,0.538,3578,0.538,3579,0.538,3580,0.538,3581,0.538,3582,0.538,3583,0.538,3584,0.538,3585,0.538,3586,0.538,3587,0.538,3588,0.538,3589,0.538,3590,0.538,3591,0.538,3592,0.538,3593,0.538,3594,0.538,3595,0.538,3596,0.538,3597,2.492,3598,0.538,3599,0.538,3600,0.538,3601,0.538,3602,0.538,3603,0.538,3604,0.538,3605,0.538,3606,1.017,3607,0.538,3608,0.538,3609,0.538,3610,0.538,3611,0.538,3612,0.538,3613,1.828,3614,0.538,3615,0.538,3616,0.538,3617,0.538,3618,0.538,3619,0.538,3620,0.538,3621,0.538,3622,0.538,3623,0.538,3624,0.538,3625,0.472,3626,0.538,3627,0.538,3628,1.907,3629,0.538,3630,0.538,3631,7.593,3632,0.538,3633,0.538,3634,0.538,3635,0.538,3636,0.538,3637,0.538,3638,0.538,3639,0.538,3640,0.538,3641,0.538,3642,0.538,3643,0.538,3644,0.538,3645,0.538,3646,0.538,3647,0.538,3648,1.017,3649,0.538,3650,0.538,3651,0.538,3652,0.538,3653,0.538,3654,0.538,3655,0.538,3656,0.538,3657,0.538,3658,0.538,3659,0.538,3660,0.538,3661,0.538,3662,0.538,3663,0.538,3664,0.538,3665,0.538,3666,0.538,3667,0.538,3668,0.538,3669,0.538,3670,0.538,3671,0.538,3672,0.538,3673,0.538,3674,0.538,3675,0.538,3676,0.538,3677,0.538,3678,0.538,3679,0.538,3680,1.017,3681,0.538,3682,0.538,3683,0.538,3684,0.538,3685,2.78,3686,0.538,3687,0.538,3688,0.538,3689,0.538,3690,2.78,3691,0.538,3692,0.538,3693,0.538,3694,0.538,3695,0.538,3696,0.538,3697,0.538,3698,0.538,3699,0.538,3700,0.538,3701,0.538,3702,0.538,3703,0.538,3704,1.017,3705,0.538,3706,0.538,3707,0.538,3708,0.538,3709,0.538,3710,0.538,3711,0.538,3712,0.538,3713,0.538,3714,0.538,3715,0.538,3716,0.538,3717,0.538,3718,2.176,3719,0.538,3720,0.538,3721,0.538,3722,0.538,3723,1.017,3724,0.538,3725,0.538,3726,0.538,3727,0.538,3728,1.017,3729,0.538,3730,0.538,3731,0.538,3732,0.538,3733,0.538,3734,1.017,3735,0.538,3736,0.538,3737,0.538,3738,0.538,3739,0.538,3740,0.538,3741,0.538,3742,0.538,3743,0.538,3744,0.538,3745,0.538,3746,0.538,3747,2.492,3748,0.538,3749,1.017,3750,1.907,3751,0.538,3752,0.538,3753,0.538,3754,0.538,3755,0.538,3756,0.538,3757,0.538,3758,0.538,3759,0.538,3760,1.444,3761,0.538,3762,0.538,3763,0.538,3764,0.538,3765,0.538,3766,0.538,3767,0.538,3768,0.538,3769,0.538,3770,0.538,3771,1.444,3772,0.538,3773,0.538,3774,0.538,3775,0.538,3776,0.538,3777,0.538,3778,0.538,3779,0.538,3780,0.538,3781,0.472,3782,0.538,3783,1.017,3784,0.538,3785,0.538,3786,0.538,3787,0.538,3788,0.538,3789,0.538,3790,0.538,3791,0.538,3792,0.538,3793,0.538,3794,0.538,3795,0.538,3796,0.538,3797,0.538,3798,0.538,3799,0.538,3800,0.538,3801,0.538,3802,1.017,3803,1.017,3804,0.538,3805,1.017,3806,0.538,3807,0.538,3808,0.538,3809,0.538,3810,0.538,3811,0.538,3812,0.538,3813,0.538,3814,0.538,3815,0.538,3816,0.538,3817,0.538,3818,0.538,3819,0.538,3820,0.538,3821,0.538,3822,0.538,3823,0.538,3824,0.538,3825,0.538,3826,0.538,3827,0.472,3828,0.538,3829,0.538,3830,1.017,3831,0.538,3832,0.538,3833,0.538,3834,0.538,3835,0.538,3836,0.538,3837,0.538,3838,0.538,3839,0.538,3840,0.538,3841,0.538,3842,0.538,3843,0.538,3844,0.538,3845,0.538,3846,0.538,3847,0.538,3848,0.538,3849,0.428,3850,0.538,3851,0.538,3852,0.538,3853,0.538,3854,0.538,3855,0.538,3856,0.538,3857,0.538,3858,0.538,3859,0.538,3860,0.538,3861,0.538,3862,0.538,3863,0.538,3864,0.538,3865,0.538,3866,0.538,3867,0.538,3868,0.538,3869,0.538,3870,0.538,3871,0.538,3872,0.472,3873,0.538,3874,0.538,3875,0.538,3876,1.444,3877,0.538,3878,0.538,3879,0.538,3880,0.538,3881,0.538,3882,0.538,3883,0.538,3884,0.538,3885,0.538,3886,0.538,3887,0.538,3888,0.538,3889,1.828,3890,3.287,3891,0.538,3892,0.538,3893,0.538,3894,0.538,3895,0.538,3896,2.78,3897,2.176,3898,0.538,3899,0.538,3900,0.538,3901,0.538,3902,0.538,3903,0.538,3904,0.538,3905,0.538,3906,0.538,3907,0.538,3908,0.538,3909,0.538,3910,0.538,3911,0.538,3912,1.017,3913,0.538,3914,0.538,3915,0.538,3916,0.538,3917,0.538,3918,0.538,3919,0.538,3920,0.538,3921,0.538,3922,0.538,3923,0.538,3924,0.538,3925,0.538,3926,0.538,3927,0.538,3928,0.538,3929,0.538,3930,0.538,3931,0.538,3932,0.538,3933,0.538,3934,0.538,3935,0.538,3936,0.538,3937,0.538,3938,0.538,3939,0.538,3940,1.017,3941,0.538,3942,0.538,3943,0.538,3944,0.538,3945,0.538,3946,0.538,3947,0.538,3948,0.538,3949,0.538,3950,0.538,3951,0.538,3952,0.538,3953,0.538,3954,0.538,3955,0.538,3956,0.538,3957,0.538,3958,0.538,3959,0.538,3960,0.538,3961,0.538,3962,0.538,3963,0.538,3964,0.538,3965,0.538,3966,0.538,3967,0.538,3968,0.538,3969,1.828,3970,0.538,3971,0.538,3972,0.538,3973,0.538,3974,0.538,3975,1.017,3976,0.538,3977,0.538,3978,0.538,3979,0.538,3980,0.538,3981,0.538,3982,0.538,3983,0.538,3984,0.538,3985,0.538,3986,0.538,3987,0.538,3988,0.538,3989,0.538,3990,0.538,3991,0.538,3992,1.017,3993,0.538,3994,0.538,3995,0.538,3996,0.538,3997,0.538,3998,0.538,3999,0.538,4000,0.538,4001,0.538,4002,0.538,4003,0.538,4004,0.538,4005,0.538,4006,0.538,4007,0.538,4008,0.538,4009,0.538,4010,0.538,4011,0.538,4012,2.176,4013,2.176,4014,0.538,4015,0.538,4016,0.538,4017,0.538,4018,0.538,4019,0.538,4020,0.538,4021,0.538,4022,0.538,4023,0.538,4024,0.538,4025,0.538,4026,0.538,4027,0.538,4028,0.538,4029,0.538,4030,0.538,4031,0.538,4032,0.538,4033,0.538,4034,0.538,4035,0.538,4036,0.538,4037,0.538,4038,0.538,4039,0.538,4040,0.538,4041,0.538,4042,0.538,4043,0.538,4044,0.538,4045,0.538,4046,0.538,4047,0.538,4048,0.538,4049,0.538,4050,0.538,4051,0.538,4052,0.538,4053,0.538,4054,0.538,4055,0.538,4056,0.538,4057,0.538,4058,0.538,4059,7.477,4060,0.538,4061,0.538,4062,0.538,4063,0.538,4064,0.538,4065,0.538,4066,0.538,4067,0.538,4068,0.538,4069,0.538,4070,0.538,4071,0.472,4072,1.444,4073,0.538,4074,0.538,4075,0.538,4076,0.472,4077,0.538,4078,0.538,4079,0.538,4080,0.538,4081,0.538,4082,0.538,4083,0.538,4084,0.538,4085,0.538,4086,0.538,4087,0.538,4088,0.538,4089,0.538,4090,0.538,4091,0.538,4092,0.538,4093,0.538,4094,0.891,4095,0.538,4096,0.538,4097,0.538,4098,0.538,4099,0.538,4100,0.538,4101,0.538,4102,0.538,4103,0.538,4104,1.017,4105,0.538,4106,0.538,4107,0.538,4108,0.538,4109,0.538,4110,0.538,4111,0.538,4112,0.538,4113,0.538,4114,0.538,4115,0.538,4116,0.538,4117,0.538,4118,0.538,4119,0.538,4120,0.538,4121,0.538,4122,0.538,4123,0.538,4124,0.538,4125,0.538,4126,0.538,4127,0.538,4128,0.538,4129,0.538,4130,0.538,4131,0.538,4132,0.538,4133,0.538,4134,0.538,4135,0.538,4136,0.538,4137,0.538,4138,0.538,4139,0.538,4140,0.538,4141,0.538,4142,0.538,4143,0.538,4144,0.538,4145,0.538,4146,0.538,4147,0.538,4148,0.538,4149,0.538,4150,0.538,4151,0.538,4152,0.538,4153,0.538,4154,0.538,4155,0.538,4156,0.538,4157,0.538,4158,0.538,4159,0.538,4160,0.538,4161,0.538,4162,0.538,4163,0.538,4164,0.538,4165,0.538,4166,0.538,4167,0.538,4168,0.538,4169,0.538,4170,0.538,4171,0.538,4172,0.538,4173,0.538,4174,0.538,4175,0.538,4176,0.538,4177,0.538,4178,0.538,4179,0.538,4180,0.538,4181,0.538,4182,0.538,4183,0.538,4184,0.538,4185,0.538,4186,0.538,4187,0.538,4188,0.538,4189,0.538,4190,0.538,4191,0.538,4192,0.538,4193,0.538,4194,0.538,4195,0.538,4196,0.538,4197,0.538,4198,0.538,4199,0.538,4200,0.538,4201,1.017,4202,0.538,4203,0.538,4204,0.538,4205,0.538,4206,0.538,4207,0.538,4208,0.538,4209,0.538,4210,0.538,4211,0.538,4212,0.538,4213,0.538,4214,0.538,4215,0.538,4216,0.538,4217,0.538,4218,0.538,4219,0.538,4220,0.538,4221,0.538,4222,0.538,4223,0.538,4224,0.538,4225,0.538,4226,0.538,4227,0.538,4228,0.538,4229,0.538,4230,0.538,4231,0.538,4232,0.538,4233,0.538,4234,0.538,4235,0.538,4236,1.017,4237,0.538,4238,0.538,4239,0.538,4240,0.538,4241,0.538,4242,1.017,4243,1.017,4244,1.017,4245,0.538,4246,0.538,4247,0.538,4248,0.538,4249,0.538,4250,0.538,4251,0.538,4252,1.017,4253,1.017,4254,0.538,4255,0.538,4256,0.538,4257,0.538,4258,0.538,4259,0.538,4260,0.538,4261,0.538,4262,0.538,4263,0.538,4264,0.538,4265,0.538,4266,0.538,4267,0.538,4268,0.538,4269,0.538,4270,0.538,4271,0.538,4272,0.538,4273,0.538,4274,0.538,4275,0.538,4276,0.538,4277,0.538,4278,0.538,4279,0.538,4280,0.538,4281,0.538,4282,0.538,4283,0.538,4284,0.538,4285,0.538,4286,0.538,4287,0.538,4288,0.538,4289,0.538,4290,0.538,4291,0.538,4292,0.538,4293,0.538,4294,0.538,4295,0.538,4296,0.538,4297,0.538,4298,0.538,4299,0.538,4300,0.538,4301,0.538,4302,0.538,4303,0.538,4304,0.538,4305,0.538,4306,0.538,4307,0.538,4308,0.538,4309,0.538,4310,0.538,4311,0.538,4312,0.538,4313,0.538,4314,0.538,4315,0.538,4316,0.538,4317,0.538,4318,0.538,4319,0.538,4320,0.538,4321,0.538,4322,0.538,4323,0.538,4324,0.538,4325,0.538,4326,0.538,4327,0.538,4328,0.538,4329,0.538,4330,0.538,4331,0.538,4332,0.538,4333,0.538,4334,0.538,4335,0.538,4336,0.538,4337,0.538,4338,0.538,4339,0.538,4340,0.538,4341,0.538,4342,0.538,4343,0.538,4344,0.538,4345,0.538,4346,0.538,4347,0.538,4348,0.538,4349,0.538,4350,0.538,4351,0.538,4352,1.017,4353,0.538,4354,1.017,4355,0.538,4356,1.017,4357,1.444,4358,0.538,4359,0.538,4360,1.017,4361,0.538,4362,1.017,4363,8.106,4364,0.538,4365,0.538,4366,1.017,4367,0.538,4368,0.538,4369,0.538,4370,1.017,4371,0.538,4372,1.017,4373,0.538,4374,1.017,4375,0.538,4376,1.017,4377,0.538,4378,1.017,4379,0.538,4380,0.538,4381,0.538,4382,0.538,4383,1.017,4384,0.538,4385,1.017,4386,0.538,4387,1.017,4388,0.538,4389,1.017,4390,0.538,4391,1.017,4392,0.538,4393,1.017,4394,0.538,4395,1.017,4396,0.538,4397,1.017,4398,0.538,4399,0.538,4400,1.017,4401,1.017,4402,0.538,4403,0.538,4404,1.017,4405,0.538,4406,1.017,4407,0.538,4408,1.017,4409,0.538,4410,1.017,4411,0.538,4412,0.538,4413,1.017,4414,0.538,4415,1.017,4416,0.538,4417,0.538,4418,1.017,4419,0.472,4420,0.538,4421,0.538,4422,1.017,4423,0.538,4424,1.017,4425,0.891,4426,0.538,4427,0.538,4428,1.017,4429,1.017,4430,0.538,4431,0.538,4432,1.017,4433,1.444,4434,1.828,4435,0.538,4436,0.538,4437,0.538,4438,1.017,4439,0.538,4440,1.017,4441,0.538,4442,0.538,4443,1.017,4444,0.538,4445,1.017,4446,0.538,4447,1.017,4448,0.538,4449,1.017,4450,0.538,4451,1.017,4452,0.538,4453,1.017,4454,0.538,4455,0.538,4456,1.017,4457,0.538,4458,1.017,4459,0.538,4460,1.017,4461,0.538,4462,1.017,4463,0.538,4464,1.017,4465,0.538,4466,1.017,4467,0.538,4468,1.017,4469,0.538,4470,1.017,4471,0.538,4472,0.538,4473,1.017,4474,0.538,4475,0.538,4476,0.538,4477,1.017,4478,0.538,4479,0.538,4480,0.538,4481,1.017,4482,0.538,4483,0.369,4484,0.538,4485,0.538,4486,0.538,4487,1.444,4488,0.538,4489,1.017,4490,0.538,4491,1.017,4492,1.017,4493,1.017,4494,1.828,4495,1.017,4496,0.538,4497,0.538,4498,0.538,4499,0.538,4500,0.538,4501,0.538,4502,0.538,4503,1.017,4504,1.017,4505,0.538,4506,0.538,4507,1.017,4508,0.538,4509,0.538,4510,1.017,4511,0.538,4512,1.017,4513,0.538,4514,1.017,4515,0.538,4516,1.017,4517,0.538,4518,1.017,4519,1.444,4520,0.538,4521,0.538,4522,0.538,4523,1.017,4524,0.538,4525,1.017,4526,0.538,4527,1.444,4528,0.538,4529,0.538,4530,0.538,4531,1.017,4532,0.538,4533,1.017,4534,0.538,4535,0.538,4536,0.538,4537,0.538,4538,0.538,4539,0.538,4540,0.538,4541,1.017,4542,0.538,4543,1.017,4544,0.538,4545,1.017,4546,0.538,4547,1.017,4548,0.538,4549,1.017,4550,0.538,4551,1.017,4552,0.538,4553,1.017,4554,0.538,4555,1.017,4556,0.538,4557,1.017,4558,0.538,4559,1.017,4560,0.538,4561,1.017,4562,0.538,4563,1.017,4564,0.538,4565,1.017,4566,0.538,4567,1.017,4568,0.538,4569,1.017,4570,0.538,4571,1.017,4572,0.538,4573,1.017,4574,0.538,4575,1.017,4576,0.538,4577,1.017,4578,0.538,4579,0.538,4580,0.538,4581,0.538,4582,1.017,4583,0.538,4584,0.538,4585,0.538,4586,0.538,4587,1.017,4588,1.828,4589,1.017,4590,0.538,4591,1.444,4592,0.538,4593,0.538,4594,0.538,4595,1.017,4596,0.538,4597,0.746,4598,0.538,4599,0.538,4600,0.538,4601,0.538,4602,1.017,4603,0.538,4604,0.538,4605,0.538,4606,1.017,4607,0.538,4608,1.017,4609,0.538,4610,1.017,4611,0.538,4612,1.017,4613,0.538,4614,1.017,4615,0.538,4616,1.017,4617,0.538,4618,1.017,4619,1.017,4620,0.538,4621,0.538,4622,1.017,4623,0.538,4624,0.538,4625,1.017,4626,0.538,4627,0.538,4628,1.017,4629,0.538,4630,0.538,4631,1.017,4632,0.538,4633,0.538,4634,0.538,4635,0.538,4636,0.538,4637,0.538,4638,0.538,4639,0.538,4640,0.538,4641,0.538,4642,0.538,4643,1.017,4644,0.538,4645,0.538,4646,1.017,4647,0.538,4648,0.538,4649,1.017,4650,0.538,4651,0.538,4652,1.017,4653,0.538,4654,0.538,4655,0.538,4656,1.017,4657,0.538,4658,0.538,4659,0.538,4660,1.017,4661,0.538,4662,1.017,4663,0.538,4664,0.538,4665,0.538,4666,0.538,4667,1.017,4668,0.538,4669,1.017,4670,0.538,4671,1.017,4672,0.538,4673,1.017,4674,0.538,4675,0.538,4676,0.538,4677,0.538,4678,0.538,4679,1.017,4680,0.538,4681,1.017,4682,0.538,4683,0.538,4684,1.017,4685,0.538,4686,1.017,4687,0.538,4688,0.538,4689,0.538,4690,0.538,4691,0.538,4692,0.538,4693,1.017,4694,0.538,4695,0.538,4696,0.538,4697,1.017,4698,0.538,4699,0.538,4700,0.538,4701,0.538,4702,0.538,4703,0.472,4704,0.538,4705,1.017,4706,0.538,4707,1.017,4708,0.538,4709,0.472,4710,0.538,4711,0.538,4712,0.538,4713,0.538,4714,1.017,4715,0.538,4716,1.017,4717,0.538,4718,1.017,4719,0.538,4720,0.538,4721,1.017,4722,0.538,4723,0.538,4724,1.017,4725,0.538,4726,0.538,4727,0.538,4728,1.017,4729,0.538,4730,1.017,4731,0.538,4732,1.017,4733,0.538,4734,1.017,4735,0.538,4736,1.017,4737,0.538,4738,1.017,4739,0.538,4740,1.017,4741,0.538,4742,1.017,4743,0.538,4744,1.017,4745,0.538,4746,1.017,4747,0.538,4748,1.017,4749,0.538,4750,0.538,4751,0.538,4752,0.538,4753,0.538]],["title/dependencies.html",[2444,3.555,2636,2.886]],["body/dependencies.html",[12,0.012,75,0.009,76,0.009,130,1.504,146,0.794,150,4.288,151,3.56,317,3.853,318,3.03,321,2.035,464,3.17,466,3.697,548,3.17,572,3.697,573,3.697,574,2.904,585,4.288,642,3.03,673,3.324,708,3.324,1071,3.929,1220,3.929,1340,5.024,1345,3.929,1348,5.024,1349,5.024,1913,5.024,1916,5.024,2044,5.024,2150,5.024,2151,5.024,2247,5.024,2444,3.929,2853,6.159,2862,7.471,2907,5.024,2958,5.024,3533,5.024,3827,5.024,4071,5.024,4076,5.024,4754,5.734,4755,5.734,4756,5.734,4757,5.734,4758,5.734,4759,7.029,4760,5.734,4761,5.734,4762,5.734,4763,5.734,4764,5.734,4765,5.734,4766,5.734,4767,5.734,4768,5.734]],["title/miscellaneous/enumerations.html",[4769,2.105,4770,4.546]],["body/miscellaneous/enumerations.html",[6,3.764,7,0.295,12,0.012,37,4.12,38,4,40,4,41,3.085,42,4,43,3.323,44,4,45,4.12,46,4,47,3.562,48,4,49,3.764,50,4,51,3.764,52,4,53,3.764,54,4,55,3.562,56,4,57,3.764,58,4,59,3.227,60,4,61,3.562,62,4,63,3.764,64,4,65,3.764,66,4,67,3.764,68,4,69,3.764,70,4.336,71,4,72,4,73,4,74,4,75,0.009,76,0.009,267,2.31,4769,3.385,4770,5.116,4771,6.227]],["title/miscellaneous/functions.html",[2752,4.123,4769,2.105]],["body/miscellaneous/functions.html",[5,0.234,7,0.213,10,1.419,11,0.546,12,0.011,19,1.08,21,1.073,22,2.208,75,0.008,76,0.008,111,3.702,117,2.133,121,2.133,151,3.319,178,1.655,249,1.817,253,2.499,254,1.559,267,1.509,469,1.361,529,4.225,534,2.691,563,2.326,579,2.914,602,2.481,802,3.942,803,3.51,804,2.885,811,5.169,816,2.715,883,4.297,948,2.569,1065,5.042,1067,3.69,1168,5.208,1274,2.885,1275,3.69,1276,3.347,1323,3.69,1356,3.69,1429,3.69,1483,3.69,1494,3.09,1502,3.69,1518,3.69,1579,4.573,1652,3.347,1680,3.69,1739,2.885,1857,3.69,1858,4.573,1859,3.347,2752,3.347,4769,2.441,4772,6.554,4773,7.05,4774,6.554,4775,6.554,4776,6.554,4777,6.554,4778,4.211,4779,5.754,4780,5.754,4781,4.211,4782,5.743,4783,3.69,4784,5.754,4785,4.211,4786,5.754,4787,5.743,4788,5.754,4789,5.754,4790,5.754,4791,5.754,4792,5.754,4793,4.211,4794,5.743,4795,5.754,4796,6.554,4797,5.754,4798,6.554,4799,6.554,4800,6.554,4801,5.754,4802,6.554,4803,5.754,4804,6.554,4805,5.754,4806,5.743,4807,5.754,4808,5.754,4809,5.743,4810,3.69,4811,3.69,4812,4.211,4813,4.211,4814,4.211,4815,4.211,4816,4.211,4817,4.211,4818,4.211,4819,5.754,4820,4.211,4821,3.69,4822,4.211,4823,4.211]],["title/index.html",[7,0.183,2553,2.489,2554,2.665]],["body/index.html",[5,0.201,12,0.011,59,3.087,75,0.009,76,0.009,130,2.059,151,2.828,181,2.168,209,2.114,323,4.738,329,4.458,386,2.951,387,4.098,436,3.6,535,3.6,548,3.087,552,2.34,553,1.92,554,1.982,611,3.237,642,2.951,650,2.611,671,4.219,692,4.438,858,4.438,911,3.826,1062,4.438,1096,4.098,1309,4.438,1342,4.893,1345,3.826,1366,4.438,1374,4.438,1375,5.496,1526,3.826,2140,5.074,2444,3.826,2537,4.438,2553,3.826,2562,3.6,2567,4.893,2640,6.582,2643,4.893,2648,4.893,2686,4.893,2696,4.893,2983,4.893,3266,6.059,3628,6.059,3750,4.893,4419,4.893,4709,4.893,4824,4.893,4825,6.059,4826,4.893,4827,5.584,4828,5.584,4829,5.584,4830,5.584,4831,5.584,4832,6.915,4833,6.915,4834,5.584,4835,5.584,4836,5.584,4837,5.584,4838,5.584,4839,5.584,4840,5.584,4841,5.584,4842,5.584,4843,5.584,4844,5.584,4845,5.584,4846,5.584,4847,5.584,4848,5.584,4849,5.584,4850,5.584,4851,5.584,4852,5.584]],["title/license.html",[2553,2.489,2554,2.665,4597,2.665]],["body/license.html",[10,0.894,12,0.006,29,3.456,61,1.792,75,0.006,76,0.006,141,0.574,175,1.575,223,3.041,262,1.703,320,3.257,350,1.893,374,2.012,496,2.573,503,2.573,553,1.01,566,1.428,585,1.792,590,1.792,618,0.949,634,1.796,653,2.012,683,2.861,939,4.386,954,2.155,1086,2.334,1096,2.155,1273,5.556,1295,2.012,1477,4.507,1511,5.609,1521,2.573,1679,2.573,1945,3.889,1984,5.224,2087,2.573,2105,2.573,2256,2.012,2501,2.573,2566,6.685,2571,2.573,2690,2.573,2742,2.334,2922,2.573,3158,2.573,3781,4.688,3849,2.334,4597,4.941,4703,3.889,4853,6.991,4854,7.198,4855,6.402,4856,6.991,4857,2.937,4858,2.937,4859,2.937,4860,7.198,4861,2.937,4862,4.438,4863,2.937,4864,2.937,4865,2.937,4866,2.937,4867,5.35,4868,2.937,4869,5.35,4870,5.35,4871,2.937,4872,5.962,4873,2.937,4874,5.35,4875,2.937,4876,2.937,4877,2.937,4878,2.937,4879,7.198,4880,2.937,4881,2.937,4882,4.438,4883,4.438,4884,2.937,4885,2.937,4886,4.438,4887,7.629,4888,8.291,4889,4.438,4890,4.438,4891,2.937,4892,2.937,4893,2.937,4894,4.438,4895,8.404,4896,2.937,4897,5.35,4898,4.438,4899,2.937,4900,4.438,4901,2.937,4902,4.438,4903,2.937,4904,5.35,4905,2.937,4906,4.438,4907,4.438,4908,5.962,4909,2.937,4910,2.937,4911,2.937,4912,5.962,4913,4.438,4914,2.937,4915,2.937,4916,4.438,4917,2.937,4918,2.937,4919,2.937,4920,2.937,4921,5.35,4922,6.402,4923,7.368,4924,6.402,4925,5.35,4926,2.937,4927,2.937,4928,2.937,4929,4.438,4930,2.937,4931,4.438,4932,2.937,4933,2.937,4934,2.937,4935,2.937,4936,2.937,4937,2.937,4938,2.937,4939,2.012,4940,2.937,4941,2.937,4942,4.438,4943,2.937,4944,7.629,4945,6.402,4946,2.937,4947,2.937,4948,4.438,4949,2.937,4950,4.438,4951,6.991,4952,2.937,4953,2.937,4954,2.937,4955,2.937,4956,2.937,4957,2.937,4958,2.937,4959,2.937,4960,2.937,4961,2.937,4962,2.937,4963,2.937,4964,2.937,4965,2.937,4966,5.962,4967,2.937,4968,2.937,4969,2.937,4970,2.937,4971,5.35,4972,2.937,4973,2.937,4974,2.937,4975,4.438,4976,2.937,4977,2.937,4978,5.35,4979,4.438,4980,2.937,4981,2.937,4982,2.937,4983,2.937,4984,4.438,4985,2.937,4986,2.937,4987,2.937,4988,2.937,4989,2.937,4990,6.402,4991,2.937,4992,2.937,4993,2.937,4994,2.937,4995,2.937,4996,2.937,4997,2.937,4998,2.937,4999,4.438,5000,2.937,5001,5.35,5002,2.937,5003,2.937,5004,2.937,5005,2.937,5006,2.937,5007,2.937,5008,2.937,5009,6.991,5010,5.35,5011,2.937,5012,6.991,5013,4.438,5014,4.438,5015,2.937,5016,5.35,5017,2.937,5018,4.438,5019,2.937,5020,2.937,5021,2.937,5022,2.937,5023,2.937,5024,6.733,5025,4.438,5026,5.35,5027,4.438,5028,2.937,5029,2.937,5030,6.402,5031,4.438,5032,4.438,5033,5.35,5034,4.438,5035,4.438,5036,4.438,5037,4.438,5038,2.937,5039,2.937,5040,2.937,5041,2.937,5042,2.937,5043,2.937,5044,5.962,5045,2.937,5046,2.937,5047,2.937,5048,2.937,5049,2.937,5050,2.937,5051,2.937,5052,2.937,5053,2.937,5054,5.962,5055,5.35,5056,2.937,5057,4.438,5058,5.35,5059,4.438,5060,4.438,5061,4.438,5062,2.937,5063,2.937,5064,2.937,5065,2.937,5066,4.438,5067,2.937,5068,5.962,5069,2.937,5070,2.937,5071,2.937,5072,2.937,5073,4.438,5074,2.937,5075,2.937,5076,2.937,5077,2.937,5078,2.937,5079,2.937,5080,2.937,5081,2.937,5082,2.937,5083,2.937,5084,4.438,5085,2.937,5086,2.937,5087,2.937,5088,2.937,5089,2.937,5090,2.937,5091,2.937,5092,2.937,5093,2.937,5094,4.438,5095,2.937,5096,2.937,5097,2.937,5098,2.937,5099,2.937,5100,2.937,5101,2.937,5102,2.937,5103,2.937,5104,2.937,5105,4.438,5106,2.937,5107,2.937,5108,2.937,5109,2.937,5110,2.937,5111,2.937,5112,2.937,5113,2.937,5114,4.438,5115,2.937,5116,2.937,5117,2.937,5118,2.937,5119,2.937,5120,2.937,5121,2.937,5122,2.937,5123,2.937,5124,2.937,5125,2.937,5126,2.937,5127,2.937]],["title/modules.html",[2754,4.655]],["body/modules.html",[12,0.01,75,0.01,76,0.01,2754,5.467]],["title/overview.html",[5128,5.133]],["body/overview.html",[2,1.433,12,0.01,41,3.349,45,3.888,75,0.01,76,0.01,125,2.168,157,0.839,175,2.38,218,2.624,466,4.324,871,5.33,2804,5.876,5128,5.876,5129,6.707]],["title/properties.html",[8,0.46,2636,2.886]],["body/properties.html",[8,0.586,12,0.011,75,0.01,76,0.01,329,4.261,936,4.261,1526,4.529,2256,4.529,3872,5.792,4597,4.85,4825,5.792,4826,5.792,5130,6.61,5131,6.61,5132,6.61,5133,6.61,5134,6.61,5135,6.61]],["title/todo.html",[363,2.008,2553,2.489,2554,2.665]],["body/todo.html",[5,0.189,12,0.01,18,2.549,75,0.01,76,0.01,329,4.201,642,3.444,650,3.047,1345,4.464,1415,5.178,1477,4.201,1811,4.781,2632,5.709,4094,5.709,4425,5.709,5136,6.516,5137,6.516,5138,6.516,5139,6.516,5140,6.516,5141,6.516,5142,5.709,5143,6.516,5144,6.516,5145,6.516,5146,6.516,5147,6.516,5148,6.516,5149,6.516]],["title/miscellaneous/typealiases.html",[4769,2.105,5150,5.188]],["body/miscellaneous/typealiases.html",[6,3.619,7,0.284,11,0.377,12,0.012,14,4.473,23,4.473,30,3.846,31,3.619,32,4.473,33,3.619,34,3.424,35,3.424,75,0.009,76,0.009,78,3.103,79,3.374,83,2.967,84,2.843,85,2.967,86,2.967,87,2.967,88,2.967,89,2.967,90,2.967,91,2.967,111,3.374,115,3.244,117,2.843,118,3.244,119,3.244,121,2.843,122,3.374,257,4.022,290,3.103,291,3.254,292,3.254,293,3.424,294,3.103,295,3.424,296,3.424,540,4.119,560,4.754,561,3.424,563,1.992,938,3.619,1129,3.619,1130,4.473,1134,3.424,1135,3.424,1137,4.473,4769,3.254,4771,6.598,5151,5.613,5152,7.53,5153,6.938,5154,5.613,5155,5.613,5156,5.613,5157,5.613,5158,5.613,5159,5.613]],["title/miscellaneous/variables.html",[4769,2.105,5160,4.546]],["body/miscellaneous/variables.html",[7,0.145,10,1.599,11,0.576,12,0.012,18,1.709,19,0.962,21,2.115,39,1.125,43,1.345,75,0.006,76,0.006,79,2.124,96,2.213,97,2.213,98,2.213,100,2.213,102,1.967,103,1.967,104,2.213,106,2.309,107,1.457,112,2.309,113,1.399,115,1.345,116,2.309,120,2.043,178,1.345,181,0.902,219,2.286,257,1.667,267,2.178,268,1.854,269,3.248,290,1.59,291,1.667,292,1.667,293,1.755,294,1.59,295,1.755,296,1.755,297,1.854,298,1.854,299,1.854,322,3.206,368,3.472,386,1.52,469,2.159,494,3.828,529,4.09,551,3.619,552,1.83,553,1.816,554,1.55,582,1.345,653,1.971,800,1.755,802,1.971,803,1.755,804,1.971,816,1.854,883,1.755,948,1.755,1175,2.993,1219,1.971,1242,5.558,1244,2.286,1274,1.971,1359,2.52,1367,3.828,1494,3.206,1526,2.993,1739,1.971,1938,2.286,1978,2.286,1985,3.472,2030,2.52,2153,4.688,2154,4.688,2256,1.971,2402,2.52,2421,3.828,2422,3.828,2493,3.828,2742,3.472,2759,2.52,3625,2.52,3849,5.516,4769,1.667,4773,7.324,4782,2.52,4783,3.828,4787,2.52,4794,2.52,4806,2.52,4809,2.52,4810,2.52,4811,4.628,4821,2.52,4824,2.52,5160,2.52,5161,4.369,5162,5.282,5163,4.369,5164,4.369,5165,4.369,5166,4.369,5167,4.369,5168,4.369,5169,4.369,5170,4.369,5171,5.899,5172,2.876,5173,2.876,5174,4.369,5175,5.282,5176,4.369,5177,2.876,5178,4.369,5179,4.369,5180,2.876,5181,4.369,5182,6.343,5183,4.369,5184,4.369,5185,5.282,5186,4.369,5187,4.369,5188,4.369,5189,4.369,5190,4.369,5191,4.369,5192,4.369,5193,4.369,5194,2.876,5195,4.369,5196,2.876,5197,2.876,5198,2.876,5199,2.876,5200,4.369,5201,2.876,5202,2.876,5203,2.876,5204,2.876,5205,2.876,5206,2.876,5207,2.876,5208,2.876,5209,2.876,5210,2.876,5211,2.876,5212,2.876,5213,2.876,5214,2.876,5215,2.876,5216,2.876,5217,2.876,5218,2.876,5219,2.876,5220,2.876,5221,2.876,5222,2.876,5223,2.876,5224,2.876,5225,2.876,5226,2.876,5227,2.876,5228,2.876,5229,2.876,5230,2.876,5231,2.876,5232,2.876,5233,2.876,5234,2.876,5235,2.876,5236,2.876,5237,6.343,5238,2.876,5239,2.876,5240,2.876,5241,2.876,5242,2.876,5243,2.876,5244,2.876,5245,2.876,5246,2.876,5247,2.876,5248,2.876,5249,4.369,5250,2.876,5251,4.369,5252,6.941,5253,4.369,5254,4.369,5255,2.876,5256,2.876,5257,2.876,5258,2.876,5259,2.876,5260,2.876,5261,2.876,5262,2.876,5263,2.876,5264,2.876,5265,2.876,5266,2.876,5267,2.876,5268,2.876,5269,2.876,5270,2.876,5271,2.876,5272,2.876,5273,2.876,5274,2.876,5275,2.876,5276,2.876,5277,6.679,5278,4.369,5279,2.876,5280,2.876,5281,5.899,5282,2.876,5283,2.876,5284,2.876,5285,2.876,5286,2.876,5287,2.876]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.064,125,0.716,186,0.838,719,1.517,1950,1.284,4483,1.517,4939,1.517]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.222,12,0.01,75,0.01,76,0.01,125,2.467,186,2.889,365,4.016,719,5.229,1950,4.424,2060,4.244,2562,4.244,2833,5.229,3458,4.51,3459,5.229,5288,4.83,5289,5.6,5290,4.83]],["title/additional-documentation/ui-components-slide-panel.html",[125,0.793,204,0.96,1950,1.423,2066,1.801,4483,1.681,4939,1.681]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,125,2.473,204,2.993,365,4.032,1950,4.435,2060,4.261,2066,5.614,2562,4.261,2833,5.242,3458,4.529,3459,5.242,5288,4.85,5289,5.614,5290,4.85]],["title/additional-documentation/ui-components-dialogs.html",[125,0.889,1950,1.595,4483,1.885,4939,1.885,5291,2.411]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,125,2.479,365,4.049,1950,4.446,2060,4.279,2562,4.279,2833,5.254,3458,4.548,3459,5.254,5288,4.87,5289,5.627,5290,4.87,5291,6.719]],["title/additional-documentation/helpers.html",[4483,2.489,4939,2.489,5292,3.182]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,365,3.983,2060,4.209,2562,4.209,2578,5.721,2833,5.504,2867,5.721,3223,7.039,3458,5.205,3459,5.205,5142,6.656,5288,5.574,5289,5.574,5290,5.574,5292,7.039]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":842,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.2",{"_index":1649,"title":{},"body":{"components/PlayerComponent.html":{}}}],["0.5",{"_index":311,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.7",{"_index":2359,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":2323,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0038838",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["00399df",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["006b52c",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["009b48d",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["00b47ed",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["00d5b5e",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["0129566",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["013e987",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["0174ddf",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["019de24",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["025a430",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["027ad79",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["02bde5d",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["02c06cb",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["02d4bfb",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["02e548c",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["0325a08",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["0338bd7",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["03a0491",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["045b043",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["0486e25",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["04b4812",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["04dca08",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["0581767",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["05a441e",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["05b4ddd",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["05ddceb",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["0629b20",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["063950a",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["063d395",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["0674adf",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["067bbea",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["072caca",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["07d6959",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["07de52a",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["07ec810",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["0843a41",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["0858a77",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["08b1238",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["0903cd2",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["092dc60",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["0960760",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["097fe6b",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["09ae300",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["09eba6b",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["0a9aedc",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["0b2a071",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["0b30a9f",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["0ba1f5d",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["0bde446",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["0c889a3",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["0c91659",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["0cabcad",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["0cec276",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["0d0dfcb",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["0d76c85",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["0dc096d",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["0e060af",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["0e6195d",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["0f45127",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["0f6c72b",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["0f8326e",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["0f8e394",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":4857,"title":{},"body":{"license.html":{}}}],["1.0.1",{"_index":4760,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":4754,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["1.2.4",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/PlayerComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["10.0.1",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["10.0.2",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["10.0.3",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["10.0.4",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["10.1",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["10.1.0",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["10.2.5",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["10.2.7",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["10.3.1",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["10.3.2",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1643,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":294,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["101bbd0",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["1024",{"_index":88,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["108",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["1081f8e",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["1098d6a",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["10_000",{"_index":477,"title":{},"body":{"pipes/BandPipe.html":{}}}],["10bf971",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.0.0",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["11.0.2",{"_index":4761,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["11.1.2",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["11.3.0",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["11.3.1",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["11.4.0",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["11.4.1",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["11.4.10",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["11.4.11",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["11.4.2",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["11.4.3",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["11.4.5",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["11.4.6",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["11.4.8",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["11.4.9",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["11.5.0",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["11.5.1",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["11.5.10",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["11.5.11",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["11.5.12",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["11.5.13",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["11.5.14",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["11.5.4",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["11.5.5",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["11.5.6",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["11.5.7",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["11.5.8",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["11.5.9",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["112db1a",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["11ae344",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.0",{"_index":3827,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["12.0.1",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["12.0.10",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["12.0.11",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["12.0.12",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["12.0.13",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["12.0.15",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["12.0.16",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["12.0.3",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["12.0.4",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["12.0.5",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["12.0.6",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["12.0.7",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["12.0.8",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["12.0.9",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["12000",{"_index":5157,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["120476b",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["120f02a",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["122856c",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["128",{"_index":85,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["128a3c3",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["12_000",{"_index":297,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["12a71dd",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["13.0.0",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["13.0.1",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["13.0.10",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["13.0.11",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["13.0.12",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["13.0.13",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["13.0.16",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["13.0.18",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["13.0.19",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["13.0.2",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["13.0.20",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["13.0.3",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["13.0.5",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["13.0.6",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["13.0.7",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["13.0.8",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["13.0.9",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["13.1.0",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["13.1.1",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["13.1.10",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["13.1.11",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["13.1.12",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["13.1.2",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["13.1.3",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["13.1.4",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["13.1.5",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["13.1.6",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["13.1.7",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["13.1.8",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["13.1.9",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["13.2",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["13.2.0",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["13.2.1",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["13.2.2",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["13.2.3",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["13.2.4",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["13.2.5",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["13.2.6",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["13.3.0",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["13.3.1",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["13.3.2",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["13.3.3",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["13.3.4",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["13.3.5",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["131",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["133059f",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["1333d05",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["135",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["1385586",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["139",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["13bf8e2",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["14.0.0",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["14.0.10",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["14.0.11",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["14.0.12",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["14.0.13",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["14.0.2",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["14.0.3",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["14.0.4",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["14.0.5",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["14.0.6",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["14.0.7",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["14.0.8",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["14.0.9",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["14.1.0",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["14.1.1",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["14.1.10",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["14.1.11",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["14.1.12",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["14.1.13",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["14.1.14",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["14.1.15",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["14.1.16",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["14.1.17",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["14.1.18",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["14.1.19",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["14.1.2",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["14.1.20",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["14.1.23",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["14.1.3",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["14.1.4",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["14.1.5",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["14.1.6",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["14.1.7",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["14.1.8",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["14.1.9",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["140",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["14000",{"_index":5158,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["141",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["14148e0",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["142",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["144",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["1455d32",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["146",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["147",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["14768e6",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["14_000",{"_index":298,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["14a5bd3",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["15.0.0",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["15.0.1",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["15.0.2",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["15.0.3",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["15.0.4",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["15.0.5",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["15.0.6",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["15.0.7",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["15.0.8",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["15.0.9",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["15.1.1",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["15.1.10",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["15.1.11",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["15.1.12",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["15.1.13",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["15.1.14",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["15.1.16",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["15.1.17",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["15.1.2",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["15.1.3",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["15.1.4",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["15.1.5",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["15.1.6",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["15.1.7",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["15.1.8",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["15.1.9",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":2216,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["155e1fd",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["15dded8",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":871,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"overview.html":{}}}],["16.0.1",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["16.0.2",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["16.0.3",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["16.0.4",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["16.0.5",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["16.0.6",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["16000",{"_index":5159,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1604161",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["162acda",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["16384",{"_index":5155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["164",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["166c79d",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["16925cf",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["16_000",{"_index":299,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":92,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["16d8b1b",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2804,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["17.0.10",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["17.0.11",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["17.0.12",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["17.0.13",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["17.0.14",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["17.0.15",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["17.0.16",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["17.0.17",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["17.0.18",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["17.0.2",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["17.0.3",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["17.0.4",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["17.0.5",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["17.0.6",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["17.0.7",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["17.0.8",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["17.0.9",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["170",{"_index":291,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["170ea47",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["171",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["172",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["17266a3",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["1730f16",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["1745489",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["17a1677",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["17e4083",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["17ed8a6",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["18.0.1",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["18.1.0",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["18.1.1",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["18.2.0",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["18.2.2",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["18.2.3",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["18.2.4",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["18.2.5",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["18.2.6",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["18.2.7",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["181",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["184a834",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["1857720",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["18a45bd",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["18cab80",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["19.0.1",{"_index":2958,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.0.10",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["19.0.2",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["19.0.3",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["19.0.4",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["19.0.5",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["19.0.6",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["19.0.7",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["19.0.8",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["19.0.9",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["19.1.0",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["19.1.1",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["19.2.0",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["19.2.1",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["19.2.10",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["19.2.2",{"_index":2862,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.3",{"_index":2853,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.4",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["19.2.5",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["19.2.7",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["19.2.8",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["19.2.9",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["19.2.x",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["19.3.0",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["19.3.3",{"_index":4762,"title":{},"body":{"dependencies.html":{}}}],["19.4.0",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["19.4.1",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["19.4.10",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["19.4.11",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["19.4.12",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["19.4.13",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["19.4.14",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["19.4.15",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["19.4.2",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["19.4.3",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["19.4.4",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["19.4.5",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["19.4.6",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["19.4.7",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["19.4.8",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["19.4.9",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["19.5.0",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["19.5.1",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["19.5.3",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["19.5.4",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["194199c",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["1989419",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["199",{"_index":789,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":4996,"title":{},"body":{"license.html":{}}}],["19bf065",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["1a30a33",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["1a33b93",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["1a65661",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["1a92061",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["1c4c67e",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["1c7fa4e",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["1c876b6",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["1c9fedf",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["1d0b823",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["1de2a3c",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["1e340e1",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["1e4fd87",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["1e660c9",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["1e96bc3",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["1ebb626",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["1ffd91e",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["2.8.1",{"_index":4768,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":799,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["20.0.0",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["20.1.0",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["20.1.1",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["20.1.2",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["20.1.3",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["20.1.4",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["20.2.1",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["20.2.2",{"_index":5130,"title":{},"body":{"properties.html":{}}}],["200",{"_index":2217,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["20050dc",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["20110c3",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["2011e46",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":89,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["206",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["20cf16a",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["20d1b8b",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["20rem",{"_index":2083,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["2119d47",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["220",{"_index":2374,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["220c7f4",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["221781e",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["223",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["228ee85",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["22afab3",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["22da5c7",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["22ec300",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["23061dd",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["2346f13",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["235",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["2389739",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2328,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["240",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["241",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["242",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["2427749",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["2434ec6",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["24e4c9a",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2191,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["250",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["2500235",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["250d7f9",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["251",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":798,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":86,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["26",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["261",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["2708806",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["272",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["275e54d",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["27acba5",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["27fdc57",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["28465d6",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["28548eb",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["286",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["287",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["287138c",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["288",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["289",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["289ec3d",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["28cff25",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["292ed5a",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["29878bc",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["29f1cbe",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["29f2b37",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["2a4184c",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["2a427ed",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["2a99961",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["2ab7cc1",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["2b942c4",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["2bb0e78",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["2bb5430",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["2bcfefb",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["2bdc500",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["2bfabd0",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["2c0f612",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["2ce3664",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["2d68f3b",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["2db5dc7",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["2e2cf66",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["2e5b003",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["2eb6cae",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["2f0d555",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["2f592f3",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["2f67e34",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.0.2",{"_index":4767,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":4766,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":4758,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4763,"title":{},"body":{"dependencies.html":{}}}],["3.9.17",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["3.9.19",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":2193,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["300",{"_index":840,"title":{},"body":{"injectables/GamepadService.html":{}}}],["3000",{"_index":295,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["301",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["305aec6",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["308b3e5",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["308bd9f",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["30_000",{"_index":1070,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["30fec73",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["30fps",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["310",{"_index":292,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["312",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["314f02a",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":83,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3233ed1",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["32570e0",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["32768",{"_index":5156,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":93,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["32c3f4d",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["32e3ad6",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["331bb8f",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["337a109",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["338",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["339af30",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["339bd87",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["339d07b",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["33bb6c8",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["33d73d9",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":2195,"title":{},"body":{"injectables/ThemeService.html":{}}}],["358",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["3597f8b",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["35a78e4",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["360px",{"_index":1005,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["362",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["362d9db",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["368",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":5129,"title":{},"body":{"overview.html":{}}}],["372",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["3773370",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["3797092",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["37f76dc",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["37fa04d",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["381",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["389407a",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["38d27f1",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["392b41d",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["395",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["397399b",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1140,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3a9067b",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["3acc7bf",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["3bccffb",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["3ccea4c",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["3ce805f",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["3d1f63c",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["3e58c71",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["3e7b9a4",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["3e8e5d0",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["3f2c562",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["3f449ec",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["3f668a5",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["3f73f6e",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["3fbfb97",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["3ff6d19",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":4986,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":4764,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":3533,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.1.1",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["4.4",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":2197,"title":{},"body":{"injectables/ThemeService.html":{}}}],["401",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["402",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["4035819",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["403737f",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["4040b59",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["4096",{"_index":90,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["40cc765",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["411",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["4164d59",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["418b524",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["419",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["41e632f",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["422fc8e",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["423",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["424242",{"_index":2421,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["42a58d9",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["42f56c1",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["431",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["431a9ad",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["43463ab",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["438",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["43a40a4",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["43d9b1f",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["440hz",{"_index":524,"title":{},"body":{"interfaces/Chainable.html":{}}}],["448",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["450",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["455",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["457",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["460",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["465",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["466",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["467",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["468",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["4695772",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["469a890",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["46c60ce",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["46e627b",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["473",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["4781958",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["47842e1",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["478c88a",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["47b6776",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["47e3527",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["483",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["49a76e8",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["49b1735",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["49d8293",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["4a42a18",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["4a4b1c4",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["4a66bde",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["4bdbceb",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["4c16c1e",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["4c272db",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["4c8c0ad",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["4c8f851",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["4d47689",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["4d9ca69",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["4dbf4b8",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["4df45ed",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["4e27dea",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["4e72fcd",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["4e9a327",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["4eac2a7",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["4ec2e90",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["4ef0700",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["4f1794f",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["4f70846",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["4f91524",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["4feefcd",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":786,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":589,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["5059439",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["505e77f",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["5061051",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["50b7005",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["50dbff9",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["5101ea6",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["511",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["51154fe",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":87,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":1800,"title":{},"body":{"injectables/PlayerService.html":{}}}],["51304c2",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["51a51dd",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["51e219a",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["521e049",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["522",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["5273759",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["529",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["52afb10",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["52bf10d",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["52d642b",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["5302fb4",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["532",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["5321e86",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["53749c8",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["53818e8",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["539",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["53a8631",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["540",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["540fdd8",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["5467c6f",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["549bfa1",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["55e56b8",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["55f3319",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["569161e",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["56a3899",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["572a9f8",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["5742e12",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["57f591d",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["580c58d",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["5824006",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["586ef29",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["58fb13b",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["592ac3b",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["592cb7a",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["597ee4f",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["59f1df2",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["59f4ac4",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["5a61397",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["5a7054c",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["5a92c07",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["5aecee8",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["5aed853",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["5af2ad7",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["5bab2a7",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["5c1346d",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["5cbeb5b",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["5cec62d",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["5e77b33",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["5ed4032",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["5f1d097",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["5fe0756",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["5ffbd62",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["5sec.mp3",{"_index":525,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["6.3.0",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["6.3.1",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["6.4.1",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["6.5.0",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["6.5.1",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["6.5.2",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["6.5.3",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["6.5.5",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["6.5.6",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["6.5.7",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["6.5.8",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["6.5.9",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["6.6.1",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["6.6.2",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["6.6.4",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["6.6.5",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["6.6.6",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["6.6.7",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["6.7.0",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["6.7.1",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["6.7.2",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["6.7.3",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["6.7.4",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":290,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":293,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["6000",{"_index":296,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600f7e6",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["60d5b05",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["60dbedc",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["61721ca",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["61eb69b",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["620afb8",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["62c64c5",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["62cfee7",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["62f7474",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["635e855",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["63600c3",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["63f69d0",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":84,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["646c494",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["64a34dc",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["64d30e1",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["654bac2",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["667c54e",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["667f875",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["669facb",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["670b3af",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["6756668",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["6782ecd",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["678aef6",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["67a17ee",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["681d4cd",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["6841a21",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["6878f22",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["68d9939",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["68e8dc6",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["6926167",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["6966d17",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["69ed6f4",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["6a6ec18",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["6a8d3be",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["6aed158",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["6b0ec83",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["6b2d8b8",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["6b5e613",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["6b9ff38",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["6bc0773",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["6bd60c5",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["6bf609d",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["6bfb6ba",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["6c219df",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["6c27523",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["6c63788",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["6c6f88c",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["6cab435",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["6cd086c",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["6cee32d",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["6d26668",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["6d2a8fe",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["6d52ad4",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["6d67484",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["6d6f310",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["6ee2324",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["6f12a37",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["6f1cdb4",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["6f6ac17",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["6fc1434",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["6fdfa5a",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":783,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["7.0.3",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["7.0.4",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["7.0.5",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["7.0.6",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["7.1.0",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["7.1.1",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["7.8.2",{"_index":4765,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2201,"title":{},"body":{"injectables/ThemeService.html":{}}}],["707a0cb",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["70990de",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["71bd586",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["71e1d6c",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":1982,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["72075fe",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["722901c",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["72575f6",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["726da93",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["72be3d3",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["72dafd7",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["72fa061",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":2351,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["73050ff",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["7362da7",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["73b9b59",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["73bd100",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["73ed2ca",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["7440340",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["7445539",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["7445cc4",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["7484f35",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["748a302",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["7493e98",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["74e7c83",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["7522583",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["7528cd4",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["752aa76",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["7553170",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["7560dfa",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["756dc90",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["7593825",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["75fc12c",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["764711a",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["76ace70",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["77091b9",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["774ffed",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["7762874",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["77707fb",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["7785053",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["77c544b",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["78fcf7a",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["79c83aa",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["79d861d",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["79fee74",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["7a1bbe5",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["7a66d5a",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["7a6f294",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["7a838a9",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["7a8645a",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["7b38580",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["7b491de",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["7b8cdeb",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["7bebf2d",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["7c00473",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["7c5bbe5",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["7ccbc95",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["7cf10f9",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["7d9d809",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["7def043",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["7defe9b",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["7e45969",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["7f1e3c1",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["7f8ad27",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["7f90220",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["7fb56e0",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["7fcd244",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["8.0.0",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["8.0.1",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["8.1.0",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["8.1.1",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["8.1.10",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["8.1.2",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["8.1.3",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["8.1.4",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["8.1.5",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["8.1.6",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["8.1.7",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["8.1.8",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["8.1.9",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["80",{"_index":2203,"title":{},"body":{"injectables/ThemeService.html":{}}}],["800",{"_index":5241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800fdae",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["801cd46",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["80553e8",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["80b42ce",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["80d5e14",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["8192",{"_index":91,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["81bb449",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["822ff08",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["8264f64",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["8268a8b",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["826cbe5",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["828148a",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["8337321",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["834f706",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["8377116",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["839a546",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["8448134",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["845189d",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["84a2466",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["84ac04c",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["84e91e3",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["8515368",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["858ff56",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["8596088",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["85d2a14",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["85eb0ba",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["8626722",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["864d7e1",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["866de3e",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["869dddb",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["86a18bb",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["86a63af",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["86bda79",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["86be7eb",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["870e50b",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["8738efc",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["87adc2c",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["892689d",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["8a371a0",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["8aabc76",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["8b184a4",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["8b6bfeb",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["8b9fdf5",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["8c297a1",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["8c47814",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["8c56320",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["8c75c5f",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["8c90a58",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["8c9c5c3",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["8cab1e2",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["8d072f1",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["8d3ed72",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["8d47dd4",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["8d5f783",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["8d61f2e",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["8da74bb",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["8df3910",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["8dfc611",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["8e2ff5a",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["8e36da3",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["8e7ecec",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["8ebff84",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["8ec046f",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["8ee0628",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["8f60273",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["9.0.0",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["9.0.1",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["9.0.10",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["9.0.11",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["9.0.2",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["9.0.3",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["9.0.4",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["9.0.5",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["9.0.6",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["9.0.7",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["9.0.8",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["9.0.9",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["9.1.1",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["9.1.2",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["9.1.3",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["9.2.3",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["9.2.4",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":2205,"title":{},"body":{"injectables/ThemeService.html":{}}}],["901f502",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["908f395",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["90df676",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["90e9f96",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["91d4a54",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["9280e3a",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["92d89c3",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["930dc28",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["934d323",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["939f6b8",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["9458a12",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["949055a",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["94b7001",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2207,"title":{},"body":{"injectables/ThemeService.html":{}}}],["953bf76",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["95902bb",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["96/9/ec",{"_index":4992,"title":{},"body":{"license.html":{}}}],["965f5d8",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["96bcdfc",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["96dbdf6",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["972b1ee",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["9767a1a",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["9767ad0",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["97ccbb6",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["97d68d0",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["98",{"_index":2209,"title":{},"body":{"injectables/ThemeService.html":{}}}],["986dd30",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["98a793b",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2211,"title":{},"body":{"injectables/ThemeService.html":{}}}],["9934470",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["998ad7c",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["9b0ad09",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["9b11a20",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["9c56a21",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["9ce5e31",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["9d2ef7e",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["9d81efd",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["9dfd762",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["9e95c2d",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["9eb089c",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["9fa1a37",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["9fb4192",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["_audiocontext",{"_index":333,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audioelement",{"_index":331,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audiosourcenode",{"_index":335,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_connectedanalyzers",{"_index":342,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_eqgainnode",{"_index":339,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_frequencyfilters",{"_index":340,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_gainnode",{"_index":337,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_hasended",{"_index":347,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_internalanalyzer",{"_index":2425,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":959,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a00ccd1",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["a04aa39",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["a0517fe",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["a0aa269",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["a0c15a4",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["a0e7ce7",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["a10893b",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["a11eb42",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["a12f9c3",{"_index":2933,"title":{},"body":{"changelog.html":{}}}],["a19a09f",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["a1a074f",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["a1da736",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["a280f97",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["a2a4811",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["a2b1db1",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["a358906",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["a3ae7df",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["a409033",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["a40c9e8",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["a457b9c",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["a4b6dab",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["a4de6d4",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["a552ea9",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["a555517",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["a5849e4",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["a6386d2",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["a7cf166",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["a7f82ab",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["a8073a9",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["a84cb97",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["a867afe",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["a8bb04b",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["a90639a",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["a948ad5",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["a9a8e68",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["a9a9c0b",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ab311db",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["ab5a0f8",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["ab89f63",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["ab98677",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["abandoned",{"_index":5091,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":5022,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2012,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["abc0b07",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["abccf03",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":5242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":5105,"title":{},"body":{"license.html":{}}}],["abstacted",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":806,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":914,"title":{},"body":{"injectables/GamepadService.html":{}}}],["ac02523",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["ac62dde",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["accent",{"_index":785,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":2158,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":2131,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accepts",{"_index":1510,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":2442,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["accessors",{"_index":245,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":5064,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":5108,"title":{},"body":{"license.html":{}}}],["achse",{"_index":878,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":5124,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"license.html":{}}}],["action(details",{"_index":1313,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["actions/cache",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["actions/checkout",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["actions/setup",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["actions/upload",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["activated",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["activatewakelock",{"_index":2538,"title":{},"body":{"injectables/WakelockService.html":{}}}],["activeaxescaches",{"_index":845,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad57b9c",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["ad6497d",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["ad7e0f1",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["ada5e83",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["ada6807",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["adapt",{"_index":4962,"title":{},"body":{"license.html":{}}}],["add",{"_index":408,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["added",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["addeventlistener('gamepadconnected",{"_index":850,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":853,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestoplaylist",{"_index":1686,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...files",{"_index":1695,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":5065,"title":{},"body":{"license.html":{}}}],["additional",{"_index":4939,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["adjust",{"_index":4835,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":5036,"title":{},"body":{"license.html":{}}}],["ae202ad",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["ae93b7a",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["aefd739",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["af0ef42",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["af2926f",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["af8a6b4",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["affected",{"_index":5066,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":4944,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":5024,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5081,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":1785,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":1783,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":717,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["again",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":4980,"title":{},"body":{"license.html":{}}}],["agents",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["aiff",{"_index":5200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":554,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["albums",{"_index":1202,"title":{},"body":{"components/LibraryComponent.html":{}}}],["aliases",{"_index":5151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":790,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allex/crc32",{"_index":1340,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["allowed_extensions",{"_index":5161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":1175,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":1506,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1188,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":1533,"title":{},"body":{"components/PlayerComponent.html":{}}}],["allowedcommonjsdeps",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["allowedtypes",{"_index":723,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":104,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["alpha.40",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["amended",{"_index":5002,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":255,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["analyser.disconnect",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["analyserconfig",{"_index":77,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":112,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":251,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analysers",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["analyservalue",{"_index":2470,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyze",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["analyzer",{"_index":2522,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["and/or",{"_index":4897,"title":{},"body":{"license.html":{}}}],["android",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["angular",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["angular.json",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":4755,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4071,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2040,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":1914,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":673,"title":{},"body":{"components/CoverDisplayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":570,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["angular/compiler",{"_index":4756,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":1744,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":1916,"title":{},"body":{"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4076,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1021,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1470,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2227,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2364,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":942,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":1917,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":1915,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/list",{"_index":1018,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":1588,"title":{},"body":{"components/PlayerComponent.html":{}}}],["angular/material/progress",{"_index":1911,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2365,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2042,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1466,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":705,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":1590,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":1589,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":2044,"title":{},"body":{"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2247,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angularmaterial",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["angulartitleservice",{"_index":2236,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2427,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["api",{"_index":1513,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["api_key",{"_index":1155,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":597,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["apis",{"_index":4827,"title":{},"body":{"index.html":{}}}],["app",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":124,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":5163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["applicable",{"_index":5009,"title":{},"body":{"license.html":{}}}],["application",{"_index":2104,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["applicationconfig",{"_index":5217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":5076,"title":{},"body":{"license.html":{}}}],["apply",{"_index":4948,"title":{},"body":{"license.html":{}}}],["apps",{"_index":4836,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":5164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":5185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":5194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":5177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../default",{"_index":5174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":5172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":5173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":4783,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":4788,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":4771,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":4795,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../lastfm",{"_index":5154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":4801,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":4778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":4780,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":4781,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":4791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":5182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":4793,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":5153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../settings.po.ts",{"_index":5180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":5176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":5152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":4773,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":4805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":5269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":490,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":492,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":5262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":5258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":5216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":5276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":219,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:136",{"_index":263,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:143",{"_index":252,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:151",{"_index":248,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:158",{"_index":273,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:164",{"_index":261,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:172",{"_index":260,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:178",{"_index":282,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:186",{"_index":278,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:191",{"_index":266,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:199",{"_index":258,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:203",{"_index":276,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:211",{"_index":281,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:219",{"_index":271,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":302,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":306,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":305,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":307,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":303,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":286,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":287,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":312,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:34",{"_index":284,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":309,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:37",{"_index":300,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:43",{"_index":314,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:45",{"_index":247,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:8",{"_index":710,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":482,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":467,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:10",{"_index":474,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":691,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14",{"_index":701,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":702,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18",{"_index":699,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":802,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":1197,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:15",{"_index":1217,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:16",{"_index":1216,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:17",{"_index":1218,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:30",{"_index":1215,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:39",{"_index":1212,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:45",{"_index":1210,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:51",{"_index":1214,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":563,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":1525,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:108",{"_index":1559,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:113",{"_index":1574,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:115",{"_index":1561,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:121",{"_index":1565,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:125",{"_index":1567,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:129",{"_index":1569,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:133",{"_index":1555,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:137",{"_index":1551,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:141",{"_index":1563,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:145",{"_index":1558,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:156",{"_index":1578,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:158",{"_index":1570,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:162",{"_index":1571,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:166",{"_index":1553,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:170",{"_index":1568,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:175",{"_index":1556,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:45",{"_index":1576,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:50",{"_index":1572,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:52",{"_index":1549,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":1680,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:109",{"_index":1697,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:114",{"_index":1696,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:146",{"_index":1714,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:152",{"_index":1731,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:156",{"_index":1729,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:164",{"_index":1711,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:168",{"_index":1701,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:180",{"_index":1699,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:196",{"_index":1715,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:205",{"_index":1698,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:226",{"_index":1702,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:244",{"_index":1708,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:262",{"_index":1709,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":1724,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:279",{"_index":1704,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:283",{"_index":1707,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":1734,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:297",{"_index":1716,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":1723,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:316",{"_index":1717,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:33",{"_index":1733,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":1736,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:36",{"_index":1721,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:41",{"_index":1694,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":540,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":1863,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:158",{"_index":1883,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:164",{"_index":1885,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:170",{"_index":1887,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:175",{"_index":1889,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:42",{"_index":1901,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:43",{"_index":1890,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:44",{"_index":1906,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:47",{"_index":1904,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:49",{"_index":1900,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:61",{"_index":1903,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:63",{"_index":1881,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2229,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:10",{"_index":2230,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2282,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2313,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2307,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2311,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2309,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2317,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2315,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2342,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2326,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2355,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2361,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2349,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2360,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2352,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2324,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2329,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2344,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2338,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2346,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2336,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2348,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2303,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2357,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2341,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2334,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2354,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2321,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2319,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2305,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2402,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105",{"_index":2410,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126",{"_index":2412,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2416,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2413,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188",{"_index":2408,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2417,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2414,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23",{"_index":2407,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33",{"_index":2406,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93",{"_index":2419,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2526,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2531,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2529,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":78,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":4810,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":4820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":817,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":836,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":829,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":833,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":826,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":837,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":824,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1012,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":4822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":934,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100",{"_index":1053,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104",{"_index":1054,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26",{"_index":1057,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30",{"_index":1060,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32",{"_index":1059,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34",{"_index":1058,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36",{"_index":1056,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38",{"_index":1050,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48",{"_index":1052,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85",{"_index":1055,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96",{"_index":1051,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1246,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1252,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1263,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1267,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1266,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1268,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1275,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2231,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2235,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2234,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":4823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2536,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2541,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2542,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2540,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1443,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2013,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2127,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2221,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2018,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:24",{"_index":2037,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:25",{"_index":2034,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:35",{"_index":2033,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:37",{"_index":2036,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:39",{"_index":2029,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":5257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":2130,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:20",{"_index":2148,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:22",{"_index":2149,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:23",{"_index":2143,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:25",{"_index":2137,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:31",{"_index":2142,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:37",{"_index":2139,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":536,"title":{},"body":{"interfaces/Color.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2240,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2242,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2244,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2243,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":5255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":5256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["april",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["arguments_",{"_index":473,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["arising",{"_index":4991,"title":{},"body":{"license.html":{}}}],["arrays",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["art",{"_index":1375,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["artifact",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["artist",{"_index":552,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist:${luceneescapequery.escape(artist",{"_index":614,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["artists",{"_index":1203,"title":{},"body":{"components/LibraryComponent.html":{}}}],["artwork",{"_index":1795,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2241,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":5083,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1354,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":5025,"title":{},"body":{"license.html":{}}}],["associating",{"_index":4943,"title":{},"body":{"license.html":{}}}],["async",{"_index":236,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["attorney",{"_index":4863,"title":{},"body":{"license.html":{}}}],["audio",{"_index":329,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["audio.service",{"_index":703,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":5209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":5203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":5211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":5204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":5206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":5212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":5208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":5207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":5210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/x",{"_index":5205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":334,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audiocontext.creategain",{"_index":375,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":373,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement",{"_index":351,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audioelement.autoplay",{"_index":357,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.controls",{"_index":358,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.id",{"_index":353,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.loop",{"_index":352,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.preload",{"_index":361,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.style.display",{"_index":355,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.volume",{"_index":359,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioservice",{"_index":217,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["audioservice.isplaying",{"_index":1673,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":372,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiosource.connect(eqgain",{"_index":381,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audit",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["auf",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":5134,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":4969,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":4896,"title":{},"body":{"license.html":{}}}],["auto",{"_index":362,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["autofix",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["autofixes",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["autoincrement",{"_index":5253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":4884,"title":{},"body":{"license.html":{}}}],["autoscroll",{"_index":1937,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":1086,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2508,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2499,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2509,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avatar",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1089,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["await",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":1976,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["axis.valueof",{"_index":921,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":926,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":925,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":818,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":924,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":927,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":827,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":5095,"title":{},"body":{"license.html":{}}}],["b04ce8b",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["b0d0fe4",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["b20fd36",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["b241b46",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["b286be9",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["b2b5088",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["b2dcbb8",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["b2ed530",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["b3905a0",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["b416bff",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["b4d909a",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["b599685",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["b5dfb18",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["b5f68a1",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["b65204b",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["b6729e6",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["b6bd950",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["b708169",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["b7303ed",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["b73ce66",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["b7bb801",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["b7be438",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["b7e8f76",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["b80e2ea",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["b820bf4",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["b8ad144",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["b925747",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["b9445d4",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["b99bf0c",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ba13cfe",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["ba2a28a",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["ba634aa",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["babdb9f",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":2498,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["background",{"_index":796,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["backgroundcolor",{"_index":660,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["badges",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["band",{"_index":323,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"index.html":{}}}],["band.pipe",{"_index":704,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bandfrequency",{"_index":259,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandgains[bandfrequency",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandpipe",{"_index":465,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{}}}],["bands",{"_index":696,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["barcount",{"_index":95,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["bark",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["barkscalebandenergy",{"_index":5165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":118,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2287,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":117,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":5166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":523,"title":{},"body":{"interfaces/Chainable.html":{}}}],["based",{"_index":5008,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":221,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["basesubscribingclass",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["basevisualizeroptions",{"_index":114,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":4868,"title":{},"body":{"license.html":{}}}],["bb34f11",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["bb4a1a8",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["bb4ded8",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["bb4e0ce",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["bb8466d",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["bba9cb0",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["bbda480",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["bc4e4dc",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["bcbcbc",{"_index":2422,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["bd0ddc3",{"_index":4279,"title":{},"body":{"changelog.html":{}}}],["bd67275",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["bda90a4",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["be025cd",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["be57fa9",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["be90110",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["bef3e3e",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":1968,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["below",{"_index":4889,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":5038,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":1766,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":896,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["better",{"_index":2492,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["bf7b3a9",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["bfd28ec",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["bfd4685",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["bffc736",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["bigger",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["biquadfilternode",{"_index":341,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bitrate",{"_index":484,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"changelog.html":{}}}],["bitrate.pipe",{"_index":674,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":481,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1413,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1370,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1394,"title":{},"body":{"injectables/MetadataService.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2100,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["bootstrap",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["border",{"_index":782,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["bottom",{"_index":1923,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":780,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["branch",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":1851,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2038,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2039,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2053,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2052,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2051,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2054,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browserlist",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["buffer",{"_index":2489,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["buffer.buffer",{"_index":2515,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":116,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2494,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2491,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2488,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bugs",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":2922,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["buildapiurl(method",{"_index":1149,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["builds",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":894,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["button.pressed",{"_index":907,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":909,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":819,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":912,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":917,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":830,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2007,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2069,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":5113,"title":{},"body":{"license.html":{}}}],["c.islight",{"_index":2220,"title":{},"body":{"injectables/ThemeService.html":{}}}],["c042ae8",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["c08196a",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["c0c9413",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["c0d5ae4",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["c20efb2",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["c2c0b8f",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["c3062ed",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["c31aaa6",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["c3208e7",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["c339811",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["c35bc38",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["c363f4e",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["c398655",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["c3d7490",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["c4668f1",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["c51af5f",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["c550911",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["c64cd79",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["c6dff5e",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["c73a2ce",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["c78b2bf",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["c82e02b",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["c86decf",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["c9dcf09",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["ca80a43",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["ca87d69",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["cace929",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":911,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":919,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":913,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":918,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cacheable",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["calculate",{"_index":1965,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["calculating",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":935,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{}}}],["called",{"_index":1272,"title":{},"body":{"injectables/LoaderService.html":{}}}],["cancel",{"_index":2002,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2518,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":5047,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":106,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvasgradient",{"_index":5214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":5167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvaswidth",{"_index":5168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2400,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":98,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":96,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":5169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":5260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":1679,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":5228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1118,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":609,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":5026,"title":{},"body":{"license.html":{}}}],["cb01a92",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["cb19d50",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["cb797bc",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["cbab637",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["cbc6e41",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["cbef1c8",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["cc0",{"_index":4856,"title":{},"body":{"license.html":{}}}],["ccbf388",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["cd2a934",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["cd5831f",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["cd620b6",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["cdb5380",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["cdf04e9",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":1868,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":1867,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":1866,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ce588f9",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["ce621ee",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["cea2824",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["cefa1f1",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":792,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":4899,"title":{},"body":{"license.html":{}}}],["cf00688",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["cf13446",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["chainable",{"_index":489,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":1941,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changed",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["changedarkmode",{"_index":2223,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2224,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changelog",{"_index":2555,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1936,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["check",{"_index":1509,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":904,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":843,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":526,"title":{},"body":{"interfaces/Chainable.html":{}}}],["child(${link",{"_index":5272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chore",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["chore(config",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["chromaprint",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":4831,"title":{},"body":{"index.html":{}}}],["ci",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":119,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":4912,"title":{},"body":{"license.html":{}}}],["class",{"_index":157,"title":{"classes/FileLoaderService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"overview.html":{}}}],["class.closed",{"_index":2080,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2081,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":801,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["clear",{"_index":1480,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":5115,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":932,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":884,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1449,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2128,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1101,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["cli",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":4864,"title":{},"body":{"license.html":{}}}],["close",{"_index":1028,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2070,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2279,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2072,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closing",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["clr",{"_index":2170,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.hex",{"_index":2174,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.name",{"_index":2173,"title":{},"body":{"injectables/ThemeService.html":{}}}],["code",{"_index":2105,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":535,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"index.html":{}}}],["color.getbrightness",{"_index":2219,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.tohexstring(false",{"_index":2218,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":539,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2478,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2476,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2477,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorful",{"_index":5131,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":2140,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["colors.ts",{"_index":5175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":2109,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["command",{"_index":514,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":501,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":497,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":4925,"title":{},"body":{"license.html":{}}}],["committen",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["commons",{"_index":4854,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":4964,"title":{},"body":{"license.html":{}}}],["compatibility",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["compensation",{"_index":4941,"title":{},"body":{"license.html":{}}}],["competition",{"_index":4982,"title":{},"body":{"license.html":{}}}],["complete",{"_index":1943,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["compodoc",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":123,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["component_template",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":125,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2248,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2000,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":713,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlayerComponent.html":{}}}],["components/slide",{"_index":2062,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":505,"title":{},"body":{"interfaces/Chainable.html":{}}}],["compressed",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["computecolors(hex",{"_index":2185,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computed",{"_index":315,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":5099,"title":{},"body":{"license.html":{}}}],["confer",{"_index":4885,"title":{},"body":{"license.html":{}}}],["config",{"_index":2277,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["config).afterclosed",{"_index":2281,"title":{},"body":{"injectables/UpdateService.html":{}}}],["configuration",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":380,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["connected",{"_index":862,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":855,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":5119,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":4940,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["console.error('worker",{"_index":1115,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":402,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["console.log('button",{"_index":873,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":1772,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":879,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":1498,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":877,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":890,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":886,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2259,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2255,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2267,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":881,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":860,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2437,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":863,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1818,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.time('hash",{"_index":1355,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('id3tags",{"_index":1377,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('vibrant",{"_index":1390,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('webcover",{"_index":1382,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1820,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.timeend('hash",{"_index":1357,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('id3tags",{"_index":1379,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('vibrant",{"_index":1392,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('webcover",{"_index":1385,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":893,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":901,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":610,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('loaderservice",{"_index":1271,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('missing",{"_index":1386,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('no",{"_index":637,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2550,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":969,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1308,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["constructor",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["contemplated",{"_index":5053,"title":{},"body":{"license.html":{}}}],["content",{"_index":794,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":368,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1809,"title":{},"body":{"injectables/PlayerService.html":{}}}],["contrary",{"_index":5085,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":5015,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":4926,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":4905,"title":{},"body":{"license.html":{}}}],["control",{"_index":2116,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["controls",{"_index":4839,"title":{},"body":{"index.html":{}}}],["converter",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["converttobarkscale",{"_index":4772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":5035,"title":{},"body":{"license.html":{}}}],["copy",{"_index":767,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":4887,"title":{},"body":{"license.html":{}}}],["core",{"_index":328,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["corporation",{"_index":4859,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2457,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["corresponding",{"_index":5007,"title":{},"body":{"license.html":{}}}],["council",{"_index":4995,"title":{},"body":{"license.html":{}}}],["count",{"_index":588,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["cover",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cover_api_url",{"_index":599,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverart",{"_index":1478,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["coverartimage",{"_index":562,"title":{"interfaces/CoverArtImage.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverartresponse",{"_index":592,"title":{"interfaces/CoverArtResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":661,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":639,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":544,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":559,"title":{},"body":{"interfaces/ColorConfig.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":1719,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":1720,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":627,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":629,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdisplay",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["coverdisplaycomponent",{"_index":180,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":628,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":633,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["covers",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["coverurl",{"_index":557,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1380,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.original",{"_index":1389,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc",{"_index":551,"title":{},"body":{"interfaces/ColorConfig.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["crc32",{"_index":1339,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc32(hashstring",{"_index":1425,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":350,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":876,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":872,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1406,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(file",{"_index":1817,"title":{},"body":{"injectables/PlayerService.html":{}}}],["creative",{"_index":4853,"title":{},"body":{"license.html":{}}}],["creator",{"_index":4891,"title":{},"body":{"license.html":{}}}],["crossing",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["css",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["cultural",{"_index":4906,"title":{},"body":{"license.html":{}}}],["culture",{"_index":4930,"title":{},"body":{"license.html":{}}}],["current",{"_index":1945,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["currentanalyser",{"_index":2453,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2447,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2451,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":807,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":1969,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2122,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":1681,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2445,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2449,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":1682,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["currentposition",{"_index":1838,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":222,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":675,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{}}}],["currenttrack.metadata?.crc",{"_index":1959,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":677,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":679,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":678,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":686,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":685,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":684,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":682,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":687,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":676,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":680,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["custom",{"_index":500,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":519,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":5264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":5274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":5267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":5268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":5265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":5275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":5259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":5263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":5271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":516,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":364,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":531,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":527,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":515,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":532,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":5122,"title":{},"body":{"license.html":{}}}],["d0b8d34",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["d0cd94f",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["d1b4f51",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["d200e57",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["d254989",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["d2765b8",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["d29b113",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["d2e1df8",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["d2f46f8",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["d3",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["d38c534",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["d3bca3a",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["d489b64",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["d4abfdc",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["d505863",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["d50fcd7",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["d516e97",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["d562368",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["d597302",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["d5cd7ea",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["d612735",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["d6210df",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["d629a20",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["d641392",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["d64a3c3",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["d690072",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["d78443f",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["d7b3ea2",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["d895f0f",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["d8a2bf9",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["d8bf0e7",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["d954540",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["d9677d0",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":4876,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2183,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{}}}],["dark)').matches",{"_index":2147,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":537,"title":{},"body":{"interfaces/Color.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":2132,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":645,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":644,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2274,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":784,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":618,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["data.album.image",{"_index":1160,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2011,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2010,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":620,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["database",{"_index":4898,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":5170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":4998,"title":{},"body":{"license.html":{}}}],["date",{"_index":585,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"license.html":{}}}],["dateien",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["dates",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["db",{"_index":708,"title":{},"body":{"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["db2122c",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["db48fe2",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["dbb788d",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["dbc354f",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["dbconfig",{"_index":5247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dc41223",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["dc45fe1",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["dc55360",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["dd93cb1",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["ddab2f3",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["de5bda9",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["december",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["declare",{"_index":511,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorator",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":2097,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":1537,"title":{},"body":{"components/PlayerComponent.html":{}}}],["decreasevolume(value",{"_index":1550,"title":{},"body":{"components/PlayerComponent.html":{}}}],["deemed",{"_index":5074,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":841,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":839,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":953,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["defects",{"_index":5107,"title":{},"body":{"license.html":{}}}],["defined",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1047,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":1948,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dep",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":2444,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["depicted",{"_index":4977,"title":{},"body":{"license.html":{}}}],["deploy",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":2759,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":820,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":825,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":821,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":828,"title":{},"body":{"injectables/GamepadService.html":{}}}],["description",{"_index":936,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"changelog.html":{},"properties.html":{}}}],["desktop",{"_index":4844,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":1748,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1126,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":1737,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["details",{"_index":1285,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":1847,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":1846,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":1942,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["determine",{"_index":1967,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":5040,"title":{},"body":{"license.html":{}}}],["dev",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["devcontainer.json",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":951,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":946,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1023,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1022,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1013,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2004,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2005,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1032,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1031,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1034,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2003,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1030,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2001,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":958,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1002,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1009,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":5291,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":1523,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":963,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dir",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":175,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":1512,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":1672,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["dirhandle",{"_index":4821,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dirhandle.values",{"_index":1503,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["disableclose",{"_index":2278,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabled",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["disabletooltipinteractivity",{"_index":5243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":5086,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":4874,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2520,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["disconnectallanalyzers",{"_index":232,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnectanalysernode",{"_index":233,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":250,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnected",{"_index":882,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":880,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":5111,"title":{},"body":{"license.html":{}}}],["display",{"_index":653,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":1592,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":657,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":659,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":652,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:18",{"_index":670,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:20",{"_index":668,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:22",{"_index":666,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":483,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":486,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":651,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayed",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["displayfunction",{"_index":697,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":698,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":984,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":5050,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":4988,"title":{},"body":{"license.html":{}}}],["distance",{"_index":1966,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":4950,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4862,"title":{},"body":{"license.html":{}}}],["document",{"_index":939,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":366,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["document.body.append(this.fileinput",{"_index":1190,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1182,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.setproperty",{"_index":2171,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2265,"title":{},"body":{"injectables/UpdateService.html":{}}}],["documented",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":109,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["dotenv",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["double",{"_index":1508,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["download",{"_index":1476,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2458,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drag",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["dragend",{"_index":759,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":746,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":751,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":743,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":728,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":756,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":745,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":754,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":744,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":2500,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":4774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":4775,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":4776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawosc",{"_index":4777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":186,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":727,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":747,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":530,"title":{},"body":{"interfaces/Chainable.html":{}}}],["dummy",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["duplicate",{"_index":1810,"title":{},"body":{"injectables/PlayerService.html":{}}}],["duplicates",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["duration",{"_index":223,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":1683,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2275,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":5126,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":4757,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":978,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2119,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":980,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":981,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e102482",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["e11e3bd",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["e218808",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["e252172",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["e2a0794",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["e2e1eb4",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["e336db1",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["e34b732",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["e36192c",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["e42b61f",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["e486f52",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["e4b565b",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["e4d8e7c",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["e4ec6c1",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["e5de213",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["e615145",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["e6660e2",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["e6d7fd2",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["e6fc6eb",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["e7032e1",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["e727ac0",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["e7aa58d",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["e7c9ada",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["e844d5d",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["e933c61",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["e96ef56",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["e992cb4",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["e99d4f2",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["ea1fc76",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["ea63800",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["ea688e0",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["ea932ef",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["eaa27a6",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["eab1d35",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["eac8dd6",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1984,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["eaeb47a",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["eaf46cf",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["eaf70a8",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["ebab8da",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["ec067ee",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["ec1f94a",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["eccaa4a",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["ecf45e6",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["ed57248",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["ee83304",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["ee8b31b",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["ef11066",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["ef22e4a",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["ef650c5",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["efc9aad",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["eff95d0",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1295,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":5075,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":4935,"title":{},"body":{"license.html":{}}}],["eine",{"_index":897,"title":{},"body":{"injectables/GamepadService.html":{}}}],["electron",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["elects",{"_index":4947,"title":{},"body":{"license.html":{}}}],["element",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":737,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":330,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["elementscrolled",{"_index":1926,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2430,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2433,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embedded",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["embeddedpicture",{"_index":558,"title":{},"body":{"interfaces/ColorConfig.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["empty",{"_index":1043,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":1920,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":1938,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1148,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1147,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":522,"title":{},"body":{"interfaces/Chainable.html":{}}}],["endings",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["enhance",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["enjoyment",{"_index":5052,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2505,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":1949,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":579,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(coverimage.image",{"_index":636,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails.large",{"_index":635,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails['500",{"_index":632,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(images[1]['#text",{"_index":1162,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(images[5]['#text",{"_index":1163,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(url",{"_index":4816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entfernt",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["entries",{"_index":1812,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["entries[0].contentrect",{"_index":2468,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":1488,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["entry.getfile",{"_index":1505,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.handle",{"_index":1493,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":1504,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":4770,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":5171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":5223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":385,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["eqgain",{"_index":376,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.connect(eqinput",{"_index":382,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.gain.value",{"_index":392,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqinput",{"_index":377,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput",{"_index":378,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput.connect(gain",{"_index":383,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equalizer",{"_index":692,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":694,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":695,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":183,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":224,"title":{"interfaces/EqualizerGainValues.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equitable",{"_index":5049,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":5006,"title":{},"body":{"license.html":{}}}],["error",{"_index":401,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{}}}],["error('metadata",{"_index":1085,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1125,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1111,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1120,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2551,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1114,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":5110,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1409,"title":{},"body":{"injectables/MetadataService.html":{}}}],["erweitert",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["es",{"_index":1044,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"changelog.html":{}}}],["esbuild",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["escape",{"_index":573,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["eslint",{"_index":2578,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["eslint/utils",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["eslintrc",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["establish",{"_index":2443,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["european",{"_index":4993,"title":{},"body":{"license.html":{}}}],["event",{"_index":409,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.currentversion.hash",{"_index":2260,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1107,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2495,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2496,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":766,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":765,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2269,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":861,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2262,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":763,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.stoppropagation",{"_index":764,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2253,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2257,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventcoalescing",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["eventmanager",{"_index":943,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":496,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":506,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusions",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["exclusive",{"_index":4886,"title":{},"body":{"license.html":{}}}],["execute",{"_index":5290,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["executor",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["exercise",{"_index":5073,"title":{},"body":{"license.html":{}}}],["existing",{"_index":503,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["exists",{"_index":2523,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["exit",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["expect",{"_index":1231,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["expectation",{"_index":4938,"title":{},"body":{"license.html":{}}}],["expected",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":5137,"title":{},"body":{"todo.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":5054,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2118,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":4703,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["extent",{"_index":4945,"title":{},"body":{"license.html":{}}}],["extractcolorswithnodevibrant",{"_index":4779,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.original",{"_index":1391,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1396,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1429,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1159,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extraction",{"_index":1096,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":4834,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1065,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1067,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["f038069",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["f0442a7",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["f06b116",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["f076ced",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["f0ae911",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["f0f7618",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["f12cad8",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["f154aed",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["f1580e8",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["f18fa1f",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["f1b02b7",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["f1cad4d",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["f1f709b",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["f201082",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["f209ddb",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["f24dcc7",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["f278040",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["f2cfbcc",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["f306ca1",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["f31886e",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["f3351c2",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["f34b7cf",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["f36895a",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["f386a36",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["f3a09c7",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["f3a3520",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["f3f4ae7",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["f401a49",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["f4324a4",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["f4928f5",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["f4f50ef",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["f52095f",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["f54702d",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["f591692",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["f5c6154",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["f5ee0e6",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["f69d368",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["f78467f",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["f7913c1",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["f8b7451",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["f8cbc65",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["f908dd2",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["f954f07",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["f9c114e",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["f9c93ce",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["fallback",{"_index":5056,"title":{},"body":{"license.html":{}}}],["fallback_accent_color",{"_index":2153,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":2154,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2401,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":269,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":1975,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":265,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{}}}],["fb05c12",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["fc633d2",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["fc998b4",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["fd18536",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["fd45c70",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["fdad632",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["fe15d24",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["fe4ebfa",{"_index":2929,"title":{},"body":{"changelog.html":{}}}],["fear",{"_index":4910,"title":{},"body":{"license.html":{}}}],["feat",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":4828,"title":{},"body":{"index.html":{}}}],["february",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["fee270f",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["fee5161",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["fefaba0",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["fetchalbuminfo(artist",{"_index":1145,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":624,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ff778a5",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["ff7cdad",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["ffa9bb5",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["ffc8723",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["ffe5da9",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["ffnet",{"_index":962,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2397,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2288,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":79,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1918,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.arraybuffer",{"_index":1428,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.lastmodified",{"_index":1424,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.name",{"_index":1421,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.size",{"_index":1423,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.type",{"_index":1422,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":185,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":1777,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filehandle.getfile",{"_index":1779,"title":{},"body":{"injectables/PlayerService.html":{}}}],["fileinput",{"_index":1178,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":775,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":800,"title":{"classes/FileLoaderService.html":{}},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice:11",{"_index":1174,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:13",{"_index":1487,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:15",{"_index":1484,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:25",{"_index":1486,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:27",{"_index":1171,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:29",{"_index":1172,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:35",{"_index":1485,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:46",{"_index":1173,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservicefactory",{"_index":4782,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filepath",{"_index":520,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":517,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["files.push(...subfiles",{"_index":1517,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["files.push(file",{"_index":1514,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["files.values",{"_index":1807,"title":{},"body":{"injectables/PlayerService.html":{}}}],["files?.length",{"_index":1806,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filesdroped",{"_index":724,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesystemdirectoryhandle",{"_index":811,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["fill",{"_index":2510,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":388,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["filter((song",{"_index":1895,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["filter.gain.value",{"_index":390,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["filteredplaylist",{"_index":1874,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["filteredplaylist().length",{"_index":1992,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["filtering",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":1255,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["findreleasegroupid(artist",{"_index":612,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":2497,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":889,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebase",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["firebuttonaction(index",{"_index":885,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":4861,"title":{},"body":{"license.html":{}}}],["first",{"_index":583,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["firstvaluefrom",{"_index":575,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2280,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":619,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('dirhandle",{"_index":1489,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('metatags",{"_index":1360,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":5103,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["fix(deps",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["fix(eslint",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":779,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["flac",{"_index":5197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flat",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":778,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["float32array",{"_index":4811,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2117,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["fns",{"_index":4759,"title":{},"body":{"dependencies.html":{}}}],["folders",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":4960,"title":{},"body":{"license.html":{}}}],["font",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":4920,"title":{},"body":{"license.html":{}}}],["format",{"_index":556,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formating",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["formatlabel",{"_index":1538,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formatlabel(value",{"_index":1552,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formats",{"_index":4830,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":1579,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":1652,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":1871,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["found",{"_index":638,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":4929,"title":{},"body":{"license.html":{}}}],["freely",{"_index":4918,"title":{},"body":{"license.html":{}}}],["frequency",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["frequency_bands",{"_index":322,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["frequencyband",{"_index":257,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["frequencybarsconfig",{"_index":94,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":5178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":565,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["full",{"_index":5280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":5148,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":5018,"title":{},"body":{"license.html":{}}}],["function",{"_index":938,"title":{},"body":{"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":2752,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["funkt",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["further",{"_index":4931,"title":{},"body":{"license.html":{}}}],["future",{"_index":5030,"title":{},"body":{"license.html":{}}}],["für",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["gain",{"_index":374,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":384,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gain.gain.value",{"_index":394,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainnode",{"_index":338,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainvalue",{"_index":275,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gamepad",{"_index":858,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":905,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":838,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":1618,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":1628,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":1619,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":851,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":856,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":859,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":816,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":4787,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":97,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gax",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["gblaster",{"_index":4824,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1412,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":2562,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":4789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1356,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehashmd5(file",{"_index":1426,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator.bitdroid.de/#section",{"_index":4849,"title":{},"body":{"index.html":{}}}],["generierte",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["getanalysernode",{"_index":2418,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getaudiofilesfromdirhandle",{"_index":4790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":1502,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":1516,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":1501,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2486,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2487,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":5179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcolorobject(value",{"_index":2213,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getcoverdisplay",{"_index":5181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1164,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":601,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1192,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":234,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":256,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gethasended",{"_index":313,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1033,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":494,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":518,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1328,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(file",{"_index":1329,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":5183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":4792,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":1835,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":1857,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":5184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":5186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2553,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettoolbartitle",{"_index":5187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":5188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":1646,"title":{},"body":{"components/PlayerComponent.html":{}}}],["getvolumeslider",{"_index":5189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gh",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2456,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":1768,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":1770,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":2145,"title":{},"body":{"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":865,"title":{},"body":{"injectables/GamepadService.html":{}}}],["google",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["gp",{"_index":867,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":866,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":868,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":5190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":1524,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":1490,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":1521,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["greater",{"_index":4933,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5013,"title":{},"body":{"license.html":{}}}],["group/${releasegroupid",{"_index":626,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["group?query=${query}&limit=5&fmt=json",{"_index":617,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":587,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":621,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":622,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["grpc/grpc",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["hack",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":1494,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.requestpermission",{"_index":1522,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":774,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1113,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlemessage",{"_index":1105,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":977,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["handling",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["hanging",{"_index":1090,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1006,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":246,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["hashing",{"_index":1418,"title":{},"body":{"injectables/MetadataService.html":{}}}],["hashstring",{"_index":1420,"title":{},"body":{"injectables/MetadataService.html":{}}}],["height",{"_index":1983,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":5041,"title":{},"body":{"license.html":{}}}],["held",{"_index":5089,"title":{},"body":{"license.html":{}}}],["help",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":5292,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":957,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":509,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":5016,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":4873,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":4878,"title":{},"body":{"license.html":{}}}],["hex",{"_index":538,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":771,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1185,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1264,"title":{},"body":{"injectables/LoaderService.html":{}}}],["hilfe",{"_index":964,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["history",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["hk",{"_index":995,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":997,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hooks",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["hopefully",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":776,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2101,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2115,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2098,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2099,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2111,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2114,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2112,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2113,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2079,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":739,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hosting",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["hotkey",{"_index":933,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1036,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1039,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1042,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":947,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1026,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1016,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1011,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":188,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":948,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":4794,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["htmlaudioelement",{"_index":332,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["htmlcanvaselement",{"_index":2426,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlinputelement",{"_index":1179,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":595,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["http_interceptors",{"_index":5244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":569,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["httpevent",{"_index":1253,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1251,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1254,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1249,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":4848,"title":{},"body":{"index.html":{}}}],["https://coverartarchive.org",{"_index":600,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://github.com/motabass/gblaster",{"_index":5133,"title":{},"body":{"properties.html":{}}}],["https://musicbrainz.org/ws/2",{"_index":598,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://on.cypress.io/custom",{"_index":510,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":4850,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/20917710/fast",{"_index":1419,"title":{},"body":{"injectables/MetadataService.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1141,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["husky",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":3266,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["iconregistry",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3628,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["id",{"_index":582,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":577,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3coverpicture",{"_index":541,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":576,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3tagsservice",{"_index":1063,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":4928,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":547,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ignore",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["ignores",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["ii",{"_index":4966,"title":{},"body":{"license.html":{}}}],["iii",{"_index":4971,"title":{},"body":{"license.html":{}}}],["image",{"_index":566,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"license.html":{}}}],["image.front",{"_index":630,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images",{"_index":593,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images[5]?.['#text",{"_index":1161,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["iml",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":1641,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["implementation",{"_index":5000,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":5011,"title":{},"body":{"license.html":{}}}],["implements",{"_index":476,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":5100,"title":{},"body":{"license.html":{}}}],["import",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":5284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":5286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":5282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":5287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1078,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["imports",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["improve",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3158,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["including",{"_index":4923,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":4915,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":1539,"title":{},"body":{"components/PlayerComponent.html":{}}}],["increasevolume(value",{"_index":1554,"title":{},"body":{"components/PlayerComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":709,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["indexed",{"_index":1220,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":4419,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["indexeddbservice",{"_index":1221,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["ineffective",{"_index":5061,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":5078,"title":{},"body":{"license.html":{}}}],["inferred",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":4867,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4913,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":1170,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["init",{"_index":808,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["initbarkscale",{"_index":4796,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":367,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["initializetheme",{"_index":2134,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2032,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["inject(audioservice",{"_index":700,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2047,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":1749,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":950,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":740,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":949,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":1597,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["inject(gamepadservice",{"_index":1595,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":1596,"title":{},"body":{"components/PlayerComponent.html":{}}}],["inject(httpclient",{"_index":596,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["inject(id3tagsservice",{"_index":1350,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1351,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(loaderservice",{"_index":1259,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":327,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1025,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":952,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":1747,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":2156,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":1464,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["inject(musicbrainzservice",{"_index":1352,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":1222,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(ngzone",{"_index":2424,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject(playerservice",{"_index":1575,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":742,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":2048,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2249,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2237,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":1594,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":1905,"title":{},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":1746,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2431,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1024,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":216,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":218,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":671,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('bars",{"_index":2415,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["input.required",{"_index":669,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2074,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["inset",{"_index":787,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2268,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":4846,"title":{},"body":{"index.html":{}}}],["instant",{"_index":1974,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["instead",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["integriert",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["intended",{"_index":4955,"title":{},"body":{"license.html":{}}}],["intending",{"_index":5043,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1247,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1248,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1243,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1245,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["intergrated",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["internal",{"_index":2521,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":1745,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":930,"title":{},"body":{"injectables/GamepadService.html":{}}}],["invalid",{"_index":5060,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":5079,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":5077,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":5071,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":5019,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":1878,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":1882,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":1919,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":920,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":4797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":4812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":4798,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2024,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":4799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":225,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":226,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ismediasessionsupported",{"_index":4800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions",{"_index":4803,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":4813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":227,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["isplaying",{"_index":228,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":1884,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isplaylistempty",{"_index":1534,"title":{},"body":{"components/PlayerComponent.html":{}}}],["isstopped",{"_index":229,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ist",{"_index":970,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":4804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":1978,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["item__content",{"_index":5273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":791,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":1981,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":4978,"title":{},"body":{"license.html":{}}}],["january",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["jb",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":2867,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["js",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1157,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["judged",{"_index":5058,"title":{},"body":{"license.html":{}}}],["july",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["jurisdictions",{"_index":4881,"title":{},"body":{"license.html":{}}}],["justify",{"_index":793,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["k",{"_index":479,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kb/s",{"_index":488,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["keine",{"_index":1046,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":4837,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":979,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":975,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":5252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":937,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{}}}],["keys.replaceall",{"_index":994,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":5098,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4953,"title":{},"body":{"license.html":{}}}],["known",{"_index":5028,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1410,"title":{},"body":{"injectables/MetadataService.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":590,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["last",{"_index":1671,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["last.fm",{"_index":1144,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1342,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1139,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1128,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1135,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1131,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1138,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1137,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1134,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2503,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["late",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["latencyhint",{"_index":369,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["latent",{"_index":5106,"title":{},"body":{"license.html":{}}}],["later",{"_index":4911,"title":{},"body":{"license.html":{}}}],["latest",{"_index":2567,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["launch",{"_index":1773,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":1771,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":1778,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":1776,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":1767,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":4860,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4880,"title":{},"body":{"license.html":{}}}],["layout",{"_index":2983,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["lazy",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["leadingminutezero",{"_index":4819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":725,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":730,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2086,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1166,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":4855,"title":{},"body":{"license.html":{}}}],["legally",{"_index":5059,"title":{},"body":{"license.html":{}}}],["legend",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":4875,"title":{},"body":{"license.html":{}}}],["lib",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":2060,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":1200,"title":{},"body":{"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":1201,"title":{},"body":{"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":192,"title":{"components/LibraryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libs",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["libs/.../helpers",{"_index":4785,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/helpers",{"_index":4818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":712,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":4597,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["license.md",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["licensed",{"_index":5093,"title":{},"body":{"license.html":{}}}],["light",{"_index":2184,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":647,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":2215,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":646,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":4976,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4924,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":4984,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4959,"title":{},"body":{"license.html":{}}}],["linethickness",{"_index":2289,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":5270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3223,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["linting",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":1985,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":410,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lite",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":568,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/Id3Tags.html":{}}}],["load",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["loadcomponent",{"_index":5281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["loadedtrack",{"_index":1831,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":803,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":1176,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loader.helpers.ts",{"_index":5162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1258,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":1177,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loader.service.abstract.ts",{"_index":805,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:2",{"_index":812,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:3",{"_index":814,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:4",{"_index":815,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":813,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":4784,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":1168,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:13",{"_index":1169,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1244,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1257,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2061,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":491,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["loadingcounter",{"_index":1269,"title":{},"body":{"injectables/LoaderService.html":{}}}],["local",{"_index":1366,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localization",{"_index":5149,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":387,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":316,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["lock.json",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["locking",{"_index":4840,"title":{},"body":{"index.html":{}}}],["logic",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["lookup",{"_index":1387,"title":{},"body":{"injectables/MetadataService.html":{}}}],["loop",{"_index":279,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lucene",{"_index":572,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":571,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["made",{"_index":4956,"title":{},"body":{"license.html":{}}}],["main",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["main_audio",{"_index":354,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["maincolor",{"_index":102,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["make",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":4869,"title":{},"body":{"license.html":{}}}],["management",{"_index":5139,"title":{},"body":{"todo.html":{}}}],["manifest.json",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":956,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2055,"title":{},"body":{"components/ShellComponent.html":{}}}],["mapping",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["march",{"_index":2571,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["maskable",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["mat",{"_index":5266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1014,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":5238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1020,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1446,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2225,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2222,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":940,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2245,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1015,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":941,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":2640,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["matformfieldmodule",{"_index":1869,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":1971,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":1860,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":1970,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(math.random",{"_index":1862,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":1861,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":1728,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.max(0",{"_index":1987,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":1730,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.round(value",{"_index":487,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["maticonmodule",{"_index":1019,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":1870,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["matlistmodule",{"_index":1017,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenumodule",{"_index":1529,"title":{},"body":{"components/PlayerComponent.html":{}}}],["matoptionmodule",{"_index":2284,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprogressspinnermodule",{"_index":1864,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2283,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2041,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2020,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslidermodule",{"_index":693,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matslidetogglechange",{"_index":1456,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1447,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["mattoolbarmodule",{"_index":1527,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltipmodule",{"_index":1528,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":1858,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":80,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":5033,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1349,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["mdc",{"_index":3625,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":4954,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":1931,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["meatadata",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1309,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":336,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["mediametadata(metadata",{"_index":1318,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1289,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasession",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["mediasessionaction",{"_index":1284,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1286,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1320,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1274,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":4806,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":5034,"title":{},"body":{"license.html":{}}}],["member",{"_index":5039,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5102,"title":{},"body":{"license.html":{}}}],["merged",{"_index":972,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["merged.description",{"_index":990,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":991,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1136,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1106,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":1415,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl",{"_index":1408,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1407,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1414,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1404,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":580,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1343,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1130,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1165,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":578,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1359,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["metadatacache.coverurl",{"_index":1363,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1361,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1371,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":1322,"title":{"injectables/MetadataService.html":{}},"body":{"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["metadatasettingscomponent",{"_index":193,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["metatags",{"_index":5250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meter",{"_index":4841,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":5191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1154,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["methods",{"_index":231,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":5144,"title":{},"body":{"todo.html":{}}}],["migrate",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["migrated",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["migrating",{"_index":2110,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2103,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["min",{"_index":1859,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2290,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["mindecibels",{"_index":81,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["miscellaneous",{"_index":4769,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":3872,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["mobile",{"_index":3750,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mobx",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":1907,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["modes",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4914,"title":{},"body":{"license.html":{}}}],["module",{"_index":1079,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["modules",{"_index":2754,"title":{"modules.html":{}},"body":{"changelog.html":{},"modules.html":{}}}],["monochrome",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["monochrome.svg",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["monorepo",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["moral",{"_index":4967,"title":{},"body":{"license.html":{}}}],["more",{"_index":504,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["motabass",{"_index":5135,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":1580,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":1587,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":4937,"title":{},"body":{"license.html":{}}}],["moved",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["mp3",{"_index":5196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mp4",{"_index":5202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mtb",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":5246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":548,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":611,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1344,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzreleasegroup",{"_index":581,"title":{"interfaces/MusicbrainzReleaseGroup.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzresponse",{"_index":586,"title":{"interfaces/MusicbrainzResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":594,"title":{"injectables/MusicbrainzService.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":643,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Color.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":512,"title":{},"body":{"interfaces/Chainable.html":{}}}],["narrowing",{"_index":2121,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":4999,"title":{},"body":{"license.html":{}}}],["native",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["nativebrowserfileloaderservice",{"_index":1482,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigateto",{"_index":2026,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2027,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigation",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["navigator.getgamepads",{"_index":857,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1317,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1321,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1312,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1307,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1316,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1315,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2547,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2548,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":681,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nearby",{"_index":1973,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["nearly",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":5118,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":4958,"title":{},"body":{"license.html":{}}}],["neu",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":343,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["newsize",{"_index":108,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["next",{"_index":1250,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1261,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1072,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2532,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ng",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["ng11",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["ng15",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["ngafterviewinit",{"_index":748,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngarraypipesmodule",{"_index":1199,"title":{},"body":{"components/LibraryComponent.html":{}}}],["ngclass",{"_index":1530,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2120,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2123,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":762,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":1226,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngoptimizedimage",{"_index":656,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["ngstyle",{"_index":654,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["ngx",{"_index":317,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":1219,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":874,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1345,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["node_modules",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["nodes",{"_index":371,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["non",{"_index":5068,"title":{},"body":{"license.html":{}}}],["none",{"_index":356,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"changelog.html":{}}}],["notable",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["notes.md",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1774,"title":{},"body":{"injectables/PlayerService.html":{}}}],["notification",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["november",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["now",{"_index":2501,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["npm",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["nrwl",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["nrwl/nx",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":883,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(axisindex",{"_index":848,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(buttonindex",{"_index":846,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(duration",{"_index":1304,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number_",{"_index":706,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["nx",{"_index":2833,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["obeservable",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1367,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":5248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1373,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":5127,"title":{},"body":{"license.html":{}}}],["observable",{"_index":944,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":976,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":988,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2050,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2466,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":983,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2469,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtaining",{"_index":5117,"title":{},"body":{"license.html":{}}}],["october",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["offers",{"_index":5096,"title":{},"body":{"license.html":{}}}],["offline",{"_index":4845,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":107,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":5213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":1986,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ogg",{"_index":5198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ohne",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["oldsource",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["onchanges",{"_index":2065,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ondestroy",{"_index":718,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":561,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["onfilesdropped",{"_index":1540,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onfilesdropped(files",{"_index":1557,"title":{},"body":{"components/PlayerComponent.html":{}}}],["oninit",{"_index":1198,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1450,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1455,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onreload",{"_index":1541,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onsliderpositionchanged",{"_index":1542,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":1560,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1451,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1458,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1452,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1460,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1453,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1462,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":1543,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onvolumechange(value",{"_index":1562,"title":{},"body":{"components/PlayerComponent.html":{}}}],["open",{"_index":2071,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["openedstate",{"_index":2075,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":809,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2073,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["optimizations",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["optimize",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":2398,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["optional",{"_index":254,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":529,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":967,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":974,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":5201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["original",{"_index":634,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"license.html":{}}}],["originalfn",{"_index":533,"title":{},"body":{"interfaces/Chainable.html":{}}}],["os",{"_index":4838,"title":{},"body":{"index.html":{}}}],["osc",{"_index":122,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2291,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":2686,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["oscilloscopepath",{"_index":5192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":99,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":121,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":4847,"title":{},"body":{"index.html":{}}}],["others",{"_index":4936,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":5094,"title":{},"body":{"license.html":{}}}],["out",{"_index":1098,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["output",{"_index":735,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":1963,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":726,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":732,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":719,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlayerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":722,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":721,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":716,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":734,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":736,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:38",{"_index":733,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:48",{"_index":731,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:54",{"_index":729,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":715,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":714,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overrides",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["overtly",{"_index":5017,"title":{},"body":{"license.html":{}}}],["overview",{"_index":5128,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":502,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["overwritten",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["owner",{"_index":4894,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":4893,"title":{},"body":{"license.html":{}}}],["owners",{"_index":4900,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2514,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":2636,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["packgr",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":4483,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["palette",{"_index":1388,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1439,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1440,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1433,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1434,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1441,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1442,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1435,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1436,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1437,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1438,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1431,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1432,"title":{},"body":{"injectables/MetadataService.html":{}}}],["panel",{"_index":2066,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2067,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2068,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2064,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2085,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2082,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2090,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2091,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2084,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2088,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2089,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2096,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2092,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2093,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2095,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2094,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2063,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":4985,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":253,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1150,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":513,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":4994,"title":{},"body":{"license.html":{}}}],["part",{"_index":3781,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["partial",{"_index":954,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":5104,"title":{},"body":{"license.html":{}}}],["party",{"_index":5125,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["passed",{"_index":2506,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":5088,"title":{},"body":{"license.html":{}}}],["path",{"_index":5277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":5215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":5279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":235,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":103,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1116,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1073,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["per",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["perform",{"_index":4963,"title":{},"body":{"license.html":{}}}],["performance",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["performance.now",{"_index":916,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":4970,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4902,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":5112,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1519,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":5120,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5014,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":4842,"title":{},"body":{"index.html":{}}}],["person",{"_index":4942,"title":{},"body":{"license.html":{}}}],["person's",{"_index":4975,"title":{},"body":{"license.html":{}}}],["persons",{"_index":5116,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":4974,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1062,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pin",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":464,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":1927,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":466,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{},"overview.html":{}}}],["pipetransform",{"_index":475,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1353,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":237,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["play/pause",{"_index":1602,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playback",{"_index":370,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["player",{"_index":1526,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":1531,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":1532,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":495,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":1581,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":319,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1296,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":5283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/library",{"_index":5285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1468,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["player/player.types",{"_index":2155,"title":{},"body":{"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":195,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":1535,"title":{"injectables/PlayerService.html":{}},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":1674,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playerservice.currenttime",{"_index":1675,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playerservice.repeat",{"_index":1678,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playing",{"_index":1297,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["playlist",{"_index":1811,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":1872,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":1873,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.findindex((track",{"_index":1958,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":1839,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":1836,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":1593,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":197,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.crc",{"_index":1814,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":1687,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":1879,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":1886,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":1688,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":1700,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":4829,"title":{},"body":{"index.html":{}}}],["playstate",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["playtrack(track",{"_index":1787,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":507,"title":{},"body":{"interfaces/Chainable.html":{}}}],["plug",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["pluginnewanalysernode",{"_index":238,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["plugins",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":777,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["polfills",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["polyfills",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["pool",{"_index":2490,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":1727,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":268,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":4919,"title":{},"body":{"license.html":{}}}],["postcss",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["prdefinded",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["pre",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["precommit",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["prefertagembeddedpicture",{"_index":1324,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefetch",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":5229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preparations",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":5109,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":5062,"title":{},"body":{"license.html":{}}}],["preset",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["pressedbuttonscaches",{"_index":844,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prettier",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":2107,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":1689,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":528,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":2172,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":2157,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":2133,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":615,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1479,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":4973,"title":{},"body":{"license.html":{}}}],["private",{"_index":325,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["prive",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["problems",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["process",{"_index":2504,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["production",{"_index":2742,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":602,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1088,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.reject(new",{"_index":1084,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1091,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promote",{"_index":4927,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":5037,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":199,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2006,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["props",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":4957,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":4979,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4997,"title":{},"body":{"license.html":{}}}],["protobufjs",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":3849,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":5231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":4872,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":324,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["provideexperimentalzonelesschangedetection",{"_index":5219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":5232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":5220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":5226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":5234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":5218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":4866,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":5221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":4908,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":4972,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4949,"title":{},"body":{"license.html":{}}}],["pure",{"_index":468,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":4879,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4922,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":4826,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quality",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["query",{"_index":574,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["queryparams",{"_index":1152,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["queue",{"_index":1775,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":5051,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["randomposition",{"_index":1834,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":1960,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["rate",{"_index":689,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["read",{"_index":508,"title":{},"body":{"interfaces/Chainable.html":{}}}],["readded",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["reader",{"_index":4852,"title":{},"body":{"index.html":{}}}],["readhandle(handle",{"_index":1500,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["readme",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":220,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":2261,"title":{},"body":{"injectables/UpdateService.html":{}}}],["real",{"_index":1417,"title":{},"body":{"injectables/MetadataService.html":{}}}],["realkeys",{"_index":993,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":5057,"title":{},"body":{"license.html":{}}}],["record",{"_index":1151,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2459,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["recursive",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["redirectto",{"_index":5278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":4917,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["reenabled",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":4871,"title":{},"body":{"license.html":{}}}],["regards",{"_index":4983,"title":{},"body":{"license.html":{}}}],["register",{"_index":1048,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":966,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":822,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":831,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":823,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":835,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1007,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":5225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":5224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":971,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reinstall",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["reject",{"_index":1074,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1103,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1095,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":2566,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["relationship",{"_index":4865,"title":{},"body":{"license.html":{}}}],["release",{"_index":584,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["release:${luceneescapequery.escape(album",{"_index":613,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":606,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2539,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":4909,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":4903,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1670,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["remainder",{"_index":5080,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":5082,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1372,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverpicture",{"_index":545,"title":{"interfaces/RemoteCoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":1507,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["removed",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["renderer",{"_index":741,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":738,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renew",{"_index":1365,"title":{},"body":{"injectables/MetadataService.html":{}}}],["renovate",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["renovate.json",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":1684,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":560,"title":{},"body":{"interfaces/ColorConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":1416,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["replaced",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["report",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":5132,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":5097,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":4961,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":4932,"title":{},"body":{"license.html":{}}}],["request",{"_index":1108,"title":{},"body":{"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["request.reject(new",{"_index":1110,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1112,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe(draw",{"_index":2517,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1117,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["requestwakelock",{"_index":2546,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":5121,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":5046,"title":{},"body":{"license.html":{}}}],["resizeobserver",{"_index":2429,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2467,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1100,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1102,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1196,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["respect",{"_index":5084,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":5114,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":4843,"title":{},"body":{"index.html":{}}}],["result.matches",{"_index":2056,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":4877,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":998,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["retained",{"_index":4968,"title":{},"body":{"license.html":{}}}],["return",{"_index":348,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":249,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":4916,"title":{},"body":{"license.html":{}}}],["revert",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["revocation",{"_index":5045,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["rgb(255",{"_index":797,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":665,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["rid",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":2087,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":4888,"title":{},"body":{"license.html":{}}}],["root",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2493,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["rounding",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":2030,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":2043,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["routeroutlet",{"_index":2021,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":5193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":5067,"title":{},"body":{"license.html":{}}}],["rule",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":3458,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":5288,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":321,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1256,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":1913,"title":{},"body":{"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":1865,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["sample",{"_index":688,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":120,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sandbox",{"_index":4851,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["saving",{"_index":5141,"title":{},"body":{"todo.html":{}}}],["scale",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":2146,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scientific",{"_index":4907,"title":{},"body":{"license.html":{}}}],["screen",{"_index":4709,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scroll",{"_index":1921,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollbehavior",{"_index":1977,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":1932,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":1972,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollposition",{"_index":1929,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":1922,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":1953,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":1956,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":1875,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scss",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":623,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["searchterm",{"_index":1876,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["seconds",{"_index":1705,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seeking",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["seekleft",{"_index":1544,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["seekleft(seconds",{"_index":1703,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":1564,"title":{},"body":{"components/PlayerComponent.html":{}}}],["seekright",{"_index":1545,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["seekright(seconds",{"_index":1706,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":1566,"title":{},"body":{"components/PlayerComponent.html":{}}}],["seekto",{"_index":1314,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["seektohandler(details",{"_index":1845,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":239,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":264,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["seektto",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1205,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":1209,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1206,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":1211,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selected",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["selectedalbum",{"_index":1224,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":1223,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":1225,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selectnext",{"_index":1690,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":1691,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":1692,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":1710,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1207,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":1213,"title":{},"body":{"components/LibraryComponent.html":{}}}],["self",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["semantics",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":2512,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":887,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separate",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":5227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seperated",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["september",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["service/file",{"_index":804,"title":{},"body":{"classes/FileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":542,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1129,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1167,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":4815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":1469,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["service/metadata.service.ts",{"_index":1323,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:25",{"_index":1338,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1336,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1334,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:28",{"_index":1332,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:30",{"_index":1330,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":546,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":640,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":4817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":564,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:40",{"_index":1481,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":1483,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":2690,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":1583,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":1584,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":1582,"title":{},"body":{"components/PlayerComponent.html":{}}}],["services/loader/loader.service",{"_index":1738,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["services/media",{"_index":1741,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":1586,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":1740,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1310,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["session.service",{"_index":1742,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":4802,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1277,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1287,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1292,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1294,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1290,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1282,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1276,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":344,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["set.svg",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor(color",{"_index":2177,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1278,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1283,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2294,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2304,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2295,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2306,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":240,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":270,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1279,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1288,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2296,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2308,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2297,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2310,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2135,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":2138,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2136,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":2141,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2298,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2312,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":241,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":272,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setfrequencybandgain",{"_index":242,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":274,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setgap",{"_index":2299,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2314,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2300,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2316,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":243,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":277,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setmindb",{"_index":2301,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2318,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setoverlayclass",{"_index":2181,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setplaybackstate(state",{"_index":1319,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor(color",{"_index":2166,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":1693,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":1713,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1280,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1291,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2302,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2320,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1093,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["setting",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["settings",{"_index":386,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2016,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1448,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2014,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1445,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2226,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":1465,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":1463,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:21",{"_index":1461,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":1459,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1457,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:33",{"_index":1454,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1444,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2015,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2017,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":201,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2232,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2233,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2465,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":4807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":4814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":244,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":280,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["several",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":5044,"title":{},"body":{"license.html":{}}}],["share",{"_index":5145,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2045,"title":{},"body":{"components/ShellComponent.html":{}}}],["shas",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["shell",{"_index":2019,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2022,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2023,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":137,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":961,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":1601,"title":{},"body":{"components/PlayerComponent.html":{}}}],["show",{"_index":1265,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showdelay",{"_index":5240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":1495,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["showpicker",{"_index":810,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{}}}],["shows",{"_index":498,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2292,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":1685,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2076,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":2025,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["signal",{"_index":288,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["signal(0",{"_index":285,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(44_100",{"_index":308,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(false",{"_index":301,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2322,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2327,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2335,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2337,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":2144,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2343,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2345,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2347,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2350,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1331,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":1732,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":1735,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2358,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1333,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1335,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1337,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2530,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.storageservice.retrieve('basegain",{"_index":283,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(this.storageservice.retrieve('volume",{"_index":310,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(true",{"_index":304,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(undefined",{"_index":1722,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signals",{"_index":346,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["signalös",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":5005,"title":{},"body":{"license.html":{}}}],["simpler",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["simplified",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["sind",{"_index":1045,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1133,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["sizes",{"_index":1799,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":781,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2028,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2102,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":5195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":204,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":203,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["slider",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["sliders",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":591,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{}}}],["smaller",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["smooth",{"_index":1955,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2293,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":82,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["snyk",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["soll",{"_index":2273,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["song",{"_index":1712,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["song.file.name",{"_index":1998,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.file.name).tolowercase().includes(term",{"_index":1897,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":1993,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":1994,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.crc",{"_index":1991,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.artist",{"_index":1898,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.crc",{"_index":1815,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song.metadata?.title",{"_index":1896,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":1999,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":1997,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":1995,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["sortable",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":5140,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["spark",{"_index":1348,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["sparkmd5",{"_index":1347,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5.arraybuffer.hash(await",{"_index":1427,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spectrogram",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":1912,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["splashscreen",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":1208,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src",{"_index":1797,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stable",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":470,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["standing",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2554,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starts",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["startvisualization(getdatamethod",{"_index":2485,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":345,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":5055,"title":{},"body":{"license.html":{}}}],["statt",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["statutory",{"_index":5101,"title":{},"body":{"license.html":{}}}],["steps",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":110,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2403,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storageservice",{"_index":326,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["storagesettingscomponent",{"_index":206,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":5249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":5251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":5254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structures",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["stuff",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["stylelint",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":711,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":658,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":720,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["sub",{"_index":987,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":1515,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":320,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"license.html":{}}}],["sublicensable",{"_index":5070,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1928,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":945,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":4892,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1038,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1041,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":5003,"title":{},"body":{"license.html":{}}}],["successors",{"_index":5042,"title":{},"body":{"license.html":{}}}],["such",{"_index":4990,"title":{},"body":{"license.html":{}}}],["suche",{"_index":5138,"title":{},"body":{"todo.html":{}}}],["super",{"_index":1180,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["support",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":1311,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":4832,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":5092,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":5023,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["svg",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["svgo",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["swc/core",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["switch",{"_index":1677,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["switched",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["swupdate",{"_index":2246,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["swupdate.activateupdate().then",{"_index":2264,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2251,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2252,"title":{},"body":{"injectables/UpdateService.html":{}}}],["syntax",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":4425,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["tag",{"_index":1374,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["tag.album).filter((album",{"_index":1236,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tag.artist).filter((artist",{"_index":1234,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tag.title).filter((title",{"_index":1238,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tags",{"_index":650,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":604,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":603,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1402,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1393,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1395,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1341,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1064,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1069,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1066,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1399,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1400,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":543,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1061,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1401,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagsworkerrequest",{"_index":648,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":649,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":1743,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":5063,"title":{},"body":{"license.html":{}}}],["target",{"_index":5146,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":1957,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1035,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":521,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templates",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["templateurl",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["temporarily",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["term",{"_index":1891,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["termination",{"_index":5048,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4952,"title":{},"body":{"license.html":{}}}],["territories",{"_index":5031,"title":{},"body":{"license.html":{}}}],["test",{"_index":365,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3459,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1132,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":641,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thebespokepixel/es",{"_index":2151,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["theme",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{}}}],["theme.types",{"_index":2152,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice",{"_index":152,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":208,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":5001,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":100,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["this._audiocontext",{"_index":397,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.createanalyser",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.resume",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.state",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement",{"_index":395,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":407,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":414,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":400,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":404,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":405,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":416,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":412,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.currenttime",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.fastseek(position",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.loop",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.pause",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.play",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.src",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode",{"_index":396,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode.connect(analyser",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.clear",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.foreach((analyser",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._eqgainnode",{"_index":398,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[band",{"_index":389,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._gainnode",{"_index":399,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.asobservable",{"_index":349,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.next(true",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._internalanalyzer",{"_index":2471,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":982,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":2178,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":2179,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":929,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...files",{"_index":1805,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(file",{"_index":1780,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.afterpausedorstopped",{"_index":1828,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":1803,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.albums",{"_index":1235,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.alpha",{"_index":2340,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2383,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2454,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2367,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2373,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2371,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2369,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2480,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2479,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2511,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2238,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2516,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}/release",{"_index":616,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1158,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.artists",{"_index":1232,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.askuserforupdate().then((update",{"_index":2263,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.currenttime",{"_index":1305,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2524,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2378,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1303,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":1781,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":1822,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1300,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1298,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":1726,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pause",{"_index":1827,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":1801,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2325,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2481,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":1789,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":1854,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":1852,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(this.audioservice.volume",{"_index":1642,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.audioservice.setvolume(value",{"_index":1644,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.audioservice.stop",{"_index":1829,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":849,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":902,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":900,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":891,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.barcount",{"_index":2330,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2387,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2448,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2472,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2475,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2474,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2473,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":393,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.breakpointobserver",{"_index":2049,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1146,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":847,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":898,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":892,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":906,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":915,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":888,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2432,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2460,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2438,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.capfalldown",{"_index":2333,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2391,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2331,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2389,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":870,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":869,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":931,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":864,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2126,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.colorconfig",{"_index":2452,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":2180,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":2169,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":852,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":625,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":903,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":899,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":379,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1405,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1376,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(file",{"_index":1808,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentfolderhandle",{"_index":1492,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":1725,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":1718,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.crc",{"_index":1823,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":1802,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(undefined",{"_index":1830,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":1832,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":1842,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":1813,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":1816,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":413,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.darkmode",{"_index":2182,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":2162,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.data",{"_index":1227,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.data.map((tag",{"_index":1233,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1027,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":1620,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.default_deadspace",{"_index":922,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":834,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":973,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1003,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1010,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1029,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2009,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2008,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1001,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":854,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":955,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":758,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":749,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":755,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":753,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drop.bind(this",{"_index":761,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":760,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":415,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[band",{"_index":391,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":985,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1143,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1142,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":608,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2368,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2385,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fileinput",{"_index":1181,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1187,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1195,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1194,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1193,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1184,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1189,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1186,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1183,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.currentfolderhandle",{"_index":1636,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.init",{"_index":1635,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.openfiles",{"_index":1804,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.fileloaderservice.showpicker",{"_index":1653,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.files",{"_index":1191,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filteredplaylist",{"_index":1939,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":607,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":928,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":908,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":1605,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":1667,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":1669,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":1668,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":1655,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":1656,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":1663,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":1662,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":1665,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":1659,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":1664,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":1660,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":1661,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":1666,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":1657,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":1658,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":1617,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":1606,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":1607,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":1626,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":1624,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":1631,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":1613,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":1629,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":1615,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":1622,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":1633,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":1609,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":1611,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2377,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2375,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2332,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2395,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getcolorobject(new",{"_index":2186,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":1577,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer?.files",{"_index":773,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1083,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlemessage",{"_index":1081,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1000,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1008,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":986,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":968,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":996,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":989,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":1598,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":1599,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.hotkeysservice.register",{"_index":1600,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.id3tagsservice.extracttags(file",{"_index":1378,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":1621,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.indexeddbservice.add('metatags",{"_index":1403,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('metatags').topromise",{"_index":1475,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.getall('metatags').topromise",{"_index":1228,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.indexeddbservice.update('dirhandle",{"_index":1496,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.isautoscrollenabled",{"_index":1934,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":1935,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":923,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":403,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":406,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(false",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(true",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(false",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(true",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(false",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(true",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.lastfm_api_key",{"_index":1156,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1383,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":772,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":757,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.linethickness",{"_index":2353,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2393,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1262,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["this.loaderservice.show",{"_index":1260,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["this.loadfiles",{"_index":1637,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.loadingcounter",{"_index":1270,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2129,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2384,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2388,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2392,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2390,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":2163,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2386,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2396,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2394,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2382,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2380,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2535,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":1750,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":1756,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":1753,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":1751,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":1758,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":1760,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":1762,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":1754,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":1791,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":1764,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.meta.addtag",{"_index":2175,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.meta.updatetag",{"_index":2176,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.metadataservice.getmetadata(file",{"_index":1819,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1474,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1473,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1472,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1471,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2372,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2381,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2446,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1384,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":1757,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1087,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2125,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2124,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2450,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2483,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":752,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.pendingrequests.clear",{"_index":1127,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1094,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1119,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1109,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1099,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1124,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1398,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice",{"_index":1894,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files",{"_index":1645,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2339,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":1946,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.crc",{"_index":1989,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":1893,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist().length",{"_index":1573,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":1676,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.loadfiles",{"_index":1654,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.next",{"_index":1630,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.playpause",{"_index":1603,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":1990,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.previous",{"_index":1632,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.seekleft(value",{"_index":1639,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.seekright(value",{"_index":1640,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.selectnext",{"_index":1627,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":1625,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":1638,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.stop",{"_index":1608,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.togglerepeat",{"_index":1650,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.toggleshuffle",{"_index":1651,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playpause",{"_index":1752,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":1837,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":1841,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":1840,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.selectedtrack",{"_index":1826,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":1825,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1364,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":910,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":1759,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":2167,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":2168,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.readhandle(this.currentfolderhandle",{"_index":1499,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.register",{"_index":960,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":750,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":768,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":1849,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":1850,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":1855,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":1853,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2545,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2440,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2519,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate([route",{"_index":2058,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.scrolltobottom",{"_index":1944,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":1952,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":1925,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":1947,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm().tolowercase",{"_index":1892,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.seekleft(10",{"_index":1761,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":1614,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.seekright(10",{"_index":1763,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":1616,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.seektohandler(details",{"_index":1765,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.selectedalbum",{"_index":1240,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":1239,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":1241,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(song",{"_index":1821,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":1843,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":1788,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setaccentcolor(colors.peakcolor",{"_index":2165,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setaccentcolor(this.accentcolor",{"_index":2161,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setoverlayclass",{"_index":2159,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setplaybackstate('none",{"_index":1302,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1301,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1299,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setprimarycolor(colors.maincolor",{"_index":2164,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setprimarycolor(this.primarycolor",{"_index":2160,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setseekposition(details.seektime",{"_index":1848,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":1844,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2441,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showpicker",{"_index":1634,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.shuffle",{"_index":1833,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":1856,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2057,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2370,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2379,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.split",{"_index":1229,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2482,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2484,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":1755,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2455,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.storageservice.retrieve('equalizergainvalues",{"_index":289,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.swupdate",{"_index":2250,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2271,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2270,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.darkmode",{"_index":662,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":1782,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2228,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2239,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":1604,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":965,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":1623,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglerepeat",{"_index":1612,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.toggleshuffle",{"_index":1610,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.track()?.metadata?.covercolors?.darkmuted?.hex",{"_index":663,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.covercolors?.lightmuted?.hex",{"_index":664,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.coverurl?.original",{"_index":667,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.tracks",{"_index":1237,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1306,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.usetagembeddedpicture",{"_index":1362,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1358,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1381,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2461,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2464,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2462,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2463,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2434,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2439,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2525,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2533,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2534,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2376,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2356,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":360,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.wakelock",{"_index":2544,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2549,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2552,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":1784,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":1786,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1075,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1082,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1080,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2436,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1104,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1122,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1121,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1123,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":4904,"title":{},"body":{"license.html":{}}}],["threads.js",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["through",{"_index":4934,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":4882,"title":{},"body":{"license.html":{}}}],["thum",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["thumb",{"_index":631,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thumbnails",{"_index":567,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["time",{"_index":683,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["time.pipe",{"_index":672,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["time.ts",{"_index":4786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timed",{"_index":1097,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1092,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1068,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":655,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2502,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["tinycolor",{"_index":2150,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["tinycolor(hex",{"_index":2198,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(10",{"_index":2200,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(15",{"_index":2202,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(18",{"_index":2204,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(21",{"_index":2206,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(24",{"_index":2208,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(27",{"_index":2210,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(30",{"_index":2212,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(5",{"_index":2199,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(15",{"_index":2196,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(20",{"_index":2194,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(25",{"_index":2192,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(30",{"_index":2190,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(35",{"_index":2189,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(45",{"_index":2188,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(55",{"_index":2187,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(value",{"_index":2214,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":553,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":5261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":1585,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2059,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":363,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["todo.md",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["todos",{"_index":4094,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["toggle",{"_index":1467,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["togglehelpdialog",{"_index":999,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2077,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":1546,"title":{},"body":{"components/PlayerComponent.html":{}}}],["togglerepeat",{"_index":1547,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["toggleshuffle",{"_index":1548,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["togglevisualmode",{"_index":2528,"title":{},"body":{"injectables/VisualsService.html":{}}}],["token",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["tolowercase().includes(term",{"_index":1899,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tools",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["tooltips",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":2078,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["topromise",{"_index":1497,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["tosignal",{"_index":2046,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2031,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1037,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["touppercase",{"_index":1040,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":549,"title":{"interfaces/Track.html":{}},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["track();@let",{"_index":690,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track.metadata",{"_index":1790,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":1794,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":1793,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.original",{"_index":1798,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.original",{"_index":1796,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":1792,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.crc",{"_index":1824,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["trackbycrc",{"_index":1880,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trackbycrc(index",{"_index":1888,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trackmetadata",{"_index":550,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":1204,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trademark",{"_index":5087,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":5069,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2513,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":471,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":472,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["transitions",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["translate",{"_index":4965,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2399,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["treaty",{"_index":5010,"title":{},"body":{"license.html":{}}}],["tree",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trial",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["trials",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":469,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":605,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["ts",{"_index":1230,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["tsconfig",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":2907,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tslint",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["ttry",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":832,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5150,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1769,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["types/node",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["typing",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["ubuntu",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1950,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":113,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["um",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["unconditional",{"_index":5072,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":5020,"title":{},"body":{"license.html":{}}}],["und",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":485,"title":{},"body":{"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":4951,"title":{},"body":{"license.html":{}}}],["understands",{"_index":5123,"title":{},"body":{"license.html":{}}}],["uneeded",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["unfair",{"_index":4981,"title":{},"body":{"license.html":{}}}],["unicorn",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":1242,"title":{},"body":{"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":5289,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":4858,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":262,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1049,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":992,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["unsubscribe",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":411,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["update.service",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":1951,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["updateinterval",{"_index":2507,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1281,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1293,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updates",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["updateservice",{"_index":154,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":493,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":4890,"title":{},"body":{"license.html":{}}}],["url",{"_index":534,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1077,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2435,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["url.createobjecturl(new",{"_index":1369,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1397,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["urls",{"_index":1368,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["urlsearchparams",{"_index":1153,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["usage",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":1477,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["useclass",{"_index":5245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2108,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":5237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":1520,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":5143,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":4833,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1325,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1326,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":5239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1327,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":2648,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utc",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":4987,"title":{},"body":{"license.html":{}}}],["v0.10.0",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["v0.11.0",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["v0.12.0",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["v0.13.0",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["v0.14.0",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["v0.15.0",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["v0.16.0",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["v0.17.0",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["v0.18.0",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["v0.19.0",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["v0.20.0",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["v0.21.0",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["v0.22.0",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["v0.23.0",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["v0.24.0",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["v0.25.0",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["v0.28.0",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["v0.29.0",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["v0.4.0",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["v0.5.0",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["v0.6.0",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["v0.7.0",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["v0.8.0",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["v0.9.0",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["v1.0.1",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["v1.10.0",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["v1.11.0",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["v1.11.1",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["v1.11.10",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["v1.11.11",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["v1.11.12",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["v1.11.2",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["v1.11.3",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["v1.11.4",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["v1.11.5",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["v1.11.6",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["v1.11.7",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["v1.11.8",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["v1.11.9",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["v1.12.0",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["v1.13.0",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["v1.14.0",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["v1.15.0",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["v1.16.0",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["v1.17.0",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["v1.18.0",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["v1.19.0",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["v1.2.2",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["v1.3.0",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["v1.4.0",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["v1.4.1",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["v1.6.1",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["v1.6.2",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["v1.6.3",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["v1.6.4",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["v1.7.1",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["v1.9.1",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["v10.0.0",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["v10.0.1",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["v10.0.2",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["v10.0.3",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["v10.0.4",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["v10.1.0",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["v10.2.0",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["v10.3.0",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["v10.3.1",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["v10.3.2",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["v11.0.0",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["v11.0.2",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["v11.1.0",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["v11.1.1",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["v11.1.2",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["v11.18.0",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["v11.2.0",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["v11.20.0",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["v11.22.0",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["v11.24.1",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["v11.3.0",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["v11.3.1",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["v11.30.1",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["v11.4.0",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["v11.4.1",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["v11.4.10",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["v11.4.11",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["v11.4.2",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["v11.4.3",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["v11.4.5",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["v11.4.6",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["v11.4.7",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["v11.4.8",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["v11.4.9",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["v11.5.0",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["v11.5.1",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["v11.5.10",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["v11.5.11",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["v11.5.12",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["v11.5.13",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["v11.5.14",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["v11.5.2",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["v11.5.3",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["v11.5.4",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["v11.5.5",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["v11.5.6",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["v11.5.7",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["v11.5.8",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["v11.5.9",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["v12.0.0",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["v12.0.1",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["v12.0.10",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["v12.0.11",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["v12.0.12",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["v12.0.13",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["v12.0.14",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["v12.0.15",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["v12.0.16",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["v12.0.2",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["v12.0.3",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["v12.0.4",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["v12.0.5",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["v12.0.6",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["v12.0.7",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["v12.0.8",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["v12.0.9",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["v12.2.13",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["v12.2.5",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["v12.3.0",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["v12.6.2",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["v12.8.0",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["v12.9.0",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["v13.0.0",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["v13.0.1",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["v13.0.10",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["v13.0.11",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["v13.0.12",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["v13.0.13",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["v13.0.16",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["v13.0.18",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["v13.0.19",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["v13.0.2",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["v13.0.20",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["v13.0.3",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["v13.0.5",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["v13.0.6",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["v13.0.7",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["v13.0.8",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["v13.0.9",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["v13.1.1",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["v13.1.10",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["v13.1.11",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["v13.1.12",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["v13.1.2",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["v13.1.3",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["v13.1.4",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["v13.1.5",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["v13.1.6",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["v13.1.7",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["v13.1.8",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["v13.1.9",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["v13.10.1",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["v13.11.2",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["v13.11.4",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["v13.13.0",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["v13.14.2",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["v13.15.1",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["v13.2.0",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["v13.2.1",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["v13.2.2",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["v13.2.3",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["v13.2.4",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["v13.2.5",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["v13.2.6",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["v13.22.0",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["v13.24.2",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["v13.26.0",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["v13.28.0",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["v13.29.1",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["v13.29.3",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["v13.3.0",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["v13.3.1",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["v13.3.2",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["v13.3.3",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["v13.3.4",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["v13.3.5",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["v13.31.2",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["v13.32.0",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["v13.33.0",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["v13.5.1",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["v13.7.2",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["v13.7.5",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["v14.0.0",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["v14.0.1",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["v14.0.10",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["v14.0.11",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["v14.0.12",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["v14.0.13",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["v14.0.2",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["v14.0.3",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["v14.0.4",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["v14.0.5",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["v14.0.6",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["v14.0.7",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["v14.0.8",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["v14.0.9",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["v14.1.0",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["v14.1.1",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["v14.1.10",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["v14.1.11",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["v14.1.12",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["v14.1.13",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["v14.1.14",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["v14.1.15",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["v14.1.16",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["v14.1.17",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["v14.1.18",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["v14.1.19",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["v14.1.2",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["v14.1.20",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["v14.1.23",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["v14.1.3",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["v14.1.4",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["v14.1.5",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["v14.1.6",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["v14.1.7",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["v14.1.8",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["v14.1.9",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["v15",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["v15.0.0",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["v15.0.1",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["v15.0.2",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["v15.0.3",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["v15.0.4",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["v15.0.5",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["v15.0.6",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["v15.0.7",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["v15.0.8",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["v15.0.9",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["v15.1.0",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["v15.1.1",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["v15.1.10",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["v15.1.11",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["v15.1.12",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["v15.1.13",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["v15.1.14",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["v15.1.16",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["v15.1.17",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["v15.1.2",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["v15.1.3",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["v15.1.4",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["v15.1.5",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["v15.1.6",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["v15.1.7",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["v15.1.8",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["v15.1.9",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["v15.4.4",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["v16.0.0",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["v16.0.1",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["v16.0.2",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["v16.0.3",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["v16.0.4",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["v16.0.5",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["v16.0.6",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["v17.0.1",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["v17.0.10",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["v17.0.11",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["v17.0.12",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["v17.0.13",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["v17.0.14",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["v17.0.15",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["v17.0.16",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["v17.0.17",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["v17.0.18",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["v17.0.2",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["v17.0.3",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["v17.0.4",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["v17.0.5",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["v17.0.6",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["v17.0.7",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["v17.0.8",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["v17.0.9",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["v18.0.0",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["v18.0.1",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["v18.1.0",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["v18.1.1",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["v18.16.5",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["v18.2.0",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["v18.2.2",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["v18.2.3",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["v18.2.4",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["v18.2.5",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["v18.2.6",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["v18.2.7",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["v19",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["v19.0.0",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["v19.0.1",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["v19.0.10",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["v19.0.2",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["v19.0.3",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["v19.0.4",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["v19.0.5",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["v19.0.6",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["v19.0.7",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["v19.0.8",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["v19.0.9",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["v19.1.0",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["v19.1.1",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["v19.2.0",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["v19.2.1",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["v19.2.10",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["v19.2.2",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["v19.2.3",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["v19.2.4",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["v19.2.5",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["v19.2.6",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["v19.2.7",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["v19.2.8",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["v19.2.9",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["v19.3.0",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["v19.4.0",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["v19.4.1",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["v19.4.10",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["v19.4.11",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["v19.4.12",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["v19.4.13",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["v19.4.14",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["v19.4.15",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["v19.4.2",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["v19.4.3",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["v19.4.4",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["v19.4.5",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["v19.4.6",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["v19.4.7",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["v19.4.8",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["v19.4.9",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["v19.5.0",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["v19.5.1",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["v19.5.3",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["v19.5.4",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["v2.0.2",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["v2.5.0",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["v2.5.3",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["v2.6.0",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["v2.6.1",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["v2.6.2",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["v2.6.3",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["v2.7.0",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["v2.8.1",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["v20.0.0",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["v20.0.1",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["v20.1.0",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["v20.1.1",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["v20.1.2",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["v20.1.3",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["v20.1.4",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["v20.2.0",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["v20.2.1",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["v20.2.2",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["v20.8.6",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["v24",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["v3.0.3",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["v3.0.4",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["v3.0.5",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["v3.0.6",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["v3.0.7",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["v3.0.8",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["v3.0.9",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["v3.10.0",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["v3.11.0",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["v3.4.0",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["v3.4.1",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["v3.5.0",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["v3.5.1",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["v3.6.0",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["v3.7.0",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["v3.8.0",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["v3.8.1",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["v3.9.0",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["v4.2.0",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["v4.3.1",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["v4.4.0",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["v4.5.0",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["v4.6.0",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["v4.7.0",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["v5.1.0",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["v5.2.0",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["v5.2.1",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["v5.2.10",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["v5.2.11",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["v5.2.12",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["v5.2.2",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["v5.2.3",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["v5.2.4",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["v5.2.5",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["v5.2.6",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["v5.2.7",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["v5.2.8",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["v5.2.9",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["v5.48.0",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["v6.0.0",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["v6.0.1",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["v6.1.0",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["v6.1.1",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["v6.2.0",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["v6.2.1",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["v6.2.2",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["v6.2.3",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["v6.2.4",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["v6.2.5",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["v6.2.6",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["v6.3.0",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["v6.3.1",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["v6.4.0",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["v6.4.1",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["v6.5.0",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["v6.5.1",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["v6.5.2",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["v6.5.3",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["v6.5.4",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["v6.5.5",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["v6.5.6",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["v6.5.7",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["v6.5.8",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["v6.5.9",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["v6.6.0",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["v6.6.1",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["v6.6.2",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["v6.6.3",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["v6.6.4",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["v6.6.5",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["v6.6.6",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["v6.6.7",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["v6.7.0",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["v6.7.1",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["v6.7.2",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["v6.7.3",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["v6.7.4",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["v7.0.0",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["v7.0.1",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["v7.0.2",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["v7.0.3",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["v7.0.4",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["v7.0.5",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["v7.0.6",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["v7.1.1",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["v7.13.1",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["v7.13.3",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["v7.13.4",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["v8.0.0",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["v8.0.1",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["v8.0.3",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["v8.1.0",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["v8.1.1",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["v8.1.10",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["v8.1.3",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["v8.1.4",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["v8.1.5",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["v8.1.6",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["v8.1.7",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["v8.1.8",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["v8.1.9",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["v8.26.1",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["v8.31.0",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["v8.4.21",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["v8.6.0",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["v9.0.10",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["v9.0.11",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["v9.0.2",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["v9.0.3",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["v9.0.4",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["v9.0.5",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["v9.0.6",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["v9.0.7",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["v9.0.8",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["v9.0.9",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["v9.1.0",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["v9.1.1",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["v9.1.2",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["v9.1.3",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["v9.2.0",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["v9.2.1",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["v9.2.2",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["v9.2.3",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["v9.2.4",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":267,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":707,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":480,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value.tostring().slice(0",{"_index":478,"title":{},"body":{"pipes/BandPipe.html":{}}}],["var",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":5160,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.scss",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["variant",{"_index":1648,"title":{},"body":{"components/PlayerComponent.html":{}}}],["various",{"_index":499,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verfügbar",{"_index":2272,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":4808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle",{"_index":1491,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":1518,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2256,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2254,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2266,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2258,"title":{},"body":{"injectables/UpdateService.html":{}}}],["versions",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["very",{"_index":1933,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vi",{"_index":4989,"title":{},"body":{"license.html":{}}}],["via",{"_index":5142,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":642,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["vibrant.from(url).getpalette",{"_index":1430,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1346,"title":{},"body":{"injectables/MetadataService.html":{}}}],["view",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":1908,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2035,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('scrollviewport",{"_index":1902,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport",{"_index":1924,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":1962,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":1980,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":1930,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":1954,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":1988,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":1979,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":5004,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":769,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":770,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":1961,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":1964,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":2643,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["visualizefrequencybars",{"_index":2404,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2409,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2405,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2411,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["visualizer.component.html",{"_index":2285,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2286,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":1591,"title":{},"body":{"components/PlayerComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":1910,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizer/visuals/visuals.service",{"_index":1909,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":210,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":115,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":111,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizers",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["visualizerworker",{"_index":2428,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2527,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":2632,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["visuals.types",{"_index":2420,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2366,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2363,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2362,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":101,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":213,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":1877,"title":{"injectables/VisualsService.html":{}},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":1996,"title":{},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":105,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["vm2",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":1647,"title":{},"body":{"components/PlayerComponent.html":{}}}],["volume",{"_index":230,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlayerComponent.html":{}}}],["volumeicon",{"_index":1536,"title":{},"body":{"components/PlayerComponent.html":{}}}],["voluntarily",{"_index":4946,"title":{},"body":{"license.html":{}}}],["vulnerabilities",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["w9jds/firebase",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":1940,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":5090,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5012,"title":{},"body":{"license.html":{}}}],["waives",{"_index":5021,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2537,"title":{},"body":{"injectables/WakelockService.html":{},"changelog.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2543,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":1739,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":4809,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":4870,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["wav",{"_index":5199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["waveform",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["web",{"_index":4825,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webmanifest",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["webpack",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["webstorage",{"_index":318,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"dependencies.html":{}}}],["webworker",{"_index":5136,"title":{},"body":{"todo.html":{}}}],["well",{"_index":5029,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1411,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2276,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":4921,"title":{},"body":{"license.html":{}}}],["whether",{"_index":5027,"title":{},"body":{"license.html":{}}}],["white",{"_index":795,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["whitelist",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":1004,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window.showopenfilepicker",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":4901,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":5235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":5233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":5230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1273,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{},"license.html":{}}}],["withviewtransitions",{"_index":5236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":4895,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1071,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1076,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":5222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2696,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":1511,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":4883,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":5032,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["writes",{"_index":2106,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":5147,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":895,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":555,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["z",{"_index":788,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zone",{"_index":2423,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["zoneless",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["zu",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["zugewiesen",{"_index":875,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  templateUrl: './app.component.html',\n  imports: [ShellComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      analyser.disconnect();\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      analyser.disconnect();\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true,\n  standalone: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand, ...arguments_: unknown[]): string {\n    if (!value) {\n      return '';\n    }\n\n    if (value = 1000 && value = 10_000) {\n      return value.toString().slice(0, 2) + 'K';\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  standalone: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | undefined): string {\n    if (!value) {\n      return '0';\n    }\n    const bitrate = Math.round(value / 1000);\n    return `${bitrate} kb/s`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtImage.html":{"url":"interfaces/CoverArtImage.html","title":"interface - CoverArtImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            thumbnails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnails:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtResponse.html":{"url":"interfaces/CoverArtResponse.html","title":"interface - CoverArtResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            images\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         CoverArtImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverArtImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            NgStyle\n                            TimePipe\n                            NgOptimizedImage\n                            BitratePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                    Readonly\n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.track()?.metadata?.coverUrl?.original)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        track\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, input, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\nimport { NgOptimizedImage, NgStyle } from '@angular/common';\nimport { Track } from '../player.types';\nimport { BitratePipe } from './bitrate.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [NgStyle, TimePipe, NgOptimizedImage, BitratePipe]\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n\n  readonly track = input.required();\n\n  readonly coverUrl = computed(() => this.track()?.metadata?.coverUrl?.original);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = track();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = track();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                            BandPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { AudioService, FREQUENCY_BANDS } from '../audio.service';\nimport { BandPipe } from './band.pipe';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@Component({\n  selector: 'mtb-equalizer',\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  imports: [MatSliderModule, BandPipe],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n\n  BANDS = FREQUENCY_BANDS;\n\n  displayFunction(value: number): string {\n    const number_ = value.toFixed(1);\n    return number_ + ' dB';\n  }\n}\n\n    \n\n    \n        \n  \n    @for (band of BANDS; track band; let i = $index) {\n      \n        \n          {{ band | band }}\n          \n        \n      \n    }\n\n    \n      \n        GAIN\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (band of BANDS; track band; let i = $index) {                        {{ band | band }}                            }                  GAIN                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EqualizerGainValues.html":{"url":"interfaces/EqualizerGainValues.html","title":"interface - EqualizerGainValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EqualizerGainValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [band: number]:        number\n\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      analyser.disconnect();\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      analyser.disconnect();\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer?.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (let index = 0; index \n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                init\n                            \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:2\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:3\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class FileLoaderService {\n  abstract currentFolderHandle?: FileSystemDirectoryHandle;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n  abstract init(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:27\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:46\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ALLOWED_MIMETYPES } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService extends FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  private files: File[] = [];\n\n  constructor() {\n    super();\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  async init() {}\n\n  async openFiles(): Promise {\n    return this.files;\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            NgArrayPipesModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                albums\n                            \n                            \n                                artists\n                            \n                            \n                                tracks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                split\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        split\n                        \n                    \n                \n            \n            \n                \nsplit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        albums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        artists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { TrackMetadata } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [MatListModule, NgArrayPipesModule]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  artists: string[] = [];\n  albums: string[] = [];\n  tracks: string[] = [];\n\n  private selectedArtist!: string;\n  private selectedAlbum!: string;\n  private selectedTrack!: string;\n\n  private data?: TrackMetadata[];\n\n  async ngOnInit() {\n    this.data = await this.indexedDbService.getAll('metatags').toPromise();\n    this.split();\n  }\n\n  split() {\n    // @ts-expect-error\n    this.artists = this.data.map((tag) => tag.artist).filter((artist) => !!artist);\n    // @ts-expect-error\n    this.albums = this.data.map((tag) => tag.album).filter((album) => !!album);\n    // @ts-expect-error\n    this.tracks = this.data.map((tag) => tag.title).filter((title) => !!title);\n  }\n\n  selectArtist(artist: string | undefined) {\n    if (artist) {\n      this.selectedArtist = artist;\n    }\n  }\n\n  selectAlbum(album: string | undefined) {\n    if (album) {\n      this.selectedAlbum = album;\n    }\n  }\n\n  selectTrack(track: string | undefined) {\n    if (track) {\n      this.selectedTrack = track;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @for (artist of artists | unique; track artist) {\n        {{ artist }}\n      }\n    \n  \n\n  \n    \n      @for (album of albums | unique; track album) {\n        {{ album }}\n      }\n    \n  \n  \n    \n      @for (track of tracks | unique; track track) {\n        {{ track }}\n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @for (artist of artists | unique; track artist) {        {{ artist }}      }                  @for (album of albums | unique; track album) {        {{ album }}      }                  @for (track of tracks | unique; track track) {        {{ track }}      }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { crc32 } from '@allex/crc32';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\n\n// import * as SparkMD5 from 'spark-md5';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  async getMetadata(file: File): Promise {\n    // console.time('hash');\n    const crc = generateFileHash(file);\n    // console.timeEnd('hash');\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('metatags', crc));\n\n      if (metadataCache) {\n        if (metadataCache.embeddedPicture && this.useTagEmbeddedPicture() && (!metadataCache.coverUrl || this.preferTagEmbeddedPicture())) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    // console.time('id3tags');\n    const tags = await this.id3TagsService.extractTags(file);\n    // console.timeEnd('id3tags');\n    if (!tags) {\n      // if no tags\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverPicture | undefined;\n\n    if (this.useWebMetainfos()) {\n      if (tags.artist && tags.album) {\n        // console.time('webcover');\n        coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n        if (!coverUrls) {\n          coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n        }\n        // console.timeEnd('webcover');\n      } else {\n        console.warn('Missing tags for lookup');\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n\n    if (coverUrls?.original) {\n      // console.time('vibrant');\n      palette = await extractColorsWithNodeVibrant(coverUrls.original);\n      // console.timeEnd('vibrant');\n    }\n    // else if (tags.picture) {\n    //   // console.time('vibrant');\n    //   const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n    //   palette = await extractColorsWithNodeVibrant(objectUrl);\n    //   URL.revokeObjectURL(objectUrl);\n    //   // console.timeEnd('vibrant');\n    // }\n\n    const metadata: TrackMetadata = {\n      crc: crc,\n      coverUrl: coverUrls ?? { thumb: this.PLACEHOLDER_URL, original: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('metatags', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  private createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (!meta.coverUrl || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nfunction generateFileHash(file: File): string {\n  // TODO: replace with real file hashing? https://stackoverflow.com/questions/20917710/fast-file-hashing-of-large-files\n  const hashString: string = file.name + file.type + file.size + file.lastModified;\n  return crc32(hashString, 'hex') as string;\n}\n//\n// async function generateFileHashMD5(file: File): Promise {\n//   return SparkMD5.ArrayBuffer.hash(await file.arrayBuffer());\n// }\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  const palette = await Vibrant.from(url).getPalette();\n  return {\n    vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n    darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n    lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n    muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n    darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n    lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  templateUrl: './metadata-settings.component.html',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule]\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('metatags').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzReleaseGroup.html":{"url":"interfaces/MusicbrainzReleaseGroup.html","title":"interface - MusicbrainzReleaseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzReleaseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            first-release-date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first-release-date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first-release-date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzResponse.html":{"url":"interfaces/MusicbrainzResponse.html","title":"interface - MusicbrainzResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            release-groups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release-groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release-groups:         MusicbrainzReleaseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MusicbrainzReleaseGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:15\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:35\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService extends FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  async init() {\n    const entry = await firstValueFrom(this.indexedDbService.getByID('dirHandle', 1));\n    if (entry) {\n      const granted = await verifyPermission(entry.handle);\n      if (granted) {\n        this.currentFolderHandle = entry.handle;\n      }\n    }\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle = handle;\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle }).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    if (this.currentFolderHandle) {\n      return this.readHandle(this.currentFolderHandle);\n    }\n    return [];\n  }\n\n  private async readHandle(handle: FileSystemDirectoryHandle): Promise {\n    return await getAudioFilesFromDirHandle(handle);\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const files: File[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        files.push(file);\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      files.push(...subFiles);\n    }\n  }\n  return files;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                                VisualizerComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                            NgClass\n                                FileDropOverlayComponent\n                            TimePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                isPlaylistEmpty\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                            \n                                    Async\n                                onReload\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.component.ts:52\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onReload\n                        \n                    \n                \n            \n            \n                \n                        \n                    onReload()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaylistEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentPlaylist().length === 0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:156\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { ALLOWED_MIMETYPES } from './file-loader-service/file-loader.helpers';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { HotkeysService } from '../services/hotkeys/hotkeys.service';\nimport { GamepadService } from '../services/gamepad/gamepad.service';\nimport { GamepadAxes, GamepadButtons } from '../services/gamepad/gamepad.types';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { TimePipe } from './time.pipe';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { VisualizerComponent } from './visualizer/visualizer.component';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgClass } from '@angular/common';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    PlaylistComponent,\n    MatButtonModule,\n    MatIconModule,\n    CoverDisplayComponent,\n    VisualizerComponent,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatMenuModule,\n    NgClass,\n    FileDropOverlayComponent,\n    TimePipe\n  ]\n})\nexport default class PlayerComponent implements OnInit, OnDestroy {\n  playerService = inject(PlayerService);\n  private titleService = inject(TitleService);\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  private fileLoaderService = inject(FileLoaderService);\n  audioService = inject(AudioService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  constructor() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n  }\n\n  async ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showPicker());\n    }\n  }\n\n  async onReload() {\n    await this.fileLoaderService.init();\n    return this.fileLoaderService.currentFolderHandle ? this.loadFiles() : this.showPicker();\n  }\n\n  readonly isPlaylistEmpty = computed(() => this.playerService.currentPlaylist().length === 0);\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  seekLeft(value: number) {\n    this.playerService.seekLeft(value + 10);\n  }\n\n  seekRight(value: number) {\n    this.playerService.seekRight(value + 10);\n  }\n\n  toggleMute() {\n    // TODO: implement\n  }\n\n  increaseVolume(value: number) {\n    this.audioService.setVolume(this.audioService.volume() + value / 100);\n  }\n\n  decreaseVolume(value: number) {\n    this.audioService.setVolume(this.audioService.volume() - value / 100);\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol  this.getVolumeIconForLevel(this.audioService.volume()));\n\n  toggleRepeat() {\n    this.playerService.toggleRepeat();\n  }\n\n  toggleShuffle() {\n    this.playerService.toggleShuffle();\n  }\n\n  formatLabel(value: number): string {\n    return formatSecondsAsClock(value, false);\n  }\n\n  async showPicker() {\n    await this.fileLoaderService.showPicker();\n    return this.loadFiles();\n  }\n\n  async loadFiles() {\n    return this.playerService.loadFiles();\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n}\n\n    \n\n    \n        \n  @if (isPlaylistEmpty()) {\n    \n       Reload last directory\n    \n  }\n\n\n\n  \n\n\n\n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n\n\n  \n    \n      \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (isPlaylistEmpty()) {           Reload last directory      }        @if (audioService.isPlaying()) {          } @else {          }                                      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:41\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(...files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:205\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:180\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:226\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:279\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:283\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:244\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:262\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:196\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:297\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'any' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private loaderService = inject(LoaderService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n        for (const fileHandle of launchParameters.files) {\n          const file = await fileHandle.getFile();\n          if (ALLOWED_MIMETYPES.includes(file.type)) {\n            await this.addFilesToPlaylist(file);\n          }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.original ? [{ src: track.metadata.coverUrl.original, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const files: File[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...files);\n  }\n\n  async addFilesToPlaylist(...files: File[]) {\n    if (files?.length) {\n      for (const file of files.values()) {\n        this.loaderService.show();\n        const song = await this.createTrackFromFile(file);\n        this.loaderService.hide();\n\n        if (!song) {\n          continue;\n        }\n        // avoid duplicate playlist entries\n        if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.crc === song.metadata?.crc)) {\n          this.currentPlaylist.update((playlist) => [...playlist, song]);\n        }\n      }\n    }\n  }\n\n  private async createTrackFromFile(file: File): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.metadataService.getMetadata(file);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: file,\n      metadata: metadata\n    };\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  selectSong(song: Track) {\n    this.selectedTrack.set(song);\n  }\n\n  async playPauseTrack(track: Track) {\n    if (this.audioService.isLoading()) {\n      return;\n    }\n\n    if (this.currentlyLoadedTrack()?.metadata?.crc === track.metadata?.crc) {\n      await this.playPause();\n      return;\n    }\n    await this.playTrack(track);\n  }\n\n  async playPause() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      if (this.selectedTrack()) {\n        await this.playTrack(this.selectedTrack());\n      }\n      return;\n    }\n    if (this.audioService.isPaused()) {\n      await this.audioService.play();\n      await this.afterPlayLoaded();\n    } else {\n      this.audioService.pause();\n      await this.afterPausedOrStopped();\n    }\n  }\n\n  async stop() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      return;\n    }\n    this.audioService.stop();\n    this.currentlyLoadedTrack.set(undefined);\n    await this.afterPausedOrStopped();\n  }\n\n  async next(): Promise {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            NgOptimizedImage\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            MatInput\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                filteredPlaylist\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByCrc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:63\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByCrc\n                        \n                    \n                \n            \n            \n                \ntrackByCrc(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const term = this.searchTerm().toLowerCase();\n    if (!term) return this.playerService.currentPlaylist();\n\n    return (\n      this.playerService\n        .currentPlaylist()\n        // search in title, artist and file name\n        .filter((song) => (song.metadata?.title || song.file.name).toLowerCase().includes(term) || (song.metadata?.artist || '').toLowerCase().includes(term))\n    );\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, model, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { VisualsService } from '../visualizer/visuals/visuals.service';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass, NgOptimizedImage } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { MatInput } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n  selector: 'mtb-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    NgOptimizedImage,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    MatInput,\n    FormsModule\n  ]\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  visualsService = inject(VisualsService);\n  private destroRef = inject(DestroyRef);\n\n  readonly searchTerm = signal('');\n\n  readonly filteredPlaylist = computed(() => {\n    const term = this.searchTerm().toLowerCase();\n    if (!term) return this.playerService.currentPlaylist();\n\n    return (\n      this.playerService\n        .currentPlaylist()\n        // search in title, artist and file name\n        .filter((song) => (song.metadata?.title || song.file.name).toLowerCase().includes(term) || (song.metadata?.artist || '').toLowerCase().includes(term))\n    );\n  });\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 60;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.filteredPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n      const searchTerm = this.searchTerm();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack && !searchTerm) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.filteredPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.filteredPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.crc === currentTrack.metadata?.crc);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByCrc(index: number, song: Track): string {\n    return song.metadata.crc;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ filteredPlaylist().length }} entries\n\n\n\n\n\n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying && visualsService.visualMode() !== 'off') {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (searchTerm()) {                }  {{ filteredPlaylist().length }} entries                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying && visualsService.visualMode() !== \\'off\\') {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverPicture.html":{"url":"interfaces/RemoteCoverPicture.html","title":"interface - RemoteCoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            original\n                                        \n                                \n                                \n                                        \n                                            thumb\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        original\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumb:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent]\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'mtb-shell',\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss',\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatButtonModule, MatProgressSpinnerModule, RouterOutlet]\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  private router = inject(Router);\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n      @if (loaderService.isLoading()) {\n        \n      }\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  templateUrl: './storage-settings.component.html',\n  imports: [MatCardModule, MatButtonModule]\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { TinyColor } from '@thebespokepixel/es-tinycolor';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Color } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private primaryColor = FALLBACK_PRIMARY_COLOR;\n\n  private accentColor = FALLBACK_ACCENT_COLOR;\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  primaryColorPalette: Color[] = [];\n  accentColorPalette: Color[] = [];\n\n  initializeTheme() {\n    this.setOverlayClass();\n    this.setPrimaryColor(this.primaryColor);\n    this.setAccentColor(this.accentColor);\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n    this.localStorageService.store('darkMode', darkMode);\n    this.setOverlayClass();\n  }\n\n  setColors(colors: ColorConfig) {\n    this.setPrimaryColor(colors.mainColor);\n    this.setAccentColor(colors.peakColor);\n  }\n\n  private setPrimaryColor(color?: string) {\n    this.primaryColor = color || FALLBACK_PRIMARY_COLOR;\n    this.primaryColorPalette = this.computeColors(this.primaryColor);\n\n    for (const clr of this.primaryColorPalette) {\n      document.documentElement.style.setProperty(`--theme-primary-${clr.name}`, clr.hex);\n    }\n\n    this.meta.addTag({ name: 'theme-color', content: this.primaryColor }, true);\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor });\n  }\n\n  private setAccentColor(color?: string) {\n    this.accentColor = color || FALLBACK_ACCENT_COLOR;\n    this.accentColorPalette = this.computeColors(this.accentColor);\n\n    for (const clr of this.accentColorPalette) {\n      document.documentElement.style.setProperty(`--theme-accent-${clr.name}`, clr.hex);\n    }\n  }\n\n  private setOverlayClass() {\n    if (this.darkMode()) {\n      document.documentElement.style.setProperty('--app-color-scheme', 'dark');\n    } else {\n      document.documentElement.style.setProperty('--app-color-scheme', 'light');\n    }\n  }\n\n  private computeColors(hex: string): Color[] {\n    return [\n      this.getColorObject(new TinyColor(hex).lighten(55), '0'),\n      this.getColorObject(new TinyColor(hex).lighten(45), '10'),\n      this.getColorObject(new TinyColor(hex).lighten(35), '20'),\n      this.getColorObject(new TinyColor(hex).lighten(30), '25'),\n      this.getColorObject(new TinyColor(hex).lighten(25), '30'),\n      this.getColorObject(new TinyColor(hex).lighten(20), '35'),\n      this.getColorObject(new TinyColor(hex).lighten(15), '40'),\n      this.getColorObject(new TinyColor(hex), '50'),\n      this.getColorObject(new TinyColor(hex).darken(5), '60'),\n      this.getColorObject(new TinyColor(hex).darken(10), '70'),\n      this.getColorObject(new TinyColor(hex).darken(15), '80'),\n      this.getColorObject(new TinyColor(hex).darken(18), '90'),\n      this.getColorObject(new TinyColor(hex).darken(21), '95'),\n      this.getColorObject(new TinyColor(hex).darken(24), '98'),\n      this.getColorObject(new TinyColor(hex).darken(27), '99'),\n      this.getColorObject(new TinyColor(hex).darken(30), '100')\n    ];\n  }\n\n  private getColorObject(value: TinyColor, name: string): Color {\n    const color = new TinyColor(value);\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name: name,\n      hex: color.toHexString(false),\n      darkContrast: color.getBrightness() > lightnessLimit\n      // darkContrast: c.isLight()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  templateUrl: './theme-settings.component.html',\n  imports: [MatCardModule, MatCheckboxModule]\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true,\n  standalone: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            crc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule]\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]',\n  standalone: true\n})\nexport class VisualsDirective implements OnDestroy {\n  // private zone = inject(NgZone);\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\nv20.2.2\n\nchore(deps): update Angular and related dependencies to latest versions f0442a7\n\nv20.2.1\n\n11 March 2025\n\n\nfix(deps): update dependency music-metadata to v11.0.2 #540\nchore(deps): update typescript-eslint monorepo to v8.26.1 #529\nRelease 20.2.1 c6dff5e\n\nv20.2.0\n\n11 March 2025\n\n\nfeat: scroll to track when playing starts and its not in view b9445d4\nfeat: remove polyfills from project configuration a0517fe\nfeat: add search functionality to playlist with input field and filtering logic b925747\n\nv20.1.4\n\n11 March 2025\n\n\nrefactor: replace BaseSubscribingClass with DestroyRef 72be3d3\nRelease 20.1.4 5e77b33\nfeat: add view transitions to router configuration b2dcbb8\n\nv20.1.3\n\n9 March 2025\n\n\nfeat: enhance ID3 tags extraction and improve metadata handling, refactorings a11eb42\nRelease 20.1.3 305aec6\n\nv20.1.2\n\n9 March 2025\n\n\nRelease 20.1.2 ba13cfe\nrefactor: change to zoneless change detection 3f668a5\n\nv20.1.1\n\n9 March 2025\n\n\nfeat: update typography settings and optimize font loading in HTML 722901c\nRelease 20.1.1 858ff56\n\nv20.1.0\n\n9 March 2025\n\n\nRelease 20.1.0 d78443f\nfeat: refactor cover and playlist components for improved performance, performance hack für visuals f1580e8\nchore: update dependencies in package.json and package-lock.json 9e95c2d\n\nv20.0.1\n\n9 March 2025\n\n\nfeat: updated to material 3 theme, fixed dark mode handling 9b0ad09\nfeat: implement circular waveform visualization and initialize bark scale mapping 46e627b\nfeat: optimize image loading in cover and playlist components using NgOptimizedImage 79c83aa\n\nv20.0.0\n\n8 March 2025\n\n\nfeat: enhance ESLint configuration with Angular rules and TypeScript support 2b942c4\nRelease 20.0.0 d641392\nfeat: update ESLint configuration with TypeScript and SonarJS support, add custom rule overrides ef11066\n\nv19.5.4\n\n8 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.33.0 #539\nRelease 19.5.4 86a63af\nchore: update dependencies and add eslint packages c9dcf09\nfeat:  nearly complete signal refactoring also fixing long standing bugs f3a3520\n\nv19.5.3\n\n2 March 2025\n\n\nfeat: use @let syntax in templates, better VisualizerOptions types b7bb801\nRelease 19.5.3 eac8dd6\n\nv19.5.1\n\n2 March 2025\n\n\nRelease 19.5.1 8ebff84\nfeat: add circular visualization modes for frequency bars and oscilloscope 4e27dea\nfix: make gamepad and wakelock services optional to improve compatibility bb8466d\n\nv19.5.0\n\n2 March 2025\n\n\nRelease 19.5.0 3f2c562\nfix: fix file drop overlay not working as expected 94b7001\nfix: add postcss-html dependency to package.json and package-lock.json 85d2a14\n\nv19.4.15\n\n2 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.32.0 #532\nchore: update dependencies to latest versions b0d0fe4\nRelease 19.4.15 a2b1db1\nfix: update HTML components to self-closing tags 7785053\n\nv19.4.14\n\n27 February 2025\n\n\nchore: update Angular and related dependencies to version 19.2.x d8a2bf9\nRelease 19.4.14 0c889a3\n\nv19.4.13\n\n24 February 2025\n\n\nchore(deps): update actions/upload-artifact action to v4 #527\nRelease 19.4.13 9fb4192\nfix: eslint unicorn autofixes f154aed\nfeat: enhance visuals worker by optimizing data structures and pre-calculating arrays fee270f\n\nv19.4.12\n\n24 February 2025\n\n\nRelease 19.4.12 6c63788\nrefactor: remove unused dependencies 12a71dd\n\nv19.4.11\n\n23 February 2025\n\n\nRelease 19.4.11 d505863\nfix: update ESLint configuration inputs and production exclusions 6bfb6ba\n\nv19.4.10\n\n23 February 2025\n\n\nRelease 19.4.10 17e4083\n\nv19.4.9\n\n23 February 2025\n\n\nRelease 19.4.9 cf13446\nrefactor: us prive functions instead of modules c31aaa6\n\nv19.4.8\n\n23 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.31.2 #522\nrefactor: update ESLint configuration to use ES module syntax and cleanup deps 4dbf4b8\nRelease 19.4.8 0f45127\nchore: update project configuration and add dotenv-cli dependency 063d395\n\nv19.4.7\n\n23 February 2025\n\n\nRelease 19.4.7 4d9ca69\nchore: update HTML templates and ESLint configuration for consistency 33bb6c8\n\nv19.4.6\n\n23 February 2025\n\n\nchore(deps): update Angular and ESLint dependencies to latest versions 00d5b5e\nRelease 19.4.6 ab5a0f8\n\nv19.4.5\n\n4 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.3 #511\nchore(deps): update @swc/core, @types/node, and @typescript-eslint packages to latest versions 4df45ed\nRelease 19.4.5 f52095f\n\nv19.4.4\n\n2 February 2025\n\n\nchore: deps 76ace70\nRelease 19.4.4 072caca\n\nv19.4.3\n\n27 January 2025\n\n\nchore: deps a04aa39\nRelease 19.4.3 e844d5d\n\nv19.4.2\n\n24 January 2025\n\n\nchore: deps d50fcd7\nRelease 19.4.2 2e2cf66\n\nv19.4.1\n\n21 January 2025\n\n\nchore: deps c3062ed\nRelease 19.4.1 e96ef56\nchore: mise 7b8cdeb\n\nv19.4.0\n\n17 January 2025\n\n\nchore: deps 37fa04d\nRelease 19.4.0 155e1fd\nchore: readme, mise, deps 726da93\n\nv19.3.0\n\n14 January 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.1 #483\nchore: update to latest node-vibrant f306ca1\nRelease 19.3.0 ca87d69\n\nv19.2.10\n\n11 January 2025\n\n\nchore: deps a280f97\nRelease 19.2.10 15dded8\n\nv19.2.9\n\n3 January 2025\n\n\nRelease 19.2.9 bd67275\n\nv19.2.8\n\n14 December 2024\n\n\nRelease 19.2.8 af0ef42\n\nv19.2.7\n\n14 December 2024\n\n\nRelease 19.2.7 7d9d809\n\nv19.2.6\n\n11 December 2024\n\n\nchore: deps c042ae8\nchore: updated config to latest nx defaults 0a9aedc\nchore: updated config to latest nx defaults a555517\n\nv19.2.5\n\n7 December 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.28.0 #473\nRevert \"fix: disable npm caching\" f908dd2\nfix: disable npm caching 1a33b93\nRelease 19.2.5 4a42a18\n\nv19.2.4\n\n7 December 2024\n\n\nchore: deps 1a65661\nRelease 19.2.4 a19a09f\n\nv19.2.3\n\n21 November 2024\n\n\nRelease 19.2.3 dc45fe1\nfeat: migrate to application executor 0325a08\n\nv19.2.2\n\n21 November 2024\n\n\nfix: stylelint fixes 2500235\nRelease 19.2.2 b416bff\n\nv19.2.1\n\n21 November 2024\n\n\nRelease 19.2.1 8cab1e2\nfix: migrate jest and eslint to inferred plugins ee8b31b\n\nv19.2.0\n\n21 November 2024\n\n\nchore: input signal migration f8cbc65\nRelease 19.2.0 c363f4e\nfix: pass sampleRate 56a3899\n\nv19.1.1\n\n21 November 2024\n\n\nchore(deps): update angular monorepo to v19 #466\nchore(deps): update w9jds/firebase-action action to v13.26.0 #465\nchore(deps): update angularmaterial monorepo to v19 #467\nchore(config): migrate config renovate.json #468\nchore: use ng-packgr-lite builds, fix jest-preset-angular config b599685\nfix: revert ng-packgr temporarily bb34f11\nRelease 19.1.1 ada6807\n\nv19.1.0\n\n21 November 2024\n\n\nchore: ng 19 0ba1f5d\nRelease 19.1.0 d2765b8\nchore: remove console time 7b38580\n\nv19.0.10\n\n9 November 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.24.2 #460\nfix(deps): update dependency tslib to v2.8.1 #457\nRelease 19.0.10 1333d05\n\nv19.0.9\n\n9 November 2024\n\n\nchore: updates e42b61f\nRelease 19.0.9 fc998b4\n\nv19.0.8\n\n15 October 2024\n\n\nRelease 19.0.8 e4b565b\nfix: do webpack build again 10bf971\n\nv19.0.7\n\n15 October 2024\n\n\nRelease 19.0.7 308bd9f\nfix: use browser-esbuild executor fe4ebfa\n\nv19.0.6\n\n15 October 2024\n\n\nRelease 19.0.6 953bf76\nfix: use browser-esbuild executor a12f9c3\n\nv19.0.5\n\n15 October 2024\n\n\nfix(deps): update dependency tslib to v2.7.0 #450\nchore(deps): update dependency ubuntu to v24 #455\nchore(deps): update w9jds/firebase-action action to v13.22.0 #448\nRelease 19.0.5 592ac3b\n\nv19.0.4\n\n15 October 2024\n\n\nRelease 19.0.4 27acba5\nchore: eslint update (config todo) 97ccbb6\n\nv19.0.3\n\n15 October 2024\n\n\nchore: migrate to inject() 43a40a4\nfix: removed unused angular imports a0e7ce7\nRelease 19.0.3 972b1ee\n\nv19.0.2\n\n15 October 2024\n\n\nRelease 19.0.2 b8ad144\n\nv19.0.1\n\n15 October 2024\n\n\nRelease 19.0.1 7528cd4\n\nv19.0.0\n\n15 October 2024\n\n\nRelease 19.0.0 2bb5430\n\nv18.2.7\n\n15 October 2024\n\n\nchore(deps): updates ad57b9c\nRelease 18.2.7 8448134\nchange to application executor e2e1eb4\n\nv18.2.6\n\n26 August 2024\n\n\ndeps 0174ddf\nRelease 18.2.6 f0ae911\n\nv18.2.5\n\n15 August 2024\n\n\nsignals for coverdisplay, add item to playlist on by one d489b64\nRelease 18.2.5 4a66bde\n\nv18.2.4\n\n15 August 2024\n\n\nRelease 18.2.4 bbda480\nfix: big layout 8d61f2e\n\nv18.2.3\n\n15 August 2024\n\n\nchore: nx update ec1f94a\nRelease 18.2.3 72fa061\n\nv18.2.2\n\n15 August 2024\n\n\nanalyze and report esbuild bundles d597302\nRelease 18.2.2 681d4cd\nanalyze and report esbuild bundles 8626722\n\nv18.2.0\n\n15 August 2024\n\n\nfix test css class, select first in playlist after load when none selected 7a838a9\nRelease 18.2.0 38d27f1\n\nv18.1.1\n\n15 August 2024\n\n\nfeat: better axis handling for gamepad 4d47689\nmore signalös 019de24\nRelease 18.1.1 0f8e394\n\nv18.1.0\n\n15 August 2024\n\n\nRelease 18.1.0 ff778a5\nfeat: removed mobx, use signals for many things 5824006\n\nv18.0.1\n\n15 August 2024\n\n\nchore(deps): update, import types with import type e252172\nchore(deps): update e7aa58d\nRelease 18.0.1 7560dfa\n\nv18.0.0\n\n10 August 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.15.1 #438\nRelease 18.0.0 0858a77\nfix(eslint): older unused imports plugin cdb5380\n\nv17.0.18\n\n10 August 2024\n\n\nchore(deps): update 6878f22\nRelease 17.0.17 027ad79\nRelease 17.0.18 6756668\n\nv17.0.17\n\n10 August 2024\n\n\nUpdate w9jds/firebase-action action to v13.14.2 #431\nchore(deps): update 592cb7a\nRelease 17.0.17 2db5dc7\n\nv17.0.16\n\n29 July 2024\n\n\nmusic-metadata 10 7f90220\nRelease 17.0.16 80d5e14\nremoved webpack 908f395\n\nv17.0.15\n\n29 July 2024\n\n\ndeps ffe5da9\ndeps 469a890\nRelease 17.0.15 80553e8\n\nv17.0.14\n\n11 July 2024\n\n\ndeps 389407a\nRelease 17.0.14 30fec73\n\nv17.0.13\n\n7 July 2024\n\n\nUpdate dependency @typescript-eslint/utils to v8.0.0-alpha.40 #369\nUpdate w9jds/firebase-action action to v13.13.0 #423\ndeps 2389739\nRelease 17.0.13 4040b59\ndeps a0c15a4\n\nv17.0.12\n\n4 July 2024\n\n\ndeps 892689d\nRelease 17.0.12 af8a6b4\n\nv17.0.11\n\n23 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.4 #419\ndeps babdb9f\nRelease 17.0.11 5273759\n\nv17.0.10\n\n23 June 2024\n\n\ndeps 05a441e\nRelease 17.0.10 3e7b9a4\n\nv17.0.9\n\n12 June 2024\n\n\nRelease 17.0.9 a948ad5\ndeps, webstorage update 0e6195d\n\nv17.0.8\n\n12 June 2024\n\n\ndeps, webstorage update 1e660c9\nRelease 17.0.8 64a34dc\n\nv17.0.7\n\n9 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.2 #409\nUpdate dependency tslib to v2.6.3 #411\nRelease 17.0.7 2bb0e78\n\nv17.0.6\n\n9 June 2024\n\n\nnx + deps a1da736\nRelease 17.0.6 41e632f\n\nv17.0.5\n\n25 May 2024\n\n\nUpdate angularmaterial monorepo to v18 #402\nRelease 17.0.4 549bfa1\nRelease 17.0.5 ea932ef\n\nv17.0.4\n\n25 May 2024\n\n\nUpdate angular monorepo to v18 #401\nUpdate w9jds/firebase-action action to v13.10.1 #395\nRelease 17.0.4 f591692\nswitched to node 22 4f70846\n\nv17.0.3\n\n25 May 2024\n\n\nRelease 17.0.3 cb19d50\nenabled eventCoalescing e6fc6eb\n\nv17.0.2\n\n25 May 2024\n\n\nRelease 17.0.2 96bcdfc\nfixed theme 3ce805f\n\nv17.0.1\n\n25 May 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.5 #390\nng 18 7fcd244\nfixed eslint 2346f13\nnx update 4164d59\n\nv16.0.6\n\n28 April 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.2 #381\ndeps 308b3e5\nRelease 16.0.6 3233ed1\naudit fix 2f67e34\n\nv16.0.5\n\n14 April 2024\n\n\ndeps 84ac04c\nRelease 16.0.5 1a30a33\n\nv16.0.4\n\n7 April 2024\n\n\nRelease 16.0.4 5bab2a7\n\nv16.0.3\n\n16 March 2024\n\n\nRelease 16.0.3 0338bd7\nnew browserlist 013e987\nonly include Buffer in Node Polfills d7b3ea2\n\nv16.0.2\n\n16 March 2024\n\n\nRelease 16.0.2 0629b20\nfixed nx cloud token 870e50b\n\nv16.0.1\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.5.1 #372\nRelease 16.0.1 fe15d24\nfixed nx cloud token 6d2a8fe\n\nv16.0.0\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.3.1 #368\ndeps updated 11ae344\nnx update 0b2a071\nangular update c35bc38\n\nv15.1.17\n\n24 February 2024\n\n\nRelease 15.1.17 f18fa1f\n\nv15.1.16\n\n24 February 2024\n\n\nRelease 15.1.16 d2e1df8\n\nv15.1.14\n\n10 February 2024\n\n\nUpdate nrwl/nx-set-shas action to v4 #362\nUpdate w9jds/firebase-action action to v13.2.1 #358\nRelease 15.1.14 09eba6b\nRevert \"try nx agents\" 90e9f96\ntry nx agents 7362da7\n\nv15.1.13\n\n10 February 2024\n\n\ndeps cace929\nRelease 15.1.13 04dca08\nremoved last modules 0486e25\n\nv15.1.12\n\n4 February 2024\n\n\nnx update ccbf388\nRelease 15.1.12 7a8645a\n\nv15.1.11\n\n28 January 2024\n\n\nUpdate w9jds/firebase-action action to v13.1.0 #338\nUpdate actions/cache action to v4 #343\nRelease 15.1.11 1e340e1\n\nv15.1.10\n\n28 January 2024\n\n\ndeps 64d30e1\nRelease 15.1.10 a9a8e68\n\nv15.1.9\n\n20 January 2024\n\n\nRelease 15.1.9 8596088\n\nv15.1.8\n\n10 January 2024\n\n\nstylelint fixes ac02523\nRelease 15.1.8 4c8c0ad\nlint fixes 764711a\n\nv15.1.7\n\n9 January 2024\n\n\ndeps 362d9db\nRelease 15.1.7 92d89c3\n\nv15.1.6\n\n28 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #312\nRelease 15.1.6 339bd87\n\nv15.1.5\n\n28 December 2023\n\n\ndeps 4ef0700\nRelease 15.1.5 8ee0628\n\nv15.1.4\n\n15 December 2023\n\n\ndeps 998ad7c\nRelease 15.1.4 5c1346d\n\nv15.1.3\n\n10 December 2023\n\n\nRelease 15.1.3 d0b8d34\ndeps 6966d17\nnx update 678aef6\n\nv15.1.2\n\n8 December 2023\n\n\nfix seeking with slider, @switch statt @if 9934470\nRelease 15.1.2 1ebb626\n\nv15.1.1\n\n8 December 2023\n\n\nRelease 15.1.1 586ef29\nfix deploy f36895a\n\nv15.1.0\n\n8 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #310\noptimizations and typing f5c6154\noptimizations 05ddceb\noptimized icon set converter 6bd60c5\n\nv15.0.9\n\n8 December 2023\n\n\ndeps 02d4bfb\ntsconfig refactoring 7445539\nRelease 15.0.9 58fb13b\n\nv15.0.8\n\n30 November 2023\n\n\ntsconfig refactoring 275e54d\nRelease 15.0.8 f3351c2\n\nv15.0.7\n\n30 November 2023\n\n\nUpdate w9jds/firebase-action action to v12.9.0 #301\nRelease 15.0.7 7e45969\n\nv15.0.6\n\n30 November 2023\n\n\nRelease 15.0.6 063950a\ndeps 7522583\n\nv15.0.5\n\n13 November 2023\n\n\ndeps, prettier cbc6e41\nRelease 15.0.5 3bccffb\n\nv15.0.4\n\n10 November 2023\n\n\nRelease 15.0.4 1c4c67e\n\nv15.0.3\n\n10 November 2023\n\n\nRelease 15.0.3 90df676\n\nv15.0.2\n\n10 November 2023\n\n\nRelease 15.0.2 29878bc\neslint flat config 8c297a1\n\nv15.0.1\n\n10 November 2023\n\n\nNEW control flow syntax 84e91e3\nRelease 15.0.1 9dfd762\nstyleUrl instead of urls aefd739\n\nv15.0.0\n\n9 November 2023\n\n\nUpdate angular monorepo to v17 (major) #288\nUpdate angularmaterial monorepo to v17 (major) #289\nUpdate w9jds/firebase-action action to v12.8.0 #286\nUpdate actions/setup-node action to v4 #287\nRelease 15.0.0 7f1e3c1\nUpdate angular monorepo to v17 43d9b1f\nnodejs 20 builds 6f6ac17\n\nv14.1.23\n\n9 November 2023\n\n\nnx update a358906\nRelease 14.1.23 55f3319\nnx update dbc354f\n\nv14.1.20\n\n14 October 2023\n\n\nRelease 14.1.20 8d072f1\n\nv14.1.19\n\n14 October 2023\n\n\nUpdate dependency @types/node to v20.8.6 #242\nUpdate w9jds/firebase-action action to v12.6.2 #272\nRelease 14.1.19 314f02a\nRelease 14.1.18 7cf10f9\n\nv14.1.18\n\n14 October 2023\n\n\nRelease 14.1.18 a8bb04b\n\nv14.1.17\n\n14 October 2023\n\n\nRelease 14.1.17 7a66d5a\n\nv14.1.16\n\n14 October 2023\n\n\nRelease 14.1.16 4ec2e90\n\nv14.1.15\n\n7 October 2023\n\n\nRelease 14.1.15 3f73f6e\n\nv14.1.14\n\n7 October 2023\n\n\nRelease 14.1.14 db2122c\n\nv14.1.13\n\n7 October 2023\n\n\nRelease 14.1.13 a3ae7df\n\nv14.1.12\n\n7 October 2023\n\n\nRelease 14.1.12 0d0dfcb\n\nv14.1.11\n\n7 October 2023\n\n\nRelease 14.1.11 5aecee8\n\nv14.1.10\n\n7 October 2023\n\n\nRelease 14.1.10 d200e57\n\nv14.1.9\n\n23 September 2023\n\n\nRelease 14.1.9 29f1cbe\nupdated from deprecated SwUpdate props bef3e3e\n\nv14.1.8\n\n23 September 2023\n\n\nupdated from deprecated SwUpdate props 2f592f3\nRelease 14.1.8 07d6959\n\nv14.1.7\n\n23 September 2023\n\n\ndeps 1ffd91e\nRelease 14.1.7 6fc1434\n\nv14.1.6\n\n23 September 2023\n\n\nRelease 14.1.6 8b184a4\n\nv14.1.5\n\n21 September 2023\n\n\nRelease 14.1.5 4695772\nfix build fc633d2\n\nv14.1.4\n\n7 September 2023\n\n\nBump protobufjs and google-gax #261\nUpdate dependency tslib to v2.6.2 #262\nUpdate actions/checkout action to v4 #264\nRelease 14.1.4 a6386d2\nfix build b7303ed\n\nv14.1.3\n\n7 September 2023\n\n\nBump word-wrap from 1.2.3 to 1.2.4 #250\nUpdate dependency tslib to v2.6.1 #251\nRelease 14.1.3 9ce5e31\n\nv14.1.2\n\n3 August 2023\n\n\nRelease 14.1.2 8f60273\n\nv14.1.1\n\n7 July 2023\n\n\nUpdate dependency tslib to v2.6.0 #241\nBump @grpc/grpc-js and google-gax #240\nUpdate w9jds/firebase-action action to v12 #235\nRelease 14.1.1 f78467f\nprettier 3ff6d19\n\nv14.1.0\n\n7 July 2023\n\n\nprettier 3 + precommit hooks cd5831f\nRelease 14.1.0 d612735\nprettier 08b1238\n\nv14.0.13\n\n17 June 2023\n\n\nRelease 14.0.13 a10893b\nremoved unused type polyfills af2926f\n\nv14.0.12\n\n17 June 2023\n\n\nRelease 14.0.12 ea688e0\n\nv14.0.11\n\n17 June 2023\n\n\nRelease 14.0.11 32c3f4d\n\nv14.0.10\n\n17 June 2023\n\n\ndeps 8c90a58\nRelease 14.0.10 1d0b823\n\nv14.0.9\n\n8 June 2023\n\n\ndeps fdad632\nRelease 14.0.9 331bb8f\n\nv14.0.8\n\n3 June 2023\n\n\nBump vm2 from 3.9.17 to 3.9.19 #220\nUpdate dependency tslib to v2.5.3 #223\nRelease 14.0.8 8b9fdf5\n\nv14.0.7\n\n3 June 2023\n\n\nuse run-many for tests 97d68d0\nRelease 14.0.7 c82e02b\n\nv14.0.6\n\n3 June 2023\n\n\ndeps 752aa76\nRelease 14.0.6 f038069\n\nv14.0.5\n\n13 May 2023\n\n\ndeps 28cff25\nRelease 14.0.5 20cf16a\n\nv14.0.4\n\n6 May 2023\n\n\nremoved unused js file 5ffbd62\nRelease 14.0.4 7fb56e0\n\nv14.0.3\n\n6 May 2023\n\n\nUpdate dependency jest-preset-angular to v13.1.0 #208\nUpdate dependency @types/node to v18.16.5 #206\nRelease 14.0.3 cdf04e9\ne2e fixed 2708806\n\nv14.0.2\n\n6 May 2023\n\n\nUpdate w9jds/firebase-action action to v11.30.1 #207\ne2e fixed and removed separate project 74e7c83\nRelease 14.0.1 f386a36\nRelease 14.0.2 1081f8e\n\nv14.0.1\n\n6 May 2023\n\n\ne2e fixed and removed separate project d0cd94f\nRelease 14.0.1 bb4e0ce\n\nv14.0.0\n\n6 May 2023\n\n\nnx 16, angular 16, deps 826cbe5\nRelease 14.0.0 ec067ee\nmusic metadata removed 2eb6cae\n\nv13.3.5\n\n13 April 2023\n\n\nBump vm2 #200\nUpdate dependency music-metadata to v7.13.4 #195\nRelease 13.3.5 845189d\n\nv13.3.4\n\n13 April 2023\n\n\nRelease 13.3.4 eab1d35\n\nv13.3.3\n\n10 April 2023\n\n\nRelease 13.3.3 0129566\n\nv13.3.2\n\n25 March 2023\n\n\nRelease 13.3.2 5a92c07\n\nv13.3.1\n\n25 March 2023\n\n\nRelease 13.3.1 42a58d9\n\nv13.3.0\n\n18 March 2023\n\n\nUpdate w9jds/firebase-action action to v11.24.1 #181\ndeps + sidenav fixes e11e3bd\nRelease 13.3.0 3acc7bf\n\nv13.2.6\n\n15 March 2023\n\n\ndeps 0dc096d\nRelease 13.2.6 6d67484\n\nv13.2.5\n\n5 March 2023\n\n\nstandalone bootstrap 6aed158\nRelease 13.2.5 4c272db\n\nv13.2.4\n\n5 March 2023\n\n\nBump http-cache-semantics from 4.1.0 to 4.1.1 #170\nBump cacheable-request from 10.2.5 to 10.2.7 #171\nUpdate dependency tslib to v2.5.0 #164\nRelease 13.2.4 392b41d\ndeps a4b6dab\n\nv13.2.3\n\n5 March 2023\n\n\nRelease 13.2.3 f54702d\n\nv13.2.2\n\n5 March 2023\n\n\nRelease 13.2.2 d9677d0\n\nv13.2.1\n\n22 February 2023\n\n\ndeps 1730f16\nRelease 13.2.1 ba634aa\nuse nx for all 51a51dd\n\nv13.2.0\n\n22 February 2023\n\n\nUpdate w9jds/firebase-action action to v11.22.0 #172\nRelease 13.2.0 4035819\nstandalone migration steps 1 and 2 32e3ad6\nstandalone migration steps 1 and 2 a40c9e8\n\nv13.1.12\n\n22 February 2023\n\n\nRelease 13.1.12 53818e8\n\nv13.1.11\n\n28 January 2023\n\n\ndeps b4d909a\nRelease 13.1.11 d8bf0e7\n\nv13.1.10\n\n22 January 2023\n\n\nRelease 13.1.10 1c7fa4e\n\nv13.1.9\n\n20 January 2023\n\n\ndeps 4781958\nRelease 13.1.9 505e77f\n\nv13.1.8\n\n15 January 2023\n\n\nRelease 13.1.8 580c58d\n\nv13.1.7\n\n15 January 2023\n\n\nUpdate dependency music-metadata to v7.13.3 #150\ndeps 8b6bfeb\nRelease 13.1.7 d516e97\n\nv13.1.6\n\n13 January 2023\n\n\nRelease 13.1.6 166c79d\ndeps 8ec046f\n\nv13.1.5\n\n7 January 2023\n\n\nlayout fixes f3f4ae7\nRelease 13.1.5 eaa27a6\n\nv13.1.4\n\n7 January 2023\n\n\nRelease 13.1.4 49d8293\nfixed e2e 33d73d9\n\nv13.1.3\n\n7 January 2023\n\n\nUpdate dependency firebase-tools to v11.20.0 #147\nUpdate dependency postcss to v8.4.21 #146\nUpdate dependency eslint-config-prettier to v8.6.0 #139\nUpdate angularmaterial monorepo to v15.0.4 #144\nUpdate dependency husky to v8.0.3 #140\nUpdate w9jds/firebase-action action to v11.18.0 #131\nUpdate dependency cypress to v12.3.0 #141\nUpdate nrwl monorepo to v15.4.4 #135\nUpdate dependency eslint to v8.31.0 #138\nUpdate typescript-eslint monorepo to v5.48.0 #58\nUpdate dependency music-metadata to v7.13.1 #142\nRelease 13.1.3 5302fb4\ndeps 801cd46\nmdc migration, vertical sliders, icons size directive removed ffa9bb5\n\nv13.1.2\n\n30 December 2022\n\n\nRelease 13.1.2 c339811\n\nv13.1.1\n\n23 December 2022\n\n\nvisualizers plug their own analyser cea2824\nunsubscribe and disconnect analysers 6a8d3be\nRelease 13.1.1 72575f6\n\nv13.1.0\n\n23 December 2022\n\n\nRelease 13.1.0 1989419\nrenamed song to track, us playState obeservable for better input and CD handling 47b6776\n\nv13.0.20\n\n23 December 2022\n\n\ntransparency control for visuals 7445cc4\nRelease 13.0.20 62cfee7\n\nv13.0.19\n\n23 December 2022\n\n\nstandalone components 620afb8\nno max db slider, mindb range changed, better default f7913c1\nRelease 13.0.19 9280e3a\n\nv13.0.18\n\n22 December 2022\n\n\nRelease 13.0.18 4c16c1e\n\nv13.0.16\n\n22 December 2022\n\n\nRelease 13.0.16 77707fb\n\nv13.0.13\n\n22 December 2022\n\n\nRelease 13.0.13 6f12a37\n\nv13.0.12\n\n19 December 2022\n\n\nremoved d3, use bark scale for bar spectrogram 2bcfefb\nRelease 13.0.12 e336db1\n\nv13.0.11\n\n18 December 2022\n\n\nmerged readme 3f449ec\nRelease 13.0.11 47e3527\nbadges 5f1d097\n\nv13.0.10\n\n17 December 2022\n\n\nRelease 13.0.10 62c64c5\nmoved style to component 006b52c\ntodo 28548eb\n\nv13.0.9\n\n17 December 2022\n\n\nfixed audioContext resume, added gain to eq cb797bc\nRelease 13.0.9 8c56320\n\nv13.0.8\n\n17 December 2022\n\n\nRelease 13.0.8 6f1cdb4\n\nv13.0.7\n\n17 December 2022\n\n\nRelease 13.0.7 d895f0f\n\nv13.0.6\n\n17 December 2022\n\n\nRelease 13.0.6 17266a3\n\nv13.0.5\n\n17 December 2022\n\n\nUpdate angularmaterial monorepo to v15 (major) #108\nRelease 13.0.5 ddab2f3\nremoved uneeded ts-ignores a1a074f\nUpdate angularmaterial monorepo to v15 a4de6d4\n\nv13.0.3\n\n17 December 2022\n\n\nRelease 13.0.3 7f8ad27\nuse config file without .json endings bfd4685\n\nv13.0.2\n\n17 December 2022\n\n\nrefactored type imports and fixed offscreencanvas types 067bbea\nRelease 13.0.2 292ed5a\ncustom typings moved to folders c3208e7\n\nv13.0.1\n\n17 December 2022\n\n\nRelease 13.0.1 667c54e\nfixed debug version bf7b3a9\nfixed debug version 6cee32d\n\nv13.0.0\n\n16 December 2022\n\n\nRelease 13.0.0 b3905a0\nfixed playlist bulk loading 834f706\n\nv12.0.16\n\n16 December 2022\n\n\nRelease 12.0.16 1de2a3c\nfixed playlist bulk loading 8e7ecec\n\nv12.0.15\n\n16 December 2022\n\n\nRelease 12.0.15 5a7054c\nfixed test 9eb089c\n\nv12.0.14\n\n16 December 2022\n\n\nabstacted all audio stuff in audio service 403737f\neq auf mobile funkt auf mobile, flex layout refactoring eccaa4a\nreplaced angular-flex-layout with css 03a0491\n\nv12.0.13\n\n15 December 2022\n\n\nmaterial 15 migration dc55360\nRelease 12.0.13 37f76dc\nsimpler lib 86be7eb\n\nv12.0.12\n\n15 December 2022\n\n\nlibrary ohne filter 8dfc611\nRelease 12.0.12 6d26668\n\nv12.0.11\n\n14 December 2022\n\n\nRelease 12.0.11 635e855\ndeps, eslintrc, vibrant-wasm entfernt 431a9ad\n\nv12.0.10\n\n12 December 2022\n\n\nRelease 12.0.10 f954f07\nappend audioElement to document ce588f9\n\nv12.0.9\n\n12 December 2022\n\n\nseperated audio part into AudioService 0f8326e\nsimplified init of audio 869dddb\nRelease 12.0.9 17a1677\n\nv12.0.8\n\n11 December 2022\n\n\nfixed smaller things, no prdefinded samplerate 986dd30\nRelease 12.0.8 6b9ff38\ntodo 2bdc500\n\nv12.0.7\n\n11 December 2022\n\n\nRelease 12.0.7 a0aa269\nmoved init of seekto handler to constructor 2434ec6\n\nv12.0.6\n\n11 December 2022\n\n\nRelease 12.0.6 14768e6\n\nv12.0.5\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 8738efc\nRelease 12.0.4 fee5161\nRelease 12.0.5 23061dd\n\nv12.0.4\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 81bb449\nRelease 12.0.4 025a430\nUpdate TODO.md 009b48d\n\nv12.0.3\n\n11 December 2022\n\n\nRelease 12.0.3 c398655\n\nv12.0.2\n\n11 December 2022\n\n\nRelease 12.0.2 2bfabd0\n\nv12.0.1\n\n11 December 2022\n\n\nmoved id3tags extraction to worker 9b11a20\nRelease 12.0.1 6c27523\nUpdate devcontainer.json b286be9\n\nv12.0.0\n\n10 December 2022\n\n\nRelease 12.0.0 6ee2324\nadded deps vibrant-wasm and custom webpack config to ttry threads.js 8337321\ncustom webpack config for threads.js workers (still not working, disabled) 55e56b8\n\nv11.5.14\n\n7 December 2022\n\n\nstylelint fixes and config 52d642b\nRelease 11.5.14 b5dfb18\n\nv11.5.13\n\n7 December 2022\n\n\nRelease 11.5.13 a867afe\nstylelint fixes and config 122856c\n\nv11.5.12\n\n7 December 2022\n\n\nRelease 11.5.12 c4668f1\nmusic meatadata, file-drop-overlay as standalone component 2e5b003\nprovide all services in root ca80a43\n\nv11.5.11\n\n7 December 2022\n\n\nRelease 11.5.11 930dc28\n\nv11.5.10\n\n7 December 2022\n\n\ndeps a552ea9\nRelease 11.5.10 d29b113\n\nv11.5.9\n\n6 December 2022\n\n\nRelease 11.5.9 18a45bd\ntags + eslint rule 864d7e1\n\nv11.5.8\n\n6 December 2022\n\n\ndep graph in gh pages, release-it config erweitert um neu generierte dateien mit zu committen 73bd100\nlibs cleanup 59f4ac4\nRelease 11.5.8 24e4c9a\n\nv11.5.7\n\n6 December 2022\n\n\nlibs cleanup 60dbedc\nRelease 11.5.7 2d68f3b\n\nv11.5.6\n\n6 December 2022\n\n\nremoved all dummy tests 7defe9b\nRelease 11.5.6 d1b4f51\nrun tests in github actions 14148e0\n\nv11.5.5\n\n6 December 2022\n\n\nRelease 11.5.5 73b9b59\n\nv11.5.4\n\n6 December 2022\n\n\ncompodoc reenabled 7c00473\nsvgo updated 19bf065\nRelease 11.5.4 8df3910\n\nv11.5.3\n\n6 December 2022\n\n\ncompodoc reenabled 540fdd8\nRelease 11.5.3 7c5bbe5\n\nv11.5.2\n\n5 December 2022\n\n\ncompodoc reenabled 2ce3664\ncompodoc reenabled b7be438\ncompodoc reenabled 29f2b37\n\nv11.5.1\n\n5 December 2022\n\n\nautofix unused imports, removed tslint 71bd586\nautofix unused imports 6d6f310\nRelease 11.5.1 77091b9\n\nv11.5.0\n\n5 December 2022\n\n\nbetter thum quality, bigger coverart in playlist, tooltips, better button color handling bffc736\nRelease 11.5.0 670b3af\n\nv11.4.11\n\n5 December 2022\n\n\nRelease 11.4.11 e615145\n\nv11.4.10\n\n5 December 2022\n\n\nreinstall 418b524\nRelease 11.4.10 eaf46cf\n\nv11.4.9\n\n5 December 2022\n\n\nRelease 11.4.9 3e58c71\n\nv11.4.8\n\n5 December 2022\n\n\nRelease 11.4.8 a409033\nservices in app integriert 1857720\n\nv11.4.7\n\n5 December 2022\n\n\nremoved storybook 9d81efd\nservices in app integriert ce621ee\nmoved visuals lib to app e992cb4\n\nv11.4.6\n\n5 December 2022\n\n\nRelease 11.4.6 f9c93ce\n\nv11.4.5\n\n5 December 2022\n\n\nRelease 11.4.5 839a546\n\nv11.4.3\n\n5 December 2022\n\n\nRelease 11.4.3 50b7005\n\nv11.4.2\n\n5 December 2022\n\n\nRelease 11.4.2 0674adf\n\nv11.4.1\n\n5 December 2022\n\n\nRelease 11.4.1 7ccbc95\n\nv11.4.0\n\n5 December 2022\n\n\nrefactored libs to app, fixed time slider 133059f\nRelease 11.4.0 68d9939\n\nv11.3.1\n\n4 December 2022\n\n\nRelease 11.3.1 7493e98\nprevent lib crossing 3fbfb97\n\nv11.3.0\n\n4 December 2022\n\n\nRelease 11.3.0 ecf45e6\nbetter color usage 965f5d8\nbetter color usage f209ddb\n\nv11.2.0\n\n4 December 2022\n\n\ndeps, better default colors 569161e\nRelease 11.2.0 efc9aad\n\nv11.1.2\n\n4 December 2022\n\n\nRelease 11.1.2 8d47dd4\nfixed visualizer color updating too late e99d4f2\n\nv11.1.1\n\n4 December 2022\n\n\nRelease 11.1.1 287138c\n\nv11.1.0\n\n4 December 2022\n\n\noptimized musicbrainz requests, fixed embedded cover handling 7bebf2d\nRelease 11.1.0 707a0cb\n\nv11.0.0\n\n4 December 2022\n\n\nfixed several metadata related problems, setting for use of embedded tag covers 1745489\nRelease 11.0.0 6c219df\ntodo chromaprint-wasm 2c0f612\n\nv10.3.2\n\n1 December 2022\n\n\nRelease 10.3.2 6fdfa5a\n\nv10.3.1\n\n1 December 2022\n\n\nRelease 10.3.1 05b4ddd\nupdated firebase hosting config and actions for deployment f201082\nupdated firebase hosting config and actions for deployment 0c91659\n\nv10.3.0\n\n1 December 2022\n\n\nRelease 10.3.0 50dbff9\nupdated firebase hosting config and actions for deployment 1455d32\n\nv10.2.0\n\n30 November 2022\n\n\nRelease 10.2.0 7593825\nupdated firebase hosting config and actions for deployment b80e2ea\n\nv10.1.0\n\n30 November 2022\n\n\nupdated firebase hosting config and actions for deployment 02bde5d\nRelease 10.1.0 ffc8723\nupdated github actions 86bda79\n\nv10.0.4\n\n30 November 2022\n\n\ncypress migration to 11 16d8b1b\nRelease 10.0.4 6bf609d\nupdate nodejs to 18 for github actions 16925cf\n\nv10.0.3\n\n30 November 2022\n\n\ngot rid of variables.scss ad7e0f1\nRelease 10.0.3 63f69d0\n\nv10.0.2\n\n30 November 2022\n\n\nRelease 10.0.2 2a99961\n\nv10.0.1\n\n30 November 2022\n\n\nRelease 10.0.1 a9a9c0b\n\nv10.0.0\n\n30 November 2022\n\n\nng15 521e049\nng 15 cleanup, mobx update 0f6c72b\nmaterial 14 1e96bc3\n\nv9.2.4\n\n19 March 2022\n\n\nupdated deps eaeb47a\nRelease 9.2.4 61721ca\njb env 4bdbceb\n\nv9.2.3\n\n19 December 2021\n\n\nupdates 5061051\nRelease 9.2.3 a7f82ab\n\nv9.2.2\n\n9 December 2021\n\n\nupdates 2427749\nRelease 9.2.2 934d323\n\nv9.2.1\n\n20 November 2021\n\n\nRelease 9.2.1 60d5b05\n\nv9.2.0\n\n20 November 2021\n\n\nUpdate dependency @angular/cdk to v12.2.13 #21\nPin dependencies #20\nUpdate dependency ng-packagr to v12.2.5 #17\nUpdate dependency @angular/material to v12.2.13 #15\nUpdate angular monorepo to v12.2.13 #13\nConfigure Renovate #11\nnx 13.2 02e548c\nRelease 9.2.0 22ec300\nmain branch 63600c3\n\nv9.1.3\n\n16 November 2021\n\n\nnx update, nx-stylelint, nx-compodoc f06b116\nRelease 9.1.3 de5bda9\n\nv9.1.2\n\n20 October 2021\n\n\nupdates 8268a8b\nRelease 9.1.2 ab89f63\ntodos e486f52\n\nv9.1.1\n\n4 October 2021\n\n\nprevent duplicates in playlist, drag handle on avatar b6729e6\nRelease 9.1.1 eff95d0\n\nv9.1.0\n\n4 October 2021\n\n\nfile handling api with origin trial d3bca3a\nRelease 9.1.0 6cab435\n\nv9.0.11\n\n2 October 2021\n\n\nupdates 397399b\nRelease 9.0.11 96dbdf6\n\nv9.0.10\n\n5 September 2021\n\n\nRelease 9.0.10 112db1a\n\nv9.0.9\n\n5 September 2021\n\n\nRelease 9.0.9 9458a12\n\nv9.0.8\n\n19 August 2021\n\n\nRelease 9.0.8 cd620b6\n\nv9.0.7\n\n19 August 2021\n\n\nRelease 9.0.7 600f7e6\n\nv9.0.6\n\n19 August 2021\n\n\nRelease 9.0.6 c08196a\ndeps 6b5e613\n\nv9.0.5\n\n19 August 2021\n\n\nRelease 9.0.5 c51af5f\n\nv9.0.4\n\n19 August 2021\n\n\ndeps 43463ab\nRelease 9.0.4 cf00688\n\nv9.0.3\n\n24 July 2021\n\n\ndeps, nx-cloud ada5e83\nRelease 9.0.3 bb4a1a8\n\nv9.0.2\n\n24 July 2021\n\n\ndeps, nx-cloud 5cbeb5b\nRelease 9.0.2 49a76e8\n\nv9.0.1\n\n24 July 2021\n\n\ndeps b99bf0c\nRelease 9.0.1 cbab637\n\nv9.0.0\n\n9 July 2021\n\n\nfixed release-it 8d3ed72\nRelease 9.0.0 5467c6f\n\nv8.1.10\n\n9 July 2021\n\n\nRelease 8.1.10 be90110\n\nv8.1.9\n\n9 July 2021\n\n\nfixed release-it a90639a\nRelease 8.1.9 6d52ad4\n\nv8.1.8\n\n9 July 2021\n\n\nts 4.4, media session types intergrated in ts, deps fd45c70\nRelease 8.1.8 ff7cdad\n\nv8.1.7\n\n8 July 2021\n\n\nRelease 8.1.7 0bde446\n\nv8.1.6\n\n8 July 2021\n\n\ndeps 128a3c3\nRelease 8.1.6 d64a3c3\n\nv8.1.5\n\n2 July 2021\n\n\nRelease 8.1.5 ef22e4a\nlayout fixed dbb788d\n\nv8.1.4\n\n2 July 2021\n\n\nrefactored scss to @use, fixed build 6b0ec83\nRelease 8.1.4 ebab8da\n\nv8.1.3\n\n2 July 2021\n\n\nRelease 8.1.3 0843a41\n\nv8.1.2\n\n2 July 2021\n\n\nfixed types 07de52a\nRelease 8.1.2 00b47ed\n\nv8.1.1\n\n2 July 2021\n\n\nmigrated to eslint and per project config 4feefcd\nRelease 8.1.1 7762874\n\nv8.1.0\n\n26 June 2021\n\n\nupdates e2a0794\nRelease 8.1.0 86a18bb\n\nv8.0.1\n\n26 May 2021\n\n\nRelease 8.0.1 52bf10d\n\nv8.0.0\n\n26 May 2021\n\n\nRelease 7.1.1 c78b2bf\nRelease 8.0.0 2f0d555\n\nv7.2.0\n\n26 May 2021\n\n\nRelease 7.2.0 73ed2ca\nupdates 774ffed\n\nv7.1.1\n\n26 May 2021\n\n\nupdates 2a427ed\nRelease 7.1.1 b73ce66\n\nv7.1.0\n\n9 May 2021\n\n\n30fps visualizer, sortable playlist cd2a934\nRelease 7.1.0 8377116\n\nv7.0.6\n\n9 May 2021\n\n\nRelease 7.0.6 84a2466\nbitrate rounding cbef1c8\n\nv7.0.5\n\n9 May 2021\n\n\nRelease 7.0.5 9c56a21\n\nv7.0.4\n\n9 May 2021\n\n\nbetter title display 51154fe\nRelease 7.0.4 72dafd7\n\nv7.0.3\n\n9 May 2021\n\n\ndeps e36192c\nRelease 7.0.3 7553170\ntodos 51e219a\n\nv7.0.2\n\n9 May 2021\n\n\nfixed navigation 9767ad0\nRelease 7.0.2 59f1df2\n\nv7.0.1\n\n9 May 2021\n\n\nmetadata settings and ui cleanup 3797092\nRelease 6.7.3 6841a21\nRelease 7.0.0 0d76c85\n\nv7.0.0\n\n9 May 2021\n\n\nmetadata settings and ui cleanup b2b5088\nRelease 7.0.0 8c47814\n\nv6.7.4\n\n7 May 2021\n\n\nRelease 6.7.4 2ab7cc1\ncypress studio activated 4eac2a7\ncypress studio activated 6bc0773\n\nv6.7.3\n\n7 May 2021\n\n\nRelease 6.7.3 6841a21\nignore iml e5de213\n\nv6.7.2\n\n5 May 2021\n\n\ngithub actions with node_modules cache 4f91524\nRelease 6.7.2 07ec810\n\nv6.7.1\n\n5 May 2021\n\n\ncypress updated and window.showOpenFilePicker overwritten 32570e0\nRelease 6.7.1 fd18536\n\nv6.7.0\n\n4 May 2021\n\n\ndev deps dc41223\nRelease 6.7.0 f34b7cf\n\nv6.6.7\n\n25 April 2021\n\n\nfixed cypress tests and mobx 00399df\nRelease 6.6.7 bd0ddc3\n\nv6.6.6\n\n25 April 2021\n\n\nRelease 6.6.6 d690072\n\nv6.6.5\n\n25 April 2021\n\n\nRelease 6.6.5 ea63800\n\nv6.6.4\n\n25 April 2021\n\n\ndeps and husky updated 120476b\nRelease 6.6.4 20110c3\n\nv6.6.3\n\n20 April 2021\n\n\nRelease 6.6.3 ee83304\nreadme badges 09ae300\n\nv6.6.2\n\n15 April 2021\n\n\nRelease 6.6.2 e933c61\n\nv6.6.1\n\n15 April 2021\n\n\nRelease 6.6.1 221781e\n\nv6.6.0\n\n14 April 2021\n\n\nRelease 6.6.0 d254989\n\nv6.5.9\n\n11 March 2021\n\n\ndependencies 2119d47\nRelease 6.5.9 c64cd79\n\nv6.5.8\n\n4 March 2021\n\n\nRelease 6.5.8 f401a49\n\nv6.5.7\n\n4 March 2021\n\n\nRelease 6.5.7 49b1735\n\nv6.5.6\n\n4 February 2021\n\n\nRelease 6.5.6 045b043\n\nv6.5.5\n\n1 February 2021\n\n\nRelease 6.5.5 f4324a4\n\nv6.5.4\n\n29 January 2021\n\n\nfixed test 0038838\nRelease 6.5.4 8c75c5f\n\nv6.5.3\n\n28 January 2021\n\n\nRelease 6.5.3 13bf8e2\n\nv6.5.2\n\n21 January 2021\n\n\nRelease 6.5.2 1c876b6\nfixed build d2f46f8\n\nv6.5.1\n\n21 January 2021\n\n\nupdates 120f02a\nRelease 6.5.1 46c60ce\n\nv6.5.0\n\n14 January 2021\n\n\nRelease 6.5.0 e4ec6c1\n\nv6.4.1\n\n14 January 2021\n\n\nchangelog d629a20\nRelease 6.4.1 3d1f63c\n\nv6.4.0\n\n14 January 2021\n\n\nremoved token 51304c2\nRelease 6.4.0 756dc90\n\nv6.3.1\n\n14 January 2021\n\n\nRelease 6.3.1 e727ac0\n\nv6.3.0\n\n14 January 2021\n\n\nrelease-it 5321e86\nRelease 6.3.0 db48fe2\n\nv6.2.6\n\n14 January 2021\n\n\nrelease v6.2.6 ae202ad\n\nv6.2.5\n\n14 January 2021\n\n\nrelease v6.2.5 c20efb2\n\nv6.2.4\n\n14 January 2021\n\n\nci cd 8da74bb\nrelease v6.2.4 f12cad8\n\nv6.2.3\n\n12 January 2021\n\n\nrelease v6.2.3 78fcf7a\n\nv6.2.2\n\n20 December 2020\n\n\nnrwl 11 b2ed530\nrelease v6.2.2 73050ff\n\nv6.2.1\n\n15 December 2020\n\n\nnrwl 11 f1f709b\nrelease v6.2.1 5101ea6\nnrwl 11 8a371a0\n\nv6.2.0\n\n12 December 2020\n\n\nrelease v6.2.0 ef650c5\n\nv6.1.1\n\n8 December 2020\n\n\nrelease v6.1.1 e6660e2\n\nv6.1.0\n\n3 December 2020\n\n\nrelease v6.1.0 f8b7451\n\nv6.0.1\n\n21 November 2020\n\n\nrelease v6.0.1 c0d5ae4\n\nv6.0.0\n\n21 November 2020\n\n\nng11 0960760\nprettier ab98677\nrelease v6.0.0 79d861d\n\nv5.2.12\n\n28 October 2020\n\n\nrelease v5.2.12 40cc765\n\nv5.2.11\n\n28 October 2020\n\n\nrelease v5.2.11 c0c9413\n\nv5.2.10\n\n28 October 2020\n\n\nrelease v5.2.10 f4928f5\n\nv5.2.9\n\n28 October 2020\n\n\nrelease v5.2.9 04b4812\n\nv5.2.8\n\n28 October 2020\n\n\nrelease v5.2.8 4c8f851\n\nv5.2.7\n\n28 October 2020\n\n\nrelease v5.2.7 b65204b\n\nv5.2.6\n\n28 October 2020\n\n\nrelease v5.2.6 f24dcc7\n\nv5.2.5\n\n28 October 2020\n\n\nrelease v5.2.5 6c6f88c\nprettier b20fd36\n\nv5.2.4\n\n28 October 2020\n\n\nMediaSession service 5742e12\nrelease v5.2.4 5059439\n\nv5.2.3\n\n27 October 2020\n\n\nrelease v5.2.3 d4abfdc\n\nv5.2.2\n\n27 October 2020\n\n\nrelease v5.2.2 478c88a\n\nv5.2.1\n\n26 October 2020\n\n\nrelease v5.2.1 e218808\n\nv5.2.0\n\n23 October 2020\n\n\nrelease v5.2.0 62f7474\nreload button be57fa9\n\nv5.1.0\n\n23 October 2020\n\n\nsimplified dir handle save, fixed test f278040\nrelease v5.1.0 9767a1a\n\nv5.0.0\n\n23 October 2020\n\n\nsave latest directory handle to indexeddb 597ee4f\nrelease v5.0.0 5a61397\n\nv4.7.0\n\n23 October 2020\n\n\nrelease v4.7.0 c86decf\n\nv4.6.0\n\n23 October 2020\n\n\ntypes added for mediasession and file-system bfd28ec\nrelease v4.6.0 e4d8e7c\n\nv4.5.0\n\n23 October 2020\n\n\nfix media reporting 220c7f4\nrelease v4.5.0 337a109\n\nv4.4.0\n\n23 October 2020\n\n\nupdates und native file stable changes 939f6b8\nrelease v4.4.0 77c544b\n\nv4.3.1\n\n12 October 2020\n\n\nrelease v4.3.1 3a9067b\n\nv4.3.0\n\n12 October 2020\n\n\nrelease v4.3.0 7def043\nanalyzer report 4a4b1c4\n\nv4.2.0\n\n12 October 2020\n\n\nrelease v4.2.0 866de3e\n\nv4.1.0\n\n6 October 2020\n\n\nrelease v4.1.0 98a793b\n\nv4.0.0\n\n6 October 2020\n\n\nrelease v4.0.0 d38c534\n\nv3.11.0\n\n6 October 2020\n\n\nrelease v3.11.0 2a4184c\n\nv3.10.0\n\n6 October 2020\n\n\nrelease v3.10.0 d562368\n\nv3.9.0\n\n6 October 2020\n\n\ntoggle to disable extraction of color from cover art a84cb97\nrelease v3.9.0 748a302\n\nv3.8.1\n\n6 October 2020\n\n\nrelease v3.8.1 bda90a4\n\nv3.8.0\n\n5 October 2020\n\n\nrelease v3.8.0 c73a2ce\n\nv3.7.0\n\n20 September 2020\n\n\nrelease v3.7.0 61eb69b\n\nv3.6.0\n\n9 September 2020\n\n\nrelease v3.6.0 22da5c7\n\nv3.5.1\n\n2 September 2020\n\n\nrelease v3.5.1 70990de\n\nv3.5.0\n\n2 September 2020\n\n\nrelease v3.5.0 3ccea4c\n\nv3.4.1\n\n30 August 2020\n\n\nrelease v3.4.1 5ed4032\n\nv3.4.0\n\n30 August 2020\n\n\noptimize loading of service worker and caching 5cec62d\nrelease v3.4.0 1385586\n\nv3.3.0\n\n30 August 2020\n\n\noptimize bundles 6cd086c\nrelease v3.3.0 27fdc57\noptimize loading of service worker f1cad4d\n\nv3.2.1\n\n23 August 2020\n\n\nrelease v3.2.1 bb4ded8\nicons compressed c550911\n\nv3.2.0\n\n23 August 2020\n\n\nstart page a7cf166\nrelease v3.2.0 14a5bd3\nlang and description in webmanifest 1e4fd87\n\nv3.1.2\n\n23 August 2020\n\n\nrelease v3.1.2 69ed6f4\n\nv3.1.1\n\n23 August 2020\n\n\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 800fdae\nrelease v3.1.1 7440340\n\nv3.1.0\n\n23 August 2020\n\n\ndeps 3597f8b\nnx 10.1 20050dc\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 0cec276\n\nv3.0.9\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest 8d5f783\nrelease v3.0.9 f3a09c7\n\nv3.0.8\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest b708169\nrelease v3.0.8 7a1bbe5\n\nv3.0.7\n\n21 August 2020\n\n\nrelease v3.0.7 1a92061\n\nv3.0.6\n\n21 August 2020\n\n\nrelease v3.0.6 f31886e\n\nv3.0.5\n\n21 August 2020\n\n\nrelease v3.0.5 e7c9ada\n\nv3.0.4\n\n21 August 2020\n\n\nrelease v3.0.4 20d1b8b\n\nv3.0.3\n\n21 August 2020\n\n\nrelease v3.0.2 ea1fc76\nrelease v3.0.3 f4f50ef\n\nv3.0.2\n\n21 August 2020\n\n\nrelease v3.0.2 bc4e4dc\n\nv3.0.1\n\n21 August 2020\n\n\nrelease v3.0.1 339d07b\n\nv3.0.0\n\n21 August 2020\n\n\nrelease v3.0.0 57f591d\nrelease v2.0.0 6a6ec18\nrelease v1.19.0 d6210df\n\nv2.0.2\n\n21 August 2020\n\n\nrelease v2.0.2 7b491de\n\nv2.0.1\n\n21 August 2020\n\n\nrelease v2.0.1 b820bf4\n\nv2.0.0\n\n21 August 2020\n\n\nreadded polyfills, prefetch, manifest.json, splashscreen e102482\nrelease v2.0.0 c3d7490\n\nv1.18.0\n\n21 August 2020\n\n\nrelease v1.18.0 5aed853\n\nv1.17.0\n\n21 August 2020\n\n\nrelease v1.17.0 901f502\n\nv1.16.0\n\n21 August 2020\n\n\nrelease v1.16.0 5af2ad7\n\nv1.15.0\n\n21 August 2020\n\n\nrelease v1.15.0 abccf03\n\nv1.14.0\n\n21 August 2020\n\n\nrelease v1.14.0 339af30\n\nv1.13.0\n\n21 August 2020\n\n\nrelease v1.13.0 fb05c12\n\nv1.12.0\n\n21 August 2020\n\n\nrelease v1.12.0 67a17ee\n\nv1.11.12\n\n21 August 2020\n\n\nrelease v1.11.12 bba9cb0\n\nv1.11.11\n\n21 August 2020\n\n\nrelease v1.11.11 ba2a28a\n\nv1.11.10\n\n21 August 2020\n\n\nrelease v1.11.10 b7e8f76\n\nv1.11.9\n\n21 August 2020\n\n\nrelease v1.11.9 52afb10\n\nv1.11.8\n\n21 August 2020\n\n\nrelease v1.11.8 e6d7fd2\n\nv1.11.7\n\n21 August 2020\n\n\nrelease v1.11.7 c2c0b8f\n\nv1.11.6\n\n21 August 2020\n\n\nrelease v1.11.6 91d4a54\n\nv1.11.5\n\n21 August 2020\n\n\nrelease v1.11.5 822ff08\n\nv1.11.4\n\n21 August 2020\n\n\nrelease v1.11.4 8c9c5c3\n\nv1.11.3\n\n21 August 2020\n\n\nrelease v1.11.3 8aabc76\n\nv1.11.2\n\n21 August 2020\n\n\nrelease v1.11.2 71e1d6c\n\nv1.11.1\n\n21 August 2020\n\n\nrelease v1.11.1 ed57248\nremove commonjs whitelist entry ad6497d\n\nv1.11.0\n\n19 August 2020\n\n\ndeps and polyfills removed 3e8e5d0\nrelease v1.11.0 289ec3d\ndisable zone for requestAnimationFrame 422fc8e\n\nv1.10.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\nrelease v1.10.0 f9c114e\nrelease v1.9.1 6b2d8b8\n\nv1.9.1\n\n17 August 2020\n\n\nrelease v1.9.0 68e8dc6\nrelease v1.9.1 d5cd7ea\n\nv1.9.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\n\nv1.8.0\n\n17 August 2020\n\n\nrelease v1.8.0 7484f35\nCreate LICENSE f69d368\nRename LICENSE to LICENSE.md 3773370\n\nv1.7.3\n\n30 July 2020\n\n\ndeps a00ccd1\nrelease v1.7.3 47842e1\nnode 14 build f5ee0e6\n\nv1.7.2\n\n24 July 2020\n\n\nrelease v1.7.2 101bbd0\n\nv1.7.1\n\n24 July 2020\n\n\nrelease v1.7.1 28465d6\n\nv1.7.0\n\n24 July 2020\n\n\nrelease v1.7.0 b5f68a1\n\nv1.6.4\n\n24 July 2020\n\n\nrelease v1.6.4 646c494\n\nv1.6.3\n\n24 July 2020\n\n\nrelease v1.6.3 17ed8a6\n\nv1.6.2\n\n18 July 2020\n\n\ndeps 667f875\nRevert \"support for seeking to position on android notification\" f2cfbcc\nrelease v1.6.2 85eb0ba\n\nv1.6.1\n\n10 July 2020\n\n\ndeps 228ee85\nrelease v1.6.1 949055a\n\nv1.6.0\n\n3 July 2020\n\n\nsupport for seeking to position on android notification 9fa1a37\nrelease v1.6.0 4f1794f\n\nv1.5.0\n\n3 July 2020\n\n\ndeps und position reporting to browser 7a6f294\nrelease v1.5.0 f076ced\n\nv1.4.1\n\n26 June 2020\n\n\nangular.json schema und allowedCommonJsDeps 654bac2\nrelease v1.4.1 250d7f9\n\nv1.4.0\n\n26 June 2020\n\n\ndeps fix 4e72fcd\nng 10 update b6bd950\nadded missing decorator 8515368\n\nv1.3.0\n\n4 June 2020\n\n\nnew icons for visualization modes a8073a9\nrelease v1.3.0 b241b46\n\nv1.2.2\n\n28 May 2020\n\n\ndeps 87adc2c\nrelease v1.2.2 abc0b07\n\nv1.2.1\n\n20 May 2020\n\n\ndeps be025cd\nrelease v1.2.1 0b30a9f\n\nv1.2.0\n\n10 May 2020\n\n\nname changes, native file service refactored 170ea47\nrelease v1.2.0 cb01a92\nname changes, native file service refactored 8264f64\n\nv1.1.0\n\n8 May 2020\n\n\nrelease v1.1.0 a2a4811\nopen folders recursive 1c9fedf\n\nv1.0.5\n\n8 May 2020\n\n\nrelease v1.0.5 1604161\n\nv1.0.4\n\n5 May 2020\n\n\nfix: package.json, package-lock.json & .snyk to reduce vulnerabilities #2\nrelease v1.0.4 8e2ff5a\n\nv1.0.3\n\n2 May 2020\n\n\nrelease v1.0.3 8e36da3\n\nv1.0.2\n\n2 May 2020\n\n\nrelease v1.0.2 6926167\n\nv1.0.1\n\n2 May 2020\n\n\nrelease v1.0.1 194199c\n\nv1.0.0\n\n2 May 2020\n\n\nremoved electron, added compodoc 22afab3\nrelease v1.0.0 18cab80\nUpdate README.md 0e060af\n\nv0.29.0\n\n25 April 2020\n\n\nrelease v0.29.0 669facb\n\nv0.28.0\n\n25 April 2020\n\n\ndeps 9d2ef7e\nrelease v0.28.0 eaf70a8\n\nv0.25.0\n\n15 April 2020\n\n\nrelease v0.25.0 0581767\n\nv0.24.0\n\n15 April 2020\n\n\nrelease v0.24.0 a457b9c\ndeps linting formating b04ce8b\nUpdate NOTES.md 0903cd2\n\nv0.23.0\n\n4 April 2020\n\n\nci d954540\nrelease v0.23.0 95902bb\nci 53a8631\n\nv0.22.0\n\n4 April 2020\n\n\nrelease v0.22.0 f0f7618\n\nv0.21.0\n\n31 March 2020\n\n\ndependencies e34b732\nreadme e7032e1\nfile extensions list 53749c8\n\nv0.20.0\n\n30 March 2020\n\n\nrelease v0.20.0 572a9f8\n\nv0.19.0\n\n30 March 2020\n\n\nrelease v0.19.0 72075fe\nscreen wakelock when playing, navigation fixed especially for mobile ae93b7a\norigin trials for native file system and wakelock api a5849e4\n\nv0.18.0\n\n29 March 2020\n\n\nrelease v0.18.0 fefaba0\nprevent browser history 097fe6b\n\nv0.17.0\n\n29 March 2020\n\n\nprevent browser history 80b42ce\nrelease v0.17.0 4e9a327\n\nv0.16.0\n\n29 March 2020\n\n\ndeps f1b02b7\nrelease v0.16.0 5fe0756\n\nv0.15.0\n\n29 March 2020\n\n\ndeps 092dc60\nnx tags 6782ecd\nrelease v0.15.0 0cabcad\n\nv0.14.0\n\n24 March 2020\n\n\nrelease v0.14.0 dd93cb1\n\nv0.13.0\n\n24 March 2020\n\n\nrelease v0.13.0 162acda\n\nv0.12.0\n\n24 March 2020\n\n\nrelease v0.12.0 79fee74\n\nv0.11.0\n\n24 March 2020\n\n\nrelease v0.11.0 828148a\n\nv0.10.0\n\n24 March 2020\n\n\nrelease v0.10.0 35a78e4\n\nv0.9.0\n\n24 March 2020\n\n\nrelease v0.9.0 2011e46\n\nv0.8.0\n\n24 March 2020\n\n\nrelease v0.8.0 02c06cb\n\nv0.7.0\n\n24 March 2020\n\n\nrelease v0.7.0 75fc12c\n\nv0.6.0\n\n24 March 2020\n\n\nrelease v0.6.0 184a834\n\nv0.5.0\n\n24 March 2020\n\n\nrelease v0.5.0 ab311db\n\nv0.4.0\n\n24 March 2020\n\n\nrelease v0.4.0 42f56c1\nfixed visuals cefa1f1\nplay rewrite and project preparations 1098d6a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @allex/crc32 : ^1.0.4\n        \n            @angular/animations : 19.2.2\n        \n            @angular/cdk : 19.2.3\n        \n            @angular/common : 19.2.2\n        \n            @angular/compiler : 19.2.2\n        \n            @angular/core : 19.2.2\n        \n            @angular/forms : 19.2.2\n        \n            @angular/material : 19.2.3\n        \n            @angular/platform-browser : 19.2.2\n        \n            @angular/platform-browser-dynamic : 19.2.2\n        \n            @angular/router : 19.2.2\n        \n            @angular/service-worker : 19.2.2\n        \n            @thebespokepixel/es-tinycolor : ^3.1.0\n        \n            date-fns : ^4.1.0\n        \n            lucene-escape-query : ^1.0.1\n        \n            music-metadata : 11.0.2\n        \n            ngx-date-fns : 12.0.0\n        \n            ngx-indexed-db : 19.3.3\n        \n            ngx-pipes : 3.2.2\n        \n            ngx-webstorage : 19.0.1\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            spark-md5 : ^3.0.2\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../helpers-time.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/helpers-time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    37 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.2.2\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : MIT\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nuse webworker for node-vibrant\nAudio-File explorer + Suche\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \"60\" | \"170\" | \"310\" | \"600\" | \"1000\" | \"3000\" | \"6000\" | \"12000\" | \"14000\" | \"16000\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../app.config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../audio.service.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideExperimentalZonelessChangeDetection(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideAnimations(),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'metadataCache',\n  version: 2,\n  objectStoresMeta: [\n    {\n      store: 'metatags',\n      storeConfig: { keyPath: 'crc', autoIncrement: false },\n      storeSchema: [\n        { name: 'crc', keypath: 'crc', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'dirHandle',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/audio.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FrequencyBand[]\n\n                    \n                \n                \n                    \n                        Default value : [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
