var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.096,1,2.827]],["body/interfaces/ActionCache.html",[0,0.171,1,4.354,2,1.079,3,0.237,4,0.237,5,0.146,6,3.435,7,0.366,8,0.537,9,5.338,10,1.585,11,0.559,12,0.011,13,0.405,14,5.027,15,3.902,16,1.47,17,5.077,18,2.106,19,0.71,20,3.435,21,1.242,22,1.749,23,4.781,24,3.435,25,2.854,26,3.647,27,3.647,28,3.435,29,3.094,30,3.647,31,3.435,32,3.435,33,3.253,34,3.253,35,3.253,36,4.947,37,3.094,38,3.647,39,1.812,40,3.647,41,2.759,42,3.647,43,3.062,44,3.647,45,3.582,46,3.647,47,3.253,48,3.647,49,3.253,50,3.647,51,3.435,52,3.647,53,3.435,54,3.647,55,3.094,56,3.647,57,3.435,58,3.647,59,2.953,60,3.647,61,3.253,62,3.647,63,3.253,64,3.647,65,3.435,66,3.647,67,3.435,68,3.647,69,3.435,70,3.253,71,3.647,72,3.647,73,3.647,74,3.647,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.096,77,1.397]],["body/interfaces/Album.html",[0,0.064,2,0.596,3,0.131,4,0.131,5,0.177,7,0.131,8,0.355,10,1.202,11,0.374,12,0.011,13,0.212,16,0.812,19,1.066,21,0.686,39,1.197,75,0.006,76,0.006,77,2.422,78,2.569,79,3.754,80,1.339,81,3.288,82,2.034,83,0.704,84,0.984,85,3.583,86,0.547,87,3.055,88,2.277,89,0.392,90,1.797,91,2.023,92,1.709,93,1.497,94,4.105,95,3.264,96,1.709,97,3.895,98,1.797,99,2.877,100,1.898,101,1.244,102,0.995,103,3.536,104,3.895,105,3.895,106,3.269,107,2.015,108,2.367,109,1.797,110,3.536,111,1.497,112,3.536,113,1.334,114,3.536,115,3.536,116,3.536,117,2.332,118,3.536,119,2.156,120,1.497,121,1.329,122,1.898,123,2.473,124,1.898,125,3.536,126,2.156,127,3.895,128,3.895,129,3.895,130,3.895,131,3.895,132,2.569,133,1.091,134,2.569,135,1.334,136,2.569,137,1.091,138,0.367,139,1.126,140,1.202,141,0.904,142,1.898,143,1.898,144,1.898,145,1.709,146,1.945,147,3.895,148,2.569,149,2.569,150,1.77,151,3.895,152,2.569,153,2.569,154,1.651,155,2.569,156,2.569,157,2.569,158,2.569,159,2.569,160,2.569,161,3.475,162,2.569,163,2.332,164,2.569,165,6.354,166,5.249,167,2.569,168,2.569,169,2.569,170,3.131,171,1.708,172,2.569,173,4.271,174,2.569,175,2.569,176,3.895,177,5.249,178,3.895,179,4.704,180,2.473,181,2.332,182,3.269,183,5.123,184,2.569,185,2.015,186,3.895,187,2.569,188,2.569,189,2.569,190,2.569,191,2.569,192,2.569,193,2.569,194,5.601,195,2.569,196,2.332,197,2.367,198,1.509,199,2.569,200,4.704,201,2.332,202,1.561,203,4.704,204,2.569,205,2.569,206,4.704,207,2.569,208,2.569,209,1.385,210,3.895,211,2.569,212,2.523,213,2.569,214,3.895,215,3.895,216,2.569,217,2.569,218,2.569,219,2.569,220,2.569,221,2.569,222,2.332,223,1.709,224,1.561,225,2.569,226,2.569,227,2.569,228,2.233,229,2.015,230,1.091,231,2.569,232,2.732,233,2.569,234,2.569,235,2.569,236,2.569,237,2.569,238,1.126,239,1.342,240,2.156,241,2.332,242,1.631,243,0.938,244,2.569,245,2.569,246,2.569,247,3.536,248,2.569,249,2.569,250,2.569,251,2.569,252,2.332,253,2.332,254,2.569,255,2.569,256,2.569,257,4.704,258,2.569,259,5.249,260,2.569,261,2.569,262,3.895,263,3.895,264,2.156,265,2.569,266,2.569,267,2.569,268,2.569,269,2.569,270,2.569,271,2.569,272,2.569,273,3.895,274,3.895,275,2.569,276,1.439,277,2.569,278,2.569,279,2.569,280,1.797,281,2.569,282,2.569,283,2.332,284,2.569]],["title/interfaces/AnalyserConfig.html",[0,0.096,285,2.43]],["body/interfaces/AnalyserConfig.html",[0,0.183,2,1.027,3,0.226,4,0.226,5,0.139,7,0.226,8,0.52,10,1.658,11,0.573,12,0.011,13,0.407,18,2.864,19,1.02,22,1.664,25,2.765,75,0.008,76,0.008,285,3.626,286,2.81,287,4.132,288,4.446,289,4.446,290,4.446,291,2.689,292,2.579,293,2.689,294,2.689,295,2.689,296,2.579,297,2.689,298,2.689,299,2.689,300,2.81,301,2.81,302,2.579,303,3.47,304,3.328,305,3.328,306,3.328,307,2.579,308,3.328,309,2.689,310,2.862,311,2.862,312,3.328,313,2.689,314,2.478,315,2.579,316,2.81,317,2.945,318,2.579,319,3.541,320,2.689,321,2.478,322,4.015,323,3.078,324,2.689,325,3.328,326,3.601,327,3.601,328,2.478,329,3.328,330,3.742]],["title/components/AppComponent.html",[84,0.966,331,1.733]],["body/components/AppComponent.html",[3,0.223,4,0.223,5,0.178,12,0.011,13,0.238,75,0.008,76,0.008,80,1.501,83,0.7,84,1.589,86,0.933,89,0.669,111,2.554,121,1.603,133,2.411,137,2.411,138,0.626,139,1.921,150,1.589,331,3.014,332,2.072,333,2.051,334,2.051,335,2.051,336,4.993,337,3.97,338,3.97,339,3.282,340,3.364,341,1.794,342,3.014,343,6.466,344,3.047,345,1.017,346,4.993,347,3.066,348,4.993,349,4.993,350,3.066,351,2.454,352,3.97,353,3.437,354,5.152,355,4.993,356,4.993,357,4.993,358,4.993,359,4.993,360,4.993,361,4.993,362,3.437,363,4.993,364,4.993,365,4.993,366,4.993,367,4.993,368,4.993,369,4.993,370,2.051,371,2.57,372,2.266,373,1.75,374,3.116,375,2.051,376,2.051,377,1.984,378,1.554,379,2.051,380,1.984,381,2.051,382,1.984,383,1.861,384,2.051,385,1.75,386,1.804,387,1.804,388,2.656,389,1.984,390,3.116,391,1.984,392,2.051,393,1.984,394,1.804,395,2.051,396,1.984,397,2.051,398,1.861,399,1.984,400,1.984,401,2.051,402,1.984,403,1.921,404,2.051,405,1.984,406,2.051,407,1.984,408,1.861,409,1.984,410,1.984,411,1.984,412,1.921,413,1.984,414,2.051]],["title/injectables/AudioService.html",[415,0.769,416,2.23]],["body/injectables/AudioService.html",[3,0.116,4,0.116,5,0.167,7,0.116,8,0.324,10,1.435,11,0.511,12,0.011,13,0.193,16,2.131,21,1.776,22,1.643,39,2.219,41,1.664,75,0.005,76,0.005,80,1.417,83,0.489,85,2.258,86,0.486,88,2.115,89,0.348,91,1.185,96,1.518,102,0.884,138,0.326,141,1.458,146,2.239,150,1.562,154,1.177,171,2.163,228,1.643,232,0.939,239,1.225,264,1.915,318,2.874,328,2.446,341,0.721,344,2.115,345,1.708,372,0.911,415,0.714,416,2.072,417,1.033,418,2.281,419,4.977,420,3.966,421,3.666,422,5.662,423,4.368,424,4.977,425,4.977,426,4.368,427,4.977,428,4.931,429,0.923,430,5.62,431,4.051,432,4.051,433,4.139,434,4.478,435,5.62,436,4.051,437,4.051,438,4.051,439,4.051,440,4.051,441,4.051,442,4.051,443,3.228,444,4.977,445,2.6,446,2.6,447,1.722,448,4.051,449,4.854,450,2.6,451,2.229,452,1.417,453,3.666,454,4.051,455,4.579,456,2.6,457,4.977,458,2.6,459,2.6,460,1.449,461,2.6,462,4.051,463,2.6,464,4.051,465,5.346,466,2.6,467,2.002,468,2.626,469,3.116,470,2.6,471,2.6,472,4.051,473,2.6,474,4.051,475,5.346,476,2.6,477,4.051,478,2.6,479,4.051,480,4.051,481,2.6,482,2.6,483,4.051,484,2.6,485,4.931,486,2.6,487,2.6,488,4.051,489,2.487,490,2.626,491,2.626,492,2.487,493,2.072,494,2.258,495,2.626,496,2.626,497,2.626,498,2.626,499,2.6,500,5.142,501,2.6,502,2.6,503,5.62,504,2.6,505,2.6,506,2.6,507,4.051,508,2.6,509,4.051,510,3.228,511,2.6,512,2.6,513,2.6,514,2.366,515,1.386,516,2.487,517,3.228,518,3.666,519,0.764,520,1.518,521,2.6,522,4.184,523,2.6,524,2.6,525,2.6,526,2.6,527,4.931,528,2.6,529,2.6,530,2.6,531,4.051,532,2.6,533,2.6,534,2.6,535,2.6,536,2.984,537,2.281,538,3.228,539,2.6,540,2.6,541,2.16,542,3.555,543,2.6,544,2.6,545,2.6,546,2.6,547,1.915,548,2.6,549,2.6,550,2.6,551,4.051,552,2.6,553,2.071,554,1.518,555,2.071,556,1.685,557,2.6,558,1.79,559,2.071,560,2.6,561,2.071,562,4.051,563,4.051,564,2.6,565,2.984,566,4.051,567,4.051,568,2.6,569,2.6,570,2.6,571,2.6,572,2.6,573,2.6,574,2.6,575,2.6,576,1.685,577,1.449,578,2.071,579,2.6,580,2.6,581,2.6,582,2.6,583,2.6,584,2.6,585,4.051,586,2.6,587,2.6,588,2.6,589,2.6,590,2.6,591,2.6,592,3.555,593,2.6,594,2.6,595,2.281,596,2.6,597,1.79,598,1.33,599,2.6,600,1.685,601,2.6,602,2.6,603,2.6,604,2.6,605,2.6,606,2.6,607,2.6,608,2.6,609,2.6,610,2.6,611,2.6,612,2.6,613,2.6,614,2.6,615,2.6,616,2.6,617,2.6,618,2.6,619,4.051,620,2.6,621,2.281,622,2.281,623,2.281,624,2.281,625,1.79,626,2.281,627,2.6,628,2.6,629,2.6,630,4.051,631,2.6,632,2.6,633,2.6,634,2.6,635,2.6,636,2.6,637,4.051,638,2.6,639,2.6,640,2.6,641,2.6,642,2.6,643,2.6,644,2.6,645,2.6,646,2.6,647,2.6,648,4.051,649,2.6,650,2.6,651,2.6,652,2.6,653,2.6]],["title/interfaces/AxisGamepadAction.html",[0,0.096,24,2.827]],["body/interfaces/AxisGamepadAction.html",[0,0.17,1,3.425,2,1.076,3,0.236,4,0.236,5,0.145,6,3.425,7,0.329,8,0.536,9,3.636,10,1.494,11,0.558,12,0.011,13,0.405,14,5.445,15,3.891,16,1.466,17,5.332,18,2.099,19,0.707,20,3.425,21,1.238,22,1.743,23,4.774,24,4.346,25,3.129,26,5.332,27,5.332,28,3.425,29,3.085,30,3.636,31,3.425,32,3.425,33,3.243,34,3.243,35,3.243,36,4.937,37,3.085,38,3.636,39,1.809,40,3.636,41,2.754,42,3.636,43,3.056,44,3.636,45,3.575,46,3.636,47,3.243,48,3.636,49,3.243,50,3.636,51,3.425,52,3.636,53,3.425,54,3.636,55,3.085,56,3.636,57,3.425,58,3.636,59,2.944,60,3.636,61,3.243,62,3.636,63,3.243,64,3.636,65,3.425,66,3.636,67,3.425,68,3.636,69,3.425,70,3.243,71,3.636,72,3.636,73,3.636,74,3.636,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[120,2.23,654,3.826]],["body/pipes/BandPipe.html",[3,0.266,4,0.266,5,0.164,11,0.416,12,0.011,13,0.284,19,0.967,43,2.715,75,0.009,76,0.009,80,1.538,83,0.628,89,0.798,96,3.478,98,3.657,120,3.694,121,1.477,138,0.747,140,2.446,154,1.628,345,1.213,429,1.358,447,1.32,451,1.854,452,1.179,455,4.962,460,3.319,467,2.061,494,3.319,518,5.319,654,6.337,655,5.956,656,6.337,657,3.013,658,4.971,659,4.386,660,5.754,661,6.821,662,5.956,663,5.754,664,5.956,665,5.956,666,5.956,667,5.956]],["title/interfaces/BarsVisualizerOptions.html",[0,0.096,325,2.23]],["body/interfaces/BarsVisualizerOptions.html",[0,0.181,2,0.986,3,0.217,4,0.217,5,0.133,7,0.217,8,0.507,10,1.665,11,0.588,12,0.011,13,0.405,18,3.173,19,1.004,22,1.598,25,3.002,75,0.008,76,0.008,285,2.699,286,2.699,287,3.997,288,2.828,289,2.828,290,2.828,291,2.583,292,2.477,293,2.583,294,2.583,295,2.583,296,2.477,297,2.583,298,2.583,299,2.583,300,2.699,301,2.699,302,2.477,303,4.15,304,3.98,305,3.98,306,3.98,307,2.477,308,3.242,309,2.583,310,2.788,311,2.788,312,3.242,313,2.583,314,2.38,315,2.477,316,2.699,317,2.828,318,2.477,319,3.473,320,2.583,321,2.38,322,4.178,323,2.998,324,2.583,325,3.614,326,3.902,327,3.776,328,3.684,329,3.242,330,3.684]],["title/interfaces/BaseVisualizerOptions.html",[0,0.096,322,2.43]],["body/interfaces/BaseVisualizerOptions.html",[0,0.183,2,1.017,3,0.223,4,0.223,5,0.137,7,0.223,8,0.517,10,1.651,11,0.58,12,0.011,13,0.407,18,3.199,19,1.112,22,1.648,25,2.747,75,0.008,76,0.008,285,2.782,286,2.782,287,3.728,288,2.916,289,2.916,290,2.916,291,2.663,292,2.554,293,2.663,294,2.663,295,2.663,296,2.554,297,2.663,298,2.663,299,2.663,300,2.782,301,2.782,302,2.554,303,3.448,304,3.307,305,3.307,306,3.307,307,2.554,308,3.307,309,2.663,310,3.456,311,3.456,312,4.018,313,2.663,314,2.454,315,2.554,316,2.782,317,2.916,318,2.554,319,3.524,320,2.663,321,2.454,322,4.227,323,3.588,324,4.045,325,3.307,326,3.588,327,3.588,328,2.454,329,3.307,330,3.728]],["title/pipes/BitratePipe.html",[120,2.23,668,3.474]],["body/pipes/BitratePipe.html",[3,0.273,4,0.273,5,0.168,10,1.468,11,0.426,12,0.011,13,0.291,19,0.981,39,1.645,75,0.009,76,0.009,80,1.554,83,0.53,89,0.817,98,3.744,120,3.747,121,1.512,138,0.765,140,2.505,150,1.278,154,1.535,212,2.928,345,1.242,429,1.39,447,1.352,451,1.898,452,1.207,467,1.868,494,3.399,657,2.731,658,5.043,659,4.492,660,5.837,663,5.837,668,5.837,669,6.429,670,6.099,671,6.491,672,6.099,673,6.099,674,6.099]],["title/interfaces/ButtonGamepadAction.html",[0,0.096,28,2.827]],["body/interfaces/ButtonGamepadAction.html",[0,0.171,1,3.461,2,1.087,3,0.239,4,0.239,5,0.147,6,3.461,7,0.331,8,0.54,9,3.675,10,1.499,11,0.543,12,0.011,13,0.405,14,5.311,15,3.931,16,1.481,17,5.353,18,2.121,19,0.715,20,3.461,21,1.251,22,1.762,23,4.798,24,3.461,25,3.144,26,3.675,27,3.675,28,4.375,29,4.541,30,3.675,31,3.461,32,3.461,33,3.277,34,3.277,35,3.277,36,4.97,37,3.117,38,3.675,39,1.821,40,3.675,41,2.772,42,3.675,43,3.076,44,3.675,45,3.599,46,3.675,47,3.277,48,3.675,49,3.277,50,3.675,51,3.461,52,3.675,53,3.461,54,3.675,55,3.117,56,3.675,57,3.461,58,3.675,59,2.975,60,3.675,61,3.277,62,3.675,63,3.277,64,3.675,65,3.461,66,3.675,67,3.461,68,3.675,69,3.461,70,3.277,71,3.675,72,3.675,73,3.675,74,3.675,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.096,675,3.826]],["body/interfaces/Chainable.html",[0,0.119,2,1.102,3,0.242,4,0.242,5,0.187,7,0.242,12,0.011,16,1.889,75,0.008,76,0.008,83,0.592,345,1.102,372,1.896,429,1.552,447,1.199,452,1.071,517,5.423,541,2.886,555,5.423,675,5.973,676,5.411,677,6.857,678,5.411,679,5.411,680,4.748,681,4.748,682,5.411,683,4.748,684,5.411,685,5.411,686,5.411,687,5.973,688,7.814,689,5.973,690,5.423,691,5.423,692,5.411,693,5.411,694,5.411,695,5.411,696,4.748,697,5.411,698,5.411,699,5.411,700,5.411,701,7.814,702,5.411,703,5.411,704,3.16,705,5.411,706,5.411,707,5.411,708,5.411,709,6.807,710,5.411,711,6.807,712,6.807,713,5.411,714,5.411,715,4.748,716,5.411,717,6.807,718,4.828,719,5.411,720,5.411,721,5.411,722,5.411,723,2.467]],["title/interfaces/Color.html",[0,0.096,724,2.827]],["body/interfaces/Color.html",[0,0.142,2,1.314,3,0.289,4,0.289,5,0.177,7,0.289,8,0.606,11,0.562,12,0.011,13,0.308,19,1.148,22,2.654,75,0.009,76,0.009,80,1.642,724,4.912,725,6.453,726,7.281,727,4.846]],["title/interfaces/ColorConfig.html",[0,0.096,728,2.43]],["body/interfaces/ColorConfig.html",[0,0.173,2,1.117,3,0.245,4,0.245,5,0.206,7,0.245,8,0.549,11,0.565,12,0.011,13,0.399,19,1.168,25,2.331,75,0.009,76,0.009,77,1.758,79,3.204,81,2.806,82,2.335,83,0.652,94,3.204,95,2.917,121,1.947,122,3.557,150,1.438,170,2.18,198,1.866,276,3.374,310,3.454,311,3.454,452,1.554,455,4.216,489,3.369,490,3.557,491,3.557,492,3.369,493,2.806,494,3.057,495,3.557,496,3.557,497,3.557,498,3.557,516,3.369,576,3.557,728,3.826,729,3.557,730,4.216,731,3.369,732,2.045,733,3.512,734,4.451,735,2.926,736,4.216,737,4.858,738,3.369,739,3.557,740,2.595,741,3.777,742,3.557,743,4.041,744,4.041,745,4.041,746,4.041,747,3.557,748,3.204]],["title/interfaces/CoverArtImage.html",[0,0.096,749,2.827]],["body/interfaces/CoverArtImage.html",[0,0.156,2,0.862,3,0.189,4,0.189,5,0.116,7,0.189,8,0.463,10,0.791,11,0.519,12,0.011,13,0.202,19,1.119,22,2.179,39,1.142,75,0.007,76,0.007,77,1.356,82,1.439,83,0.684,86,0.791,89,0.567,101,1.798,102,1.439,138,0.531,141,1.514,146,1.519,150,1.677,154,1.737,197,2.257,198,1.439,202,3.088,209,2.739,212,2.984,223,2.471,224,2.257,228,2.179,230,2.647,232,2.566,238,2.541,239,2.321,243,1.356,280,2.598,341,1.174,378,2.055,415,1.021,493,2.164,519,1.243,541,2.257,723,2.64,732,1.578,749,4.28,750,1.529,751,2.913,752,5.285,753,3.773,754,5.119,755,5.082,756,2.257,757,2.164,758,2.913,759,2.743,760,2.743,761,3.377,762,2.159,763,1.682,764,2.08,765,2.164,766,2.257,767,3.755,768,2.64,769,4.28,770,2.598,771,2.743,772,3.987,773,2.913,774,3.755,775,2.598,776,2.743,777,2.257,778,2.598,779,2.164,780,2.257,781,2.257,782,2.913,783,2.913,784,2.913,785,2.257,786,2.386,787,2.164,788,2.962,789,3.987,790,2.913,791,2.913,792,3.088,793,2.471,794,2.913,795,2.913,796,2.913,797,2.913,798,2.913,799,2.913,800,3.088,801,3.987,802,2.913,803,2.913,804,2.743,805,2.913,806,2.913,807,2.913,808,2.913,809,2.913,810,2.257,811,4.887,812,2.913,813,2.913,814,2.913,815,2.913,816,2.598,817,2.913,818,2.461,819,2.913,820,2.913,821,2.913,822,3.987,823,2.913,824,2.743,825,2.379,826,2.913,827,2.913]],["title/interfaces/CoverArtResponse.html",[0,0.096,776,2.827]],["body/interfaces/CoverArtResponse.html",[0,0.157,2,0.878,3,0.193,4,0.193,5,0.119,7,0.193,8,0.469,10,0.806,11,0.301,12,0.011,13,0.206,19,1.104,22,1.424,39,1.164,75,0.007,76,0.007,77,1.382,82,1.467,83,0.687,86,0.806,89,0.578,101,1.833,102,1.467,138,0.541,141,1.524,146,1.539,150,1.684,154,1.743,197,2.3,198,1.467,202,3.129,209,2.775,212,2.997,223,2.519,224,2.3,228,2.201,230,2.668,232,2.586,238,2.566,239,2.335,243,1.382,280,2.649,341,1.197,378,2.075,415,1.035,493,2.206,519,1.267,541,2.3,723,2.675,732,1.608,749,4.64,750,1.559,751,2.97,752,4.591,753,3.277,754,4.039,756,2.3,757,2.206,758,2.97,759,2.797,760,2.797,761,3.411,762,2.188,763,1.714,764,2.12,765,2.206,766,2.3,767,3.804,768,2.675,769,4.323,770,2.649,771,2.797,772,4.039,773,2.97,774,3.804,775,2.649,776,3.804,777,3.817,778,2.649,779,2.206,780,2.3,781,2.3,782,2.97,783,2.97,784,2.97,785,2.3,786,2.41,787,2.206,788,3.001,789,4.039,790,2.97,791,2.97,792,3.129,793,2.519,794,2.97,795,2.97,796,2.97,797,2.97,798,2.97,799,2.97,800,3.129,801,4.039,802,2.97,803,2.97,804,2.797,805,2.97,806,2.97,807,2.97,808,2.97,809,2.97,810,2.3,811,4.927,812,2.97,813,2.97,814,2.97,815,2.97,816,2.649,817,2.97,818,2.493,819,2.97,820,2.97,821,2.97,822,4.039,823,2.97,824,2.797,825,2.41,826,2.97,827,2.97]],["title/interfaces/CoverColor.html",[0,0.096,828,2.827]],["body/interfaces/CoverColor.html",[0,0.182,2,1.209,3,0.265,4,0.265,5,0.213,7,0.265,8,0.576,11,0.503,12,0.011,13,0.395,19,1.17,75,0.009,76,0.009,82,2.018,83,0.516,239,1.795,452,1.598,727,4.714,732,2.213,733,3.036,750,2.145,762,2.687,763,2.359,768,3.285,818,2.522,825,2.438,828,5.567,829,4.086,830,5.233,831,3.165,832,3.848,833,3.848,834,3.848,835,3.848,836,3.848,837,3.644,838,3.644,839,2.808]],["title/interfaces/CoverColorPalette.html",[0,0.096,733,2.23]],["body/interfaces/CoverColorPalette.html",[0,0.179,2,1.14,3,0.25,4,0.25,5,0.208,7,0.25,8,0.556,11,0.579,12,0.011,13,0.388,19,1.126,75,0.009,76,0.009,82,1.904,83,0.487,239,1.693,452,1.724,727,3.269,732,2.087,733,3.556,750,2.023,762,2.592,763,2.225,768,3.17,818,2.379,825,2.3,828,5.753,829,3.854,830,3.63,831,4.218,832,5.128,833,5.128,834,5.128,835,5.128,836,5.128,837,3.438,838,3.438,839,2.648]],["title/components/CoverDisplayComponent.html",[84,0.966,377,1.733]],["body/components/CoverDisplayComponent.html",[3,0.172,4,0.172,5,0.149,7,0.172,8,0.433,12,0.011,13,0.183,21,1.47,75,0.007,76,0.007,77,1.734,79,4.191,80,1.347,81,2.768,83,0.648,84,1.389,85,4,86,0.717,89,0.514,108,3.63,109,2.357,121,1.342,133,2.018,135,2.467,137,2.018,138,0.481,139,1.477,141,0.782,145,3.16,146,1.953,150,1.134,154,1.134,331,1.525,332,1.734,333,1.577,334,1.577,335,1.577,337,3.323,338,3.323,339,3.197,340,3.263,342,1.525,345,1.277,347,2.357,352,3.323,353,2.642,362,2.642,370,1.577,371,2.151,372,1.897,373,1.345,374,2.796,375,1.577,376,1.577,377,2.705,378,2.534,379,1.577,380,1.525,381,1.577,382,1.525,383,1.431,384,1.577,385,1.345,386,1.387,387,1.387,388,2.223,389,1.525,390,2.796,391,1.525,392,1.577,393,1.525,394,1.387,395,1.577,396,1.525,397,1.577,398,1.431,399,1.525,400,1.525,401,1.577,402,1.525,403,1.477,404,1.577,405,1.525,406,1.577,407,1.525,408,1.431,409,2.705,410,1.525,411,1.525,412,1.477,413,1.525,414,1.577,421,3.986,467,1.599,668,4.995,669,5.973,671,5.424,740,2.56,840,5.973,841,3.838,842,3.509,843,4.617,844,5.412,845,5.412,846,6.269,847,6.807,848,5.412,849,5.412,850,5.412,851,5.412,852,3.838,853,5.412,854,3.838,855,3.838,856,3.838,857,3.838,858,3.368,859,5.424,860,3.058,861,4.749,862,4.749,863,4.749,864,6.807,865,6.807,866,3.838,867,6.807,868,3.509,869,6.807,870,6.807,871,6.807,872,6.807,873,5.412,874,5.412,875,3.838]],["title/interfaces/DirHandleEntry.html",[0,0.096,876,3.474]],["body/interfaces/DirHandleEntry.html",[0,0.105,2,0.968,3,0.213,4,0.213,5,0.222,7,0.213,8,0.501,10,1.309,11,0.437,12,0.011,13,0.227,41,1.952,75,0.008,76,0.008,83,0.673,86,0.888,88,2.019,89,0.636,90,2.918,91,2.166,92,2.775,93,2.431,101,2.019,102,1.616,138,0.596,140,1.952,141,0.968,142,3.081,143,3.081,146,1.246,150,1.664,154,1.696,161,3.081,228,2.456,230,1.772,232,2.87,238,1.829,239,1.893,276,2.336,341,1.319,344,2.019,351,2.336,415,1.104,469,3.202,519,1.396,554,2.775,657,2.334,704,2.775,768,3.525,786,2.53,876,4.989,877,2.918,878,2.248,879,3.787,880,3.5,881,5.389,882,6.162,883,2.918,884,3.969,885,2.918,886,3.489,887,3.081,888,3.787,889,3.5,890,4.17,891,4.17,892,5.579,893,4.17,894,5.494,895,4.17,896,3.5,897,4.17,898,4.17,899,4.17,900,4.17,901,4.17,902,3.5,903,4.17,904,4.17,905,3.656,906,3.787,907,4.17,908,4.17,909,4.17,910,3.787,911,3.5,912,4.17,913,4.17,914,4.17,915,3.787,916,4.17,917,3.5,918,3.787,919,4.17,920,4.17,921,4.17,922,3.787,923,3.271,924,6.144,925,4.989,926,3.787,927,4.17,928,4.17,929,4.17]],["title/components/EqualizerComponent.html",[84,0.966,380,1.733]],["body/components/EqualizerComponent.html",[3,0.151,4,0.151,5,0.136,7,0.261,8,0.395,10,1.277,11,0.236,12,0.011,13,0.161,16,1.371,19,0.662,21,1.602,39,1.575,41,2.638,43,2.662,45,1.803,49,2.076,59,1.885,63,3.943,75,0.006,76,0.006,80,1.352,83,0.594,84,1.294,86,0.632,88,1.437,89,0.453,93,2.987,95,2.729,96,1.975,121,1.225,133,1.842,135,2.253,137,1.842,138,0.424,139,1.301,146,1.531,150,1.614,154,1.346,314,2.429,331,1.344,332,1.584,333,1.389,334,1.389,335,1.389,337,3.034,338,3.034,339,3.15,340,3.206,342,1.344,344,2.481,345,1.501,347,2.076,352,3.943,353,2.328,362,3.402,370,1.389,371,1.964,372,1.732,373,1.185,374,2.638,375,1.389,376,1.389,377,1.344,378,1.052,379,1.389,380,2.553,381,1.389,382,1.344,383,1.261,384,1.389,385,1.185,386,1.222,387,1.222,388,2.03,389,1.344,390,2.638,391,1.344,392,1.389,393,1.344,394,1.222,395,1.389,396,1.344,397,1.389,398,1.261,399,1.344,400,1.344,401,1.389,402,1.344,403,1.301,404,1.389,405,1.344,406,1.389,407,1.344,408,1.261,409,1.344,410,1.344,411,1.344,412,1.301,413,1.344,414,1.389,416,3.285,429,1.126,447,1.095,451,1.052,452,0.669,467,1.82,475,5.124,494,1.885,516,3.585,518,5.676,565,5.428,842,2.192,930,3.382,931,4.301,932,4.653,933,4.941,934,4.941,935,5.995,936,5.839,937,4.941,938,6.423,939,4.941,940,4.941,941,3.382,942,3.382,943,2.886,944,3.382,945,4.941,946,3.382,947,3.382,948,3.204,949,2.694,950,2.694,951,2.076,952,2.491,953,3.382,954,3.937,955,2.967,956,3.382,957,3.382,958,3.382,959,4.941,960,3.382,961,3.382,962,3.382,963,4.941,964,3.382,965,4.703,966,3.382,967,5.676,968,3.382,969,2.694,970,3.382,971,5.636,972,4.336,973,4.336,974,4.941,975,3.382,976,4.941,977,2.967,978,3.382,979,3.382,980,3.382,981,4.941,982,3.382,983,5.636,984,3.382,985,5.839,986,4.336,987,3.382,988,3.382,989,7.136,990,6.832,991,2.967,992,3.382,993,5.839,994,3.382,995,4.301,996,4.941,997,2.491,998,6.832,999,3.382,1000,3.382,1001,2.967,1002,3.382,1003,3.382,1004,3.382,1005,3.382,1006,3.382,1007,2.694,1008,3.382,1009,3.382,1010,3.382,1011,3.382,1012,3.382,1013,3.382,1014,3.382,1015,3.382,1016,3.382,1017,3.382,1018,3.382,1019,3.382,1020,3.382,1021,2.491,1022,3.382,1023,3.382,1024,2.328]],["title/interfaces/FileData.html",[0,0.096,884,2.325]],["body/interfaces/FileData.html",[0,0.136,2,1.259,3,0.277,4,0.277,5,0.238,7,0.277,8,0.591,11,0.516,12,0.011,13,0.377,75,0.009,76,0.009,150,1.548,276,4.022,452,1.462,736,4.85,877,3.797,878,2.925,883,3.797,884,3.939,1025,3.446,1026,5.426,1027,5.426,1028,5.426,1029,5.426,1030,6.482,1031,5.426,1032,5.426,1033,5.426,1034,5.426,1035,5.426,1036,5.426,1037,5.426,1038,5.426,1039,5.426,1040,5.426,1041,5.426,1042,5.426,1043,5.426,1044,5.426]],["title/components/FileDropOverlayComponent.html",[84,0.966,382,1.733]],["body/components/FileDropOverlayComponent.html",[3,0.144,4,0.144,5,0.229,7,0.214,8,0.382,11,0.397,12,0.011,13,0.154,16,1.577,21,1.332,39,1.288,75,0.006,76,0.006,80,1.437,83,0.281,84,1.26,86,0.603,89,0.432,121,1.184,133,1.78,138,0.405,139,1.242,140,1.961,141,1.551,146,1.997,150,1.47,154,0.676,202,1.721,223,3.319,224,2.547,230,1.78,238,1.838,239,1.718,331,1.283,332,1.53,333,1.326,334,1.326,335,1.326,339,3.131,340,3.185,342,1.283,345,1.429,370,1.326,371,1.898,372,1.674,373,1.131,374,2.753,375,1.326,376,1.326,377,1.283,378,1.005,379,1.326,380,1.283,381,1.326,382,2.496,383,3.244,384,1.326,385,1.131,386,1.167,387,1.167,388,1.961,389,1.283,390,2.58,391,1.283,392,1.326,393,1.283,394,1.167,395,1.326,396,1.283,397,1.326,398,1.203,399,1.283,400,1.283,401,1.326,402,1.283,403,1.242,404,1.326,405,1.283,406,1.326,407,1.283,408,1.78,409,1.283,410,1.283,411,1.283,412,1.242,413,1.283,414,1.326,429,1.089,447,1.26,451,1.769,452,1.125,467,1.449,468,2.093,547,2.377,598,2.907,624,2.833,626,2.833,696,4.19,704,4.098,724,3.096,735,2.547,736,1.982,786,1.726,816,2.932,842,2.093,881,2.093,917,2.377,949,2.572,1007,2.572,1024,2.222,1045,3.228,1046,5.348,1047,6.372,1048,7.262,1049,7.262,1050,3.228,1051,5.684,1052,3.685,1053,3.096,1054,4.775,1055,5.684,1056,4.775,1057,5.684,1058,5.684,1059,5.684,1060,4.775,1061,4.775,1062,4.775,1063,7.746,1064,3.228,1065,4.775,1066,3.228,1067,4.775,1068,3.228,1069,3.685,1070,3.228,1071,6.703,1072,3.228,1073,3.228,1074,3.228,1075,3.228,1076,3.228,1077,3.228,1078,3.228,1079,3.228,1080,3.228,1081,3.228,1082,3.228,1083,3.228,1084,3.228,1085,4.775,1086,6.703,1087,3.228,1088,4.775,1089,4.775,1090,3.228,1091,4.775,1092,3.228,1093,4.775,1094,4.775,1095,3.228,1096,4.775,1097,3.228,1098,2.093,1099,4.987,1100,4.987,1101,4.775,1102,3.228,1103,3.228,1104,4.775,1105,4.987,1106,2.833,1107,4.775,1108,3.228,1109,5.511,1110,3.228,1111,3.228,1112,3.228,1113,3.228,1114,4.19,1115,3.517,1116,3.228,1117,3.228,1118,3.228,1119,3.228,1120,3.228,1121,3.228,1122,3.228,1123,3.228,1124,3.228,1125,3.228,1126,5.684,1127,3.228,1128,5.684,1129,3.228,1130,2.833,1131,2.833,1132,3.228,1133,2.572,1134,2.833,1135,3.228,1136,3.228,1137,3.228,1138,3.228,1139,3.228,1140,3.228,1141,3.228,1142,3.228,1143,3.228,1144,3.228,1145,2.833,1146,2.833,1147,2.833,1148,4.775,1149,3.228,1150,4.775,1151,3.228,1152,3.228,1153,2.833,1154,2.833,1155,3.228,1156,3.228,1157,3.228,1158,3.228,1159,2.572,1160,4.19,1161,3.228,1162,2.572,1163,3.228,1164,2.833,1165,3.228,1166,4.775]],["title/classes/FileLoaderService.html",[138,0.547,886,2.43]],["body/classes/FileLoaderService.html",[3,0.27,4,0.27,5,0.2,7,0.27,8,0.583,11,0.422,12,0.011,13,0.289,75,0.009,76,0.009,83,0.634,89,0.81,138,0.758,345,1.593,429,1.661,447,1.615,786,2.935,877,4.987,878,3.842,884,3.225,885,3.713,886,4.062,889,5.763,896,5.982,902,5.982,1025,4.527,1167,6.047,1168,6.047,1169,8.722,1170,7.824,1171,6.047,1172,6.047,1173,6.047]],["title/interfaces/FrequencyBarsConfig.html",[0,0.096,302,2.23]],["body/interfaces/FrequencyBarsConfig.html",[0,0.183,2,1.027,3,0.226,4,0.226,5,0.139,7,0.226,8,0.52,10,1.662,11,0.573,12,0.011,13,0.407,18,2.864,19,1.02,22,1.664,25,2.765,75,0.008,76,0.008,285,2.81,286,2.81,287,3.742,288,2.945,289,2.945,290,2.945,291,2.689,292,2.579,293,2.689,294,2.689,295,2.689,296,2.579,297,2.689,298,2.689,299,2.689,300,2.81,301,2.81,302,3.328,303,4.203,304,4.031,305,4.031,306,4.031,307,2.579,308,3.328,309,2.689,310,2.862,311,2.862,312,3.328,313,2.689,314,2.478,315,2.579,316,2.81,317,2.945,318,2.579,319,3.541,320,2.689,321,2.478,322,4.015,323,3.078,324,2.689,325,3.328,326,3.601,327,3.601,328,2.478,329,3.328,330,3.742]],["title/interfaces/GamepadAction.html",[0,0.096,17,3.001]],["body/interfaces/GamepadAction.html",[0,0.168,1,3.311,2,1.04,3,0.228,4,0.228,5,0.14,6,3.311,7,0.362,8,0.525,9,3.516,10,1.575,11,0.583,12,0.011,13,0.402,14,4.96,15,3.762,16,1.417,17,5.266,18,3.04,19,0.971,20,4.96,21,1.793,22,2.393,23,5.408,24,3.311,25,2.788,26,3.516,27,3.516,28,3.311,29,2.983,30,3.516,31,3.311,32,3.311,33,3.136,34,3.136,35,3.136,36,4.833,37,2.983,38,3.516,39,1.77,40,3.516,41,2.695,42,3.516,43,2.991,44,3.516,45,3.499,46,3.516,47,3.136,48,3.516,49,3.136,50,3.516,51,3.311,52,3.516,53,3.311,54,3.516,55,2.983,56,3.516,57,3.311,58,3.516,59,2.846,60,3.516,61,3.136,62,3.516,63,3.136,64,3.516,65,3.311,66,3.516,67,3.311,68,3.516,69,3.311,70,3.136,71,3.516,72,3.516,73,3.516,74,3.516,75,0.008,76,0.008,452,1.514]],["title/injectables/GamepadService.html",[415,0.769,1174,2.827]],["body/injectables/GamepadService.html",[1,3.547,3,0.135,4,0.135,5,0.083,7,0.335,8,0.364,9,3.133,10,1.569,11,0.479,12,0.011,13,0.144,14,5.193,16,1.81,18,3.118,20,5.086,21,1.607,22,0.999,23,1.963,24,3.945,26,4.718,27,4.718,28,3.945,29,3.553,31,1.963,32,4.61,33,3.736,34,3.359,35,2.795,37,3.195,39,1.76,70,3.359,75,0.006,76,0.006,80,1.204,83,0.396,89,0.405,138,0.38,140,1.243,141,1.616,146,1.194,150,1.692,154,1.436,341,0.84,344,2.324,345,1.448,415,0.803,417,1.203,429,1.038,447,1.349,451,1.894,452,1.204,467,1.975,519,0.889,598,2.328,657,1.697,1052,2.951,1098,1.963,1174,2.951,1175,3.027,1176,5.471,1177,5.471,1178,4.552,1179,4.552,1180,5.471,1181,4.552,1182,4.552,1183,4.552,1184,3.027,1185,7.625,1186,4.552,1187,3.027,1188,7.625,1189,3.027,1190,6.085,1191,3.027,1192,7.316,1193,4.552,1194,3.027,1195,3.027,1196,3.027,1197,3.027,1198,3.027,1199,3.027,1200,3.027,1201,3.027,1202,3.027,1203,3.027,1204,5.471,1205,3.027,1206,5.471,1207,3.027,1208,3.027,1209,6.085,1210,3.027,1211,3.027,1212,3.027,1213,3.027,1214,4.552,1215,5.471,1216,5.198,1217,4.552,1218,2.656,1219,4.552,1220,3.027,1221,3.027,1222,3.027,1223,3.027,1224,3.027,1225,4.552,1226,3.027,1227,3.027,1228,3.027,1229,2.656,1230,3.027,1231,3.027,1232,4.029,1233,6.524,1234,3.027,1235,3.027,1236,5.471,1237,3.027,1238,3.027,1239,3.027,1240,3.027,1241,1.859,1242,3.027,1243,3.027,1244,3.027,1245,4.552,1246,3.027,1247,3.027,1248,3.027,1249,3.027,1250,3.027,1251,3.027,1252,4.8,1253,4.552,1254,3.353,1255,4.552,1256,4.552,1257,3.027,1258,3.027,1259,3.027,1260,4.552,1261,3.027,1262,3.027,1263,3.027,1264,4.552,1265,4.552,1266,5.471,1267,5.471,1268,6.085,1269,4.491,1270,5.471,1271,3.027,1272,6.085,1273,3.027,1274,6.014,1275,4.552,1276,4.552,1277,4.552,1278,3.027,1279,6.085,1280,3.027,1281,3.027,1282,4.552,1283,3.027,1284,3.027,1285,4.552,1286,4.552,1287,3.027,1288,3.027,1289,3.027,1290,3.027]],["title/interfaces/Hotkey.html",[0,0.096,1291,3.001]],["body/interfaces/Hotkey.html",[0,0.129,2,0.878,3,0.193,4,0.193,5,0.119,7,0.193,8,0.469,11,0.5,12,0.011,13,0.318,19,1.092,75,0.007,76,0.007,83,0.672,86,0.806,89,0.578,102,1.467,138,0.541,141,1.358,150,1.708,154,1.568,171,2.258,180,3.27,212,1.608,243,1.382,341,1.197,350,2.649,351,2.12,372,2.624,385,1.512,386,2.121,387,1.559,415,1.035,433,3.177,469,4.041,519,1.267,558,2.97,598,3.001,657,2.188,718,2.797,905,3.427,965,2.97,1232,3.177,1254,3.177,1291,4.039,1292,3.437,1293,5.513,1294,5.122,1295,5.819,1296,4.039,1297,2.649,1298,3.177,1299,3.603,1300,2.519,1301,4.675,1302,4.039,1303,5.703,1304,3.437,1305,2.797,1306,2.649,1307,3.437,1308,3.437,1309,3.427,1310,3.177,1311,3.177,1312,4.322,1313,3.437,1314,3.437,1315,2.649,1316,3.437,1317,3.437,1318,3.437,1319,3.437,1320,3.437,1321,3.437,1322,3.437,1323,3.437,1324,4.675,1325,3.437,1326,4.675,1327,4.675,1328,4.675,1329,3.177,1330,3.437,1331,3.437,1332,3.437,1333,3.437,1334,4.039,1335,3.437,1336,3.437,1337,3.437,1338,3.437,1339,5.314,1340,3.437,1341,4.675,1342,3.437,1343,3.437,1344,4.675,1345,3.437,1346,3.437,1347,3.437,1348,3.437,1349,3.437,1350,3.437,1351,3.437,1352,4.675,1353,3.437,1354,3.437,1355,3.177,1356,3.437,1357,5.703,1358,3.437,1359,4.675,1360,3.437,1361,3.437,1362,3.437,1363,2.97,1364,3.437,1365,3.437,1366,3.437]],["title/interfaces/HotkeyInfo.html",[0,0.096,1305,2.827]],["body/interfaces/HotkeyInfo.html",[0,0.13,2,0.891,3,0.196,4,0.196,5,0.12,7,0.196,8,0.474,11,0.414,12,0.011,13,0.321,19,1.062,75,0.007,76,0.007,83,0.675,86,0.818,89,0.586,102,1.489,138,0.549,141,1.368,150,1.713,154,1.576,171,2.281,180,3.303,212,1.632,243,1.403,341,1.215,350,2.688,351,2.151,372,2.077,385,1.534,386,2.142,387,1.582,415,1.045,433,3.224,469,4.056,519,1.286,558,3.013,598,3.031,657,2.209,718,2.838,965,3.013,1232,3.224,1254,3.224,1291,3.013,1292,3.488,1293,4.365,1294,5.142,1295,5.303,1296,4.08,1297,2.688,1298,3.224,1299,3.639,1300,2.556,1301,4.722,1302,4.08,1303,6.515,1304,3.488,1305,3.842,1306,2.688,1307,3.488,1308,3.488,1309,3.461,1310,3.224,1311,3.224,1312,4.365,1313,3.488,1314,3.488,1315,2.688,1316,3.488,1317,3.488,1318,3.488,1319,3.488,1320,3.488,1321,3.488,1322,3.488,1323,3.488,1324,4.722,1325,3.488,1326,4.722,1327,4.722,1328,4.722,1329,3.224,1330,3.488,1331,3.488,1332,3.488,1333,3.488,1334,4.08,1335,3.488,1336,3.488,1337,3.488,1338,3.488,1339,5.354,1340,3.488,1341,4.722,1342,3.488,1343,3.488,1344,4.722,1345,3.488,1346,3.488,1347,3.488,1348,3.488,1349,3.488,1350,3.488,1351,3.488,1352,4.722,1353,3.488,1354,3.488,1355,3.224,1356,3.488,1357,5.737,1358,3.488,1359,4.722,1360,3.488,1361,3.488,1362,3.488,1363,3.013,1364,3.488,1365,3.488,1366,3.488]],["title/interfaces/HotkeysData.html",[0,0.096,1367,3.474]],["body/interfaces/HotkeysData.html",[0,0.129,2,1.191,3,0.262,4,0.262,5,0.161,7,0.262,8,0.571,11,0.408,12,0.011,13,0.341,75,0.009,76,0.009,83,0.729,84,1.583,86,1.093,89,0.783,99,4.63,100,3.791,111,2.991,113,2.666,133,2.18,135,2.666,137,2.18,138,0.733,154,1.225,180,4.297,243,1.874,339,2.18,340,2.25,385,2.049,386,2.787,387,2.902,1299,3.59,1300,3.415,1305,3.791,1309,3.415,1315,3.59,1363,5.528,1367,5.691,1368,5.131,1369,4.307,1370,4.307,1371,5.26,1372,5.131,1373,4.385,1374,3.653,1375,5.131,1376,4.307,1377,4.307,1378,4.307,1379,5.131,1380,5.131,1381,4.659,1382,5.131]],["title/components/HotkeysHelpDialogComponent.html",[84,0.966,385,1.528]],["body/components/HotkeysHelpDialogComponent.html",[0,0.093,3,0.19,4,0.19,5,0.159,7,0.19,8,0.464,12,0.011,13,0.277,16,1.177,21,1.36,41,2.919,43,2.644,75,0.007,76,0.007,80,1.407,83,0.668,84,1.465,86,0.793,89,0.568,95,2.465,99,4.286,100,2.75,111,2.169,113,1.934,121,1.438,133,2.163,135,2.644,137,2.163,138,0.532,139,1.632,154,0.889,180,2.364,243,2.118,331,1.686,332,1.859,333,1.742,334,1.742,335,1.742,339,3.232,340,3.304,342,1.686,345,1.447,370,1.742,371,2.305,372,2.033,373,1.487,374,2.919,375,1.742,376,1.742,377,1.686,378,1.32,379,1.742,380,1.686,381,1.742,382,1.686,383,1.581,384,1.742,385,2.491,386,2.843,387,3.022,388,2.383,389,1.686,390,2.919,391,1.686,392,1.742,393,1.686,394,1.533,395,1.742,396,1.686,397,1.742,398,1.581,399,1.686,400,1.686,401,1.742,402,1.686,403,1.632,404,1.742,405,1.686,406,1.742,407,1.686,408,1.581,409,1.686,410,1.686,411,1.686,412,1.632,413,1.686,414,1.742,429,1.322,443,4.622,447,0.94,467,1.479,1291,3.993,1299,2.604,1300,2.477,1305,2.75,1309,3.387,1315,4.059,1363,2.92,1367,3.38,1368,6.53,1369,3.124,1370,3.124,1371,4.869,1372,3.722,1373,4.059,1374,3.381,1375,5.09,1376,4.272,1377,4.272,1378,4.272,1379,6.53,1380,3.722,1381,5.663,1382,3.722,1383,4.242,1384,3.722,1385,4.242,1386,4.242,1387,4.242,1388,7.107,1389,7.684,1390,7.107,1391,5.801,1392,5.801,1393,7.107,1394,5.801,1395,5.801,1396,5.09,1397,5.09,1398,5.801,1399,5.801,1400,5.801]],["title/injectables/HotkeysService.html",[415,0.769,1306,2.677]],["body/injectables/HotkeysService.html",[0,0.12,3,0.173,4,0.173,5,0.107,7,0.173,8,0.436,11,0.503,12,0.011,13,0.301,16,1.999,19,1.049,21,1.603,75,0.007,76,0.007,80,1.079,83,0.65,86,0.724,89,0.519,102,1.318,138,0.486,141,1.283,150,1.668,154,1.509,171,2.425,180,3.81,212,2.032,243,1.242,341,1.076,345,1.661,350,2.38,351,1.905,372,2.209,385,1.358,386,2.471,387,1.401,415,0.961,417,1.54,429,1.242,433,5.035,447,1.656,451,1.696,452,1.353,467,1.743,469,4.073,519,1.139,558,4.706,598,2.787,657,2.032,718,3.533,965,2.668,1232,2.855,1254,2.855,1291,2.668,1292,3.088,1293,4.013,1294,4.432,1295,5.306,1296,3.751,1297,2.38,1298,2.855,1299,3.869,1300,2.263,1301,4.342,1302,3.751,1303,5.447,1304,3.088,1305,2.513,1306,3.346,1307,3.088,1308,3.088,1309,3.182,1310,2.855,1311,4.641,1312,5.306,1313,4.342,1314,5.021,1315,3.869,1316,5.021,1317,3.088,1318,3.088,1319,3.088,1320,3.088,1321,3.088,1322,3.088,1323,4.342,1324,4.342,1325,3.088,1326,4.342,1327,4.342,1328,4.342,1329,2.855,1330,3.088,1331,3.088,1332,3.088,1333,3.088,1334,3.751,1335,3.088,1336,3.088,1337,3.088,1338,3.088,1339,5.021,1340,3.088,1341,4.342,1342,3.088,1343,3.088,1344,4.342,1345,3.088,1346,3.088,1347,3.088,1348,3.088,1349,4.342,1350,3.088,1351,3.088,1352,4.342,1353,3.088,1354,3.088,1355,5.035,1356,5.447,1357,5.447,1358,3.088,1359,4.342,1360,3.088,1361,3.088,1362,3.088,1363,2.668,1364,3.088,1365,3.088,1366,3.088,1401,5.449,1402,5.449,1403,3.876,1404,3.876,1405,3.876,1406,3.876,1407,3.876,1408,3.876,1409,3.876,1410,3.876,1411,3.876,1412,3.876,1413,3.876]],["title/interfaces/Id3CoverPicture.html",[0,0.096,730,2.677]],["body/interfaces/Id3CoverPicture.html",[0,0.162,2,1.257,3,0.276,4,0.276,5,0.17,7,0.276,8,0.59,10,1.379,11,0.515,12,0.011,13,0.352,19,1.149,75,0.009,76,0.009,77,1.978,81,3.157,83,0.537,95,2.623,121,1.531,170,2.453,198,2.099,243,2.621,321,3.879,730,4.847,731,3.79,734,4.784,735,3.292,740,3.954,750,2.231,762,2.301,1241,4.531,1414,5.417,1415,4.918]],["title/interfaces/Id3Tags.html",[0,0.096,762,1.625]],["body/interfaces/Id3Tags.html",[0,0.154,2,1.158,3,0.254,4,0.254,5,0.156,7,0.254,8,0.562,10,1.312,11,0.6,12,0.011,13,0.335,19,1.173,75,0.009,76,0.009,77,2.549,81,4.068,83,0.495,95,3.38,121,1.41,170,3.161,198,2.705,243,1.823,321,2.796,452,1.727,730,4.884,731,3.493,734,5.157,735,3.034,740,3.865,750,2.056,755,6.162,762,2.618,1241,4.311,1414,4.992,1415,6.338]],["title/injectables/Id3TagsService.html",[415,0.769,1416,3.474]],["body/injectables/Id3TagsService.html",[3,0.205,4,0.205,5,0.216,7,0.205,10,1.141,11,0.426,12,0.011,13,0.218,16,2.119,20,2.966,21,1.073,39,1.234,75,0.008,76,0.008,80,0.906,83,0.598,89,0.613,138,0.574,140,1.879,141,1.555,150,1.646,154,1.279,171,2.644,180,2.55,197,2.44,239,2.464,341,1.27,344,2.919,345,1.243,415,1.077,417,1.818,429,1.392,447,1.014,451,1.424,452,0.906,460,2.55,467,1.167,519,1.344,536,3.369,598,3.514,731,4.219,732,1.706,750,2.483,762,1.706,763,1.818,764,2.248,768,3.482,786,2.206,837,3.748,838,2.809,839,2.888,923,5.046,1052,3.958,1098,2.966,1114,4.014,1416,4.864,1417,4.575,1418,5.357,1419,4.575,1420,5.357,1421,7.331,1422,4.575,1423,6.105,1424,5.257,1425,4.575,1426,4.575,1427,7.637,1428,6.871,1429,4.014,1430,4.575,1431,4.014,1432,3.645,1433,4.575,1434,6.105,1435,4.575,1436,6.105,1437,4.575,1438,6.105,1439,4.575,1440,4.014,1441,4.575,1442,4.575,1443,4.575,1444,4.014,1445,6.871,1446,4.575,1447,3.369,1448,4.575,1449,4.014,1450,4.575,1451,4.014,1452,6.105,1453,4.575,1454,4.575,1455,4.575,1456,4.575,1457,4.575,1458,4.575,1459,4.575,1460,6.871,1461,4.575,1462,4.575,1463,4.575,1464,4.575,1465,4.575,1466,6.105,1467,5.357,1468,4.575,1469,4.575,1470,4.575,1471,4.575,1472,4.575,1473,4.575,1474,4.575,1475,4.575,1476,4.575,1477,4.575]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.096,94,2.546]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.173,2,1.129,3,0.248,4,0.248,5,0.207,7,0.248,8,0.553,11,0.551,12,0.011,13,0.4,19,1.145,25,2.937,75,0.009,76,0.009,77,1.777,79,3.239,81,2.837,82,2.351,83,0.655,94,4.037,95,2.937,121,1.955,122,3.596,150,1.448,170,2.204,198,1.886,276,3.987,310,2.44,311,2.44,452,1.368,455,4.244,489,3.405,490,3.596,491,3.596,492,3.405,493,2.837,494,3.091,495,3.596,496,3.596,497,3.596,498,3.596,516,3.405,576,3.596,728,3.091,729,3.596,730,4.244,731,3.405,732,2.068,733,3.536,734,4.482,735,2.958,736,4.84,737,5.111,738,3.405,739,3.596,740,2.623,741,3.818,742,3.596,743,4.085,744,4.085,745,4.085,746,4.085,747,3.596,748,3.239]],["title/interfaces/LastfmAlbum.html",[0,0.096,1478,2.827]],["body/interfaces/LastfmAlbum.html",[0,0.159,2,0.903,3,0.198,4,0.198,5,0.122,7,0.198,8,0.478,10,0.828,11,0.505,12,0.011,13,0.212,19,1.135,39,1.196,75,0.007,76,0.007,77,2.319,80,1.432,82,2.032,83,0.677,86,0.828,89,0.594,101,1.883,102,1.507,138,0.556,141,1.585,146,1.567,150,1.631,154,1.717,170,3.003,171,1.706,212,2.902,228,1.973,230,1.652,232,1.602,238,1.706,239,2.188,243,2.167,341,1.23,415,1.054,519,1.302,723,2.02,732,1.652,740,2.096,750,1.602,753,3.557,756,2.364,757,2.267,761,2.267,762,2.228,763,1.761,764,2.178,765,2.267,766,2.364,777,3.606,779,2.267,780,2.364,781,2.364,785,2.364,786,2.16,787,2.267,788,3.057,792,2.364,800,2.364,810,2.364,818,1.883,825,1.821,1478,4.384,1479,2.873,1480,2.873,1481,4.692,1482,2.47,1483,3.49,1484,3.669,1485,3.669,1486,2.873,1487,3.875,1488,2.721,1489,3.051,1490,3.051,1491,3.051,1492,3.051,1493,3.051,1494,2.873,1495,3.051,1496,3.051,1497,3.051,1498,3.051,1499,3.051,1500,3.875,1501,3.051,1502,3.051,1503,3.051,1504,2.873,1505,3.051,1506,3.051,1507,2.873,1508,3.051,1509,3.051,1510,3.051,1511,3.051,1512,4.655,1513,5.201,1514,5.201,1515,3.051,1516,3.051,1517,3.051,1518,4.114,1519,3.051,1520,3.051,1521,3.051,1522,3.051,1523,3.051,1524,3.051,1525,3.051]],["title/interfaces/LastfmErrorResponse.html",[0,0.096,1485,2.677]],["body/interfaces/LastfmErrorResponse.html",[0,0.16,2,0.911,3,0.2,4,0.2,5,0.123,7,0.2,8,0.481,10,1.269,11,0.474,12,0.011,13,0.213,19,1.121,39,1.206,75,0.007,76,0.007,77,2.328,80,0.885,82,2.044,83,0.679,86,0.836,89,0.599,101,1.9,102,1.52,138,0.561,141,1.589,146,1.577,150,1.635,154,1.721,170,2.389,171,1.721,212,2.91,228,1.984,230,1.667,232,1.616,238,1.721,239,2.411,243,2.177,341,1.241,415,1.06,519,1.314,723,2.038,732,1.667,740,2.115,750,1.616,753,2.197,756,2.384,757,2.287,761,2.287,762,2.241,763,1.777,764,2.197,765,2.287,766,2.384,777,3.622,779,2.287,780,2.384,781,2.384,785,2.384,786,2.173,787,2.287,788,3.075,792,2.384,800,2.384,810,2.384,818,1.9,825,1.837,1478,3.898,1479,2.899,1480,2.899,1481,3.898,1482,2.492,1483,3.511,1484,3.691,1485,4.17,1486,4.709,1487,3.898,1488,2.745,1489,3.078,1490,3.078,1491,3.078,1492,3.078,1493,3.078,1494,2.899,1495,3.078,1496,3.078,1497,3.078,1498,3.078,1499,3.078,1500,3.898,1501,3.078,1502,3.078,1503,3.078,1504,2.899,1505,3.078,1506,3.078,1507,2.899,1508,3.078,1509,3.078,1510,3.078,1511,3.078,1512,4.675,1513,5.217,1514,5.217,1515,3.078,1516,3.078,1517,3.078,1518,4.138,1519,3.078,1520,3.078,1521,3.078,1522,3.078,1523,3.078,1524,3.078,1525,3.078]],["title/interfaces/LastfmImage.html",[0,0.096,1481,2.827]],["body/interfaces/LastfmImage.html",[0,0.16,2,0.911,3,0.2,4,0.2,5,0.123,7,0.2,8,0.481,10,0.836,11,0.474,12,0.011,13,0.213,19,1.136,39,1.206,75,0.007,76,0.007,77,2.328,80,0.885,82,2.044,83,0.679,86,0.836,89,0.599,101,1.9,102,1.52,138,0.561,141,1.589,146,1.577,150,1.635,154,1.721,170,2.389,171,1.721,212,2.91,228,1.984,230,1.667,232,1.616,238,1.721,239,2.196,243,2.177,341,1.241,415,1.06,519,1.314,723,2.038,732,1.667,740,2.115,750,1.616,753,2.197,756,2.384,757,2.287,761,2.287,762,2.241,763,1.777,764,2.197,765,2.287,766,2.384,777,3.622,779,2.287,780,2.384,781,2.384,785,2.384,786,2.173,787,2.287,788,3.075,792,2.384,800,2.384,810,2.384,818,1.9,825,1.837,1478,3.898,1479,2.899,1480,2.899,1481,4.403,1482,4.048,1483,4.426,1484,3.691,1485,3.691,1486,2.899,1487,3.898,1488,2.745,1489,3.078,1490,3.078,1491,3.078,1492,3.078,1493,3.078,1494,2.899,1495,3.078,1496,3.078,1497,3.078,1498,3.078,1499,3.078,1500,3.898,1501,3.078,1502,3.078,1503,3.078,1504,2.899,1505,3.078,1506,3.078,1507,2.899,1508,3.078,1509,3.078,1510,3.078,1511,3.078,1512,4.675,1513,5.217,1514,5.217,1515,3.078,1516,3.078,1517,3.078,1518,4.138,1519,3.078,1520,3.078,1521,3.078,1522,3.078,1523,3.078,1524,3.078,1525,3.078]],["title/injectables/LastfmMetadataService.html",[415,0.769,1488,2.677]],["body/injectables/LastfmMetadataService.html",[0,0.159,3,0.198,4,0.198,5,0.122,7,0.198,10,0.829,11,0.418,12,0.011,13,0.212,19,1.098,39,1.197,75,0.007,76,0.007,77,2.32,80,1.184,82,2.034,83,0.677,86,0.829,89,0.594,101,1.885,102,1.509,138,0.557,141,1.586,146,1.569,150,1.631,154,1.718,170,2.377,171,1.708,212,2.903,228,2.39,230,1.654,232,1.604,238,1.708,239,2.189,243,2.168,341,1.232,345,0.904,415,1.055,417,1.764,429,1.363,447,0.984,451,1.381,452,0.878,519,1.304,723,2.023,732,1.654,740,2.099,750,2.162,753,2.181,756,2.367,757,2.27,761,2.27,762,2.699,763,1.764,764,2.181,765,2.27,766,2.367,777,3.608,779,2.27,780,2.367,781,2.367,785,3.19,786,2.445,787,2.27,788,3.059,792,2.367,800,2.367,810,2.367,818,1.885,825,1.823,839,2.099,1478,3.878,1479,3.878,1480,2.877,1481,3.878,1482,2.473,1483,3.493,1484,3.673,1485,3.673,1486,2.877,1487,3.878,1488,3.673,1489,3.055,1490,3.055,1491,3.055,1492,3.055,1493,3.055,1494,2.877,1495,3.055,1496,3.055,1497,3.055,1498,3.055,1499,3.055,1500,3.878,1501,3.055,1502,3.055,1503,3.055,1504,2.877,1505,3.055,1506,3.055,1507,2.877,1508,3.055,1509,3.055,1510,3.055,1511,3.055,1512,4.658,1513,5.204,1514,5.204,1515,3.055,1516,3.055,1517,3.055,1518,4.118,1519,3.055,1520,3.055,1521,3.055,1522,3.055,1523,3.055,1524,3.055,1525,3.055,1526,5.249,1527,4.438]],["title/interfaces/LastfmSuccessResponse.html",[0,0.096,1484,2.677]],["body/interfaces/LastfmSuccessResponse.html",[0,0.16,2,0.919,3,0.202,4,0.202,5,0.124,7,0.202,8,0.484,10,0.843,11,0.422,12,0.011,13,0.215,19,1.102,39,1.217,75,0.007,76,0.007,77,2.561,80,0.893,82,2.056,83,0.68,86,0.843,89,0.604,101,1.917,102,1.534,138,0.566,141,1.593,146,1.586,150,1.639,154,1.724,170,2.404,171,1.736,212,2.917,228,1.996,230,1.682,232,1.63,238,1.736,239,2.204,243,2.186,341,1.252,415,1.067,519,1.325,723,2.056,732,1.682,740,2.134,750,1.63,753,2.217,756,2.406,757,2.307,761,2.307,762,2.255,763,1.793,764,2.217,765,2.307,766,2.406,777,3.638,779,2.307,780,2.406,781,2.406,785,2.406,786,2.186,787,2.307,788,3.093,792,2.406,800,2.406,810,2.406,818,1.917,825,1.853,1478,4.726,1479,2.925,1480,2.925,1481,3.921,1482,2.514,1483,3.532,1484,4.189,1485,3.713,1486,2.925,1487,3.921,1488,2.77,1489,3.105,1490,3.105,1491,3.105,1492,3.105,1493,3.105,1494,2.925,1495,3.105,1496,3.105,1497,3.105,1498,3.105,1499,3.105,1500,3.921,1501,3.105,1502,3.105,1503,3.105,1504,2.925,1505,3.105,1506,3.105,1507,2.925,1508,3.105,1509,3.105,1510,3.105,1511,3.105,1512,4.696,1513,5.233,1514,5.233,1515,3.105,1516,3.105,1517,3.105,1518,4.163,1519,3.105,1520,3.105,1521,3.105,1522,3.105,1523,3.105,1524,3.105,1525,3.105]],["title/injectables/LegacyFileLoaderService.html",[415,0.769,1528,3.826]],["body/injectables/LegacyFileLoaderService.html",[3,0.231,4,0.231,5,0.239,7,0.326,8,0.528,12,0.011,13,0.246,21,1.21,39,1.392,75,0.008,76,0.008,83,0.633,88,2.192,89,0.691,138,0.647,140,2.119,141,1.483,146,1.91,150,1.384,154,1.081,161,4.282,171,1.985,228,2.62,232,1.865,341,1.432,344,3.095,345,1.564,415,1.165,417,2.051,429,1.505,447,1.464,467,1.316,519,1.516,547,3.8,598,2.639,657,1.924,704,4.484,786,2.632,877,4.874,878,3.754,880,3.8,883,3.168,884,2.752,885,3.168,886,3.68,887,3.345,889,5.365,896,5.365,902,5.656,1069,3.345,1440,4.528,1451,4.528,1528,5.795,1529,7.938,1530,5.16,1531,5.16,1532,5.16,1533,5.16,1534,5.16,1535,5.16,1536,5.16,1537,5.16,1538,5.16,1539,5.16,1540,5.16,1541,5.16,1542,5.16,1543,5.16,1544,5.16,1545,5.16,1546,5.16,1547,5.16,1548,5.16,1549,5.16,1550,5.16,1551,5.16,1552,5.16]],["title/components/LibraryComponent.html",[84,0.966,139,1.678]],["body/components/LibraryComponent.html",[0,0.038,3,0.078,4,0.078,5,0.147,7,0.199,8,0.234,10,1.291,11,0.462,12,0.011,13,0.14,16,1.232,19,1.029,21,1.55,39,1.198,75,0.004,76,0.004,77,2.48,78,1.53,79,2.213,80,1.497,81,1.938,82,0.996,83,0.63,84,0.84,85,3.469,86,0.326,87,2.609,88,1.887,89,0.233,90,1.07,91,1.336,92,1.018,93,0.892,94,4.283,95,3.24,96,1.018,97,3.325,98,1.07,99,2.457,100,1.13,101,0.741,102,0.593,103,3.02,104,3.325,105,3.325,106,2.791,107,1.2,108,2.368,109,1.07,110,3.02,111,0.892,112,3.02,113,0.795,114,3.02,115,3.02,116,3.02,117,1.389,118,3.02,119,1.284,120,0.892,121,1.228,122,1.13,123,2.475,124,1.13,125,3.02,126,1.284,127,3.325,128,3.325,129,3.325,130,3.325,131,3.325,132,1.53,133,1.092,134,2.571,135,1.336,136,2.571,137,1.092,138,0.219,139,1.709,140,1.204,141,0.597,142,1.13,143,1.13,144,1.9,145,1.711,146,2.055,147,5.003,148,1.53,149,3.325,150,1.728,151,3.897,152,2.571,153,2.571,154,1.61,155,2.571,156,2.571,157,2.571,158,2.571,159,2.571,160,3.325,161,3.477,162,4.345,163,3.02,164,3.325,165,6.356,166,5.003,167,2.571,168,2.571,169,2.571,170,3.164,171,1.709,172,2.571,173,4.274,174,2.571,175,3.325,176,3.897,177,5.252,178,3.897,179,4.706,180,2.475,181,2.335,182,2.791,183,4.543,184,2.571,185,2.017,186,3.897,187,2.571,188,2.571,189,2.571,190,2.571,191,2.571,192,2.571,193,2.571,194,5.268,195,2.571,196,2.335,197,2.368,198,1.51,199,2.571,200,4.706,201,2.335,202,1.563,203,4.706,204,2.571,205,2.571,206,4.706,207,2.571,208,2.571,209,1.386,210,3.897,211,2.571,212,2.7,213,2.571,214,3.897,215,3.897,216,2.571,217,2.571,218,2.571,219,2.571,220,2.571,221,2.571,222,2.335,223,1.711,224,1.563,225,2.571,226,2.571,227,2.571,228,2.391,229,1.2,230,0.65,231,1.53,232,2.324,233,1.53,234,1.53,235,1.53,236,1.53,237,1.53,238,0.671,239,0.886,240,1.284,241,1.389,242,0.972,243,0.559,244,2.571,245,1.53,246,1.53,247,2.335,248,2.571,249,1.53,250,2.571,251,1.53,252,2.335,253,1.389,254,1.53,255,1.53,256,2.571,257,3.325,258,1.53,259,3.897,260,1.53,261,2.571,262,2.571,263,3.897,264,1.284,265,1.53,266,1.53,267,1.53,268,1.53,269,1.53,270,2.571,271,1.53,272,2.571,273,2.571,274,3.325,275,1.53,276,0.857,277,1.53,278,1.53,279,1.53,280,1.07,281,2.571,282,2.571,283,2.335,284,1.53,331,0.693,332,0.939,333,0.716,334,0.716,335,0.716,339,2.765,340,2.749,342,0.693,345,1.553,370,0.716,371,1.164,372,1.027,373,0.611,374,1.824,375,0.716,376,0.716,377,0.693,378,0.543,379,0.716,380,0.693,381,0.716,382,0.693,383,0.65,384,0.716,385,0.611,386,0.63,387,0.63,388,1.204,389,0.693,390,1.824,391,0.693,392,0.716,393,0.693,394,0.63,395,0.716,396,0.693,397,0.716,398,0.65,399,0.693,400,0.693,401,0.716,402,0.693,403,0.671,404,0.716,405,0.693,406,0.716,407,0.693,408,0.65,409,0.693,410,0.693,411,0.693,412,0.671,413,0.693,414,0.716,429,0.668,447,1.465,451,2.058,452,1.309,467,1.64,597,3.692,1553,2.93,1554,2.93,1555,2.93,1556,2.571,1557,2.93,1558,2.93,1559,2.93,1560,2.93,1561,2.93,1562,2.93,1563,2.571,1564,1.744,1565,1.744,1566,1.744,1567,1.744,1568,1.744,1569,1.744,1570,1.744,1571,1.744,1572,1.744,1573,1.744,1574,1.744,1575,1.744,1576,1.744,1577,1.744,1578,1.744,1579,1.744,1580,1.744,1581,1.744,1582,1.744,1583,1.744,1584,1.744,1585,2.93,1586,2.93,1587,2.93,1588,3.692,1589,2.93,1590,2.93,1591,4.441,1592,4.441,1593,2.93,1594,4.441,1595,4.441,1596,4.441,1597,2.93]],["title/interceptors/LoaderInterceptor.html",[1598,4.36,1599,3.474]],["body/interceptors/LoaderInterceptor.html",[3,0.269,4,0.269,5,0.165,7,0.269,11,0.419,12,0.011,13,0.287,75,0.009,76,0.009,80,1.189,83,0.722,86,1.122,89,0.804,102,2.042,138,0.753,140,2.467,141,1.223,154,1.258,345,1.223,415,1.28,429,1.655,447,1.331,451,1.869,452,1.189,757,3.072,923,4.134,1302,5.37,1599,5.784,1600,6.006,1601,6.006,1602,7.259,1603,7.259,1604,8.104,1605,6.845,1606,8.104,1607,6.006,1608,6.006,1609,7.259,1610,6.006,1611,5.27,1612,5.346,1613,6.006,1614,5.27,1615,6.006,1616,6.006,1617,6.006]],["title/injectables/LoaderService.html",[415,0.769,1612,3.211]],["body/injectables/LoaderService.html",[3,0.262,4,0.262,5,0.161,7,0.262,8,0.571,12,0.011,13,0.279,16,1.982,21,1.371,39,2.166,41,2.934,75,0.009,76,0.01,83,0.509,88,2.484,89,0.783,138,0.733,141,1.191,146,2.022,341,1.623,345,1.57,415,1.26,417,2.324,423,6.766,429,1.628,447,1.583,467,1.491,500,5.691,519,1.718,592,5.131,595,5.131,621,5.131,1612,5.26,1618,5.848,1619,8.236,1620,7.227,1621,5.848,1622,5.848,1623,5.848,1624,5.848,1625,8.236,1626,5.848,1627,5.848,1628,4.659]],["title/injectables/MediaSessionService.html",[415,0.769,1629,3.001]],["body/injectables/MediaSessionService.html",[3,0.21,4,0.21,5,0.129,7,0.21,10,1.479,11,0.517,12,0.011,13,0.224,16,2.196,29,4.497,75,0.008,76,0.008,80,1.465,83,0.54,86,0.876,89,0.628,121,1.163,138,0.588,141,1.264,150,1.457,171,1.805,230,2.314,238,2.388,239,1.876,341,1.301,344,2.955,345,1.568,415,1.094,416,3.174,417,1.864,420,6.304,421,5.452,429,1.415,447,1.641,451,2.304,452,1.465,468,3.04,519,1.378,537,4.115,905,3.624,943,2.739,948,4.51,1334,5.096,1629,4.272,1630,6.943,1631,6.304,1632,4.69,1633,6.206,1634,6.206,1635,6.206,1636,6.206,1637,4.69,1638,6.206,1639,6.956,1640,7.7,1641,6.496,1642,4.69,1643,6.206,1644,6.956,1645,4.69,1646,6.206,1647,4.69,1648,6.206,1649,4.69,1650,4.69,1651,4.945,1652,5.446,1653,4.69,1654,4.115,1655,4.69,1656,4.69,1657,4.69,1658,4.69,1659,4.115,1660,4.69,1661,4.69,1662,6.206,1663,4.945,1664,5.446,1665,6.206,1666,4.69,1667,4.69,1668,4.115,1669,4.69,1670,4.69,1671,4.69,1672,4.69,1673,4.69,1674,4.69,1675,4.69]],["title/injectables/MetadataService.html",[123,2.43,415,0.769]],["body/injectables/MetadataService.html",[3,0.109,4,0.109,5,0.149,7,0.109,8,0.307,11,0.476,12,0.011,13,0.116,19,0.326,21,1.597,39,1.037,41,1.578,43,1.752,55,1.419,75,0.005,76,0.005,77,0.779,79,2.783,80,1.072,81,1.243,82,1.307,83,0.648,85,3.661,86,0.454,88,2.025,89,0.326,90,1.492,91,1.752,92,1.419,93,1.243,94,2.244,95,2.665,96,1.419,101,1.033,102,0.827,121,1.689,123,2.142,138,0.305,141,1.387,142,1.576,143,1.576,146,2.182,150,1.706,154,1.652,170,0.966,171,0.935,185,2.645,198,0.827,212,2.199,228,2.418,230,0.906,232,2.797,238,0.935,239,1.162,240,1.79,276,1.889,296,2.77,341,0.675,345,1.517,378,1.483,415,0.678,417,0.966,429,0.876,447,1.2,451,1.686,452,1.072,467,1.737,485,3.372,514,2.244,515,1.296,519,0.714,520,1.419,522,1.576,554,1.419,597,1.673,657,2.539,689,3.372,704,3.163,723,3.105,727,3.663,733,1.965,737,4.259,738,3.851,739,1.576,740,1.15,741,1.673,742,1.576,750,2.732,763,0.966,764,1.195,775,1.492,778,2.359,786,2.267,787,1.965,788,1.965,818,2.025,825,1.958,830,4.067,831,2.542,832,1.576,833,1.576,834,1.576,835,1.576,836,1.576,839,2.562,878,1.15,884,4.031,885,1.492,905,2.244,997,1.79,1025,1.355,1162,1.937,1416,3.062,1482,3.496,1488,2.359,1676,2.133,1677,4.766,1678,4.701,1679,4.766,1680,4.766,1681,4.766,1682,4.766,1683,4.766,1684,4.766,1685,3.372,1686,3.843,1687,3.843,1688,3.843,1689,2.431,1690,2.431,1691,2.133,1692,3.843,1693,3.843,1694,2.431,1695,3.797,1696,3.843,1697,2.431,1698,3.843,1699,2.431,1700,3.843,1701,2.431,1702,6.273,1703,2.431,1704,2.431,1705,4.753,1706,5.417,1707,2.431,1708,6.569,1709,3.843,1710,3.843,1711,3.372,1712,2.431,1713,3.843,1714,2.431,1715,3.843,1716,2.431,1717,3.843,1718,2.431,1719,2.431,1720,2.133,1721,2.431,1722,2.431,1723,1.673,1724,2.431,1725,2.133,1726,3.372,1727,2.133,1728,2.431,1729,2.431,1730,2.431,1731,2.431,1732,2.431,1733,2.431,1734,2.431,1735,2.431,1736,2.431,1737,2.431,1738,2.431,1739,5.9,1740,2.431,1741,3.843,1742,2.431,1743,2.133,1744,2.133,1745,2.431,1746,2.431,1747,2.431,1748,2.431,1749,2.431,1750,2.431,1751,3.843,1752,2.431,1753,2.431,1754,3.843,1755,4.766,1756,2.431,1757,2.431,1758,3.843,1759,2.431,1760,5.417,1761,3.843,1762,3.843,1763,3.062,1764,3.062,1765,3.372,1766,4.766,1767,2.431,1768,2.431,1769,3.843,1770,4.766,1771,3.062,1772,2.431,1773,3.843,1774,2.431,1775,5.9,1776,2.431,1777,1.576,1778,2.133,1779,2.431,1780,2.431,1781,5.9,1782,2.645,1783,2.431,1784,2.431,1785,3.843,1786,2.431,1787,2.431,1788,2.431,1789,2.431,1790,2.431,1791,2.431,1792,2.431,1793,2.431,1794,2.431,1795,2.431,1796,2.431,1797,2.431,1798,2.431,1799,2.431,1800,2.431,1801,2.431,1802,2.431,1803,2.431,1804,2.431,1805,2.431,1806,2.431,1807,2.431,1808,2.431,1809,2.431,1810,2.133,1811,2.431,1812,5.417,1813,2.431,1814,2.133,1815,2.431,1816,3.843,1817,4.766,1818,2.431,1819,2.431,1820,2.431,1821,4.766,1822,2.431,1823,2.431,1824,2.431,1825,3.843,1826,2.431,1827,2.431,1828,3.843,1829,2.431,1830,2.431,1831,2.431,1832,2.431,1833,3.843,1834,2.133,1835,2.431,1836,2.431,1837,2.431,1838,1.937,1839,2.431,1840,2.431,1841,2.431,1842,2.431,1843,2.431,1844,2.431,1845,2.431,1846,2.431,1847,2.431,1848,2.133,1849,2.431,1850,2.431,1851,2.431,1852,2.431,1853,2.431,1854,2.431,1855,2.431,1856,2.431,1857,2.431,1858,2.431,1859,2.431,1860,2.431,1861,2.431,1862,2.431]],["title/components/MetadataSettingsComponent.html",[84,0.966,389,1.733]],["body/components/MetadataSettingsComponent.html",[3,0.18,4,0.18,5,0.208,7,0.18,8,0.447,11,0.485,12,0.011,13,0.192,16,1.929,21,0.944,75,0.007,76,0.007,80,1.565,83,0.674,84,1.425,86,0.752,89,0.539,90,2.472,91,2.551,92,3.756,93,3.736,113,1.835,121,2.016,123,3.873,124,2.61,133,2.086,137,2.086,138,0.505,139,1.549,141,1.139,142,2.61,143,2.61,144,3.627,209,2.647,228,2.123,232,1.455,331,1.6,332,1.793,333,1.653,334,1.653,335,1.653,339,3.214,340,3.283,342,1.6,345,1.54,370,1.653,371,2.224,372,1.961,373,1.411,374,2.855,375,1.653,376,1.653,377,1.6,378,1.253,379,1.653,380,1.6,381,1.653,382,1.6,383,1.501,384,1.653,385,1.411,386,1.455,387,1.455,388,2.298,389,2.762,390,2.855,391,1.6,392,1.653,393,1.6,394,1.455,395,1.653,396,1.6,397,1.653,398,1.501,399,1.6,400,1.6,401,1.653,402,1.6,403,1.549,404,1.653,405,1.6,406,1.653,407,1.6,408,1.501,409,1.6,410,1.6,411,1.6,412,1.549,413,1.6,414,1.653,429,1.275,447,1.619,451,2.163,452,1.376,467,1.026,514,3.267,515,2.147,520,2.351,577,3.873,598,3.555,793,3.267,839,3.741,969,4.458,1269,3.852,1374,3.289,1494,3.627,1863,7.756,1864,6.805,1865,3.207,1866,5.124,1867,6.431,1868,4.121,1869,6.951,1870,5.595,1871,5.595,1872,5.595,1873,5.595,1874,4.025,1875,5.595,1876,8.351,1877,4.025,1878,5.595,1879,4.025,1880,5.595,1881,4.025,1882,5.595,1883,4.025,1884,4.025,1885,4.025,1886,3.532,1887,3.532,1888,3.207,1889,4.025,1890,4.025,1891,6.951,1892,4.025,1893,4.025,1894,4.025,1895,4.025,1896,4.025,1897,4.025,1898,4.025,1899,5.595,1900,6.099,1901,5.595]],["title/interfaces/MusicbrainzReleaseGroup.html",[0,0.096,767,2.827]],["body/interfaces/MusicbrainzReleaseGroup.html",[0,0.156,2,0.856,3,0.188,4,0.188,5,0.115,7,0.188,8,0.461,10,0.785,11,0.459,12,0.011,13,0.2,19,1.144,22,1.387,39,1.133,75,0.007,76,0.007,77,1.346,82,1.429,83,0.682,86,0.785,89,0.563,101,1.785,102,1.429,138,0.527,141,1.51,146,1.512,150,1.674,154,1.735,197,2.241,198,2.407,202,3.955,209,2.726,212,2.979,223,2.454,224,2.241,228,2.171,230,2.639,232,2.558,238,2.531,239,2.316,243,1.346,280,2.58,341,1.166,378,2.047,415,1.016,452,1.141,493,2.149,519,1.234,541,2.241,723,2.627,732,1.566,749,3.736,750,1.518,751,2.892,752,4.528,753,3.233,754,3.967,756,2.241,757,2.149,758,2.892,759,2.724,760,2.724,761,3.364,762,2.149,763,1.67,764,2.065,765,2.149,766,2.241,767,4.265,768,3.381,769,4.967,770,4.346,771,2.724,772,3.967,773,2.892,774,3.736,775,2.58,776,2.724,777,2.241,778,2.58,779,2.149,780,2.241,781,2.241,782,2.892,783,2.892,784,2.892,785,2.241,786,2.377,787,2.149,788,2.948,789,3.967,790,2.892,791,2.892,792,3.073,793,2.454,794,2.892,795,2.892,796,2.892,797,2.892,798,2.892,799,2.892,800,3.073,801,3.967,802,2.892,803,2.892,804,2.724,805,2.892,806,2.892,807,2.892,808,2.892,809,2.892,810,2.241,811,4.873,812,2.892,813,2.892,814,2.892,815,2.892,816,2.58,817,2.892,818,2.449,819,2.892,820,2.892,821,2.892,822,3.967,823,2.892,824,2.724,825,2.367,826,2.892,827,2.892]],["title/interfaces/MusicbrainzResponse.html",[0,0.096,771,2.827]],["body/interfaces/MusicbrainzResponse.html",[0,0.157,2,0.868,3,0.191,4,0.191,5,0.117,7,0.191,8,0.465,10,1.239,11,0.406,12,0.011,13,0.203,19,1.101,22,1.407,39,1.15,75,0.007,76,0.007,77,1.366,82,1.449,83,0.685,86,0.797,89,0.571,101,1.811,102,1.449,138,0.535,141,1.518,146,1.526,150,1.68,154,1.739,197,2.273,198,1.449,202,3.104,209,2.753,212,2.989,223,2.489,224,2.273,228,2.187,230,2.655,232,2.573,238,2.55,239,2.326,243,1.366,280,2.617,341,1.183,378,2.063,415,1.026,493,2.18,519,1.252,541,2.273,723,2.653,732,1.589,749,3.773,750,1.54,751,2.934,752,4.562,753,3.257,754,4.006,756,2.273,757,2.18,758,2.934,759,2.763,760,2.763,761,3.39,762,2.17,763,1.694,764,2.095,765,2.18,766,2.273,767,4.617,768,2.653,769,4.989,770,2.617,771,3.773,772,5.132,773,4.902,774,3.773,775,2.617,776,2.763,777,2.273,778,2.617,779,2.18,780,2.273,781,2.273,782,2.934,783,2.934,784,2.934,785,2.273,786,2.395,787,2.18,788,2.977,789,4.006,790,2.934,791,2.934,792,3.104,793,2.489,794,2.934,795,2.934,796,2.934,797,2.934,798,2.934,799,2.934,800,3.104,801,4.006,802,2.934,803,2.934,804,2.763,805,2.934,806,2.934,807,2.934,808,2.934,809,2.934,810,2.273,811,4.902,812,2.934,813,2.934,814,2.934,815,2.934,816,2.617,817,2.934,818,2.473,819,2.934,820,2.934,821,2.934,822,4.006,823,2.934,824,2.763,825,2.391,826,2.934,827,2.934]],["title/injectables/MusicbrainzService.html",[415,0.769,778,2.677]],["body/injectables/MusicbrainzService.html",[0,0.156,3,0.19,4,0.19,5,0.117,7,0.19,10,0.795,11,0.297,12,0.011,13,0.203,19,1.101,22,1.403,39,1.147,75,0.007,76,0.007,77,1.363,80,0.842,82,1.446,83,0.685,86,0.795,89,0.569,101,1.806,102,1.446,138,0.533,141,1.517,146,1.524,150,1.679,154,1.739,197,2.267,198,1.446,202,3.098,209,2.748,212,2.987,223,2.483,224,2.267,228,2.458,230,2.652,232,2.571,238,2.547,239,2.325,243,1.363,280,2.611,341,1.18,345,0.866,378,2.06,415,1.025,417,1.69,429,1.324,447,0.942,451,1.323,452,0.842,493,2.175,519,1.249,541,2.267,723,2.649,732,1.585,749,3.767,750,2.1,751,2.927,752,4.556,753,3.253,754,4,756,2.267,757,2.175,758,2.927,759,2.756,760,2.756,761,3.385,762,2.652,763,1.69,764,2.09,765,2.175,766,2.267,767,3.767,768,2.649,769,4.291,770,2.611,771,2.756,772,4,773,2.927,774,3.767,775,2.611,776,2.756,777,2.267,778,3.567,779,2.175,780,2.267,781,2.267,782,2.927,783,2.927,784,2.927,785,3.098,786,2.571,787,2.175,788,2.972,789,4,790,2.927,791,2.927,792,3.098,793,2.483,794,2.927,795,2.927,796,2.927,797,2.927,798,2.927,799,2.927,800,3.098,801,4,802,2.927,803,2.927,804,2.756,805,2.927,806,2.927,807,2.927,808,2.927,809,2.927,810,2.267,811,4.897,812,2.927,813,2.927,814,2.927,815,2.927,816,2.611,817,2.927,818,2.469,819,2.927,820,2.927,821,2.927,822,4,823,2.927,824,2.756,825,2.387,826,2.927,827,2.927,839,2.011,1526,5.098,1902,4.252]],["title/injectables/NativeBrowserFileLoaderService.html",[415,0.769,888,3.474]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.099,3,0.201,4,0.201,5,0.23,7,0.201,8,0.483,10,0.841,12,0.011,13,0.215,21,1.055,41,1.848,75,0.007,76,0.007,83,0.661,86,0.841,88,1.912,89,0.603,90,2.763,91,2.051,92,2.628,93,2.301,101,1.912,102,1.53,138,0.564,140,1.848,141,0.916,142,2.917,143,2.917,146,1.787,150,1.638,154,1.673,161,3.914,228,2.679,230,1.677,232,2.826,238,1.731,239,1.825,276,2.211,341,1.249,344,2.895,345,1.483,351,3.733,415,1.065,417,1.788,429,1.376,447,1.338,467,1.147,469,3.088,519,1.322,554,2.628,657,2.251,704,2.628,768,2.752,786,2.745,876,3.585,877,4.663,878,3.592,879,6.051,880,3.314,881,5.069,882,5.429,883,2.763,884,3.883,885,2.763,886,3.365,887,2.917,888,4.811,889,5.018,890,3.948,891,3.948,892,5.429,893,3.948,894,5.298,895,3.948,896,5.363,897,3.948,898,3.948,899,3.948,900,3.948,901,3.948,902,5.363,903,3.948,904,3.948,905,3.526,906,3.585,907,3.948,908,3.948,909,3.948,910,3.585,911,3.314,912,3.948,913,3.948,914,3.948,915,3.585,916,3.948,917,3.314,918,3.585,919,3.948,920,3.948,921,3.948,922,3.585,923,3.097,924,5.979,925,4.811,926,3.585,927,3.948,928,3.948,929,3.948,1903,6.037,1904,4.5,1905,4.5]],["title/interfaces/OscVisualizerOptions.html",[0,0.096,329,2.23]],["body/interfaces/OscVisualizerOptions.html",[0,0.183,2,1.036,3,0.227,4,0.227,5,0.14,7,0.227,8,0.523,10,1.648,11,0.552,12,0.011,13,0.408,18,3.215,19,1.023,22,1.679,25,3.074,75,0.008,76,0.008,285,2.834,286,2.834,287,3.754,288,2.97,289,2.97,290,2.97,291,2.712,292,2.601,293,2.712,294,2.712,295,2.712,296,2.601,297,2.712,298,2.712,299,2.712,300,2.834,301,2.834,302,2.601,303,3.489,304,3.347,305,3.347,306,3.347,307,2.601,308,4.042,309,2.712,310,2.878,311,2.878,312,3.347,313,2.712,314,2.499,315,2.601,316,2.834,317,2.97,318,2.601,319,3.555,320,2.712,321,2.499,322,4.257,323,3.095,324,2.712,325,3.347,326,3.613,327,3.826,328,2.499,329,3.7,330,4.096]],["title/interfaces/OsciloscopeConfig.html",[0,0.096,307,2.23]],["body/interfaces/OsciloscopeConfig.html",[0,0.184,2,1.058,3,0.232,4,0.232,5,0.143,7,0.232,8,0.531,10,1.651,11,0.538,12,0.011,13,0.409,18,2.905,19,1.031,22,1.715,25,2.819,75,0.008,76,0.008,285,2.896,286,2.896,287,3.784,288,3.035,289,3.035,290,3.035,291,2.772,292,2.658,293,2.772,294,2.772,295,2.772,296,2.658,297,2.772,298,2.772,299,2.772,300,2.896,301,2.896,302,2.658,303,3.538,304,3.394,305,3.394,306,3.394,307,3.394,308,4.069,309,2.772,310,2.919,311,2.919,312,3.394,313,2.772,314,2.554,315,2.658,316,2.896,317,3.035,318,2.658,319,3.592,320,2.772,321,2.554,322,4.073,323,3.138,324,2.772,325,3.394,326,3.642,327,3.642,328,2.554,329,3.394,330,3.784]],["title/components/PlayerComponent.html",[84,0.966,391,1.733]],["body/components/PlayerComponent.html",[3,0.203,4,0.203,5,0.188,7,0.203,8,0.486,12,0.011,13,0.217,21,1.606,75,0.008,76,0.008,80,1.447,83,0.74,84,1.518,86,0.85,87,4.714,89,0.609,107,3.129,108,3.899,109,2.791,111,2.325,113,2.072,121,1.507,133,2.266,135,2.771,137,2.266,138,0.57,139,1.749,140,2.497,141,1.238,145,3.55,229,3.129,331,1.807,332,1.948,333,1.867,334,1.867,335,1.867,337,3.732,338,3.732,339,3.254,340,3.33,342,1.807,345,1.238,347,2.791,370,1.867,371,2.416,372,2.13,373,1.593,374,3.003,375,1.867,376,1.867,377,2.906,378,1.892,379,1.867,380,1.807,381,1.867,382,1.807,383,1.695,384,1.867,385,1.593,386,1.643,387,1.643,388,2.497,389,1.807,390,3.003,391,2.906,392,1.867,393,1.807,394,2.475,395,1.867,396,2.906,397,1.867,398,1.695,399,1.807,400,1.807,401,1.867,402,1.807,403,1.749,404,1.867,405,1.807,406,1.867,407,1.807,408,1.695,409,1.807,410,1.807,411,1.807,412,1.749,413,1.807,414,1.867,416,3.74,467,1.55,840,3.989,878,2.15,886,3.388,887,2.947,932,5.457,943,3.55,951,2.791,952,3.348,1025,2.533,1373,4.205,1374,3.503,1906,4.546,1907,6.01,1908,5.457,1909,5.457,1910,6.079,1911,6.079,1912,4.546,1913,4.546,1914,4.477,1915,3.989,1916,3.348,1917,3.622,1918,4.546,1919,4.546,1920,3.989,1921,3.622,1922,4.546]],["title/injectables/PlayerService.html",[108,2.325,415,0.769]],["body/injectables/PlayerService.html",[3,0.1,4,0.1,5,0.175,7,0.1,8,0.288,10,1.338,11,0.489,12,0.011,13,0.107,16,1.944,19,0.605,21,1.601,39,1.716,41,2.125,43,1.022,75,0.004,76,0.004,77,0.718,80,1.351,83,0.623,85,3.546,86,0.419,88,1.919,89,0.3,91,1.022,95,3.452,96,1.309,108,1.921,121,0.556,123,2.008,124,1.453,138,0.281,141,1.485,144,1.453,146,2.131,150,1.685,154,1.653,161,3.354,163,4.516,170,0.891,198,0.762,202,1.921,212,2.257,228,2.694,230,0.836,232,2.391,238,0.863,239,1.366,240,1.651,247,1.786,252,1.786,253,1.786,276,1.771,310,2.663,311,2.663,318,2.646,341,0.622,344,1.919,345,1.676,352,2.212,353,1.543,362,1.543,415,0.635,416,1.843,417,0.891,420,3.599,429,0.821,434,1.786,447,1.735,451,2.125,452,1.417,460,2.518,465,3.964,467,1.89,469,2.646,514,2.104,515,1.196,519,0.659,520,1.309,554,1.309,561,1.786,600,1.453,657,1.684,677,4.54,728,2.883,738,2.212,742,2.336,747,1.453,748,1.309,786,1.633,878,1.704,883,1.377,884,3.228,885,1.377,886,2.008,887,1.453,905,1.309,910,1.786,943,1.309,948,2.336,951,1.377,1025,2.008,1130,1.967,1396,1.967,1449,1.967,1500,1.453,1556,3.162,1588,3.562,1605,4.54,1629,2.48,1631,1.786,1641,1.967,1659,3.162,1678,1.786,1691,3.162,1921,1.786,1923,1.967,1924,4.518,1925,4.518,1926,4.518,1927,4.518,1928,4.518,1929,3.603,1930,4.518,1931,3.603,1932,3.603,1933,4.518,1934,3.603,1935,3.162,1936,3.162,1937,5.174,1938,4.518,1939,3.603,1940,3.603,1941,4.54,1942,4.54,1943,2.242,1944,2.242,1945,2.242,1946,3.603,1947,2.242,1948,3.599,1949,2.242,1950,2.242,1951,2.242,1952,2.242,1953,2.242,1954,3.603,1955,2.242,1956,2.242,1957,3.603,1958,2.242,1959,3.603,1960,2.242,1961,5.174,1962,3.603,1963,2.242,1964,2.242,1965,2.242,1966,2.242,1967,2.242,1968,3.603,1969,2.242,1970,2.242,1971,2.242,1972,2.242,1973,3.603,1974,3.603,1975,3.603,1976,2.242,1977,2.242,1978,2.242,1979,6.054,1980,5.174,1981,3.603,1982,3.603,1983,2.242,1984,3.603,1985,2.242,1986,3.603,1987,2.242,1988,2.242,1989,3.603,1990,2.242,1991,1.651,1992,2.48,1993,2.242,1994,2.242,1995,2.242,1996,1.786,1997,1.651,1998,1.651,1999,2.242,2000,2.242,2001,1.786,2002,1.786,2003,3.603,2004,2.242,2005,3.603,2006,2.242,2007,2.242,2008,3.603,2009,2.242,2010,3.603,2011,2.242,2012,2.242,2013,2.242,2014,2.242,2015,2.242,2016,2.242,2017,2.242,2018,2.242,2019,2.242,2020,3.603,2021,2.242,2022,3.162,2023,2.242,2024,1.967,2025,2.242,2026,3.603,2027,2.242,2028,1.967,2029,1.967,2030,3.603,2031,1.967,2032,2.242,2033,2.242,2034,2.242,2035,2.242,2036,2.242,2037,2.242,2038,2.242,2039,1.967,2040,2.242,2041,4.518,2042,2.242,2043,2.242,2044,2.242,2045,2.242,2046,2.242,2047,2.242,2048,2.242,2049,2.242,2050,2.242,2051,2.242,2052,2.242,2053,2.242,2054,2.242,2055,2.242,2056,2.242,2057,2.242,2058,2.242,2059,2.242,2060,2.242,2061,2.242,2062,2.242,2063,2.242,2064,2.242,2065,2.242,2066,2.242,2067,2.242,2068,2.242,2069,2.242,2070,2.242,2071,2.242,2072,2.242,2073,2.242,2074,2.242,2075,1.967,2076,3.603,2077,3.162,2078,3.162,2079,1.967,2080,1.967,2081,2.242,2082,4.518,2083,1.967,2084,2.242,2085,2.242,2086,2.242,2087,2.242,2088,2.242,2089,3.603,2090,2.242,2091,3.603,2092,2.242,2093,2.242,2094,2.242,2095,1.967,2096,2.242,2097,5.174,2098,2.242,2099,2.242,2100,2.242,2101,2.242,2102,2.242,2103,2.242,2104,2.242,2105,2.242,2106,3.603,2107,2.242,2108,2.242,2109,2.242,2110,3.603,2111,1.309,2112,2.242,2113,2.638,2114,2.242,2115,3.11,2116,2.242,2117,2.242,2118,2.242,2119,2.242,2120,2.242,2121,1.967,2122,3.599,2123,3.599,2124,2.242,2125,2.242,2126,1.786,2127,1.967,2128,2.242,2129,2.242,2130,2.242,2131,2.242]],["title/components/PlayerToolbarComponent.html",[84,0.966,393,1.733]],["body/components/PlayerToolbarComponent.html",[3,0.122,4,0.122,5,0.141,7,0.122,8,0.336,10,1.505,11,0.479,12,0.011,13,0.13,16,2.058,19,0.563,21,1.46,34,1.673,35,4.039,37,1.591,39,1.383,70,1.673,75,0.005,76,0.005,80,1.494,83,0.7,84,1.137,85,2.858,86,0.509,87,3.53,89,0.365,103,4.086,106,3.777,107,1.876,108,3.074,109,1.673,110,4.086,111,1.394,112,4.086,113,1.242,121,1.272,123,3.212,124,1.767,133,1.567,135,1.916,137,1.567,138,0.342,139,1.049,140,1.726,141,1.044,144,2.724,145,2.454,146,1.345,154,0.571,228,1.902,229,1.876,292,1.394,331,1.083,332,1.347,333,1.119,334,1.119,335,1.119,337,2.58,338,2.58,339,3.058,340,3.049,342,1.083,345,1.64,347,1.673,370,1.119,371,1.67,372,1.473,373,0.955,374,2.367,375,1.119,376,1.119,377,1.083,378,0.848,379,1.119,380,1.083,381,1.119,382,1.083,383,1.016,384,1.119,385,0.955,386,0.985,387,0.985,388,1.726,389,1.083,390,2.367,391,1.083,392,1.119,393,2.291,394,2.477,395,1.119,396,1.083,397,1.119,398,1.016,399,1.083,400,1.083,401,1.119,402,1.083,403,1.049,404,1.119,405,1.083,406,1.119,407,1.083,408,1.016,409,1.083,410,1.083,411,1.083,412,1.049,413,1.083,414,1.119,416,2.948,428,2.391,429,0.958,447,1.698,451,2.134,452,1.438,460,2.342,467,2.08,657,1.567,748,2.454,843,3.777,858,2.391,860,3.348,868,3.737,878,1.289,886,3.212,887,1.767,943,2.454,951,1.673,952,2.007,977,2.391,1025,1.519,1052,3.325,1098,1.767,1174,2.724,1241,1.673,1293,2.007,1294,1.767,1295,2.007,1297,1.673,1306,2.58,1838,3.348,1909,4.086,1916,2.007,1917,2.171,1921,3.348,1935,3.687,1936,3.687,1941,4.5,1942,4.5,2111,2.454,2113,3.842,2132,8.107,2133,7.114,2134,2.725,2135,3.687,2136,5.128,2137,5.128,2138,5.128,2139,5.128,2140,5.128,2141,4.202,2142,4.202,2143,5.128,2144,4.202,2145,4.202,2146,4.202,2147,5.128,2148,4.202,2149,4.202,2150,5.128,2151,5.128,2152,2.725,2153,2.725,2154,2.725,2155,2.725,2156,2.725,2157,2.725,2158,2.725,2159,4.202,2160,2.725,2161,4.202,2162,2.725,2163,2.725,2164,2.725,2165,2.725,2166,2.725,2167,2.725,2168,2.725,2169,2.725,2170,2.725,2171,2.725,2172,2.725,2173,2.725,2174,2.725,2175,4.202,2176,2.725,2177,2.171,2178,2.391,2179,2.391,2180,2.391,2181,2.725,2182,2.391,2183,2.725,2184,2.725,2185,2.725,2186,2.725,2187,2.725,2188,2.725,2189,4.202,2190,4.202,2191,2.725,2192,2.725,2193,2.725,2194,2.725,2195,2.725,2196,2.725,2197,2.725,2198,2.725,2199,4.202,2200,2.725,2201,4.202,2202,5.128,2203,2.725,2204,2.725,2205,2.725,2206,2.725,2207,2.725,2208,2.725,2209,2.725,2210,4.202,2211,2.725,2212,4.202,2213,2.725,2214,2.725,2215,2.725,2216,2.725,2217,2.725,2218,2.725,2219,2.725,2220,2.725,2221,2.725,2222,2.725,2223,2.725,2224,2.725,2225,2.725,2226,2.725,2227,2.725,2228,2.725,2229,2.725,2230,2.725,2231,2.725,2232,2.725,2233,2.725,2234,2.725,2235,2.725,2236,2.725,2237,2.725,2238,5.764,2239,2.725,2240,3.687,2241,5.057,2242,4.202,2243,4.202,2244,3.687,2245,4.202,2246,4.202,2247,4.202]],["title/components/PlaylistComponent.html",[84,0.966,396,1.733]],["body/components/PlaylistComponent.html",[3,0.115,4,0.115,5,0.11,7,0.18,8,0.321,10,0.924,11,0.423,12,0.011,13,0.123,16,1.372,19,0.538,21,1.31,39,1.084,41,1.651,43,2.254,45,1.372,75,0.005,76,0.005,80,1.413,83,0.687,84,1.096,85,2.756,86,0.481,88,2.73,89,0.345,95,3.434,96,1.503,99,3.206,100,1.668,106,1.895,107,1.771,108,2.981,109,1.58,111,1.316,113,1.173,114,3.94,115,3.94,116,3.94,117,2.05,118,3.94,119,1.895,120,1.316,121,0.997,125,3.94,126,1.895,133,1.498,135,1.832,137,1.498,138,0.323,139,0.99,141,1.138,145,2.347,146,1.761,150,1.712,154,1.455,209,1.217,228,1.632,283,3.202,331,1.023,332,1.288,333,1.057,334,1.057,335,1.057,337,2.468,338,2.468,339,3.031,340,3.067,342,1.023,344,2.101,345,1.487,347,1.58,370,1.057,371,1.597,372,1.409,373,0.902,374,2.296,375,1.057,376,1.057,377,1.023,378,0.801,379,1.057,380,1.023,381,1.057,382,1.023,383,0.959,384,1.057,385,0.902,386,0.93,387,0.93,388,1.651,389,1.023,390,2.296,391,1.023,392,1.057,393,1.023,394,0.93,395,1.057,396,2.221,397,1.057,398,0.959,399,1.023,400,1.023,401,1.057,402,1.023,403,0.99,404,1.057,405,1.023,406,1.057,407,1.023,408,0.959,409,1.023,410,1.023,411,1.023,412,2.151,413,1.023,414,1.057,416,2.859,426,4.904,429,0.916,447,1.344,451,1.887,452,1.2,467,1.425,468,3.206,500,2.05,536,1.895,553,2.05,598,3.101,715,2.258,775,1.58,786,1.452,859,4.453,911,2.96,925,3.202,943,2.347,948,3.623,950,2.05,951,1.58,954,3.202,967,1.895,997,1.895,1024,1.771,1053,1.668,1099,2.258,1100,2.258,1106,3.527,1115,3.642,1159,3.202,1160,3.527,1297,1.58,1373,3.036,1374,2.529,1381,2.05,1444,4.339,1563,3.527,1588,5.025,1651,2.05,1652,4.339,1654,2.258,1743,2.258,1814,2.258,1909,3.94,1948,6.241,1991,1.895,1996,2.05,1997,1.895,1998,1.895,2001,2.05,2002,2.05,2031,2.258,2075,3.527,2095,3.527,2248,2.573,2249,4.339,2250,4.339,2251,4.945,2252,4.019,2253,4.019,2254,4.945,2255,4.945,2256,4.019,2257,4.019,2258,4.019,2259,2.573,2260,5.589,2261,2.573,2262,5.589,2263,2.573,2264,4.019,2265,4.945,2266,2.573,2267,4.019,2268,2.573,2269,2.573,2270,2.573,2271,4.019,2272,2.573,2273,2.573,2274,4.019,2275,2.573,2276,2.573,2277,2.258,2278,2.258,2279,2.573,2280,2.258,2281,2.573,2282,2.573,2283,5.639,2284,2.573,2285,4.339,2286,7.138,2287,4.945,2288,2.573,2289,2.573,2290,2.573,2291,4.019,2292,2.573,2293,4.019,2294,2.258,2295,2.573,2296,4.019,2297,2.573,2298,2.573,2299,2.05,2300,4.945,2301,2.573,2302,2.258,2303,2.258,2304,2.258,2305,2.573,2306,2.05,2307,4.019,2308,2.573,2309,1.503,2310,2.258,2311,2.573,2312,2.573,2313,2.573,2314,4.945,2315,2.573,2316,5.589,2317,2.573,2318,2.573,2319,2.573,2320,3.527,2321,2.573,2322,2.573,2323,2.573,2324,4.019,2325,4.019,2326,4.945,2327,2.573,2328,2.573,2329,4.019,2330,2.573,2331,2.573,2332,3.527,2333,2.573,2334,4.945,2335,2.573,2336,2.573,2337,4.019,2338,4.019,2339,2.573,2340,4.945,2341,2.573,2342,2.05,2343,4.019,2344,2.573,2345,2.573,2346,4.019,2347,2.573,2348,2.573,2349,4.019,2350,2.573,2351,2.573,2352,2.05,2353,2.573,2354,2.573,2355,2.573,2356,2.573,2357,2.258,2358,2.573,2359,4.019,2360,2.573,2361,2.573,2362,2.573,2363,2.573,2364,2.573,2365,2.573,2366,2.573,2367,2.573,2368,2.573,2369,4.019,2370,4.019,2371,5.589,2372,4.019,2373,4.019,2374,4.019]],["title/components/PromptDialogComponent.html",[84,0.966,398,1.625]],["body/components/PromptDialogComponent.html",[0,0.103,3,0.209,4,0.209,5,0.17,7,0.209,8,0.495,12,0.011,13,0.295,16,1.718,19,0.93,21,1.451,75,0.008,76,0.008,80,1.463,83,0.604,84,1.539,86,0.873,89,0.626,113,2.129,121,1.535,133,2.308,137,2.308,138,0.586,139,1.797,198,1.588,243,2.225,331,1.856,332,1.984,333,1.919,334,1.919,335,1.919,339,3.262,340,3.34,342,1.856,345,1.505,370,1.919,371,2.46,372,2.169,373,1.637,374,3.036,375,1.919,376,1.919,377,1.856,378,1.454,379,1.919,380,1.856,381,1.919,382,1.856,383,1.741,384,1.919,385,1.637,386,1.688,387,1.688,388,2.543,389,1.856,390,3.036,391,1.856,392,1.919,393,1.856,394,1.688,395,1.919,396,1.856,397,1.919,398,2.756,399,3.056,400,1.856,401,1.919,402,1.856,403,1.797,404,1.919,405,1.856,406,1.919,407,1.856,408,1.741,409,1.856,410,1.856,411,1.856,412,1.797,413,1.856,414,1.919,429,1.411,447,1.372,467,1.578,600,5.124,1046,5.664,1299,2.868,1300,2.728,1309,3.615,1315,4.262,1369,3.44,1370,3.44,1371,5.113,1374,3.551,1376,4.559,1377,4.559,1378,4.559,1384,4.099,1482,2.603,2375,6.748,2376,6.748,2377,6.486,2378,4.671,2379,4.671,2380,4.671,2381,3.44,2382,3.722,2383,4.099,2384,4.099,2385,6.19,2386,6.19,2387,6.19]],["title/interfaces/PromptDialogData.html",[0,0.096,2381,3.211]],["body/interfaces/PromptDialogData.html",[0,0.13,2,1.201,3,0.264,4,0.264,5,0.162,7,0.264,8,0.574,11,0.54,12,0.011,13,0.343,19,1.157,75,0.009,76,0.009,83,0.673,84,1.591,86,1.102,89,0.79,113,2.688,133,2.198,137,2.198,138,0.74,198,2.739,243,1.889,339,2.198,340,2.269,398,2.198,399,2.853,600,3.823,1046,4.343,1299,3.62,1300,3.443,1309,3.443,1315,3.62,1369,4.343,1370,4.343,1371,5.287,1374,3.671,1376,4.343,1377,4.343,1378,4.343,1482,4.488,2375,5.174,2376,5.174,2377,5.174,2381,5.287,2382,6.417,2383,5.174,2384,5.174]],["title/interfaces/RemoteCoverPicture.html",[0,0.096,82,1.483]],["body/interfaces/RemoteCoverPicture.html",[0,0.182,2,1.217,3,0.267,4,0.267,5,0.214,7,0.267,8,0.579,11,0.505,12,0.011,13,0.395,19,1.171,75,0.009,76,0.009,82,2.461,83,0.52,239,1.807,727,3.489,732,2.228,733,3.056,750,2.159,762,2.698,763,2.375,768,3.299,818,3.437,825,3.323,828,5.524,829,4.113,830,3.874,831,3.187,832,3.874,833,3.874,834,3.874,835,3.874,836,3.874,837,3.669,838,3.669,839,2.826]],["title/components/SettingsComponent.html",[84,0.966,400,1.733]],["body/components/SettingsComponent.html",[3,0.234,4,0.234,5,0.183,12,0.011,13,0.25,21,1.227,75,0.008,76,0.008,80,1.528,83,0.671,84,1.626,89,0.701,121,1.819,133,2.485,135,3.039,137,2.485,138,0.657,139,2.015,331,2.081,332,2.136,333,2.151,334,2.151,335,2.151,339,3.296,340,3.38,342,2.081,370,2.151,371,2.649,372,2.336,373,1.835,374,3.171,375,2.151,376,2.151,377,2.081,378,1.629,379,2.151,380,2.081,381,2.151,382,2.081,383,1.952,384,2.151,385,1.835,386,1.892,387,1.892,388,2.738,389,3.069,390,3.171,391,2.081,392,2.151,393,2.081,394,1.892,395,2.151,396,2.081,397,2.151,398,1.952,399,2.081,400,3.069,401,2.151,402,2.081,403,2.015,404,2.151,405,3.069,406,2.738,407,3.069,408,2.485,409,2.081,410,2.081,411,2.081,412,2.015,413,2.081,414,2.151,577,3.715,1864,4.594,1868,4.91,2388,5.236,2389,6.666,2390,4.594,2391,7.334,2392,4.594]],["title/components/ShellComponent.html",[84,0.966,342,1.733]],["body/components/ShellComponent.html",[3,0.146,4,0.146,5,0.206,7,0.146,8,0.385,11,0.399,12,0.011,13,0.156,16,0.906,19,0.766,21,1.753,75,0.006,76,0.006,80,1.442,83,0.731,84,1.268,86,0.61,89,0.437,99,3.708,100,2.116,102,1.11,108,3.367,111,1.669,113,1.488,120,1.669,121,1.194,123,3.519,124,2.116,133,1.795,135,2.195,137,1.795,138,0.409,139,1.256,141,1.165,144,3.121,145,2.811,146,2.003,150,1.198,154,1.009,180,1.819,228,2.326,232,1.179,242,2.683,276,2.366,331,1.297,332,1.543,333,1.341,334,1.341,335,1.341,339,3.136,340,3.19,342,2.509,345,1.582,370,1.341,371,1.913,372,1.687,373,1.144,374,2.594,375,1.341,376,1.341,377,1.297,378,1.016,379,1.341,380,1.297,381,1.341,382,2.509,383,1.795,384,1.341,385,1.144,386,1.179,387,1.179,388,1.977,389,1.297,390,2.594,391,1.297,392,1.341,393,2.509,394,2.067,395,1.341,396,1.297,397,1.341,398,1.217,399,1.297,400,1.297,401,1.341,402,1.297,403,1.256,404,1.341,405,1.297,406,1.341,407,1.297,408,1.217,409,1.297,410,1.297,411,1.297,412,1.256,413,1.297,414,1.341,429,1.097,447,1.268,451,1.78,452,1.132,460,2.683,467,1.907,469,3.229,577,2.683,704,3.34,736,3.512,859,3.836,860,3.836,861,4.224,862,4.224,863,5.541,878,1.544,883,3.512,884,3.05,885,2.004,918,2.6,931,3.546,950,2.6,1025,1.819,1047,2.864,1053,2.116,1302,3.314,1373,3.512,1374,2.926,1611,2.864,1612,4.65,1614,4.224,1887,2.864,1907,5.019,1914,4.65,1915,2.864,1917,2.6,1920,4.224,1997,2.404,1998,2.404,2039,2.864,2133,2.864,2250,5.019,2277,4.224,2278,2.864,2393,3.264,2394,4.224,2395,5.72,2396,5.72,2397,5.72,2398,4.814,2399,4.814,2400,5.72,2401,7.046,2402,5.019,2403,4.814,2404,4.814,2405,4.814,2406,4.814,2407,6.734,2408,3.264,2409,2.864,2410,4.814,2411,3.264,2412,4.814,2413,3.264,2414,3.264,2415,4.814,2416,4.814,2417,3.264,2418,3.264,2419,3.264,2420,3.264,2421,4.814,2422,3.264,2423,3.264,2424,4.814,2425,3.264,2426,3.264,2427,3.264,2428,3.264,2429,4.224,2430,2.864,2431,4.814,2432,3.264,2433,3.264,2434,2.6,2435,3.264,2436,3.264,2437,3.264,2438,3.264,2439,2.864,2440,3.264,2441,3.264,2442,3.264,2443,3.264,2444,3.264,2445,3.264,2446,3.264,2447,3.264,2448,3.264,2449,3.264,2450,3.264,2451,3.264,2452,3.264,2453,3.264,2454,6.314,2455,4.814,2456,4.814]],["title/components/SlidePanelComponent.html",[84,0.966,402,1.733]],["body/components/SlidePanelComponent.html",[3,0.142,4,0.142,5,0.13,7,0.142,8,0.377,11,0.529,12,0.011,13,0.151,16,1.561,19,0.994,21,1.777,22,1.857,75,0.006,76,0.006,80,1.233,83,0.579,84,1.247,89,0.425,111,1.623,113,1.447,121,1.169,133,1.758,135,2.149,137,1.758,138,0.398,139,1.221,140,1.937,146,1.476,331,1.261,332,1.511,333,1.303,334,1.303,335,1.303,339,3.124,340,3.176,342,1.261,345,1.646,370,1.303,371,1.874,372,1.653,373,1.112,374,2.558,375,1.303,376,1.303,377,1.261,378,0.988,379,1.303,380,1.261,381,1.303,382,1.261,383,1.183,384,1.303,385,1.112,386,1.147,387,1.147,388,1.937,389,1.261,390,2.558,391,1.261,392,1.303,393,1.261,394,1.147,395,1.303,396,1.261,397,1.303,398,1.183,399,1.261,400,1.261,401,1.303,402,2.475,403,3.134,404,1.303,405,1.261,406,1.303,407,1.261,408,1.183,409,1.261,410,1.261,411,1.261,412,1.221,413,1.261,414,1.303,429,1.075,447,1.045,467,1.933,469,3.794,554,4.217,657,2.876,659,2.337,965,3.873,967,4.144,1021,4.587,1046,5.999,1069,5.381,1297,1.948,1373,3.455,1374,2.878,1908,4.483,1916,2.337,2078,2.784,2111,2.753,2113,3.637,2115,4.801,2249,4.937,2285,4.937,2352,4.483,2457,7.148,2458,8.146,2459,3.173,2460,5.627,2461,5.681,2462,4.715,2463,4.715,2464,5.627,2465,5.627,2466,6.229,2467,6.229,2468,3.757,2469,5.627,2470,5.84,2471,7.222,2472,5.627,2473,4.715,2474,4.715,2475,4.715,2476,3.173,2477,6.229,2478,3.173,2479,3.173,2480,6.975,2481,3.173,2482,3.173,2483,3.173,2484,3.173,2485,4.715,2486,4.715,2487,3.173,2488,3.173,2489,3.173,2490,4.715,2491,4.715,2492,4.715,2493,4.715,2494,6.975,2495,7.222,2496,6.51,2497,2.784,2498,2.784,2499,3.173,2500,3.173,2501,6.975,2502,6.656,2503,6.975,2504,3.173,2505,3.173,2506,3.173,2507,3.173,2508,3.173,2509,2.784,2510,2.784,2511,3.173,2512,3.173,2513,3.173,2514,3.173,2515,3.173,2516,5.627,2517,6.229,2518,6.229]],["title/components/StorageSettingsComponent.html",[84,0.966,405,1.733]],["body/components/StorageSettingsComponent.html",[3,0.224,4,0.224,5,0.178,7,0.224,12,0.011,13,0.239,16,1.391,75,0.008,76,0.008,80,1.504,83,0.661,84,1.593,86,0.937,89,0.671,91,2.286,113,2.286,121,1.608,133,2.417,137,2.417,138,0.629,139,1.929,141,1.021,331,1.993,332,2.078,333,2.06,334,2.06,335,2.06,339,3.283,340,3.365,342,1.993,345,1.021,370,2.06,371,2.577,372,2.272,373,1.757,374,3.121,375,2.06,376,2.06,377,1.993,378,1.56,379,2.06,380,1.993,381,2.06,382,1.993,383,1.869,384,2.06,385,1.757,386,1.812,387,1.812,388,2.663,389,1.993,390,3.121,391,1.993,392,2.06,393,1.993,394,1.812,395,2.06,396,1.993,397,2.06,398,1.869,399,1.993,400,1.993,401,2.06,402,1.993,403,1.929,404,2.06,405,3.019,406,3.368,407,1.993,408,1.869,409,1.993,410,1.993,411,1.993,412,1.929,413,1.993,414,2.06,429,1.478,447,1.111,514,2.928,515,2.674,520,2.928,577,4.491,578,3.995,969,5.166,1269,4.463,1374,3.675,1763,5.166,1865,3.995,1866,5.726,1868,4.775,1888,3.995,2390,5.689,2519,6.484,2520,7.597,2521,4.4,2522,5.014]],["title/interfaces/TagsWorkerRequest.html",[0,0.096,837,2.677]],["body/interfaces/TagsWorkerRequest.html",[0,0.182,2,1.217,3,0.267,4,0.267,5,0.236,7,0.267,8,0.579,11,0.505,12,0.011,13,0.395,19,1.159,75,0.009,76,0.009,82,2.032,83,0.52,239,1.807,727,3.489,732,2.228,733,3.056,750,2.159,762,2.698,763,2.375,768,3.777,818,2.539,825,2.454,828,5.524,829,4.113,830,3.874,831,3.187,832,3.874,833,3.874,834,3.874,835,3.874,836,3.874,837,4.443,838,3.669,839,2.826]],["title/interfaces/TagsWorkerResponse.html",[0,0.096,838,2.677]],["body/interfaces/TagsWorkerResponse.html",[0,0.181,2,1.195,3,0.262,4,0.262,5,0.212,7,0.262,8,0.572,11,0.539,12,0.011,13,0.393,19,1.168,75,0.009,76,0.009,82,1.995,83,0.51,239,2.431,452,1.591,727,3.426,732,2.187,733,3.001,750,2.12,762,2.997,763,2.332,768,3.758,818,2.493,825,2.41,828,5.503,829,4.039,830,3.804,831,3.129,832,3.804,833,3.804,834,3.804,835,3.804,836,3.804,837,3.602,838,4.394,839,3.803]],["title/injectables/ThemeService.html",[352,2.677,415,0.769]],["body/injectables/ThemeService.html",[3,0.179,4,0.179,5,0.11,7,0.179,8,0.446,11,0.484,12,0.011,13,0.191,16,1.779,19,0.929,21,1.769,22,2.116,39,1.08,59,2.231,75,0.007,76,0.007,80,1.533,83,0.673,86,0.748,88,1.701,89,0.536,91,1.825,138,0.502,141,1.577,146,1.682,150,1.453,154,1.168,171,1.54,341,1.111,345,1.608,350,2.458,351,1.967,352,3.422,408,2.585,415,0.983,417,1.591,429,1.27,447,1.421,451,1.735,452,1.103,467,1.859,514,3.255,515,2.135,519,1.176,520,2.337,625,3.836,657,1.492,724,5.502,726,4.89,727,2.337,728,3.864,1024,2.755,1153,3.512,1154,3.512,1162,4.441,1695,4.441,1705,3.512,1782,3.836,2523,4.003,2524,6.412,2525,6.412,2526,7.289,2527,6.412,2528,6.412,2529,6.934,2530,5.573,2531,5.573,2532,4.003,2533,5.573,2534,4.003,2535,5.573,2536,4.003,2537,5.525,2538,4.003,2539,4.003,2540,5.573,2541,5.573,2542,6.934,2543,5.573,2544,4.003,2545,5.525,2546,4.003,2547,4.003,2548,5.626,2549,3.512,2550,4.003,2551,4.003,2552,4.003,2553,5.573,2554,4.003,2555,4.003,2556,4.003,2557,4.003,2558,4.003,2559,4.003,2560,4.003,2561,6.412,2562,5.573,2563,4.003,2564,5.573,2565,6.934,2566,4.003,2567,5.573,2568,5.573,2569,4.003,2570,4.003,2571,4.003,2572,4.003,2573,5.573,2574,4.003,2575,4.003,2576,5.573,2577,3.189,2578,4.003,2579,4.003,2580,8.487,2581,4.003,2582,4.003,2583,4.003,2584,4.003,2585,3.512,2586,4.003,2587,3.512,2588,4.003,2589,4.003,2590,4.003,2591,3.512,2592,4.003,2593,4.003,2594,4.003,2595,4.003,2596,4.003,2597,4.003,2598,4.003,2599,4.003,2600,4.003,2601,4.003,2602,4.003,2603,4.003,2604,4.003,2605,4.003,2606,4.003,2607,4.003,2608,4.003,2609,4.003,2610,5.573,2611,3.512,2612,3.512,2613,4.003,2614,4.003,2615,4.003]],["title/components/ThemeSettingsComponent.html",[84,0.966,407,1.733]],["body/components/ThemeSettingsComponent.html",[3,0.219,4,0.219,5,0.176,7,0.219,8,0.511,11,0.342,12,0.011,13,0.234,16,1.361,18,2.54,21,1.149,75,0.008,76,0.008,80,1.546,83,0.655,84,1.576,86,0.916,89,0.657,121,1.584,133,2.382,137,2.382,138,0.615,139,1.887,331,1.949,332,2.048,333,2.014,334,2.014,335,2.014,339,3.277,340,3.358,342,1.949,345,1.301,352,4.625,353,3.375,362,4.399,370,2.014,371,2.54,372,2.24,373,1.718,374,3.094,375,2.014,376,2.014,377,1.949,378,1.526,379,2.014,380,1.949,381,2.014,382,1.949,383,1.828,384,2.014,385,1.718,386,1.772,387,1.772,388,2.625,389,1.949,390,3.094,391,1.949,392,2.014,393,1.949,394,1.772,395,2.014,396,1.949,397,2.014,398,1.828,399,1.949,400,1.949,401,2.014,402,1.949,403,1.887,404,2.014,405,1.949,406,2.014,407,2.994,408,3.041,409,1.949,410,1.949,411,1.949,412,1.887,413,1.949,414,2.014,429,1.457,447,1.087,451,1.526,452,0.971,467,1.25,577,3.561,598,2.508,1782,4.399,1865,3.907,1866,5.664,1868,4.707,1888,3.907,2392,6.238,2521,4.303,2577,5.092,2616,7.109,2617,7.109,2618,6.39,2619,6.39,2620,7.533,2621,4.903,2622,4.903,2623,4.903]],["title/pipes/TimePipe.html",[120,2.23,843,3.211]],["body/pipes/TimePipe.html",[3,0.272,4,0.272,5,0.167,10,1.467,11,0.425,12,0.011,13,0.291,19,0.98,75,0.009,76,0.009,80,1.553,83,0.636,89,0.815,98,3.738,120,3.743,121,1.51,138,0.764,140,2.501,154,1.275,212,2.925,345,1.24,429,1.388,447,1.349,451,1.895,452,1.205,460,3.393,467,1.553,656,6.422,657,3.035,658,5.038,659,4.484,660,5.831,661,6.886,663,5.831,843,5.39,868,4.745,2177,4.851,2178,5.342,2624,6.088,2625,6.088,2626,5.342]],["title/injectables/TitleService.html",[415,0.769,1914,3.211]],["body/injectables/TitleService.html",[3,0.273,4,0.273,5,0.168,7,0.273,8,0.586,11,0.426,12,0.011,13,0.291,16,1.692,19,1.052,21,1.43,75,0.009,76,0.009,80,1.207,83,0.637,86,1.14,88,3.336,89,0.817,138,0.765,141,1.242,146,2.06,198,2.833,341,1.692,345,1.492,350,3.744,351,2.997,415,1.292,417,2.424,429,1.67,447,1.352,451,1.898,452,1.207,467,1.555,519,1.792,1914,5.396,2627,6.099,2628,7.326,2629,7.326,2630,6.099,2631,6.099,2632,6.099,2633,6.099,2634,6.099,2635,6.099]],["title/interfaces/Track.html",[0,0.096,95,1.852]],["body/interfaces/Track.html",[0,0.172,2,1.109,3,0.243,4,0.243,5,0.232,7,0.243,8,0.546,11,0.575,12,0.011,13,0.399,19,1.141,25,2.313,75,0.008,76,0.008,77,1.745,79,3.179,81,2.785,82,2.323,83,0.649,94,3.179,95,3.173,121,2.072,122,3.53,150,1.431,170,2.164,198,1.851,276,3.965,310,2.395,311,2.395,452,1.352,455,4.195,489,3.343,490,3.53,491,3.53,492,3.343,493,2.785,494,3.034,495,3.53,496,3.53,497,3.53,498,3.53,516,3.343,576,3.53,728,3.034,729,3.53,730,4.195,731,3.343,732,2.03,733,3.495,734,4.43,735,2.903,736,4.808,737,5.23,738,3.343,739,3.53,740,2.575,741,3.748,742,3.53,743,4.01,744,4.01,745,4.01,746,4.01,747,3.53,748,3.179]],["title/interfaces/TrackMetadata.html",[0,0.096,737,2.827]],["body/interfaces/TrackMetadata.html",[0,0.166,2,1.007,3,0.221,4,0.221,5,0.196,7,0.221,8,0.514,11,0.604,12,0.011,13,0.39,19,1.184,25,2.101,75,0.008,76,0.008,77,2.422,79,4.413,81,3.865,82,2.57,83,0.621,94,2.887,95,3.328,121,1.874,122,3.205,150,1.346,170,3.003,198,2.57,276,3.158,310,2.175,311,2.175,452,1.695,455,3.945,489,3.036,490,3.205,491,3.205,492,3.036,493,2.529,494,2.755,495,3.205,496,3.205,497,3.205,498,3.205,516,3.036,576,3.205,728,2.755,729,3.205,730,4.64,731,3.036,732,1.843,733,3.865,734,4.899,735,2.637,736,3.945,737,4.899,738,4.64,739,4.899,740,3.574,741,5.202,742,4.899,743,3.641,744,3.641,745,3.641,746,3.641,747,3.205,748,2.887]],["title/injectables/UpdateService.html",[354,3.474,415,0.769]],["body/injectables/UpdateService.html",[3,0.223,4,0.223,5,0.137,7,0.223,12,0.011,13,0.238,75,0.008,76,0.008,83,0.7,86,0.932,89,0.668,101,2.118,102,1.695,138,0.625,141,1.459,150,1.501,154,1.501,171,1.919,198,1.695,209,2.358,228,2.656,243,2.297,341,1.384,344,3.045,345,1.459,354,5.147,398,1.859,415,1.139,417,1.982,429,1.473,447,1.432,469,2.55,519,1.465,600,4.915,625,5.218,657,1.859,786,2.74,1218,4.375,1298,3.672,1300,2.912,1309,2.912,1310,3.672,1424,3.432,1482,2.779,1744,4.375,1991,3.672,1996,3.973,1997,3.672,1998,3.672,2001,3.973,2002,3.973,2111,2.912,2113,4.185,2115,4.933,2381,4.758,2382,3.973,2434,3.973,2636,4.986,2637,7.581,2638,6.652,2639,4.986,2640,4.986,2641,4.986,2642,6.46,2643,6.288,2644,4.375,2645,4.986,2646,4.986,2647,4.986,2648,4.986,2649,4.986,2650,4.986,2651,4.986,2652,4.986,2653,5.218,2654,6.46,2655,4.986,2656,4.986,2657,4.986,2658,4.986,2659,4.986,2660,4.986,2661,4.986,2662,4.986,2663,4.986,2664,4.986,2665,4.986,2666,4.986,2667,4.986,2668,4.986,2669,4.986,2670,4.986,2671,4.986,2672,4.986,2673,4.375,2674,4.986,2675,4.986,2676,4.986,2677,4.986]],["title/components/VisualizerComponent.html",[84,0.966,409,1.733]],["body/components/VisualizerComponent.html",[3,0.095,4,0.095,5,0.095,7,0.095,8,0.277,10,1.507,11,0.502,12,0.011,13,0.102,16,1.958,21,1.832,37,1.245,43,1.577,47,2.124,55,2.02,75,0.004,76,0.004,80,1.448,83,0.661,84,0.968,85,3.739,86,0.398,87,3.005,88,0.906,89,0.285,91,0.972,93,1.769,95,1.47,108,2.679,109,1.309,111,1.09,113,0.972,121,0.858,133,1.29,135,1.577,137,1.29,138,0.267,139,0.82,140,1.421,141,0.434,145,2.02,146,2.23,154,1.36,229,1.467,287,3.298,291,1.845,292,1.769,293,1.845,294,1.845,295,1.845,296,1.769,297,2.679,298,1.845,299,1.845,300,1.928,301,1.928,302,1.09,303,2.946,304,2.825,305,3.187,306,2.825,307,1.09,308,2.569,312,2.825,323,3.51,326,3.261,327,3.071,330,3.191,331,0.847,332,1.109,333,0.876,334,0.876,335,0.876,337,2.124,338,2.124,339,2.935,340,2.955,342,0.847,344,1.855,345,1.677,347,1.309,370,0.876,371,1.375,372,1.212,373,0.747,374,2.064,375,0.876,376,0.876,377,0.847,378,0.663,379,0.876,380,0.847,381,0.876,382,0.847,383,0.795,384,0.876,385,0.747,386,0.77,387,0.77,388,1.421,389,0.847,390,2.064,391,0.847,392,0.876,393,0.847,394,0.77,395,0.876,396,0.847,397,0.876,398,0.795,399,0.847,400,0.847,401,0.876,402,1.997,403,0.82,404,0.876,405,0.847,406,0.876,407,0.847,408,0.795,409,1.997,410,2.195,411,0.847,412,1.933,413,0.847,414,0.876,416,2.569,429,0.789,447,1.487,449,2.756,451,2.088,452,1.365,453,3.215,467,2.188,510,2.756,514,2.934,515,1.137,520,2.02,657,0.795,728,2.433,932,3.479,943,2.02,951,1.309,952,1.57,967,2.548,995,2.548,1052,2.83,1098,1.382,1174,2.243,1241,5.105,1373,2.68,1374,2.233,1483,2.02,1834,3.036,1908,3.479,1916,1.57,2111,2.02,2113,4.026,2123,2.756,2179,1.87,2180,1.87,2182,1.87,2240,3.036,2434,1.698,2457,1.87,2461,1.57,2678,2.132,2679,4.366,2680,4.366,2681,3.459,2682,3.459,2683,3.831,2684,5.524,2685,4.366,2686,3.831,2687,3.831,2688,5.524,2689,5.524,2690,4.003,2691,3.459,2692,3.459,2693,3.459,2694,3.459,2695,3.459,2696,3.459,2697,3.459,2698,3.459,2699,3.459,2700,3.459,2701,3.459,2702,2.132,2703,3.459,2704,2.132,2705,3.459,2706,2.132,2707,3.459,2708,2.132,2709,3.459,2710,2.132,2711,3.459,2712,2.132,2713,3.459,2714,2.132,2715,3.459,2716,2.132,2717,3.459,2718,2.132,2719,3.459,2720,2.132,2721,3.036,2722,2.132,2723,3.459,2724,2.132,2725,3.459,2726,3.459,2727,3.459,2728,3.459,2729,2.132,2730,3.459,2731,2.132,2732,3.459,2733,2.132,2734,3.459,2735,3.459,2736,2.132,2737,2.132,2738,3.459,2739,2.132,2740,3.459,2741,2.132,2742,3.459,2743,2.132,2744,2.132,2745,3.459,2746,3.459,2747,2.132,2748,3.459,2749,2.132,2750,2.132,2751,3.459,2752,2.132,2753,3.459,2754,3.459,2755,2.132,2756,3.459,2757,2.132,2758,2.132,2759,2.132,2760,2.132,2761,2.132,2762,2.132,2763,3.459,2764,2.132,2765,3.459,2766,2.132,2767,3.459,2768,2.132,2769,2.132,2770,1.87,2771,2.132,2772,2.132,2773,2.132,2774,2.132,2775,2.132,2776,2.132,2777,2.132,2778,2.132,2779,2.132,2780,2.132,2781,2.132,2782,2.132,2783,2.132,2784,2.132,2785,2.132,2786,2.132,2787,2.132,2788,2.132,2789,2.132,2790,2.132,2791,2.132,2792,2.132,2793,3.459,2794,3.459,2795,5.191,2796,3.036,2797,5.024,2798,3.459]],["title/interfaces/VisualsColorConfig.html",[0,0.096,309,2.325]],["body/interfaces/VisualsColorConfig.html",[0,0.183,2,1.028,3,0.226,4,0.226,5,0.139,7,0.226,8,0.521,10,1.647,11,0.564,12,0.011,13,0.407,18,2.865,19,1.115,22,1.667,25,2.767,75,0.008,76,0.008,285,2.814,286,2.814,287,3.744,288,2.949,289,2.949,290,2.949,291,2.693,292,2.583,293,2.693,294,2.693,295,2.693,296,2.583,297,2.693,298,2.693,299,2.693,300,2.814,301,2.814,302,2.583,303,3.473,304,3.331,305,3.331,306,3.331,307,2.583,308,3.331,309,3.473,310,3.468,311,3.468,312,4.033,313,2.693,314,2.482,315,2.583,316,2.814,317,2.949,318,2.583,319,3.543,320,2.693,321,2.482,322,4.018,323,3.081,324,2.693,325,3.331,326,3.603,327,3.603,328,2.482,329,3.331,330,3.744,452,1.598]],["title/directives/VisualsDirective.html",[373,1.528,412,1.678]],["body/directives/VisualsDirective.html",[3,0.139,4,0.139,5,0.085,7,0.139,8,0.371,10,0.581,11,0.431,12,0.011,13,0.148,16,1.543,18,2.623,21,1.446,22,2.285,39,1.663,41,2.533,43,2.117,75,0.006,76,0.006,80,0.919,83,0.483,86,0.581,89,0.416,121,0.771,138,0.39,140,1.908,141,1.535,146,2.129,150,1.758,154,1.165,171,1.787,197,2.964,212,1.731,224,1.658,243,1.781,287,1.528,302,1.59,303,2.964,304,2.843,305,2.843,306,2.843,307,1.59,308,2.843,309,1.658,310,2.043,311,2.043,312,2.375,313,3.826,314,2.732,315,3.154,316,2.588,318,1.59,319,2.282,320,1.658,321,1.528,323,1.471,324,2.477,326,2.917,327,3.488,328,1.528,330,3.03,339,1.731,344,2.362,345,1.587,373,1.628,411,1.236,412,1.787,413,1.846,416,2.375,429,1.059,443,3.7,447,1.232,449,5.258,451,1.445,452,0.919,453,4.86,467,1.572,510,3.7,538,2.477,541,1.658,597,2.14,657,2.072,658,3.197,691,2.477,728,3.677,868,2.016,943,1.816,948,3.011,949,2.477,951,1.909,971,4.075,995,3.421,1052,3.604,1069,4.781,1098,2.016,1134,2.728,1274,2.728,1424,3.827,1429,2.728,1431,2.728,1432,2.477,1483,1.816,1486,2.016,1711,2.728,2111,1.816,2113,3.601,2115,4.245,2468,3.7,2537,4.429,2545,4.429,2683,4.878,2687,4.878,2721,2.728,2799,2.728,2800,6.166,2801,4.644,2802,4.644,2803,3.109,2804,4.644,2805,3.109,2806,4.644,2807,3.109,2808,4.644,2809,3.109,2810,3.109,2811,3.109,2812,4.644,2813,3.109,2814,3.109,2815,3.109,2816,3.109,2817,2.728,2818,2.728,2819,2.728,2820,2.728,2821,3.109,2822,3.109,2823,3.109,2824,3.109,2825,3.109,2826,4.644,2827,3.109,2828,3.109,2829,3.109,2830,3.109,2831,3.109,2832,3.109,2833,3.109,2834,3.109,2835,3.109,2836,7.174,2837,3.109,2838,3.109,2839,3.109,2840,2.14,2841,4.644,2842,3.109,2843,3.109,2844,3.109,2845,3.109,2846,3.109,2847,3.109,2848,5.559,2849,3.109,2850,4.644,2851,4.644,2852,3.109,2853,2.728,2854,3.109,2855,6.166,2856,3.109,2857,3.109,2858,3.109,2859,3.109,2860,3.109,2861,3.109,2862,4.644,2863,3.109,2864,3.109,2865,3.109,2866,5.559,2867,6.166,2868,3.109,2869,3.109,2870,3.109,2871,3.109,2872,4.644,2873,4.644,2874,4.644,2875,5.559,2876,3.109,2877,3.109,2878,3.109,2879,3.109,2880,3.109,2881,3.109,2882,3.109,2883,3.109,2884,3.109,2885,6.295,2886,4.644,2887,4.644,2888,2.728,2889,2.728,2890,3.109,2891,3.109,2892,3.109,2893,3.109,2894,4.878,2895,4.644,2896,4.644,2897,3.109,2898,3.109,2899,3.109,2900,3.109,2901,3.109,2902,3.109,2903,3.109,2904,3.109,2905,3.109,2906,3.109,2907,3.109,2908,3.109,2909,4.644,2910,3.109,2911,3.109,2912,3.109,2913,2.728,2914,3.109,2915,2.728,2916,2.728,2917,3.109,2918,3.109]],["title/injectables/VisualsService.html",[415,0.769,2690,3.474]],["body/injectables/VisualsService.html",[3,0.252,4,0.252,5,0.155,7,0.252,8,0.558,11,0.393,12,0.011,13,0.269,16,1.564,21,1.321,75,0.009,76,0.009,83,0.66,86,1.053,88,2.394,89,0.755,91,2.568,138,0.707,141,1.147,146,1.989,323,3.302,326,3.75,327,3.75,330,3.896,341,1.564,345,1.422,415,1.231,417,2.239,429,1.591,447,1.249,467,1.437,514,4.076,515,3.005,519,1.655,520,3.29,2111,3.29,2113,4.759,2115,5.609,2690,5.562,2817,4.944,2919,5.634,2920,7.585,2921,7.928,2922,5.634,2923,6.981,2924,5.634,2925,8.417,2926,5.634,2927,5.634,2928,5.634]],["title/interfaces/VisualsWorkerMessage.html",[0,0.096,313,2.325]],["body/interfaces/VisualsWorkerMessage.html",[0,0.182,2,1.005,3,0.221,4,0.221,5,0.136,7,0.221,8,0.513,10,1.636,11,0.578,12,0.011,13,0.406,18,2.835,19,1.011,22,2.354,25,2.727,75,0.008,76,0.008,285,2.752,286,2.752,287,3.712,288,2.883,289,2.883,290,2.883,291,2.633,292,2.525,293,2.633,294,2.633,295,2.633,296,2.525,297,2.633,298,2.633,299,2.633,300,2.752,301,2.752,302,2.525,303,3.423,304,3.283,305,3.283,306,3.283,307,2.525,308,3.283,309,2.633,310,2.824,311,2.824,312,3.283,313,3.423,314,3.712,315,3.648,316,4.209,317,4.165,318,3.863,319,4.071,320,4.028,321,3.506,322,3.975,323,3.036,324,2.633,325,3.283,326,3.572,327,3.572,328,2.427,329,3.283,330,3.712,452,1.64]],["title/injectables/WakelockService.html",[415,0.769,1992,3.001]],["body/injectables/WakelockService.html",[3,0.259,4,0.259,5,0.159,7,0.259,8,0.567,11,0.404,12,0.011,13,0.276,75,0.009,76,0.009,83,0.503,89,0.774,138,0.725,141,1.177,154,1.486,228,2.793,230,2.155,232,2.089,238,2.225,239,1.748,341,1.604,344,3.26,345,1.629,415,1.251,417,2.298,429,1.617,447,1.572,452,1.404,460,3.952,519,1.698,1992,4.882,2929,5.781,2930,6.113,2931,7.999,2932,7.999,2933,7.092,2934,5.781,2935,5.781,2936,7.092,2937,7.672,2938,5.781,2939,5.781,2940,5.781,2941,5.781,2942,5.781,2943,5.781,2944,5.781,2945,5.781]],["title/changelog.html",[1777,2.373,2946,2.696,2947,3.212]],["body/changelog.html",[0,0.012,5,0.142,10,0.1,11,0.1,12,0.003,18,0.569,21,0.236,29,4.424,33,0.327,41,1.017,43,2.309,45,1.865,47,3.038,49,3.36,51,3.128,53,3.548,55,2.277,57,3.662,59,2.616,61,3.109,63,2.009,65,1.605,67,3.355,69,4.134,75,0.001,76,0.001,77,0.323,80,0.199,81,0.515,83,0.124,84,0.613,86,0.1,88,0.608,91,0.243,92,0.588,93,0.732,95,1.575,121,1.053,123,0.297,135,0.243,137,0.806,138,0.126,170,0.4,171,0.551,182,0.392,183,0.802,185,0.367,194,1.141,196,0.424,198,0.342,201,1.446,202,0.284,209,2.282,224,0.284,230,0.375,239,0.161,241,1.973,242,1.824,243,0.171,264,0.392,314,0.262,315,0.272,319,0.262,326,0.252,327,0.476,328,0.495,332,0.794,341,0.148,344,0.226,351,1.062,371,0.721,373,0.187,378,0.943,383,0.375,394,0.895,408,0.375,410,0.4,416,0.272,434,0.802,452,0.105,453,0.741,468,0.928,489,0.327,492,0.327,515,0.537,522,1.401,527,0.467,536,0.741,538,0.802,541,0.284,542,0.467,547,0.392,553,0.424,554,1.059,555,1.973,556,1.401,558,0.367,559,0.802,561,0.424,565,0.392,576,1.176,577,1.38,597,3.406,600,5.291,622,1.256,623,2.173,625,1.487,658,1.487,671,0.424,687,1.592,690,0.802,691,0.424,704,0.836,723,0.243,724,1.605,735,1.474,739,0.345,748,0.311,753,0.495,762,0.199,763,0.212,769,5.757,779,0.272,793,0.311,804,0.928,831,0.763,839,0.858,842,1.605,868,0.653,878,0.476,881,1.605,884,0.284,892,1.141,905,0.311,911,2.73,917,0.741,923,0.367,931,0.392,935,0.467,954,1.446,955,0.467,972,0.467,973,0.467,983,0.883,991,0.467,995,4.031,1021,0.392,1024,2.551,1053,0.653,1069,1.176,1105,0.467,1109,0.467,1115,0.392,1131,3.252,1133,0.802,1145,0.467,1146,0.883,1147,5.548,1159,0.424,1164,0.467,1216,0.802,1229,3.422,1252,2.173,1269,0.693,1294,0.345,1296,0.367,1311,0.741,1329,0.392,1334,1.487,1355,0.392,1397,0.467,1424,1.249,1432,1.141,1447,1.336,1467,0.467,1483,0.311,1504,0.345,1507,0.345,1588,3.135,1620,1.256,1628,0.424,1651,0.802,1663,0.802,1664,0.467,1668,0.467,1678,1.446,1685,0.467,1723,1.487,1725,0.467,1764,0.424,1765,0.467,1771,0.424,1778,0.467,1782,0.367,1838,0.802,1886,0.467,1900,0.467,1948,0.424,1991,0.392,2022,1.256,2024,2.173,2028,1.896,2029,0.467,2077,4.233,2079,0.883,2080,0.467,2083,0.467,2111,0.311,2122,0.424,2126,4.035,2127,1.592,2135,1.896,2241,1.256,2244,0.883,2280,0.467,2283,0.467,2294,0.467,2299,0.424,2302,1.256,2303,0.467,2304,0.467,2306,0.802,2309,0.836,2310,3.996,2320,0.467,2332,0.467,2342,0.802,2352,0.424,2357,1.592,2394,0.467,2402,0.467,2429,0.883,2439,1.256,2468,0.424,2470,0.467,2496,2.173,2497,0.883,2509,0.883,2510,0.467,2577,0.424,2585,3.58,2587,4.233,2611,0.467,2612,0.467,2638,1.256,2643,0.883,2653,1.249,2673,4.341,2686,0.467,2770,0.467,2795,0.467,2796,0.467,2820,0.467,2840,2.551,2853,0.883,2885,0.467,2888,3.069,2913,0.467,2915,0.467,2916,0.467,2930,1.141,2947,1.256,2948,0.533,2949,2.765,2950,0.533,2951,0.533,2952,0.533,2953,0.533,2954,0.345,2955,0.533,2956,5.953,2957,0.883,2958,0.533,2959,0.533,2960,6.648,2961,7.245,2962,0.533,2963,0.533,2964,6.66,2965,0.533,2966,0.533,2967,0.533,2968,4.08,2969,0.533,2970,0.533,2971,3.706,2972,3.029,2973,3.498,2974,1.814,2975,0.533,2976,0.533,2977,6.66,2978,0.533,2979,0.533,2980,0.533,2981,0.533,2982,0.533,2983,0.533,2984,0.533,2985,0.533,2986,0.533,2987,0.533,2988,0.533,2989,0.533,2990,5.882,2991,6.323,2992,1.007,2993,0.533,2994,0.533,2995,0.533,2996,0.533,2997,0.533,2998,0.533,2999,0.533,3000,0.533,3001,0.533,3002,0.533,3003,0.533,3004,0.533,3005,0.533,3006,0.533,3007,0.533,3008,0.533,3009,0.533,3010,0.533,3011,0.533,3012,4.824,3013,0.467,3014,3.498,3015,0.533,3016,0.533,3017,0.533,3018,4.824,3019,0.533,3020,0.533,3021,0.533,3022,0.533,3023,0.533,3024,6.376,3025,1.256,3026,0.533,3027,0.533,3028,0.533,3029,0.533,3030,2.426,3031,0.533,3032,0.533,3033,0.533,3034,5.882,3035,1.007,3036,0.533,3037,0.533,3038,0.533,3039,3.273,3040,1.007,3041,1.431,3042,0.467,3043,0.533,3044,0.533,3045,0.533,3046,0.533,3047,0.533,3048,0.533,3049,0.533,3050,0.533,3051,1.007,3052,0.533,3053,0.533,3054,0.533,3055,2.173,3056,0.533,3057,0.533,3058,0.533,3059,0.533,3060,0.533,3061,1.431,3062,0.467,3063,0.533,3064,0.533,3065,0.533,3066,0.467,3067,0.533,3068,1.141,3069,1.431,3070,0.533,3071,0.533,3072,0.533,3073,0.533,3074,1.007,3075,0.533,3076,0.533,3077,0.883,3078,2.161,3079,0.533,3080,0.533,3081,0.533,3082,0.533,3083,0.533,3084,0.533,3085,0.533,3086,0.533,3087,0.533,3088,0.533,3089,0.467,3090,0.533,3091,1.431,3092,0.533,3093,0.533,3094,0.533,3095,0.533,3096,1.431,3097,0.533,3098,0.533,3099,0.533,3100,4.08,3101,0.533,3102,0.533,3103,0.533,3104,0.533,3105,0.533,3106,0.533,3107,0.533,3108,0.533,3109,0.533,3110,1.431,3111,0.533,3112,0.533,3113,0.533,3114,0.533,3115,0.533,3116,0.533,3117,0.533,3118,1.431,3119,0.533,3120,0.533,3121,0.533,3122,0.533,3123,1.007,3124,0.533,3125,1.007,3126,0.533,3127,1.007,3128,0.533,3129,0.533,3130,0.533,3131,0.533,3132,0.533,3133,0.533,3134,1.896,3135,2.872,3136,2.161,3137,0.533,3138,0.533,3139,4.444,3140,0.533,3141,0.533,3142,0.802,3143,0.533,3144,0.533,3145,0.467,3146,2.161,3147,0.533,3148,1.431,3149,1.007,3150,0.533,3151,1.007,3152,0.533,3153,0.533,3154,0.533,3155,0.533,3156,0.533,3157,1.007,3158,0.533,3159,0.533,3160,0.533,3161,0.533,3162,0.533,3163,0.533,3164,0.533,3165,0.533,3166,0.533,3167,0.533,3168,0.533,3169,0.533,3170,0.533,3171,0.533,3172,0.533,3173,0.533,3174,0.533,3175,0.533,3176,0.533,3177,0.533,3178,0.533,3179,1.007,3180,1.896,3181,1.431,3182,0.533,3183,1.007,3184,0.533,3185,0.533,3186,3.498,3187,0.533,3188,0.533,3189,0.533,3190,0.533,3191,0.533,3192,0.533,3193,0.533,3194,0.533,3195,0.533,3196,1.431,3197,0.533,3198,0.533,3199,2.476,3200,4.249,3201,0.533,3202,0.533,3203,0.533,3204,0.533,3205,0.533,3206,0.533,3207,1.007,3208,0.533,3209,1.814,3210,0.533,3211,0.533,3212,0.533,3213,0.533,3214,0.533,3215,0.533,3216,0.533,3217,0.533,3218,0.533,3219,0.533,3220,0.533,3221,0.533,3222,0.533,3223,0.533,3224,0.533,3225,0.533,3226,0.533,3227,0.533,3228,0.533,3229,0.533,3230,0.533,3231,0.533,3232,0.533,3233,2.161,3234,0.533,3235,0.533,3236,0.533,3237,0.533,3238,0.533,3239,0.533,3240,1.007,3241,0.533,3242,0.533,3243,1.896,3244,0.533,3245,1.431,3246,1.141,3247,1.431,3248,0.533,3249,0.533,3250,1.256,3251,0.533,3252,0.533,3253,1.256,3254,1.007,3255,1.007,3256,0.533,3257,0.533,3258,0.467,3259,0.533,3260,0.533,3261,0.533,3262,0.533,3263,0.533,3264,0.533,3265,0.533,3266,1.007,3267,0.533,3268,0.533,3269,0.533,3270,0.533,3271,0.533,3272,0.533,3273,0.533,3274,1.007,3275,0.533,3276,0.533,3277,1.814,3278,1.431,3279,0.533,3280,0.533,3281,0.533,3282,0.533,3283,0.533,3284,1.431,3285,1.007,3286,0.533,3287,0.533,3288,0.533,3289,0.533,3290,0.533,3291,0.533,3292,1.007,3293,0.467,3294,0.533,3295,0.533,3296,0.533,3297,0.533,3298,0.533,3299,0.533,3300,0.533,3301,0.533,3302,0.533,3303,1.007,3304,0.533,3305,0.533,3306,0.533,3307,0.533,3308,0.533,3309,0.533,3310,0.533,3311,0.533,3312,0.533,3313,0.533,3314,0.533,3315,1.814,3316,5.175,3317,0.533,3318,0.533,3319,0.533,3320,0.533,3321,0.533,3322,0.533,3323,0.533,3324,2.161,3325,0.533,3326,0.533,3327,0.533,3328,0.533,3329,0.533,3330,0.533,3331,0.533,3332,0.533,3333,0.533,3334,0.533,3335,0.533,3336,0.533,3337,0.533,3338,0.533,3339,0.533,3340,0.533,3341,0.533,3342,0.533,3343,0.533,3344,0.424,3345,0.533,3346,0.533,3347,0.533,3348,0.533,3349,0.533,3350,0.533,3351,0.533,3352,0.533,3353,0.533,3354,0.802,3355,0.533,3356,0.533,3357,0.533,3358,0.533,3359,6.648,3360,0.533,3361,0.533,3362,0.533,3363,0.533,3364,0.533,3365,0.533,3366,0.533,3367,0.533,3368,0.533,3369,0.533,3370,0.533,3371,0.533,3372,0.533,3373,0.533,3374,0.533,3375,0.533,3376,0.533,3377,0.533,3378,0.533,3379,1.431,3380,0.533,3381,0.533,3382,0.533,3383,0.533,3384,0.533,3385,0.533,3386,0.533,3387,0.533,3388,6.209,3389,0.533,3390,0.533,3391,0.533,3392,0.533,3393,0.533,3394,0.533,3395,0.533,3396,0.533,3397,6.742,3398,0.533,3399,0.533,3400,0.533,3401,1.007,3402,0.533,3403,0.533,3404,0.533,3405,0.533,3406,0.533,3407,1.814,3408,0.533,3409,0.533,3410,0.533,3411,0.533,3412,0.533,3413,0.533,3414,0.533,3415,0.533,3416,0.533,3417,0.533,3418,0.533,3419,0.533,3420,0.533,3421,0.533,3422,7.81,3423,7.406,3424,0.533,3425,0.533,3426,0.533,3427,0.467,3428,0.533,3429,0.533,3430,0.533,3431,3.767,3432,0.533,3433,0.533,3434,0.533,3435,0.533,3436,0.533,3437,1.814,3438,1.007,3439,1.431,3440,0.533,3441,0.533,3442,0.533,3443,0.533,3444,0.533,3445,0.533,3446,0.467,3447,0.533,3448,0.533,3449,5.953,3450,0.533,3451,0.533,3452,1.814,3453,1.814,3454,0.533,3455,0.533,3456,2.161,3457,2.765,3458,0.533,3459,0.533,3460,0.533,3461,0.533,3462,0.533,3463,0.533,3464,1.256,3465,0.533,3466,0.533,3467,0.533,3468,0.533,3469,0.533,3470,0.533,3471,0.533,3472,0.533,3473,0.533,3474,0.533,3475,1.007,3476,0.533,3477,0.533,3478,0.533,3479,2.476,3480,0.533,3481,0.533,3482,0.533,3483,0.533,3484,2.765,3485,1.007,3486,0.533,3487,1.007,3488,1.007,3489,0.533,3490,0.533,3491,0.533,3492,0.533,3493,0.533,3494,0.533,3495,3.498,3496,0.533,3497,0.533,3498,0.533,3499,0.533,3500,0.533,3501,0.533,3502,0.533,3503,2.658,3504,0.533,3505,0.533,3506,0.533,3507,0.533,3508,0.533,3509,3.706,3510,0.533,3511,0.533,3512,0.533,3513,0.533,3514,7.053,3515,0.533,3516,0.533,3517,1.814,3518,2.173,3519,0.533,3520,0.533,3521,0.533,3522,0.533,3523,1.814,3524,0.533,3525,0.533,3526,0.533,3527,0.533,3528,0.533,3529,0.533,3530,0.533,3531,0.533,3532,0.533,3533,0.533,3534,0.533,3535,0.533,3536,0.533,3537,0.533,3538,0.533,3539,0.533,3540,0.533,3541,0.533,3542,0.533,3543,0.533,3544,0.533,3545,0.533,3546,0.533,3547,0.533,3548,0.533,3549,0.533,3550,0.533,3551,0.533,3552,0.467,3553,0.533,3554,0.533,3555,0.533,3556,0.533,3557,0.533,3558,0.533,3559,0.533,3560,0.533,3561,0.533,3562,0.533,3563,3.273,3564,7.294,3565,0.533,3566,0.533,3567,0.533,3568,0.533,3569,0.533,3570,0.533,3571,0.533,3572,0.533,3573,0.533,3574,0.533,3575,0.533,3576,0.533,3577,0.533,3578,0.533,3579,0.533,3580,0.533,3581,0.533,3582,0.533,3583,1.007,3584,1.431,3585,1.431,3586,0.533,3587,0.533,3588,0.533,3589,0.533,3590,0.533,3591,1.007,3592,0.533,3593,0.533,3594,0.533,3595,0.533,3596,0.533,3597,0.533,3598,0.533,3599,0.533,3600,0.533,3601,0.533,3602,0.533,3603,0.533,3604,0.533,3605,0.533,3606,1.431,3607,1.007,3608,1.007,3609,0.533,3610,0.533,3611,0.533,3612,0.533,3613,0.533,3614,0.533,3615,0.533,3616,0.533,3617,0.533,3618,0.533,3619,0.533,3620,0.533,3621,0.533,3622,0.533,3623,0.533,3624,0.533,3625,0.533,3626,1.007,3627,0.533,3628,0.533,3629,0.533,3630,0.533,3631,0.533,3632,0.533,3633,0.533,3634,0.533,3635,0.533,3636,6.021,3637,0.533,3638,0.533,3639,0.533,3640,0.533,3641,0.533,3642,0.533,3643,0.533,3644,0.533,3645,0.533,3646,0.533,3647,0.533,3648,0.533,3649,0.533,3650,0.533,3651,0.533,3652,1.007,3653,0.533,3654,0.533,3655,0.533,3656,0.533,3657,0.533,3658,0.533,3659,0.533,3660,0.533,3661,0.533,3662,0.533,3663,0.533,3664,0.533,3665,0.533,3666,4.824,3667,0.533,3668,0.533,3669,0.533,3670,0.533,3671,0.533,3672,0.533,3673,0.533,3674,0.533,3675,0.533,3676,0.533,3677,0.533,3678,0.533,3679,0.533,3680,0.533,3681,0.533,3682,0.533,3683,0.533,3684,0.533,3685,0.533,3686,0.533,3687,0.533,3688,0.533,3689,0.533,3690,0.533,3691,0.533,3692,0.533,3693,0.533,3694,0.533,3695,0.533,3696,1.007,3697,0.533,3698,1.007,3699,0.533,3700,0.533,3701,0.533,3702,0.533,3703,0.533,3704,0.533,3705,0.533,3706,0.533,3707,0.533,3708,0.533,3709,0.533,3710,0.533,3711,0.533,3712,0.533,3713,0.533,3714,0.533,3715,0.533,3716,0.533,3717,0.533,3718,0.533,3719,0.533,3720,0.533,3721,2.161,3722,0.533,3723,0.533,3724,0.533,3725,0.533,3726,5.064,3727,0.533,3728,0.533,3729,0.533,3730,0.533,3731,0.533,3732,0.533,3733,0.533,3734,0.533,3735,0.533,3736,0.533,3737,0.533,3738,0.533,3739,0.533,3740,0.533,3741,0.533,3742,0.533,3743,0.533,3744,0.533,3745,0.533,3746,0.467,3747,0.533,3748,0.533,3749,0.533,3750,0.533,3751,0.533,3752,1.814,3753,1.431,3754,0.533,3755,0.533,3756,0.533,3757,0.533,3758,0.533,3759,0.533,3760,0.533,3761,0.533,3762,1.007,3763,0.533,3764,0.533,3765,0.533,3766,0.533,3767,0.533,3768,0.533,3769,0.533,3770,0.533,3771,0.533,3772,0.533,3773,0.533,3774,0.533,3775,0.533,3776,0.533,3777,1.007,3778,0.533,3779,0.533,3780,0.533,3781,1.007,3782,0.533,3783,0.533,3784,0.533,3785,0.533,3786,0.533,3787,0.533,3788,0.533,3789,0.533,3790,0.533,3791,0.533,3792,0.533,3793,0.533,3794,1.431,3795,0.533,3796,0.533,3797,0.533,3798,0.533,3799,0.533,3800,0.533,3801,0.533,3802,0.533,3803,0.533,3804,0.533,3805,0.533,3806,0.533,3807,0.533,3808,0.533,3809,0.533,3810,0.533,3811,0.467,3812,0.533,3813,0.533,3814,0.533,3815,0.533,3816,0.533,3817,0.533,3818,7.559,3819,1.007,3820,0.533,3821,0.533,3822,0.533,3823,0.533,3824,0.533,3825,0.533,3826,0.533,3827,0.533,3828,0.533,3829,0.533,3830,0.533,3831,0.533,3832,0.533,3833,0.533,3834,0.533,3835,0.533,3836,0.533,3837,1.431,3838,1.431,3839,0.533,3840,0.533,3841,0.533,3842,0.533,3843,0.533,3844,0.533,3845,0.533,3846,0.533,3847,0.533,3848,0.533,3849,0.533,3850,1.007,3851,0.533,3852,0.533,3853,0.533,3854,1.007,3855,0.533,3856,0.533,3857,0.533,3858,0.533,3859,1.007,3860,0.533,3861,0.533,3862,0.533,3863,0.533,3864,0.533,3865,0.533,3866,0.533,3867,0.533,3868,0.533,3869,0.533,3870,0.533,3871,0.533,3872,0.533,3873,0.533,3874,0.533,3875,0.533,3876,0.533,3877,2.765,3878,0.533,3879,0.533,3880,0.533,3881,1.007,3882,0.533,3883,0.533,3884,0.533,3885,0.533,3886,0.533,3887,0.533,3888,0.533,3889,0.533,3890,0.533,3891,0.533,3892,0.533,3893,0.533,3894,0.533,3895,0.533,3896,0.533,3897,0.533,3898,1.431,3899,0.533,3900,0.533,3901,0.533,3902,0.533,3903,0.533,3904,0.533,3905,0.533,3906,0.533,3907,0.533,3908,1.007,3909,0.533,3910,0.533,3911,0.533,3912,0.533,3913,0.533,3914,0.533,3915,0.533,3916,0.533,3917,0.533,3918,0.533,3919,0.533,3920,0.533,3921,0.533,3922,0.533,3923,0.533,3924,0.533,3925,1.007,3926,0.533,3927,0.533,3928,0.533,3929,0.533,3930,0.533,3931,0.533,3932,0.533,3933,0.533,3934,0.533,3935,0.533,3936,0.533,3937,0.533,3938,0.533,3939,0.533,3940,0.533,3941,0.533,3942,0.533,3943,0.533,3944,0.533,3945,0.533,3946,0.533,3947,0.533,3948,0.533,3949,0.533,3950,0.533,3951,0.533,3952,0.533,3953,0.533,3954,4.08,3955,0.533,3956,0.533,3957,1.007,3958,1.007,3959,0.533,3960,0.533,3961,0.533,3962,0.533,3963,0.533,3964,0.533,3965,0.533,3966,0.533,3967,0.533,3968,0.533,3969,0.533,3970,0.533,3971,0.533,3972,0.533,3973,0.533,3974,0.533,3975,0.533,3976,2.765,3977,0.533,3978,1.007,3979,1.007,3980,0.533,3981,0.533,3982,0.533,3983,0.533,3984,0.533,3985,0.533,3986,0.533,3987,0.533,3988,0.533,3989,0.533,3990,0.533,3991,0.533,3992,0.533,3993,0.533,3994,0.533,3995,0.533,3996,0.533,3997,0.533,3998,0.533,3999,0.533,4000,0.533,4001,0.533,4002,0.533,4003,0.533,4004,1.007,4005,0.533,4006,0.533,4007,0.533,4008,0.533,4009,0.533,4010,0.533,4011,0.533,4012,0.533,4013,0.533,4014,0.533,4015,0.533,4016,0.533,4017,0.533,4018,0.533,4019,0.533,4020,0.533,4021,0.533,4022,0.533,4023,0.533,4024,0.533,4025,0.533,4026,0.533,4027,0.533,4028,0.533,4029,0.533,4030,0.533,4031,0.533,4032,0.533,4033,0.533,4034,0.533,4035,0.533,4036,0.533,4037,1.007,4038,0.533,4039,0.533,4040,0.533,4041,0.533,4042,0.533,4043,0.533,4044,0.533,4045,0.693,4046,1.249,4047,0.533,4048,0.533,4049,0.533,4050,0.533,4051,0.533,4052,0.533,4053,0.533,4054,0.533,4055,0.533,4056,0.533,4057,0.533,4058,0.533,4059,0.533,4060,0.533,4061,0.533,4062,0.533,4063,0.533,4064,0.533,4065,0.533,4066,0.533,4067,0.533,4068,1.814,4069,0.533,4070,0.533,4071,0.533,4072,0.533,4073,0.533,4074,1.007,4075,0.533,4076,0.533,4077,0.533,4078,0.533,4079,0.533,4080,0.533,4081,0.533,4082,0.533,4083,0.533,4084,0.533,4085,0.533,4086,0.533,4087,0.533,4088,0.533,4089,0.533,4090,0.533,4091,0.533,4092,0.533,4093,0.533,4094,0.533,4095,0.533,4096,0.533,4097,0.533,4098,0.533,4099,0.533,4100,0.533,4101,0.533,4102,0.533,4103,0.533,4104,0.533,4105,0.533,4106,0.533,4107,0.533,4108,0.533,4109,0.533,4110,0.533,4111,0.533,4112,0.533,4113,0.533,4114,0.533,4115,0.533,4116,0.533,4117,0.533,4118,0.467,4119,0.533,4120,0.533,4121,0.533,4122,0.533,4123,0.533,4124,0.533,4125,0.533,4126,0.533,4127,0.533,4128,0.533,4129,0.533,4130,0.533,4131,0.533,4132,0.533,4133,0.533,4134,0.533,4135,0.533,4136,0.533,4137,0.533,4138,0.533,4139,0.533,4140,0.533,4141,0.533,4142,0.533,4143,0.533,4144,0.533,4145,1.007,4146,0.533,4147,0.533,4148,0.533,4149,0.533,4150,0.533,4151,0.533,4152,0.533,4153,0.533,4154,0.533,4155,0.533,4156,0.533,4157,0.533,4158,0.533,4159,0.533,4160,0.533,4161,0.533,4162,0.533,4163,0.533,4164,0.533,4165,0.533,4166,0.533,4167,0.533,4168,0.533,4169,0.533,4170,0.533,4171,0.533,4172,0.533,4173,0.533,4174,0.533,4175,0.533,4176,0.533,4177,0.533,4178,0.533,4179,0.533,4180,0.533,4181,0.533,4182,0.533,4183,2.476,4184,0.533,4185,0.533,4186,0.533,4187,0.533,4188,0.533,4189,0.533,4190,0.533,4191,0.533,4192,1.007,4193,0.533,4194,0.533,4195,0.533,4196,0.533,4197,0.533,4198,1.814,4199,0.533,4200,0.533,4201,0.533,4202,0.533,4203,0.533,4204,0.533,4205,0.533,4206,0.533,4207,0.533,4208,0.533,4209,0.533,4210,0.467,4211,0.533,4212,0.533,4213,1.896,4214,0.533,4215,0.533,4216,7.642,4217,0.533,4218,0.533,4219,0.533,4220,0.533,4221,0.533,4222,0.533,4223,0.533,4224,0.533,4225,0.533,4226,0.533,4227,0.533,4228,0.533,4229,0.533,4230,0.533,4231,0.533,4232,0.533,4233,1.007,4234,0.533,4235,0.533,4236,0.533,4237,0.533,4238,0.533,4239,0.533,4240,0.533,4241,0.533,4242,0.533,4243,0.533,4244,0.533,4245,0.533,4246,0.533,4247,0.533,4248,0.533,4249,0.533,4250,0.533,4251,0.533,4252,0.533,4253,0.533,4254,0.533,4255,0.533,4256,0.533,4257,0.533,4258,0.533,4259,0.533,4260,0.533,4261,0.533,4262,0.533,4263,0.533,4264,1.007,4265,0.533,4266,0.533,4267,0.533,4268,0.533,4269,2.765,4270,0.533,4271,0.533,4272,0.533,4273,0.533,4274,2.765,4275,0.533,4276,0.533,4277,0.533,4278,0.533,4279,0.533,4280,0.533,4281,0.533,4282,0.533,4283,0.533,4284,0.533,4285,0.533,4286,0.533,4287,0.533,4288,1.007,4289,0.533,4290,0.533,4291,0.533,4292,0.533,4293,0.533,4294,0.533,4295,0.533,4296,0.533,4297,0.533,4298,0.533,4299,0.533,4300,0.533,4301,0.533,4302,2.161,4303,0.533,4304,0.533,4305,0.533,4306,0.533,4307,1.007,4308,0.533,4309,0.533,4310,0.533,4311,0.533,4312,1.007,4313,0.533,4314,0.533,4315,0.533,4316,0.533,4317,0.533,4318,1.007,4319,0.533,4320,0.533,4321,0.533,4322,0.533,4323,0.533,4324,0.533,4325,0.533,4326,0.533,4327,0.533,4328,0.533,4329,0.533,4330,0.533,4331,0.533,4332,1.007,4333,1.896,4334,0.533,4335,0.533,4336,0.533,4337,0.533,4338,0.533,4339,0.533,4340,0.533,4341,0.533,4342,0.533,4343,1.431,4344,0.533,4345,0.533,4346,0.533,4347,0.533,4348,0.533,4349,0.533,4350,0.533,4351,0.533,4352,0.533,4353,0.533,4354,1.431,4355,0.533,4356,0.533,4357,0.533,4358,0.533,4359,0.533,4360,0.533,4361,0.533,4362,0.533,4363,0.533,4364,0.467,4365,0.533,4366,1.007,4367,0.533,4368,0.533,4369,0.533,4370,0.533,4371,0.533,4372,0.533,4373,0.533,4374,0.533,4375,0.533,4376,0.533,4377,0.533,4378,0.533,4379,0.533,4380,0.533,4381,0.533,4382,0.533,4383,0.533,4384,0.533,4385,1.007,4386,1.007,4387,0.533,4388,1.007,4389,0.533,4390,0.533,4391,0.533,4392,0.533,4393,0.533,4394,0.533,4395,0.533,4396,0.533,4397,0.533,4398,0.533,4399,0.533,4400,0.533,4401,0.533,4402,0.533,4403,0.533,4404,0.533,4405,0.533,4406,0.533,4407,0.533,4408,0.533,4409,0.533,4410,0.467,4411,0.533,4412,0.533,4413,1.007,4414,0.533,4415,0.533,4416,0.533,4417,0.533,4418,0.533,4419,0.533,4420,0.533,4421,0.533,4422,0.533,4423,0.533,4424,0.533,4425,0.533,4426,0.533,4427,0.533,4428,0.533,4429,0.533,4430,0.533,4431,0.533,4432,0.424,4433,0.533,4434,0.533,4435,0.533,4436,0.533,4437,0.533,4438,0.533,4439,0.533,4440,0.533,4441,0.533,4442,0.533,4443,0.533,4444,0.533,4445,0.533,4446,0.533,4447,0.533,4448,0.533,4449,0.533,4450,0.533,4451,0.533,4452,0.533,4453,0.533,4454,0.533,4455,0.467,4456,0.533,4457,0.533,4458,0.533,4459,1.431,4460,0.533,4461,0.533,4462,0.533,4463,0.533,4464,0.533,4465,0.533,4466,0.533,4467,0.533,4468,0.533,4469,0.533,4470,0.533,4471,0.533,4472,1.814,4473,0.533,4474,0.533,4475,0.533,4476,0.533,4477,0.533,4478,2.765,4479,2.161,4480,0.533,4481,0.533,4482,0.533,4483,0.533,4484,0.533,4485,0.533,4486,0.533,4487,0.533,4488,0.533,4489,0.533,4490,0.533,4491,0.533,4492,0.533,4493,0.533,4494,1.007,4495,0.533,4496,0.533,4497,0.533,4498,0.533,4499,0.533,4500,0.533,4501,0.533,4502,0.533,4503,0.533,4504,0.533,4505,0.533,4506,0.533,4507,0.533,4508,0.533,4509,0.533,4510,0.533,4511,0.533,4512,0.533,4513,0.533,4514,0.533,4515,0.533,4516,0.533,4517,0.533,4518,0.533,4519,0.533,4520,0.533,4521,0.533,4522,1.007,4523,0.533,4524,0.533,4525,0.533,4526,0.533,4527,0.533,4528,0.533,4529,0.533,4530,0.533,4531,0.533,4532,0.533,4533,0.533,4534,0.533,4535,0.533,4536,0.533,4537,0.533,4538,0.533,4539,0.533,4540,0.533,4541,0.533,4542,0.533,4543,0.533,4544,0.533,4545,0.533,4546,0.533,4547,0.533,4548,0.533,4549,0.533,4550,0.533,4551,1.814,4552,0.533,4553,0.533,4554,0.533,4555,0.533,4556,0.533,4557,0.533,4558,0.533,4559,0.533,4560,0.533,4561,0.533,4562,0.533,4563,0.533,4564,0.533,4565,0.533,4566,0.533,4567,0.533,4568,0.533,4569,0.533,4570,0.533,4571,0.533,4572,0.533,4573,0.533,4574,0.533,4575,0.533,4576,0.533,4577,0.533,4578,0.533,4579,0.533,4580,0.533,4581,0.533,4582,0.533,4583,0.533,4584,0.533,4585,0.533,4586,0.533,4587,0.533,4588,0.533,4589,0.533,4590,2.161,4591,2.161,4592,0.533,4593,0.533,4594,0.533,4595,0.533,4596,0.533,4597,0.533,4598,0.533,4599,0.533,4600,0.533,4601,0.533,4602,0.533,4603,0.533,4604,0.533,4605,0.533,4606,0.533,4607,0.533,4608,0.533,4609,0.533,4610,0.533,4611,0.533,4612,0.533,4613,0.533,4614,0.533,4615,0.533,4616,0.533,4617,0.533,4618,0.533,4619,0.533,4620,0.533,4621,0.533,4622,0.533,4623,0.533,4624,0.533,4625,0.533,4626,0.533,4627,0.533,4628,0.533,4629,0.533,4630,0.533,4631,0.533,4632,0.533,4633,0.533,4634,0.533,4635,0.533,4636,7.523,4637,0.533,4638,0.533,4639,0.533,4640,0.533,4641,0.533,4642,0.533,4643,0.533,4644,0.533,4645,0.533,4646,0.533,4647,0.533,4648,0.467,4649,1.431,4650,0.533,4651,0.533,4652,0.533,4653,0.467,4654,0.533,4655,0.533,4656,0.533,4657,0.533,4658,0.533,4659,0.533,4660,0.533,4661,0.533,4662,0.533,4663,0.533,4664,0.533,4665,0.533,4666,0.533,4667,0.533,4668,0.533,4669,0.533,4670,0.533,4671,0.883,4672,0.533,4673,0.533,4674,0.533,4675,0.533,4676,0.533,4677,0.533,4678,0.533,4679,0.533,4680,0.533,4681,1.007,4682,0.533,4683,0.533,4684,0.533,4685,0.533,4686,0.533,4687,0.533,4688,0.533,4689,0.533,4690,0.533,4691,0.533,4692,0.533,4693,0.533,4694,0.533,4695,0.533,4696,0.533,4697,0.533,4698,0.533,4699,0.533,4700,0.533,4701,0.533,4702,0.533,4703,0.533,4704,0.533,4705,0.533,4706,0.533,4707,0.533,4708,0.533,4709,0.533,4710,0.533,4711,0.533,4712,0.533,4713,0.533,4714,0.533,4715,0.533,4716,0.533,4717,0.533,4718,0.533,4719,0.533,4720,0.533,4721,0.533,4722,0.533,4723,0.533,4724,0.533,4725,0.533,4726,0.533,4727,0.533,4728,0.533,4729,0.533,4730,0.533,4731,0.533,4732,0.533,4733,0.533,4734,0.533,4735,0.533,4736,0.533,4737,0.533,4738,0.533,4739,0.533,4740,0.533,4741,0.533,4742,0.533,4743,0.533,4744,0.533,4745,0.533,4746,0.533,4747,0.533,4748,0.533,4749,0.533,4750,0.533,4751,0.533,4752,0.533,4753,0.533,4754,0.533,4755,0.533,4756,0.533,4757,0.533,4758,0.533,4759,0.533,4760,0.533,4761,0.533,4762,0.533,4763,0.533,4764,0.533,4765,0.533,4766,0.533,4767,0.533,4768,0.533,4769,0.533,4770,0.533,4771,0.533,4772,0.533,4773,0.533,4774,0.533,4775,0.533,4776,0.533,4777,0.533,4778,1.007,4779,0.533,4780,0.533,4781,0.533,4782,0.533,4783,0.533,4784,0.533,4785,0.533,4786,0.533,4787,0.533,4788,0.533,4789,0.533,4790,0.533,4791,0.533,4792,0.533,4793,0.533,4794,0.533,4795,0.533,4796,0.533,4797,0.533,4798,0.533,4799,0.533,4800,0.533,4801,0.533,4802,0.533,4803,0.533,4804,0.533,4805,0.533,4806,0.533,4807,0.533,4808,0.533,4809,0.533,4810,0.533,4811,0.533,4812,0.533,4813,1.007,4814,0.533,4815,0.533,4816,0.533,4817,0.533,4818,0.533,4819,1.007,4820,1.007,4821,1.007,4822,0.533,4823,0.533,4824,0.533,4825,0.533,4826,0.533,4827,0.533,4828,0.533,4829,1.007,4830,1.007,4831,0.533,4832,0.533,4833,0.533,4834,0.533,4835,0.533,4836,0.533,4837,0.533,4838,0.533,4839,0.533,4840,0.533,4841,0.533,4842,0.533,4843,0.533,4844,0.533,4845,0.533,4846,0.533,4847,0.533,4848,0.533,4849,0.533,4850,0.533,4851,0.533,4852,0.533,4853,0.533,4854,0.533,4855,0.533,4856,0.533,4857,0.533,4858,0.533,4859,0.533,4860,0.533,4861,0.533,4862,0.533,4863,0.533,4864,0.533,4865,0.533,4866,0.533,4867,0.533,4868,0.533,4869,0.533,4870,0.533,4871,0.533,4872,0.533,4873,0.533,4874,0.533,4875,0.533,4876,0.533,4877,0.533,4878,0.533,4879,0.533,4880,0.533,4881,0.533,4882,0.533,4883,0.533,4884,0.533,4885,0.533,4886,0.533,4887,0.533,4888,0.533,4889,0.533,4890,0.533,4891,0.533,4892,0.533,4893,0.533,4894,0.533,4895,0.533,4896,0.533,4897,0.533,4898,0.533,4899,0.533,4900,0.533,4901,0.533,4902,0.533,4903,0.533,4904,0.533,4905,0.533,4906,0.533,4907,0.533,4908,0.533,4909,0.533,4910,0.533,4911,0.533,4912,0.533,4913,0.533,4914,0.533,4915,0.533,4916,0.533,4917,0.533,4918,0.533,4919,0.533,4920,0.533,4921,0.533,4922,0.533,4923,0.533,4924,0.533,4925,0.533,4926,0.533,4927,0.533,4928,0.533,4929,1.007,4930,0.533,4931,1.007,4932,0.533,4933,1.007,4934,1.431,4935,0.533,4936,0.533,4937,1.007,4938,0.533,4939,1.007,4940,8.168,4941,0.533,4942,0.533,4943,1.007,4944,0.533,4945,0.533,4946,0.533,4947,1.007,4948,0.533,4949,1.007,4950,0.533,4951,1.007,4952,0.533,4953,1.007,4954,0.533,4955,1.007,4956,0.533,4957,0.533,4958,0.533,4959,0.533,4960,1.007,4961,0.533,4962,1.007,4963,0.533,4964,1.007,4965,0.533,4966,1.007,4967,0.533,4968,1.007,4969,0.533,4970,1.007,4971,0.533,4972,1.007,4973,0.533,4974,1.007,4975,0.533,4976,0.533,4977,1.007,4978,1.007,4979,0.533,4980,0.533,4981,1.007,4982,0.533,4983,1.007,4984,0.533,4985,1.007,4986,0.533,4987,1.007,4988,0.533,4989,0.533,4990,1.007,4991,0.533,4992,0.533,4993,1.007,4994,0.467,4995,0.533,4996,0.533,4997,1.007,4998,0.533,4999,1.007,5000,0.533,5001,0.533,5002,1.007,5003,1.007,5004,0.533,5005,0.533,5006,1.007,5007,1.431,5008,1.814,5009,0.533,5010,0.533,5011,0.533,5012,1.007,5013,0.533,5014,1.007,5015,0.533,5016,0.533,5017,1.007,5018,0.533,5019,1.007,5020,0.533,5021,1.007,5022,0.533,5023,1.007,5024,0.533,5025,1.007,5026,0.533,5027,1.007,5028,0.533,5029,0.533,5030,1.007,5031,0.533,5032,1.007,5033,0.533,5034,1.007,5035,0.533,5036,1.007,5037,0.533,5038,1.007,5039,0.533,5040,1.007,5041,0.533,5042,1.007,5043,0.533,5044,1.007,5045,0.533,5046,0.533,5047,1.007,5048,0.533,5049,0.533,5050,0.533,5051,1.007,5052,0.533,5053,0.533,5054,0.533,5055,1.007,5056,0.367,5057,0.533,5058,0.533,5059,0.533,5060,1.431,5061,0.533,5062,1.007,5063,0.533,5064,1.007,5065,1.007,5066,1.814,5067,1.007,5068,0.533,5069,0.533,5070,0.533,5071,0.533,5072,0.533,5073,0.533,5074,0.533,5075,1.007,5076,1.007,5077,0.533,5078,0.533,5079,1.007,5080,0.533,5081,0.533,5082,1.007,5083,0.533,5084,1.007,5085,0.533,5086,1.007,5087,0.533,5088,1.007,5089,0.533,5090,1.007,5091,1.431,5092,0.533,5093,0.533,5094,0.533,5095,1.007,5096,0.533,5097,1.007,5098,0.533,5099,1.431,5100,0.533,5101,0.533,5102,0.533,5103,1.007,5104,0.533,5105,1.007,5106,0.533,5107,0.533,5108,0.533,5109,0.533,5110,0.533,5111,0.533,5112,0.533,5113,1.007,5114,0.533,5115,1.007,5116,0.533,5117,1.007,5118,0.533,5119,1.007,5120,0.533,5121,1.007,5122,0.533,5123,1.007,5124,0.533,5125,1.007,5126,0.533,5127,1.007,5128,0.533,5129,1.007,5130,0.533,5131,1.007,5132,0.533,5133,1.007,5134,0.533,5135,1.007,5136,0.533,5137,1.007,5138,0.533,5139,1.007,5140,0.533,5141,1.007,5142,0.533,5143,1.007,5144,0.533,5145,1.007,5146,0.533,5147,1.007,5148,0.533,5149,1.007,5150,0.533,5151,0.533,5152,0.533,5153,0.533,5154,1.007,5155,0.533,5156,0.533,5157,0.533,5158,0.533,5159,1.007,5160,1.814,5161,1.007,5162,0.533,5163,1.431,5164,0.533,5165,0.533,5166,0.533,5167,1.007,5168,0.533,5169,0.741,5170,0.533,5171,0.533,5172,0.533,5173,0.533,5174,1.007,5175,0.533,5176,0.533,5177,0.533,5178,1.007,5179,0.533,5180,1.007,5181,0.533,5182,1.007,5183,0.533,5184,1.007,5185,0.533,5186,1.007,5187,0.533,5188,1.007,5189,0.533,5190,1.007,5191,1.007,5192,0.533,5193,0.533,5194,1.007,5195,0.533,5196,0.533,5197,1.007,5198,0.533,5199,0.533,5200,1.007,5201,0.533,5202,0.533,5203,1.007,5204,0.533,5205,0.533,5206,0.533,5207,0.533,5208,0.533,5209,0.533,5210,0.533,5211,0.533,5212,0.533,5213,0.533,5214,0.533,5215,1.007,5216,0.533,5217,0.533,5218,1.007,5219,0.533,5220,0.533,5221,1.007,5222,0.533,5223,0.533,5224,1.007,5225,0.533,5226,0.533,5227,0.533,5228,1.007,5229,0.533,5230,0.533,5231,0.533,5232,1.007,5233,0.533,5234,1.007,5235,0.533,5236,0.533,5237,0.533,5238,0.533,5239,1.007,5240,0.533,5241,1.007,5242,0.533,5243,1.007,5244,0.533,5245,1.007,5246,0.533,5247,0.533,5248,0.533,5249,0.533,5250,0.533,5251,1.007,5252,0.533,5253,1.007,5254,0.533,5255,0.533,5256,1.007,5257,0.533,5258,1.007,5259,0.533,5260,0.533,5261,0.533,5262,0.533,5263,0.533,5264,0.533,5265,1.007,5266,0.533,5267,0.533,5268,0.533,5269,1.007,5270,0.533,5271,0.533,5272,0.533,5273,0.533,5274,0.467,5275,0.533,5276,1.007,5277,0.533,5278,1.007,5279,0.533,5280,0.467,5281,0.533,5282,0.533,5283,0.533,5284,0.533,5285,1.007,5286,0.533,5287,1.007,5288,0.533,5289,1.007,5290,0.533,5291,0.533,5292,1.007,5293,0.533,5294,0.533,5295,1.007,5296,0.533,5297,0.533,5298,0.533,5299,1.007,5300,0.533,5301,1.007,5302,0.533,5303,1.007,5304,0.533,5305,1.007,5306,0.533,5307,1.007,5308,0.533,5309,1.007,5310,0.533,5311,1.007,5312,0.533,5313,1.007,5314,0.533,5315,1.007,5316,0.533,5317,1.007,5318,0.533,5319,1.007,5320,0.533,5321,0.533,5322,0.533,5323,0.533,5324,0.533]],["title/dependencies.html",[2840,3.602,3246,2.917]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,89,0.796,91,3.682,92,3.472,93,3.041,98,3.65,102,2.022,119,4.379,120,3.041,121,1.474,126,4.379,350,4.43,351,3.546,515,3.171,735,3.171,759,3.855,760,3.855,761,3.041,770,4.43,831,3.171,1297,3.65,1424,4.093,1723,4.093,1726,5.217,1727,5.217,2430,5.217,2548,5.217,2549,5.217,2644,5.217,2840,4.093,2957,5.217,3427,6.331,3446,7.537,3503,5.217,3552,5.217,4118,5.217,4410,5.217,4648,5.217,4653,5.217,5325,5.946,5326,5.946,5327,5.946,5328,7.215,5329,5.946,5330,5.946,5331,5.946,5332,5.946,5333,5.946,5334,5.946,5335,5.946,5336,5.946]],["title/miscellaneous/enumerations.html",[5337,2.138,5338,4.592]],["body/miscellaneous/enumerations.html",[6,3.88,7,0.268,12,0.011,37,4.23,38,4.12,40,4.12,41,2.975,42,4.12,43,3.302,44,4.12,45,3.863,46,4.12,47,3.675,48,4.12,49,3.675,50,4.12,51,3.88,52,4.12,53,3.88,54,4.12,55,3.495,56,4.12,57,3.88,58,4.12,59,3.336,60,4.12,61,3.675,62,4.12,63,3.675,64,4.12,65,3.88,66,4.12,67,3.88,68,4.12,69,3.88,70,4.448,71,4.12,72,4.12,73,4.12,74,4.12,75,0.009,76,0.009,467,2.272,5337,3.495,5338,5.252,5339,6.356]],["title/miscellaneous/functions.html",[3142,4.17,5337,2.138]],["body/miscellaneous/functions.html",[5,0.225,7,0.197,10,1.35,11,0.578,12,0.011,19,1.041,21,1.034,22,2.384,75,0.007,76,0.007,80,1.653,319,3.82,325,2.256,329,2.256,351,3.315,447,1.912,451,2.599,452,1.653,467,1.519,657,1.644,718,4.373,723,2.715,750,2.437,765,3.046,786,2.61,877,3.657,878,2.817,879,3.514,880,4.967,881,2.859,882,5.755,906,3.514,922,3.514,1025,2.458,1174,2.859,1241,4.435,1306,2.708,1418,5.227,1420,3.87,1629,3.036,1630,3.87,1631,3.514,1676,3.87,1810,3.87,1848,3.87,1923,3.87,1992,3.036,2121,3.87,2122,4.746,2123,3.514,2177,4.746,2626,3.87,3042,3.87,3142,3.514,5337,2.575,5340,6.745,5341,7.186,5342,6.745,5343,6.745,5344,6.745,5345,6.745,5346,4.41,5347,5.957,5348,5.957,5349,4.41,5350,5.918,5351,3.87,5352,5.957,5353,4.41,5354,5.957,5355,5.918,5356,5.957,5357,5.957,5358,5.957,5359,5.957,5360,5.957,5361,4.41,5362,5.918,5363,5.957,5364,6.745,5365,5.957,5366,6.745,5367,6.745,5368,6.745,5369,5.957,5370,6.745,5371,5.957,5372,6.745,5373,5.957,5374,5.918,5375,5.957,5376,5.957,5377,5.918,5378,3.87,5379,3.87,5380,4.41,5381,4.41,5382,4.41,5383,4.41,5384,4.41,5385,4.41,5386,4.41,5387,5.957,5388,4.41,5389,4.41,5390,4.41]],["title/index.html",[7,0.164,1777,2.373,2946,2.696]],["body/index.html",[5,0.194,12,0.011,59,3.201,75,0.009,76,0.009,77,1.841,121,1.979,170,2.283,185,3.954,198,1.953,351,2.823,378,2.198,394,2.076,408,2.141,518,5.203,522,4.58,577,3.201,578,4.576,625,3.954,724,3.724,735,3.063,793,3.354,831,3.063,839,2.717,931,4.23,1069,4.58,1216,4.576,1269,3.954,1415,4.576,1447,4.23,1663,4.576,1720,5.04,1723,3.954,1763,4.576,1771,5.628,1777,3.724,1782,4.863,2840,3.954,2930,4.576,2954,3.724,3025,5.04,3030,5.04,3055,6.198,3066,5.04,3068,5.628,3135,5.04,3145,5.04,3250,6.713,3253,5.04,3258,5.04,3293,5.04,4213,6.198,4333,5.04,4994,5.04,5280,5.04,5391,5.04,5392,5.04,5393,5.744,5394,5.744,5395,5.744,5396,5.744,5397,5.744,5398,7.064,5399,7.064,5400,5.744,5401,5.744,5402,5.744,5403,5.744,5404,5.744,5405,5.744,5406,5.744,5407,5.744,5408,5.744,5409,5.744,5410,5.744,5411,5.744,5412,5.744,5413,5.744,5414,5.744,5415,5.744,5416,5.744]],["title/license.html",[1777,2.373,2946,2.696,5169,2.696]],["body/license.html",[10,0.872,12,0.006,29,3.612,61,1.921,75,0.006,76,0.006,173,2.493,197,1.668,198,1.064,209,3.4,222,3.717,243,1.003,345,0.637,373,1.635,421,3.436,460,1.743,517,3.717,541,1.668,565,2.304,683,2.745,690,2.493,753,1.538,770,1.921,774,2.028,816,1.921,825,1.916,842,2.028,868,3.025,915,5.272,926,2.493,948,2.028,986,2.745,997,4.555,1001,4.094,1007,2.493,1021,2.304,1296,4.554,1312,2.304,1447,2.304,1628,5.728,2113,2.725,2306,3.717,2498,2.745,2653,2.154,2894,2.745,2960,2.745,3013,4.094,3062,6.308,3077,2.745,3089,2.745,3134,6.846,3180,2.745,3344,2.493,3518,2.745,3746,2.745,4364,4.896,4432,2.493,5169,5.11,5274,4.094,5417,7.188,5418,7.388,5419,6.616,5420,7.188,5421,3.129,5422,3.129,5423,3.129,5424,7.388,5425,3.129,5426,4.666,5427,3.129,5428,3.129,5429,3.129,5430,5.579,5431,3.129,5432,5.579,5433,5.579,5434,3.129,5435,6.185,5436,3.129,5437,5.579,5438,3.129,5439,3.129,5440,3.129,5441,3.129,5442,7.388,5443,3.129,5444,3.129,5445,4.666,5446,4.666,5447,3.129,5448,3.129,5449,4.666,5450,7.802,5451,8.432,5452,4.666,5453,4.666,5454,3.129,5455,3.129,5456,3.129,5457,4.666,5458,8.538,5459,3.129,5460,5.579,5461,3.129,5462,4.666,5463,3.129,5464,4.666,5465,3.129,5466,5.579,5467,3.129,5468,4.666,5469,4.666,5470,6.185,5471,3.129,5472,3.129,5473,3.129,5474,6.185,5475,4.666,5476,3.129,5477,3.129,5478,4.666,5479,3.129,5480,3.129,5481,3.129,5482,5.579,5483,6.616,5484,7.551,5485,6.616,5486,5.579,5487,3.129,5488,3.129,5489,3.129,5490,4.666,5491,3.129,5492,4.666,5493,3.129,5494,3.129,5495,3.129,5496,3.129,5497,3.129,5498,3.129,5499,2.154,5500,3.129,5501,3.129,5502,4.666,5503,3.129,5504,7.802,5505,6.616,5506,3.129,5507,3.129,5508,3.129,5509,4.666,5510,3.129,5511,3.129,5512,3.129,5513,3.129,5514,3.129,5515,3.129,5516,3.129,5517,3.129,5518,3.129,5519,3.129,5520,3.129,5521,3.129,5522,3.129,5523,3.129,5524,6.185,5525,3.129,5526,3.129,5527,3.129,5528,3.129,5529,5.579,5530,3.129,5531,3.129,5532,3.129,5533,4.666,5534,3.129,5535,3.129,5536,5.579,5537,4.666,5538,3.129,5539,3.129,5540,3.129,5541,3.129,5542,4.666,5543,3.129,5544,3.129,5545,3.129,5546,3.129,5547,3.129,5548,6.616,5549,3.129,5550,3.129,5551,3.129,5552,3.129,5553,3.129,5554,3.129,5555,3.129,5556,3.129,5557,4.666,5558,3.129,5559,5.579,5560,3.129,5561,3.129,5562,3.129,5563,3.129,5564,3.129,5565,3.129,5566,3.129,5567,7.188,5568,5.579,5569,3.129,5570,7.188,5571,4.666,5572,4.666,5573,3.129,5574,5.579,5575,3.129,5576,4.666,5577,3.129,5578,3.129,5579,3.129,5580,3.129,5581,3.129,5582,6.938,5583,4.666,5584,5.579,5585,4.666,5586,3.129,5587,3.129,5588,6.616,5589,4.666,5590,4.666,5591,5.579,5592,4.666,5593,4.666,5594,4.666,5595,4.666,5596,3.129,5597,3.129,5598,3.129,5599,3.129,5600,3.129,5601,3.129,5602,6.185,5603,3.129,5604,3.129,5605,3.129,5606,3.129,5607,3.129,5608,3.129,5609,3.129,5610,3.129,5611,3.129,5612,6.185,5613,5.579,5614,4.666,5615,5.579,5616,4.666,5617,4.666,5618,4.666,5619,3.129,5620,3.129,5621,3.129,5622,3.129,5623,4.666,5624,3.129,5625,6.185,5626,3.129,5627,3.129,5628,3.129,5629,3.129,5630,4.666,5631,3.129,5632,3.129,5633,3.129,5634,3.129,5635,3.129,5636,3.129,5637,3.129,5638,3.129,5639,3.129,5640,4.666,5641,3.129,5642,3.129,5643,3.129,5644,3.129,5645,3.129,5646,3.129,5647,3.129,5648,3.129,5649,3.129,5650,3.129,5651,3.129,5652,3.129,5653,3.129,5654,3.129,5655,3.129,5656,3.129,5657,3.129,5658,3.129,5659,4.666,5660,3.129,5661,3.129,5662,3.129,5663,3.129,5664,3.129,5665,3.129,5666,3.129,5667,3.129,5668,4.666,5669,3.129,5670,3.129,5671,3.129,5672,3.129,5673,3.129,5674,3.129,5675,3.129,5676,3.129,5677,3.129,5678,3.129,5679,3.129,5680,3.129,5681,3.129]],["title/modules.html",[3354,4.709]],["body/modules.html",[12,0.01,75,0.01,76,0.01,3354,5.545]],["title/overview.html",[5682,5.186]],["body/overview.html",[2,1.385,12,0.01,41,3.208,45,3.626,75,0.01,76,0.01,98,4.174,138,0.853,332,2.179,373,2.383,417,2.702,2591,5.966,3139,6.853,5682,5.966]],["title/properties.html",[8,0.418,3246,2.917]],["body/properties.html",[8,0.536,12,0.011,75,0.01,76,0.01,394,2.425,522,4.35,1294,4.35,2653,4.618,3068,5.346,4455,5.887,5169,4.941,5392,5.887,5683,6.709,5684,6.709,5685,6.709,5686,6.709,5687,6.709,5688,6.709]],["title/todo.html",[554,2.138,1777,2.373,2946,2.696]],["body/todo.html",[5,0.182,12,0.01,18,2.632,75,0.01,76,0.01,209,3.132,522,4.293,831,3.531,839,3.132,1133,5.276,1588,4.558,1695,5.276,1723,4.558,3243,5.81,4671,5.81,5689,6.622,5690,6.622,5691,6.622,5692,6.622,5693,6.622,5694,6.622,5695,5.81,5696,6.622,5697,6.622,5698,6.622,5699,6.622,5700,6.622,5701,6.622,5702,6.622]],["title/miscellaneous/typealiases.html",[5337,2.138,5703,5.233]],["body/miscellaneous/typealiases.html",[6,3.835,7,0.265,11,0.413,12,0.011,14,4.663,23,4.663,30,4.072,31,3.835,32,4.663,33,3.632,34,3.632,35,3.632,75,0.009,76,0.009,286,3.297,287,3.535,291,3.155,292,3.026,293,3.155,294,3.155,295,3.155,296,3.026,297,3.155,298,3.155,299,3.155,319,3.535,323,3.402,325,3.026,326,3.402,327,3.402,329,3.026,330,3.535,418,5.191,422,6.311,455,4.416,729,3.835,747,4.663,748,3.455,750,2.138,905,3.455,1479,3.835,1480,4.663,1484,3.632,1485,3.632,1487,4.663,5337,3.455,5339,6.801,5704,5.916,5705,5.916,5706,7.75,5707,6.311,5708,5.916,5709,5.916,5710,5.916]],["title/miscellaneous/variables.html",[5337,2.138,5711,4.592]],["body/miscellaneous/variables.html",[7,0.136,10,1.511,11,0.606,12,0.011,18,1.814,19,0.953,21,1.983,39,0.819,45,1.62,75,0.006,76,0.006,77,1.462,80,1.358,90,1.865,93,2.334,150,0.636,170,1.814,181,3.636,182,4.812,198,1.864,242,1.693,287,2.243,304,2.334,305,2.334,306,2.334,308,2.334,310,2.007,311,2.007,312,2.334,314,2.243,315,1.554,320,2.434,321,1.493,323,1.437,324,2.434,328,2.243,378,0.945,394,1.649,467,2.157,468,1.969,469,3.51,489,1.865,490,1.969,491,1.969,492,1.865,493,1.554,494,1.693,495,1.969,496,1.969,497,1.969,498,1.969,516,2.802,559,3.636,577,1.693,657,2.558,680,4.005,681,4.005,718,4.236,729,1.969,738,3.366,768,1.385,824,1.969,842,1.969,877,1.865,878,1.437,881,2.959,883,2.802,886,1.693,1025,1.693,1026,4.81,1027,2.665,1028,2.665,1029,2.665,1030,4.005,1031,2.665,1032,2.665,1033,2.665,1034,2.665,1035,2.665,1036,2.665,1037,2.665,1038,4.005,1039,2.665,1040,2.665,1041,2.665,1042,2.665,1043,2.665,1044,2.665,1115,2.237,1174,1.969,1241,1.865,1306,1.865,1599,2.42,1629,2.091,1764,3.636,1992,2.091,2299,2.42,2342,3.636,2409,2.665,2537,4.856,2545,4.856,2653,2.091,2799,2.665,2818,4.005,2819,4.005,2889,4.005,3344,3.636,3359,2.665,4210,2.665,4432,5.672,5337,1.774,5341,7.447,5350,2.665,5351,4.005,5355,2.665,5362,2.665,5374,2.665,5377,2.665,5378,2.665,5379,4.81,5391,2.665,5707,2.665,5711,2.665,5712,4.564,5713,3.038,5714,4.564,5715,4.564,5716,4.564,5717,4.564,5718,4.564,5719,4.564,5720,3.038,5721,4.564,5722,6.095,5723,3.038,5724,3.038,5725,4.564,5726,5.482,5727,4.564,5728,4.564,5729,4.564,5730,3.038,5731,4.564,5732,6.862,5733,4.564,5734,4.564,5735,5.482,5736,4.564,5737,4.564,5738,4.564,5739,4.564,5740,4.564,5741,4.564,5742,4.564,5743,4.564,5744,3.038,5745,4.564,5746,3.038,5747,3.038,5748,3.038,5749,3.038,5750,3.038,5751,3.038,5752,3.038,5753,3.038,5754,3.038,5755,3.038,5756,3.038,5757,3.038,5758,3.038,5759,3.038,5760,3.038,5761,3.038,5762,3.038,5763,3.038,5764,3.038,5765,3.038,5766,3.038,5767,3.038,5768,3.038,5769,6.533,5770,3.038,5771,3.038,5772,3.038,5773,3.038,5774,3.038,5775,3.038,5776,3.038,5777,3.038,5778,3.038,5779,3.038,5780,3.038,5781,3.038,5782,3.038,5783,4.564,5784,7.119,5785,4.564,5786,4.564,5787,3.038,5788,3.038,5789,3.038,5790,3.038,5791,3.038,5792,3.038,5793,3.038,5794,3.038,5795,3.038,5796,3.038,5797,3.038,5798,3.038,5799,3.038,5800,3.038,5801,3.038,5802,3.038,5803,3.038,5804,3.038,5805,3.038,5806,3.038,5807,3.038,5808,3.038,5809,3.038,5810,3.038,5811,6.862,5812,4.564,5813,3.038,5814,6.095,5815,3.038,5816,3.038,5817,3.038,5818,3.038,5819,3.038,5820,3.038]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.061,332,0.715,383,0.831,1053,1.446,2309,1.302,5056,1.535,5499,1.535]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.212,12,0.01,75,0.01,76,0.01,242,3.725,332,2.478,383,2.883,556,4.333,1053,5.013,2309,4.516,2954,4.333,3431,5.323,4045,4.601,4046,5.323,5821,4.923,5822,5.695,5823,4.923]],["title/additional-documentation/ui-components-slide-panel.html",[332,0.792,403,0.951,2309,1.443,2461,1.82,5056,1.701,5499,1.701]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,242,3.739,332,2.483,403,2.982,556,4.35,2309,4.525,2461,5.708,2954,4.35,3431,5.335,4045,4.618,4046,5.335,5821,4.941,5822,5.708,5823,4.941]],["title/additional-documentation/ui-components-dialogs.html",[332,0.888,2309,1.619,5056,1.908,5499,1.908,5824,2.432]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,242,3.753,332,2.489,556,4.366,2309,4.535,2954,4.366,3431,5.346,4045,4.636,4046,5.346,5821,4.96,5822,5.72,5823,4.96,5824,6.815]],["title/additional-documentation/helpers.html",[5056,2.52,5499,2.52,5825,3.212]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,242,3.697,556,4.301,2126,5.286,2954,4.301,3431,5.6,3464,5.821,3811,7.138,4045,5.3,4046,5.3,5695,6.756,5821,5.671,5822,5.671,5823,5.671,5825,7.138]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":1200,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.2",{"_index":977,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["0.25",{"_index":1829,"title":{},"body":{"injectables/MetadataService.html":{}}}],["0.5",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.7",{"_index":2754,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":1834,"title":{},"body":{"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{}}}],["0038838",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["00399df",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["006b52c",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["009b48d",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["00b47ed",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["00d5b5e",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["0107dc5",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["0129566",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["013e987",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["0174ddf",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["019de24",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["025a430",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["027ad79",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["02bde5d",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["02c06cb",{"_index":5312,"title":{},"body":{"changelog.html":{}}}],["02d4bfb",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["02e548c",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["02fa299",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["03062a3",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["0325a08",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["0338bd7",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["03a0491",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["045b043",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["0486e25",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["04b4812",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["04dca08",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["0581767",{"_index":5257,"title":{},"body":{"changelog.html":{}}}],["05a441e",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["05b4ddd",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["05ddceb",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["0629b20",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["063950a",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["063d395",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["0674adf",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["067bbea",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["072caca",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["07d6959",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["07de52a",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["07ec810",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["0843a41",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["0858a77",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["0885ef3",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["08b1238",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["0903cd2",{"_index":5264,"title":{},"body":{"changelog.html":{}}}],["092dc60",{"_index":5296,"title":{},"body":{"changelog.html":{}}}],["0960760",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["097fe6b",{"_index":5288,"title":{},"body":{"changelog.html":{}}}],["09ae300",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["09eba6b",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["0a9aedc",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["0b2a071",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["0b30a9f",{"_index":5223,"title":{},"body":{"changelog.html":{}}}],["0ba1f5d",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["0bde446",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["0c889a3",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["0c91659",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["0cabcad",{"_index":5298,"title":{},"body":{"changelog.html":{}}}],["0cec276",{"_index":5074,"title":{},"body":{"changelog.html":{}}}],["0d0dfcb",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["0d76c85",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["0dc096d",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["0e060af",{"_index":5250,"title":{},"body":{"changelog.html":{}}}],["0e3c35d",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["0e6195d",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["0f45127",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["0f6c72b",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["0f8326e",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["0f8e394",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)).then((entry",{"_index":891,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["1.0",{"_index":5421,"title":{},"body":{"license.html":{}}}],["1.0.1",{"_index":5329,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["1.2.4",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["10.0.1",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["10.0.2",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["10.0.3",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["10.0.4",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["10.1",{"_index":5072,"title":{},"body":{"changelog.html":{}}}],["10.1.0",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["10.2.5",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["10.2.7",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["10.3.1",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["10.3.2",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1705,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["1000}k",{"_index":1012,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["101bbd0",{"_index":5179,"title":{},"body":{"changelog.html":{}}}],["1024",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"injectables/MetadataService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["108",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["1081f8e",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["1098d6a",{"_index":5324,"title":{},"body":{"changelog.html":{}}}],["10_000",{"_index":664,"title":{},"body":{"pipes/BandPipe.html":{}}}],["10bf971",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.0.0",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["11.0.2",{"_index":5330,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["11.1.2",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["11.3.0",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["11.3.1",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["11.4.0",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["11.4.1",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["11.4.10",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["11.4.11",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["11.4.2",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["11.4.3",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["11.4.5",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["11.4.6",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["11.4.8",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["11.4.9",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["11.5.0",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["11.5.1",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["11.5.10",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["11.5.11",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["11.5.12",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["11.5.13",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["11.5.14",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["11.5.4",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["11.5.5",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["11.5.6",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["11.5.7",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["11.5.8",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["11.5.9",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["112db1a",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["11ae344",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.0",{"_index":4410,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["12.0.1",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["12.0.10",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["12.0.11",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["12.0.12",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["12.0.13",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["12.0.15",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["12.0.16",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["12.0.3",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["12.0.4",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["12.0.5",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["12.0.6",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["12.0.7",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["12.0.8",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["12.0.9",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["120476b",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["120f02a",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["122856c",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["123835c",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["125",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["128",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["128a3c3",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["12a71dd",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":1018,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["13.0.0",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["13.0.1",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["13.0.10",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["13.0.11",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["13.0.12",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["13.0.13",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["13.0.16",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["13.0.18",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["13.0.19",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["13.0.2",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["13.0.20",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["13.0.3",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["13.0.5",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["13.0.6",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["13.0.7",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["13.0.8",{"_index":4279,"title":{},"body":{"changelog.html":{}}}],["13.0.9",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["13.1.0",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["13.1.1",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["13.1.10",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["13.1.11",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["13.1.12",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["13.1.2",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["13.1.3",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["13.1.4",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["13.1.5",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["13.1.6",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["13.1.7",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["13.1.8",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["13.1.9",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["13.2",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["13.2.0",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["13.2.1",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["13.2.2",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["13.2.3",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["13.2.4",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["13.2.5",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["13.2.6",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["13.3.0",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["13.3.1",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["13.3.2",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["13.3.3",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["13.3.4",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["13.3.5",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["131",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["133059f",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["1333d05",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["135",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["1385586",{"_index":5046,"title":{},"body":{"changelog.html":{}}}],["139",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["13bf8e2",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["14.0.0",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["14.0.10",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["14.0.11",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["14.0.12",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["14.0.13",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["14.0.2",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["14.0.3",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["14.0.4",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["14.0.5",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["14.0.6",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["14.0.7",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["14.0.8",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["14.0.9",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["14.1.0",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["14.1.1",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["14.1.10",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["14.1.11",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["14.1.12",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["14.1.13",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["14.1.14",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["14.1.15",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["14.1.16",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["14.1.17",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["14.1.18",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["14.1.19",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["14.1.2",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["14.1.20",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["14.1.23",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["14.1.3",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["14.1.4",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["14.1.5",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["14.1.6",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["14.1.7",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["14.1.8",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["14.1.9",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["140",{"_index":2294,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["141",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["14148e0",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["142",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["144",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["1455d32",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["146",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["147",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["14768e6",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["14a5bd3",{"_index":5058,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["15.0.0",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["15.0.1",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["15.0.2",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["15.0.3",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["15.0.4",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["15.0.5",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["15.0.6",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["15.0.7",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["15.0.8",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["15.0.9",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["15.1.1",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["15.1.10",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["15.1.11",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["15.1.12",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["15.1.13",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["15.1.14",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["15.1.16",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["15.1.17",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["15.1.2",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["15.1.3",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["15.1.4",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["15.1.5",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["15.1.6",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["15.1.7",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["15.1.8",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["15.1.9",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":2611,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["155e1fd",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["15dded8",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1229,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["16.0.1",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["16.0.2",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["16.0.3",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["16.0.4",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["16.0.5",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["16.0.6",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["1604161",{"_index":5233,"title":{},"body":{"changelog.html":{}}}],["162acda",{"_index":5302,"title":{},"body":{"changelog.html":{}}}],["16384",{"_index":5709,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["164",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["166c79d",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["16925cf",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["16_000",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["16d8b1b",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3139,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["17.0.10",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["17.0.11",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["17.0.12",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["17.0.13",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["17.0.14",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["17.0.15",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["17.0.16",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["17.0.17",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["17.0.18",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["17.0.2",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["17.0.3",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["17.0.4",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["17.0.5",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["17.0.6",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["17.0.7",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["17.0.8",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["17.0.9",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["170",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["170ea47",{"_index":5225,"title":{},"body":{"changelog.html":{}}}],["171",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["172",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["17266a3",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["1730f16",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["1745489",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["17a1677",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["17e4083",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["17ed8a6",{"_index":5187,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["18.0.1",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["18.1.0",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["18.1.1",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["18.2.0",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["18.2.2",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["18.2.3",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["18.2.4",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["18.2.5",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["18.2.6",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["18.2.7",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["181",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["184a834",{"_index":5316,"title":{},"body":{"changelog.html":{}}}],["1857720",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["18a45bd",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["18cab80",{"_index":5248,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["19.0.1",{"_index":3552,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.0.10",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["19.0.2",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["19.0.3",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["19.0.4",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["19.0.5",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["19.0.6",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["19.0.7",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["19.0.8",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["19.0.9",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["19.1.0",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["19.1.1",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["19.2.0",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["19.2.1",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["19.2.10",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["19.2.2",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["19.2.3",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["19.2.4",{"_index":3446,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.5",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["19.2.7",{"_index":3427,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.8",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["19.2.9",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["19.2.x",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["19.3.0",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["19.4.0",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["19.4.1",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["19.4.10",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["19.4.11",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["19.4.12",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["19.4.13",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["19.4.14",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["19.4.15",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["19.4.2",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["19.4.3",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["19.4.4",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["19.4.5",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["19.4.6",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["19.4.7",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["19.4.8",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["19.4.9",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["19.5.0",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["19.5.1",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["19.5.3",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["19.5.4",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["194199c",{"_index":5244,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["1989419",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["199",{"_index":1157,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":5554,"title":{},"body":{"license.html":{}}}],["19bf065",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["1]?.['#text",{"_index":1523,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["1a30a33",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["1a33b93",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["1a65661",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["1a92061",{"_index":5083,"title":{},"body":{"changelog.html":{}}}],["1c4c67e",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["1c7fa4e",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["1c876b6",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["1c9fedf",{"_index":5231,"title":{},"body":{"changelog.html":{}}}],["1d0b823",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["1de2a3c",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["1e340e1",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["1e4fd87",{"_index":5061,"title":{},"body":{"changelog.html":{}}}],["1e660c9",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["1e96bc3",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["1ebb626",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["1ffd91e",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["2.8.1",{"_index":5336,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1024,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["20.0.0",{"_index":2957,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["20.1.0",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["20.1.1",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["20.1.2",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["20.1.3",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["20.1.4",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["20.2.1",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["20.2.10",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["20.2.11",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["20.2.12",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["20.2.13",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["20.2.14",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["20.2.15",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["20.2.16",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["20.2.17",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["20.2.18",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["20.2.19",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["20.2.2",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["20.2.20",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["20.2.21",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["20.2.23",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["20.2.24",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["20.2.25",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["20.2.26",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["20.2.27",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["20.2.28",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["20.2.29",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["20.2.3",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["20.2.30",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["20.2.31",{"_index":5683,"title":{},"body":{"properties.html":{}}}],["20.2.4",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["20.2.5",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["20.2.6",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["20.2.7",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["20.2.9",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["200",{"_index":2612,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["2000",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["20050dc",{"_index":5073,"title":{},"body":{"changelog.html":{}}}],["20110c3",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["2011e46",{"_index":5310,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["206",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["20cf16a",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["20d1b8b",{"_index":5089,"title":{},"body":{"changelog.html":{}}}],["20rem",{"_index":2477,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["2119d47",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["220",{"_index":2770,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["220c7f4",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["221781e",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["223",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["228ee85",{"_index":5195,"title":{},"body":{"changelog.html":{}}}],["22afab3",{"_index":5247,"title":{},"body":{"changelog.html":{}}}],["22da5c7",{"_index":5037,"title":{},"body":{"changelog.html":{}}}],["22ec300",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["23061dd",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["2346f13",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["235",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["2389739",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":995,"title":{},"body":{"components/EqualizerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["240",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["241",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["242",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["2427749",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["2434ec6",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["24e4c9a",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2585,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["250",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["2500235",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["250d7f9",{"_index":5208,"title":{},"body":{"changelog.html":{}}}],["251",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":1166,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":294,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["26",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["261",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["2708806",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["272",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["275e54d",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["27acba5",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["27fdc57",{"_index":5049,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["28465d6",{"_index":5181,"title":{},"body":{"changelog.html":{}}}],["28548eb",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["286",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["287",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["287138c",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["288",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["289",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["289ec3d",{"_index":5156,"title":{},"body":{"changelog.html":{}}}],["28cff25",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["292ed5a",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["29878bc",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["29f1cbe",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["29f2b37",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["2a4184c",{"_index":5024,"title":{},"body":{"changelog.html":{}}}],["2a427ed",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["2a99961",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["2ab7cc1",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["2aee517",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["2b942c4",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["2bb0e78",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["2bb5430",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["2bcfefb",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["2bdc500",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["2bfabd0",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["2c0f612",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["2ce3664",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["2d68f3b",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["2db5dc7",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["2e2cf66",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["2e5b003",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["2eb6cae",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["2f0d555",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["2f592f3",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["2f67e34",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":5335,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":5334,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":5327,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":5331,"title":{},"body":{"dependencies.html":{}}}],["3.9.17",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["3.9.19",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":2587,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["300",{"_index":1198,"title":{},"body":{"injectables/GamepadService.html":{}}}],["301",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["305aec6",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["308b3e5",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["308bd9f",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["30_000",{"_index":1423,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["30fec73",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["30fps",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["310",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["312",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["314f02a",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3233ed1",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["32570e0",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["32768",{"_index":5710,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["327cf90",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["32_768",{"_index":301,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["32c3f4d",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["32e3ad6",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["331bb8f",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["337a109",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["338",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["339af30",{"_index":5122,"title":{},"body":{"changelog.html":{}}}],["339bd87",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["339d07b",{"_index":5096,"title":{},"body":{"changelog.html":{}}}],["33bb6c8",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["33d73d9",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["34663be",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":2589,"title":{},"body":{"injectables/ThemeService.html":{}}}],["358",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["3597f8b",{"_index":5071,"title":{},"body":{"changelog.html":{}}}],["35a78e4",{"_index":5308,"title":{},"body":{"changelog.html":{}}}],["360px",{"_index":1361,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["362",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["362d9db",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["368",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["36e8709",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["372",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["3773370",{"_index":5173,"title":{},"body":{"changelog.html":{}}}],["3797092",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["37f76dc",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["37fa04d",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["381",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["389407a",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["38d27f1",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["392b41d",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["395",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["397399b",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1490,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3a9067b",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["3acc7bf",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["3ad6777",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["3bccffb",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["3ccea4c",{"_index":5041,"title":{},"body":{"changelog.html":{}}}],["3ce805f",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["3d1f63c",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["3db",{"_index":979,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["3e58c71",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["3e7b9a4",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["3e8e5d0",{"_index":5155,"title":{},"body":{"changelog.html":{}}}],["3f1a89d",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["3f2c562",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["3f449ec",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["3f668a5",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["3f73f6e",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["3fbfb97",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["3ff6d19",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":5544,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":5332,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":4118,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.1.1",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["4.4",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":2591,"title":{},"body":{"injectables/ThemeService.html":{},"overview.html":{}}}],["4000",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["401",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["402",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["4035819",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["403737f",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["4040b59",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["4096",{"_index":298,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["40cc765",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["411",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["4164d59",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["418b524",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["419",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["41e632f",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["422fc8e",{"_index":5158,"title":{},"body":{"changelog.html":{}}}],["423",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["424242",{"_index":2818,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["42a58d9",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["42f56c1",{"_index":5320,"title":{},"body":{"changelog.html":{}}}],["431",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["431a9ad",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["43463ab",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["438",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["43a40a4",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["43d9b1f",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["440hz",{"_index":713,"title":{},"body":{"interfaces/Chainable.html":{}}}],["4452ab9",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["44760bc",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["448",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["450",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["452f074",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["455",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["457",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["460",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["465",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["466",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["467",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["468",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["4695772",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["469a890",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["46c60ce",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["46e627b",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["473",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["4781958",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["47842e1",{"_index":5176,"title":{},"body":{"changelog.html":{}}}],["478c88a",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["47b6776",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["47e3527",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["483",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["49a76e8",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["49b1735",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["49d8293",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["4a42a18",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["4a4b1c4",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["4a66bde",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["4aa52ed",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["4bdbceb",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["4c16c1e",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["4c272db",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["4c8c0ad",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["4c8f851",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["4d47689",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["4d9ca69",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["4dbf4b8",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["4df45ed",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["4e27dea",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["4e72fcd",{"_index":5210,"title":{},"body":{"changelog.html":{}}}],["4e9a327",{"_index":5291,"title":{},"body":{"changelog.html":{}}}],["4eac2a7",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["4ec2e90",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["4ef0700",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["4f1794f",{"_index":5199,"title":{},"body":{"changelog.html":{}}}],["4f70846",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["4f91524",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["4feefcd",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":1154,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["5059439",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["505e77f",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["5061051",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["50b7005",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["50dbff9",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["5101ea6",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["511",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["51154fe",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":295,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":2067,"title":{},"body":{"injectables/PlayerService.html":{}}}],["51304c2",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["51a51dd",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["51dfdf7",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["51e219a",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["521e049",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["522",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["5273759",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["529",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["52990f8",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["52afb10",{"_index":5134,"title":{},"body":{"changelog.html":{}}}],["52bf10d",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["52d642b",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["5302fb4",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["532",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["5321e86",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["53749c8",{"_index":5275,"title":{},"body":{"changelog.html":{}}}],["53818e8",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["539",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["53a8631",{"_index":5268,"title":{},"body":{"changelog.html":{}}}],["540",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["540fdd8",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["541",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["5467c6f",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["547",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["549",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["549bfa1",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["550",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["556",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["55e56b8",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["55f3319",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["569161e",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["56a3899",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["572a9f8",{"_index":5277,"title":{},"body":{"changelog.html":{}}}],["5742e12",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["57f591d",{"_index":5098,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["580c58d",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["5824006",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["586ef29",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["58fb13b",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["592ac3b",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["592cb7a",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["597ee4f",{"_index":4995,"title":{},"body":{"changelog.html":{}}}],["59f1df2",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["59f4ac4",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["5a61397",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["5a7054c",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["5a92c07",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["5aecee8",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["5aed853",{"_index":5114,"title":{},"body":{"changelog.html":{}}}],["5af2ad7",{"_index":5118,"title":{},"body":{"changelog.html":{}}}],["5bab2a7",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["5c1346d",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["5cbeb5b",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["5cec62d",{"_index":5045,"title":{},"body":{"changelog.html":{}}}],["5d555b4",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["5e77b33",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["5ed4032",{"_index":5043,"title":{},"body":{"changelog.html":{}}}],["5effed4",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["5f1d097",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["5fe0756",{"_index":5294,"title":{},"body":{"changelog.html":{}}}],["5ffbd62",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["5sec.mp3",{"_index":714,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["6.3.0",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["6.3.1",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["6.4.1",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["6.5.0",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["6.5.1",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["6.5.2",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["6.5.3",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["6.5.5",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["6.5.6",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["6.5.7",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["6.5.8",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["6.5.9",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["6.6.1",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["6.6.2",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["6.6.4",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["6.6.5",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["6.6.6",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["6.6.7",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["6.7.0",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["6.7.1",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["6.7.2",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["6.7.3",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["6.7.4",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":2594,"title":{},"body":{"injectables/ThemeService.html":{}}}],["600f7e6",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["60d5b05",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["60dbedc",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["61721ca",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["61eb69b",{"_index":5035,"title":{},"body":{"changelog.html":{}}}],["620afb8",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["62c64c5",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["62cfee7",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["62f7474",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["63",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["635e855",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["63600c3",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["63f69d0",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":292,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["646c494",{"_index":5185,"title":{},"body":{"changelog.html":{}}}],["64a34dc",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["64d30e1",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["654bac2",{"_index":5207,"title":{},"body":{"changelog.html":{}}}],["6655a9c",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["667c54e",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["667f875",{"_index":5189,"title":{},"body":{"changelog.html":{}}}],["669facb",{"_index":5252,"title":{},"body":{"changelog.html":{}}}],["670b3af",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["6756668",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["6782ecd",{"_index":5297,"title":{},"body":{"changelog.html":{}}}],["678aef6",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["67a17ee",{"_index":5126,"title":{},"body":{"changelog.html":{}}}],["681d4cd",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["6841a21",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["6878f22",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["68d9939",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["68e8dc6",{"_index":5165,"title":{},"body":{"changelog.html":{}}}],["6926167",{"_index":5242,"title":{},"body":{"changelog.html":{}}}],["6966d17",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["69ed6f4",{"_index":5063,"title":{},"body":{"changelog.html":{}}}],["6a6ec18",{"_index":5100,"title":{},"body":{"changelog.html":{}}}],["6a8d3be",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["6aed158",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["6b0ec83",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["6b2d8b8",{"_index":5164,"title":{},"body":{"changelog.html":{}}}],["6b5e613",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["6b9ff38",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["6bc0773",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["6bd60c5",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["6bf609d",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["6bfb6ba",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["6c219df",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["6c27523",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["6c63788",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["6c6f88c",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["6cab435",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["6cd086c",{"_index":5048,"title":{},"body":{"changelog.html":{}}}],["6cee32d",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["6d26668",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["6d2a8fe",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["6d52ad4",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["6d67484",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["6d6f310",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["6ee2324",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["6f12a37",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["6f1cdb4",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["6f6ac17",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["6f996f4",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["6fc1434",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["6fdfa5a",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1151,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["7.0.3",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["7.0.4",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["7.0.5",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["7.0.6",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["7.1.0",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["7.1.1",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["7.8.2",{"_index":5333,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2596,"title":{},"body":{"injectables/ThemeService.html":{}}}],["707a0cb",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["70990de",{"_index":5039,"title":{},"body":{"changelog.html":{}}}],["713322f",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["71bd586",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["71e1d6c",{"_index":5148,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":2341,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["72075fe",{"_index":5279,"title":{},"body":{"changelog.html":{}}}],["722901c",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["72575f6",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["726da93",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["72be3d3",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["72dafd7",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["72fa061",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":2746,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["73050ff",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["7353f84",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["7362da7",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["73b9b59",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["73bd100",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["73ed2ca",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["7440340",{"_index":5069,"title":{},"body":{"changelog.html":{}}}],["7445539",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["7445cc4",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["7484f35",{"_index":5168,"title":{},"body":{"changelog.html":{}}}],["748a302",{"_index":5029,"title":{},"body":{"changelog.html":{}}}],["7493e98",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["74e7c83",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["7522583",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["7528cd4",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["752aa76",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["7553170",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["7560dfa",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["756dc90",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["7579ea9",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["7593825",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["75fc12c",{"_index":5314,"title":{},"body":{"changelog.html":{}}}],["764711a",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["7667c50",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["76ace70",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["77091b9",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["774ffed",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["7762874",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["77707fb",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["7785053",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["77c544b",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["78fcf7a",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["79c83aa",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["79d861d",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["79fee74",{"_index":5304,"title":{},"body":{"changelog.html":{}}}],["7a1bbe5",{"_index":5081,"title":{},"body":{"changelog.html":{}}}],["7a66d5a",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["7a6f294",{"_index":5201,"title":{},"body":{"changelog.html":{}}}],["7a838a9",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["7a8645a",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["7b38580",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["7b491de",{"_index":5104,"title":{},"body":{"changelog.html":{}}}],["7b8cdeb",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["7bebf2d",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["7c00473",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["7c5bbe5",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["7ccbc95",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["7cf10f9",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["7d3846a",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["7d9d809",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["7def043",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["7defe9b",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["7e11361",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["7e45969",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["7f1e3c1",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["7f8ad27",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["7f90220",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["7fa33e8",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["7fb56e0",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["7fbbb95",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["7fcd244",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["8.0.0",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["8.0.1",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["8.1.0",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["8.1.1",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["8.1.10",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["8.1.2",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["8.1.3",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["8.1.4",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["8.1.5",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["8.1.6",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["8.1.7",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["8.1.8",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["8.1.9",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["80",{"_index":2598,"title":{},"body":{"injectables/ThemeService.html":{}}}],["800",{"_index":5773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8000",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["800fdae",{"_index":5068,"title":{},"body":{"changelog.html":{}}}],["801cd46",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["80553e8",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["80b42ce",{"_index":5290,"title":{},"body":{"changelog.html":{}}}],["80d5e14",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["8145e20",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["8192",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["81bb449",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["822ff08",{"_index":5142,"title":{},"body":{"changelog.html":{}}}],["8264f64",{"_index":5227,"title":{},"body":{"changelog.html":{}}}],["8268a8b",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["826cbe5",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["828148a",{"_index":5306,"title":{},"body":{"changelog.html":{}}}],["8337321",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["834f706",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["8377116",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["839a546",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["8448134",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["845189d",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["84a2466",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["84ac04c",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["84e91e3",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["8515368",{"_index":5214,"title":{},"body":{"changelog.html":{}}}],["858ff56",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["8596088",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["85d2a14",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["85eb0ba",{"_index":5193,"title":{},"body":{"changelog.html":{}}}],["8626722",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["862a41d",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["864d7e1",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["866de3e",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["869dddb",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["86a18bb",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["86a63af",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["86bda79",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["86be7eb",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["870e50b",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["8738efc",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["875f9d3",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["87adc2c",{"_index":5219,"title":{},"body":{"changelog.html":{}}}],["892689d",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["8a371a0",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["8aabc76",{"_index":5146,"title":{},"body":{"changelog.html":{}}}],["8b184a4",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["8b6bfeb",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["8b9fdf5",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["8c297a1",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["8c47814",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["8c56320",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["8c75c5f",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["8c90a58",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["8c9c5c3",{"_index":5144,"title":{},"body":{"changelog.html":{}}}],["8cab1e2",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["8d072f1",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["8d3ed72",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["8d40437",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["8d47dd4",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["8d5f783",{"_index":5077,"title":{},"body":{"changelog.html":{}}}],["8d61f2e",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["8da74bb",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["8df3910",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["8dfc611",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["8e2ff5a",{"_index":5238,"title":{},"body":{"changelog.html":{}}}],["8e36da3",{"_index":5240,"title":{},"body":{"changelog.html":{}}}],["8e7ecec",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["8ebff84",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["8ec046f",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["8ee0628",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["8f60273",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["8mb",{"_index":1824,"title":{},"body":{"injectables/MetadataService.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["9.0.0",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["9.0.1",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["9.0.10",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["9.0.11",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["9.0.2",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["9.0.3",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["9.0.4",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["9.0.5",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["9.0.6",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["9.0.7",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["9.0.8",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["9.0.9",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["9.1.1",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["9.1.2",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["9.1.3",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["9.2.3",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["9.2.4",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":2600,"title":{},"body":{"injectables/ThemeService.html":{}}}],["901f502",{"_index":5116,"title":{},"body":{"changelog.html":{}}}],["908c69c",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["908f395",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["90df676",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["90e9f96",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["91d4a54",{"_index":5140,"title":{},"body":{"changelog.html":{}}}],["9280e3a",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["92d89c3",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["930dc28",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["934d323",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["939f6b8",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["93f4474",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["9458a12",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["949055a",{"_index":5196,"title":{},"body":{"changelog.html":{}}}],["94b7001",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2602,"title":{},"body":{"injectables/ThemeService.html":{}}}],["953bf76",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["95902bb",{"_index":5267,"title":{},"body":{"changelog.html":{}}}],["96/9/ec",{"_index":5550,"title":{},"body":{"license.html":{}}}],["9644dde",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["965f5d8",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["96bcdfc",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["96dbdf6",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["972b1ee",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["9767a1a",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["9767ad0",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["97ccbb6",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["97d68d0",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["97ea341",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["98",{"_index":2604,"title":{},"body":{"injectables/ThemeService.html":{}}}],["986dd30",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["98a793b",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2606,"title":{},"body":{"injectables/ThemeService.html":{}}}],["99126c0",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["9934470",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["998ad7c",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["9b0ad09",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["9b11a20",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["9bb71cc",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["9c56a21",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["9ce5e31",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["9d2ef7e",{"_index":5254,"title":{},"body":{"changelog.html":{}}}],["9d81efd",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["9dfd762",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["9e95c2d",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["9ea103a",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["9eb089c",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["9fa1a37",{"_index":5198,"title":{},"body":{"changelog.html":{}}}],["9fb4192",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["9fb859e",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["_audiocontext",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audioelement",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audiosourcenode",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{}}}],["_connectedanalyzers",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{}}}],["_eqgainnode",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{}}}],["_frequencyfilters",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{}}}],["_gainnode",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{}}}],["_hasended",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{}}}],["_internalanalyzer",{"_index":2822,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1316,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.localecompare(b",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a00ccd1",{"_index":5175,"title":{},"body":{"changelog.html":{}}}],["a04aa39",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["a0517fe",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["a0aa269",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["a0c15a4",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["a0e7ce7",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["a10893b",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["a11eb42",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["a12f9c3",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["a19a09f",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["a1a074f",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["a1da736",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["a280f97",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["a2a4811",{"_index":5229,"title":{},"body":{"changelog.html":{}}}],["a2b1db1",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["a358906",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["a3ae7df",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["a409033",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["a40c9e8",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["a457b9c",{"_index":5259,"title":{},"body":{"changelog.html":{}}}],["a4b6dab",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["a4de6d4",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["a552ea9",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["a555517",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["a5849e4",{"_index":5284,"title":{},"body":{"changelog.html":{}}}],["a6386d2",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["a7cf166",{"_index":5057,"title":{},"body":{"changelog.html":{}}}],["a7f82ab",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["a8073a9",{"_index":5216,"title":{},"body":{"changelog.html":{}}}],["a84cb97",{"_index":5028,"title":{},"body":{"changelog.html":{}}}],["a867afe",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["a8bb04b",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["a90639a",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["a948ad5",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["a9a8e68",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["a9a9c0b",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ab311db",{"_index":5318,"title":{},"body":{"changelog.html":{}}}],["ab5a0f8",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["ab89f63",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["ab98677",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["abandoned",{"_index":5647,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":5580,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2387,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["abc0b07",{"_index":5220,"title":{},"body":{"changelog.html":{}}}],["abccf03",{"_index":5120,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":5774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":5659,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2364,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["abstacted",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":1169,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1272,"title":{},"body":{"injectables/GamepadService.html":{}}}],["ac02523",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["ac62dde",{"_index":5161,"title":{},"body":{"changelog.html":{}}}],["accent",{"_index":1153,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":2524,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":2525,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accepts",{"_index":914,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":1134,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["accessors",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":5621,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":5662,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1236,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":5678,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"license.html":{}}}],["action(details",{"_index":1667,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["actions/cache",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["actions/checkout",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["actions/setup",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["actions/upload",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["activated",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["activatewakelock",{"_index":2931,"title":{},"body":{"injectables/WakelockService.html":{}}}],["active",{"_index":2032,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeaxescaches",{"_index":1203,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad57b9c",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["ad6497d",{"_index":5153,"title":{},"body":{"changelog.html":{}}}],["ad7e0f1",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["ada5e83",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["ada6807",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["adapt",{"_index":5520,"title":{},"body":{"license.html":{}}}],["add",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["addalbumtoplaylist",{"_index":1553,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1554,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["added",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1208,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1211,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1685,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1734,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1689,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":1929,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":2087,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":1944,"title":{},"body":{"injectables/PlayerService.html":{}}}],["adding",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["addition",{"_index":5622,"title":{},"body":{"license.html":{}}}],["additional",{"_index":5499,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["adds",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["addtrackstoplaylist",{"_index":1555,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":272,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1556,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":1946,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":270,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":3066,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["advertising",{"_index":5594,"title":{},"body":{"license.html":{}}}],["ae202ad",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["ae93b7a",{"_index":5282,"title":{},"body":{"changelog.html":{}}}],["aefd739",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["af0ef42",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["af2926f",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["af8a6b4",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["af96dfb",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["aff4dea",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["affected",{"_index":5623,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":5504,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":5582,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5637,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":2053,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":2051,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":1051,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["again",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":5538,"title":{},"body":{"license.html":{}}}],["agents",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["aiff",{"_index":1030,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1590,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1591,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["albumtracks",{"_index":267,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["aliases",{"_index":5704,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1158,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allowed_extensions",{"_index":1038,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":883,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":910,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1543,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":2400,"title":{},"body":{"components/ShellComponent.html":{}}}],["allowedcommonjsdeps",{"_index":5206,"title":{},"body":{"changelog.html":{}}}],["allowedtypes",{"_index":1057,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":312,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["alpha.40",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["alphabetically",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["amended",{"_index":5560,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["analyserconfig",{"_index":285,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":320,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analysers",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["analyservalue",{"_index":2866,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyze",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["analyzer",{"_index":2915,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["and/or",{"_index":5460,"title":{},"body":{"license.html":{}}}],["android",{"_index":5190,"title":{},"body":{"changelog.html":{}}}],["angular",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["angular.json",{"_index":5204,"title":{},"body":{"changelog.html":{}}}],["angular/cdk",{"_index":4648,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2426,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":1297,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":757,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["angular/compiler",{"_index":5325,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":1997,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4653,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":113,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1888,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2622,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2760,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1300,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2279,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["angular/material/list",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/material/progress",{"_index":2277,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2761,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2428,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1885,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":952,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":1917,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":1916,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":2430,"title":{},"body":{"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2644,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angularmaterial",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["angulartitleservice",{"_index":2632,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2824,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["animations",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["any).getasfilesystemhandle().then((handle",{"_index":1117,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["api",{"_index":917,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["api_key",{"_index":1505,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":781,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["apis",{"_index":5393,"title":{},"body":{"index.html":{}}}],["app",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":331,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":5712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["appenonly",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["applicable",{"_index":5567,"title":{},"body":{"license.html":{}}}],["application",{"_index":2497,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["applicationconfig",{"_index":5750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":986,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["apply",{"_index":1001,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["apps",{"_index":5401,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":5713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":5735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":5744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":5705,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../default",{"_index":5725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":5723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":5724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":5351,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":5356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":5339,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":5363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../idexed",{"_index":5720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../lastfm",{"_index":5708,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":5369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":5346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":5348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":5349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":5359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":5732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":5361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":5707,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../settings.po.ts",{"_index":5730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":5727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":5706,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":5341,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":5373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":5803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":5795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":5791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":5749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":5810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/idexed",{"_index":5779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:135",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:142",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:150",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:157",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:163",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:171",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:177",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:185",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:190",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:198",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:202",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:212",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:216",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:224",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:24",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:25",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:42",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:44",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":669,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":655,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:10",{"_index":662,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":930,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15",{"_index":944,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":947,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17",{"_index":946,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19",{"_index":939,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30",{"_index":941,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35",{"_index":942,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":877,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:109",{"_index":1582,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:161",{"_index":1570,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:167",{"_index":1569,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:172",{"_index":1571,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:178",{"_index":1568,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:186",{"_index":1565,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:195",{"_index":1564,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:212",{"_index":1567,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:221",{"_index":1566,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:238",{"_index":1573,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:242",{"_index":1572,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:246",{"_index":1574,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:50",{"_index":1576,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:51",{"_index":1577,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:53",{"_index":1578,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:57",{"_index":1575,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:70",{"_index":1580,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:71",{"_index":1579,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:72",{"_index":1581,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:74",{"_index":1584,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:82",{"_index":1583,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":750,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player",{"_index":2132,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":1906,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:25",{"_index":1913,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:26",{"_index":1912,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":1923,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:137",{"_index":1949,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:142",{"_index":1947,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:148",{"_index":1958,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:162",{"_index":1945,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:168",{"_index":1969,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:174",{"_index":1967,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:178",{"_index":1953,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:190",{"_index":1951,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:206",{"_index":1970,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:215",{"_index":1950,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:236",{"_index":1956,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:25",{"_index":1978,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:254",{"_index":1955,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:263",{"_index":1964,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":1988,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:281",{"_index":1965,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":1977,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:298",{"_index":1960,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:302",{"_index":1963,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":1987,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:316",{"_index":1971,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:32",{"_index":1990,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:335",{"_index":1972,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":1976,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:41",{"_index":1985,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:45",{"_index":1983,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:51",{"_index":1943,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":729,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2248,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:142",{"_index":2261,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:150",{"_index":2263,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:156",{"_index":2268,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:161",{"_index":2269,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:165",{"_index":2266,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:40",{"_index":2273,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:41",{"_index":2270,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:44",{"_index":2272,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:46",{"_index":2275,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:48",{"_index":2259,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2624,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:10",{"_index":2625,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2678,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2710,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2704,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2708,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2706,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2714,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2712,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2737,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2722,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2750,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2757,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2744,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2755,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2747,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2720,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2724,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2739,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2733,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2741,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2731,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2743,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2700,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2752,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2736,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2729,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2749,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2718,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2716,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2702,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2799,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105",{"_index":2807,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126",{"_index":2809,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2813,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2810,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188",{"_index":2805,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2814,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2811,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23",{"_index":2804,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33",{"_index":2803,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93",{"_index":2816,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2919,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2924,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2922,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":286,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":5378,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":5388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1175,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1194,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1187,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1191,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1184,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":1195,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1182,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1368,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":5389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1292,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100",{"_index":1406,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104",{"_index":1407,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26",{"_index":1410,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30",{"_index":1413,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32",{"_index":1412,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34",{"_index":1411,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36",{"_index":1409,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38",{"_index":1403,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48",{"_index":1405,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85",{"_index":1408,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96",{"_index":1404,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1601,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1607,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1618,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1622,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1621,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1623,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1630,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2627,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2631,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2630,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":5390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2929,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2934,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2935,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2933,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1863,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2388,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2519,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2616,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2393,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:42",{"_index":2423,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:43",{"_index":2418,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:44",{"_index":2420,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:45",{"_index":2419,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:47",{"_index":2414,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:56",{"_index":2417,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:58",{"_index":2422,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:60",{"_index":2408,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:65",{"_index":2413,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:69",{"_index":2411,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":5790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":2523,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:16",{"_index":2546,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:18",{"_index":2538,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:20",{"_index":2544,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:22",{"_index":2547,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:23",{"_index":2539,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:25",{"_index":2532,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:31",{"_index":2536,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:37",{"_index":2534,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":725,"title":{},"body":{"interfaces/Color.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2636,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2639,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2641,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2640,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":5788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":5789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["april",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["arguments_",{"_index":661,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["arial",{"_index":1019,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["arising",{"_index":5549,"title":{},"body":{"license.html":{}}}],["array",{"_index":744,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["array.from(droppedfiles",{"_index":1140,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["array.from(event.datatransfer.items",{"_index":1116,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["arrays",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["art",{"_index":1771,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["artifact",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["artist",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist/album",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["artist:${luceneescapequery.escape(artist",{"_index":796,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["artwork",{"_index":2062,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2637,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":5639,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1732,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":5583,"title":{},"body":{"license.html":{}}}],["associating",{"_index":5503,"title":{},"body":{"license.html":{}}}],["async",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1692,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":5427,"title":{},"body":{"license.html":{}}}],["audio",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["audio.service",{"_index":951,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":1034,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":1027,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":1036,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":1028,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":1031,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":1037,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":1033,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":1032,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":1035,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":1029,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{}}}],["audiocontext.creategain",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{}}}],["audioelement.autoplay",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.controls",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.id",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.loop",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.preload",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.style.display",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.volume",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioservice",{"_index":416,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["audioservice.isplaying",{"_index":2240,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiosource.connect(eqgain",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{}}}],["audit",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["auf",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":5687,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":5527,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":5459,"title":{},"body":{"license.html":{}}}],["auto",{"_index":553,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["autofix",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["autofixes",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["autoincrement",{"_index":5785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":5447,"title":{},"body":{"license.html":{}}}],["autoscroll",{"_index":2298,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2901,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2893,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2902,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avatar",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1441,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2336,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["axis.valueof",{"_index":1279,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1284,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1283,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1176,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1282,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1285,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1185,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b04ce8b",{"_index":5262,"title":{},"body":{"changelog.html":{}}}],["b0d0fe4",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["b20fd36",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["b241b46",{"_index":5217,"title":{},"body":{"changelog.html":{}}}],["b2466b6",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["b286be9",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["b2b5088",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["b2dcbb8",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["b2ed530",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["b3905a0",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["b416bff",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["b4d909a",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["b599685",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["b5dfb18",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["b5f68a1",{"_index":5183,"title":{},"body":{"changelog.html":{}}}],["b63676f",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["b65204b",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["b6729e6",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["b6a809a",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["b6bd950",{"_index":5211,"title":{},"body":{"changelog.html":{}}}],["b708169",{"_index":5080,"title":{},"body":{"changelog.html":{}}}],["b7303ed",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["b73ce66",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["b7bb801",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["b7be438",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["b7e8f76",{"_index":5132,"title":{},"body":{"changelog.html":{}}}],["b80e2ea",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["b820bf4",{"_index":5106,"title":{},"body":{"changelog.html":{}}}],["b8a2ac7",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["b8ad144",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["b925747",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["b9445d4",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["b99bf0c",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ba13cfe",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["ba2a28a",{"_index":5130,"title":{},"body":{"changelog.html":{}}}],["ba634aa",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["babdb9f",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["background",{"_index":1164,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["backgroundcolor",{"_index":846,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["badges",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["band",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"index.html":{}}}],["bandfrequency",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":648,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains[bandfrequency",{"_index":650,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandpipe",{"_index":654,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{}}}],["bands",{"_index":935,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["bar",{"_index":2439,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["barcount",{"_index":303,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["bark",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["barkscalebandenergy",{"_index":5714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":326,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2683,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":325,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":5715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":712,"title":{},"body":{"interfaces/Chainable.html":{}}}],["based",{"_index":5566,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{}}}],["basesubscribingclass",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["basevisualizeroptions",{"_index":322,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":5431,"title":{},"body":{"license.html":{}}}],["bb34f11",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["bb4a1a8",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["bb4ded8",{"_index":5052,"title":{},"body":{"changelog.html":{}}}],["bb4e0ce",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["bb8466d",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["bba9cb0",{"_index":5128,"title":{},"body":{"changelog.html":{}}}],["bbda480",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["bc4e4dc",{"_index":5094,"title":{},"body":{"changelog.html":{}}}],["bcbcbc",{"_index":2819,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["bd0ddc3",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["bd67275",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["bda90a4",{"_index":5031,"title":{},"body":{"changelog.html":{}}}],["be025cd",{"_index":5222,"title":{},"body":{"changelog.html":{}}}],["be57fa9",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["be7f8fc",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["be90110",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["bef3e3e",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":2328,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["below",{"_index":5452,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":5596,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":2019,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1254,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["better",{"_index":2888,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["bf7b3a9",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["bfccd74",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["bfd28ec",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["bfd4685",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["bffc736",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["bigger",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["biquadfilternode",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{}}}],["bitrate",{"_index":671,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"changelog.html":{}}}],["bitrate.pipe",{"_index":856,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":668,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1808,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1767,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1786,"title":{},"body":{"injectables/MetadataService.html":{}}}],["bold",{"_index":1017,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2493,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["bootstrap",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["border",{"_index":1150,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2285,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":1148,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["branch",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":2115,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2424,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2425,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2446,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2445,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2444,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2447,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browserlist",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["btrack",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2885,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["buffer.buffer",{"_index":2908,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":324,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2890,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2887,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2884,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bugs",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3518,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["buildapiurl(method",{"_index":1499,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["builds",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1252,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["button.pressed",{"_index":1265,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1267,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1177,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1270,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1275,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1188,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2382,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2464,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":5667,"title":{},"body":{"license.html":{}}}],["c.islight",{"_index":2615,"title":{},"body":{"injectables/ThemeService.html":{}}}],["c042ae8",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["c08196a",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["c0c9413",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["c0d5ae4",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["c20efb2",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["c2c0b8f",{"_index":5138,"title":{},"body":{"changelog.html":{}}}],["c3062ed",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["c31aaa6",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["c3208e7",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["c339811",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["c35bc38",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["c363f4e",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["c398655",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["c3bb2d1",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["c3d7490",{"_index":5112,"title":{},"body":{"changelog.html":{}}}],["c4668f1",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["c51af5f",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["c550911",{"_index":5054,"title":{},"body":{"changelog.html":{}}}],["c64cd79",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["c6dff5e",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["c73a2ce",{"_index":5033,"title":{},"body":{"changelog.html":{}}}],["c78b2bf",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["c82e02b",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["c86decf",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["c9dcf09",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["ca80a43",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["ca87d69",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["cace929",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":1269,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1277,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1271,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1276,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cacheable",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["calculate",{"_index":2325,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["calculating",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1293,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["called",{"_index":1627,"title":{},"body":{"injectables/LoaderService.html":{}}}],["cancel",{"_index":2377,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2911,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":5605,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":314,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["canvas.getcontext('2d",{"_index":964,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.height",{"_index":968,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.width",{"_index":966,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvasgradient",{"_index":5747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":5716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasref",{"_index":936,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvaswidth",{"_index":5717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2797,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":306,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":304,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":5718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":5793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2113,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":5761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1468,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":5584,"title":{},"body":{"license.html":{}}}],["cb01a92",{"_index":5226,"title":{},"body":{"changelog.html":{}}}],["cb19d50",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["cb797bc",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["cbab637",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["cbc6e41",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["cbef1c8",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["cc0",{"_index":5420,"title":{},"body":{"license.html":{}}}],["cc5aab7",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["ccbf388",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["cd2a934",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["cd5831f",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["cd620b6",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["cdb5380",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["cdf04e9",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":116,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["ce588f9",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["ce621ee",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["cea2824",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["cefa1f1",{"_index":5321,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":1160,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":5461,"title":{},"body":{"license.html":{}}}],["cf00688",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["cf13446",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["cf270fe",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["chain",{"_index":817,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["chainable",{"_index":675,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2302,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changed",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["changedarkmode",{"_index":2618,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2619,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changelog",{"_index":2947,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":954,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changing",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":913,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1262,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1201,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":715,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlaylistComponent.html":{}}}],["child(${link",{"_index":5806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chore",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["chore(config",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["chromaprint",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":5397,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":1839,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize",{"_index":1844,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize).arraybuffer",{"_index":1821,"title":{},"body":{"injectables/MetadataService.html":{}}}],["ci",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":327,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":5474,"title":{},"body":{"license.html":{}}}],["class",{"_index":138,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"overview.html":{}}}],["class.closed",{"_index":2474,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2475,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1167,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{}}}],["clear",{"_index":969,"title":{},"body":{"components/EqualizerComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":5669,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1290,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1242,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1869,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2520,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1452,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["cli",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":3077,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["close",{"_index":1381,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2465,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2675,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2466,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closing",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["clr",{"_index":2564,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.hex",{"_index":2568,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.name",{"_index":2567,"title":{},"body":{"injectables/ThemeService.html":{}}}],["code",{"_index":2498,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":724,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"index.html":{}}}],["color.getbrightness",{"_index":2614,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.tohexstring(false",{"_index":2613,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":728,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2874,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2872,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2873,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorful",{"_index":5684,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":1782,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["colors.ts",{"_index":5726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":2502,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["command",{"_index":701,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":5486,"title":{},"body":{"license.html":{}}}],["committen",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":5151,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":2136,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["commons",{"_index":5418,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":5522,"title":{},"body":{"license.html":{}}}],["compare",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compatibility",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["compensation",{"_index":5501,"title":{},"body":{"license.html":{}}}],["competition",{"_index":5540,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2304,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["compodoc",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["component_template",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":332,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2645,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2375,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":1047,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{}}}],["components/slide",{"_index":2457,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{}}}],["compressed",{"_index":5053,"title":{},"body":{"changelog.html":{}}}],["computecolors(hex",{"_index":2579,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":5653,"title":{},"body":{"license.html":{}}}],["confer",{"_index":5448,"title":{},"body":{"license.html":{}}}],["config",{"_index":2673,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["config).afterclosed",{"_index":2677,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config.ts",{"_index":5721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{}}}],["connected",{"_index":1220,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1213,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connections",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["consents",{"_index":5673,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":5500,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["console.error('error",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["console.error('file",{"_index":279,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1465,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{}}}],["console.log('button",{"_index":1231,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":2027,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1237,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":901,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1235,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1248,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1244,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2656,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2652,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2663,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1239,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1218,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2834,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1221,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1747,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1749,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1251,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1259,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":792,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('file",{"_index":1132,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["console.warn('loaderservice",{"_index":1626,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('no",{"_index":827,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2943,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1326,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1662,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["contains",{"_index":1840,"title":{},"body":{"injectables/MetadataService.html":{}}}],["contemplated",{"_index":5611,"title":{},"body":{"license.html":{}}}],["content",{"_index":1162,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["contents",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":5641,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":5573,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":5487,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":5467,"title":{},"body":{"license.html":{}}}],["control",{"_index":2509,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["controls",{"_index":5404,"title":{},"body":{"index.html":{}}}],["converter",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["converttobarkscale",{"_index":5340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":5593,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1103,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":5450,"title":{},"body":{"license.html":{}}}],["core",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{}}}],["corporation",{"_index":5423,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2853,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["corresponding",{"_index":5565,"title":{},"body":{"license.html":{}}}],["council",{"_index":5553,"title":{},"body":{"license.html":{}}}],["count",{"_index":773,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["counts",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["cover",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cover_api_url",{"_index":783,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverart",{"_index":1900,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["coverartimage",{"_index":749,"title":{"interfaces/CoverArtImage.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverartresponse",{"_index":776,"title":{"interfaces/CoverArtResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":847,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":828,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":733,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":742,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":1974,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":1975,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":808,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":812,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.length",{"_index":814,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images?.length",{"_index":809,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images[0",{"_index":815,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdisplay",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["coverdisplaycomponent",{"_index":377,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":811,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.image",{"_index":822,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.large",{"_index":820,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":821,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["covers",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1775,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.original",{"_index":1783,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1234,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1230,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1686,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1693,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1687,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1696,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":5417,"title":{},"body":{"license.html":{}}}],["creator",{"_index":5454,"title":{},"body":{"license.html":{}}}],["crossing",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["css",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":963,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.beginpath",{"_index":1008,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.clearrect(0",{"_index":970,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.fillstyle",{"_index":1014,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(`gain",{"_index":1022,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(label",{"_index":1013,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.font",{"_index":1016,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.linewidth",{"_index":976,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.moveto(freqpoints[0].x",{"_index":1009,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.strokestyle",{"_index":974,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.textalign",{"_index":1020,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["cultural",{"_index":5468,"title":{},"body":{"license.html":{}}}],["culture",{"_index":5491,"title":{},"body":{"license.html":{}}}],["current",{"_index":2306,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"license.html":{}}}],["currentalbum",{"_index":266,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentalbum.name",{"_index":268,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentanalyser",{"_index":2849,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2843,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2847,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":889,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2329,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2078,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":1924,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2841,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2845,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":1925,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":2097,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":859,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack.metadata?.hash",{"_index":2319,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":862,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":864,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":863,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":871,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":870,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":869,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":867,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":872,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":861,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":865,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["curve",{"_index":985,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["custom",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":708,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":5797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#load_files_menu",{"_index":5798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":5808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":5801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":5802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":5799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":5809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":5792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":5796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":5805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":703,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.wait(300",{"_index":706,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"changelog.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":720,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":716,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":702,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":721,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":5676,"title":{},"body":{"license.html":{}}}],["d0b8d34",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["d0cd94f",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["d1b4f51",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["d200e57",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["d254989",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["d2765b8",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["d29b113",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["d2e1df8",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["d2f46f8",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["d3",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["d38c534",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["d3bca3a",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["d489b64",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["d4abfdc",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["d505863",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["d50fcd7",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["d516e97",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["d562368",{"_index":5026,"title":{},"body":{"changelog.html":{}}}],["d597302",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["d5cd7ea",{"_index":5166,"title":{},"body":{"changelog.html":{}}}],["d612735",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["d6210df",{"_index":5102,"title":{},"body":{"changelog.html":{}}}],["d629a20",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["d641392",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["d64a3c3",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["d690072",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["d78443f",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["d7b3ea2",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["d895f0f",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["d8a2bf9",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["d8bf0e7",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["d933c1e",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["d954540",{"_index":5266,"title":{},"body":{"changelog.html":{}}}],["d9677d0",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["da978b1",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":5439,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2577,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{}}}],["dark)').matches",{"_index":2543,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":726,"title":{},"body":{"interfaces/Color.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":2526,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":834,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":833,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2670,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1152,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["data.album.image",{"_index":1510,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2386,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2385,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":801,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["database",{"_index":3013,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["databaseconfig",{"_index":5719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":5556,"title":{},"body":{"license.html":{}}}],["date",{"_index":770,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"license.html":{}}}],["dateien",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["dates",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["db",{"_index":93,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["db2122c",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["db48fe2",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["dbb788d",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["dbc354f",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["dbconfig",{"_index":5780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":273,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":277,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":275,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":274,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dc41223",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["dc45fe1",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["dc55360",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["dd93cb1",{"_index":5300,"title":{},"body":{"changelog.html":{}}}],["ddab2f3",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["dddddd",{"_index":975,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["de5bda9",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["de61df5",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["december",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["declare",{"_index":698,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorator",{"_index":5213,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":2490,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":2144,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["decreasevolume(value",{"_index":2152,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["deemed",{"_index":5631,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1199,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1197,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1311,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["defects",{"_index":5661,"title":{},"body":{"license.html":{}}}],["defined",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1400,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2308,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dep",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":2840,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["depicted",{"_index":5535,"title":{},"body":{"license.html":{}}}],["deploy",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":3359,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1178,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1183,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1179,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1186,"title":{},"body":{"injectables/GamepadService.html":{}}}],["derive",{"_index":743,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["description",{"_index":1294,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"changelog.html":{},"properties.html":{}}}],["deselect",{"_index":2081,"title":{},"body":{"injectables/PlayerService.html":{}}}],["desktop",{"_index":5408,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":2001,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1476,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":1991,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["details",{"_index":1640,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":2109,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":2108,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2303,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["determine",{"_index":2327,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":5598,"title":{},"body":{"license.html":{}}}],["dev",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["devcontainer.json",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["dfa400c",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":1309,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1304,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1376,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1375,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1369,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2379,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2380,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1385,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1384,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1387,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2378,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1383,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2376,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1315,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1359,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1365,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":5824,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["diasble",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["didn't",{"_index":928,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1320,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dir",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":373,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":916,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":2244,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["directoryhandles",{"_index":5787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirhandle",{"_index":3042,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["dirhandle.values",{"_index":907,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":876,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":900,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":2127,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["disableclose",{"_index":2674,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabled",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["disabletooltipinteractivity",{"_index":5775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":5642,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":5437,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2913,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["disconnectallanalyzers",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnected",{"_index":1240,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1238,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":5665,"title":{},"body":{"license.html":{}}}],["display",{"_index":842,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":1918,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":844,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":845,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":841,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":855,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":854,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":852,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":670,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":672,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":840,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayed",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["displayfunction",{"_index":937,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":940,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1341,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":5608,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":5546,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2326,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":5509,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":5426,"title":{},"body":{"license.html":{}}}],["document",{"_index":1296,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":557,"title":{},"body":{"injectables/AudioService.html":{}}}],["document.body.append(this.fileinput",{"_index":1545,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1537,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.setproperty",{"_index":2565,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2661,"title":{},"body":{"injectables/UpdateService.html":{}}}],["document.queryselector('.cdk",{"_index":2360,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["documented",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":317,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["dotenv",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["double",{"_index":912,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["doubleclick",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["download",{"_index":1899,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2854,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drag",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["dragend",{"_index":1095,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":1082,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":1087,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":1079,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":1063,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":1092,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":1081,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":1090,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":1080,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":971,"title":{},"body":{"components/EqualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":5342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":5343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":5344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawequalizerresponse",{"_index":938,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["drawosc",{"_index":5345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":383,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":1062,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":1083,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dropped",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["du",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["dual",{"_index":719,"title":{},"body":{"interfaces/Chainable.html":{}}}],["dummy",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["duplicates",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["duration",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":1926,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2671,"title":{},"body":{"injectables/UpdateService.html":{}}}],["during",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["duty",{"_index":5680,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":5326,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1335,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2512,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1337,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1338,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e102482",{"_index":5111,"title":{},"body":{"changelog.html":{}}}],["e11e3bd",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["e218808",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["e252172",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["e2a0794",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["e2e1eb4",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["e336db1",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["e34b732",{"_index":5272,"title":{},"body":{"changelog.html":{}}}],["e36192c",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["e42b61f",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["e486f52",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["e4b565b",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["e4d8e7c",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["e4ec6c1",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["e5de213",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["e615145",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["e6660e2",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["e6d7fd2",{"_index":5136,"title":{},"body":{"changelog.html":{}}}],["e6fc6eb",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["e7032e1",{"_index":5273,"title":{},"body":{"changelog.html":{}}}],["e727ac0",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["e7aa58d",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["e7c9ada",{"_index":5087,"title":{},"body":{"changelog.html":{}}}],["e831ba8",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["e844d5d",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["e933c61",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["e96ef56",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["e992cb4",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["e99d4f2",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["ea0dd16",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["ea1fc76",{"_index":5092,"title":{},"body":{"changelog.html":{}}}],["ea63800",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["ea688e0",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["ea932ef",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["eaa27a6",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["eab1d35",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["eac8dd6",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":997,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["eaeb47a",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["eaf46cf",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["eaf70a8",{"_index":5255,"title":{},"body":{"changelog.html":{}}}],["early",{"_index":1129,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["eb5338b",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["ebab8da",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["ec067ee",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["ec1f94a",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["eccaa4a",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["ecf45e6",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["ed57248",{"_index":5150,"title":{},"body":{"changelog.html":{}}}],["ee83304",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["ee8b31b",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["ef11066",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["ef22e4a",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["ef650c5",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["efc9aad",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["eff95d0",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":948,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":5632,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":5495,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1255,"title":{},"body":{"injectables/GamepadService.html":{}}}],["electron",{"_index":5246,"title":{},"body":{"changelog.html":{}}}],["elects",{"_index":5507,"title":{},"body":{"license.html":{}}}],["element",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":949,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{}}}],["elementscrolled",{"_index":2288,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2827,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2830,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embedded",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["embeddedpicture",{"_index":741,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["emit",{"_index":1122,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["empty",{"_index":1396,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2282,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2299,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1498,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1497,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":711,"title":{},"body":{"interfaces/Chainable.html":{}}}],["end",{"_index":1004,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["endchunk",{"_index":1842,"title":{},"body":{"injectables/MetadataService.html":{}}}],["endings",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["enhance",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["enjoyment",{"_index":5610,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2898,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2031,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":765,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(coverimage.thumbnails.large",{"_index":826,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails['500",{"_index":819,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(largeimage",{"_index":1525,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(smallimage",{"_index":1524,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(url",{"_index":5384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entfernt",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["entire",{"_index":1815,"title":{},"body":{"injectables/MetadataService.html":{}}}],["entries",{"_index":1597,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries[0].contentrect",{"_index":2864,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":892,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["entry.getfile",{"_index":909,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":908,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":5338,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":5722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":5756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["eqgain",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.connect(eqinput",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.gain.value",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqinput",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput.connect(gain",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{}}}],["equalizer",{"_index":931,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":933,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":934,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":380,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["equitable",{"_index":5607,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":5564,"title":{},"body":{"license.html":{}}}],["eqvalues[freq",{"_index":1003,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands.at",{"_index":1006,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands[0",{"_index":994,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["error",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["error('metadata",{"_index":1438,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1475,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1461,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1470,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2944,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1464,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":5664,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1804,"title":{},"body":{"injectables/MetadataService.html":{}}}],["erweitert",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["es",{"_index":1397,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"changelog.html":{}}}],["esbuild",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["escape",{"_index":760,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["eslint",{"_index":2126,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"additional-documentation/helpers.html":{}}}],["eslint/utils",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["eslintrc",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":5281,"title":{},"body":{"changelog.html":{}}}],["establish",{"_index":2839,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["etag",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["european",{"_index":5551,"title":{},"body":{"license.html":{}}}],["event",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.checked",{"_index":1891,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.clientx}px",{"_index":2366,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.clienty}px",{"_index":2368,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.currentversion.hash",{"_index":2657,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1458,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2891,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2892,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":1102,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer.items[0",{"_index":1112,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":1101,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.items",{"_index":1110,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2665,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1219,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2658,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":1099,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.stoppropagation",{"_index":1100,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2650,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2654,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventcoalescing",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["eventmanager",{"_index":1301,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusions",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["exclusive",{"_index":5449,"title":{},"body":{"license.html":{}}}],["execute",{"_index":5823,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["executor",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["exercise",{"_index":5630,"title":{},"body":{"license.html":{}}}],["existing",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{},"license.html":{}}}],["exists",{"_index":2916,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["exit",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["expect",{"_index":2023,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":5498,"title":{},"body":{"license.html":{}}}],["expected",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":5690,"title":{},"body":{"todo.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":5612,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2511,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":5274,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["extent",{"_index":5505,"title":{},"body":{"license.html":{}}}],["extract",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["extractcolorswithnodevibrant",{"_index":5347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.original",{"_index":1784,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1788,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1848,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1509,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extracting",{"_index":1862,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extraction",{"_index":1447,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":5400,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1418,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1420,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extralarge')?.['#text",{"_index":1520,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["f038069",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["f0442a7",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["f06b116",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["f076ced",{"_index":5202,"title":{},"body":{"changelog.html":{}}}],["f0ae911",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["f0f7618",{"_index":5270,"title":{},"body":{"changelog.html":{}}}],["f12cad8",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["f154aed",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["f1580e8",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["f18fa1f",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["f1b02b7",{"_index":5293,"title":{},"body":{"changelog.html":{}}}],["f1cad4d",{"_index":5050,"title":{},"body":{"changelog.html":{}}}],["f1f709b",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["f201082",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["f209ddb",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["f24dcc7",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["f278040",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["f2cfbcc",{"_index":5192,"title":{},"body":{"changelog.html":{}}}],["f306ca1",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["f31886e",{"_index":5085,"title":{},"body":{"changelog.html":{}}}],["f3351c2",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["f34b7cf",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["f36895a",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["f37d715",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["f386a36",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["f3a09c7",{"_index":5078,"title":{},"body":{"changelog.html":{}}}],["f3a3520",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["f3f4ae7",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["f3f93f6",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["f401a49",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["f4324a4",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["f44b305",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["f4928f5",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["f4f50ef",{"_index":5093,"title":{},"body":{"changelog.html":{}}}],["f52095f",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["f54702d",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["f591692",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["f5c6154",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["f5ee0e6",{"_index":5177,"title":{},"body":{"changelog.html":{}}}],["f69d368",{"_index":5170,"title":{},"body":{"changelog.html":{}}}],["f78467f",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["f7913c1",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["f8b7451",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["f8cbc65",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["f908dd2",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["f954f07",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["f9c114e",{"_index":5162,"title":{},"body":{"changelog.html":{}}}],["f9c93ce",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["faec05d",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["failed",{"_index":1135,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fall",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["fallback",{"_index":816,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["fallback_accent_color",{"_index":2537,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":2545,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2798,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["falling",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2335,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["fb05c12",{"_index":5124,"title":{},"body":{"changelog.html":{}}}],["fc633d2",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["fc998b4",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["fd18536",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["fd45c70",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["fdad632",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["fe15d24",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["fe4ebfa",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["fear",{"_index":5472,"title":{},"body":{"license.html":{}}}],["feat",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5394,"title":{},"body":{"index.html":{}}}],["february",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["fee270f",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["fee5161",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["fefaba0",{"_index":5286,"title":{},"body":{"changelog.html":{}}}],["fetchalbuminfo(artist",{"_index":1495,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":805,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ff39494",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["ff778a5",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["ff7cdad",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["ffa9bb5",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["ffc8723",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["ffe5da9",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["ffnet",{"_index":1319,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2794,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2684,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":287,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2280,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.size",{"_index":1813,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(math.max(0",{"_index":1843,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(middlepos",{"_index":1820,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(quarterpos",{"_index":1831,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(threequarterpos",{"_index":1836,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":884,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["filedata.file",{"_index":1750,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1790,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1751,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":918,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["filedata.push(...subfiles",{"_index":921,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1691,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1738,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1735,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":382,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":276,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":2039,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filehandles",{"_index":1113,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.length",{"_index":1124,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.push(handle",{"_index":1119,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandlesdropped",{"_index":1058,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileinput",{"_index":1534,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":1139,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":886,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice.currentfolderhandle",{"_index":2243,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["fileloaderservicefactory",{"_index":5350,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":739,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["filepath",{"_index":709,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":704,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["files.push(file",{"_index":1142,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesdroped",{"_index":1059,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesize",{"_index":1812,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesize).arraybuffer",{"_index":1845,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filestoprocess",{"_index":1733,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":882,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":736,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filesystemfilehandles",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":2903,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["filter((artist",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter.gain.value",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{}}}],["filtered",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredbyserchterm",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtering",{"_index":2083,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["finalize",{"_index":1610,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["find",{"_index":810,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["findreleasegroupid(artist",{"_index":794,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":1711,"title":{},"body":{"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1247,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebase",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["firebuttonaction(index",{"_index":1243,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":5425,"title":{},"body":{"license.html":{}}}],["first",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["firstvaluefrom",{"_index":101,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2676,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":800,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('library",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('directoryhandles",{"_index":890,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('library",{"_index":1756,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":5657,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["fix(deps",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["fix(eslint",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":1147,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["flac",{"_index":1040,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flat",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1146,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["float32array",{"_index":5379,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2510,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["fns",{"_index":5328,"title":{},"body":{"dependencies.html":{}}}],["focus",{"_index":2029,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["folder/files",{"_index":2242,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["folders",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":5518,"title":{},"body":{"license.html":{}}}],["font",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["forcefully",{"_index":2355,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["form",{"_index":5481,"title":{},"body":{"license.html":{}}}],["format",{"_index":740,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formating",{"_index":5261,"title":{},"body":{"changelog.html":{}}}],["formatlabel",{"_index":2145,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formatlabel(value",{"_index":2154,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formats",{"_index":5396,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":2177,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":2626,"title":{},"body":{"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatting",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":125,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["found",{"_index":280,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":5490,"title":{},"body":{"license.html":{}}}],["freely",{"_index":5480,"title":{},"body":{"license.html":{}}}],["freq",{"_index":998,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints",{"_index":988,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints.push",{"_index":993,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints[0].y",{"_index":1010,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency",{"_index":983,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["frequency_bands",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["frequency_bands)[number",{"_index":746,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["frequencyband",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["frequencybarsconfig",{"_index":302,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":5728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":752,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["full",{"_index":824,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":5701,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":5576,"title":{},"body":{"license.html":{}}}],["function",{"_index":905,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":3142,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["funkt",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["further",{"_index":5492,"title":{},"body":{"license.html":{}}}],["future",{"_index":5588,"title":{},"body":{"license.html":{}}}],["für",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["gain",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"changelog.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{}}}],["gain.gain.value",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainnode",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainvalue",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{}}}],["gainvalue.tofixed(1)}x",{"_index":1023,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["gamepad",{"_index":1216,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1263,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1196,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":2203,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":2213,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":2204,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1209,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1214,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1217,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1174,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":5355,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":305,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gax",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["gblaster",{"_index":5391,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["gblasterdb",{"_index":5781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1807,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":2954,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":5357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1810,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1753,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generating",{"_index":1752,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["generator.bitdroid.de/#section",{"_index":5413,"title":{},"body":{"index.html":{}}}],["generierte",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["getanalysernode",{"_index":2815,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getasfilesystemhandle",{"_index":1111,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["getaudiofilesfromdirhandle",{"_index":5358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":906,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":920,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":904,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2882,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2883,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":5729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcolorobject(value",{"_index":2608,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getcoverdisplay",{"_index":5731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1526,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":785,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1547,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethasended",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1386,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":705,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getloadfilesmenuentry",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesmenuentry().click",{"_index":707,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1688,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1698,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":5733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":5360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":2094,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":2121,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":5734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":5736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1777,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["gettoolbartitle",{"_index":5737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":5738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":2237,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["getvolumeslider",{"_index":5739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getxpos(freq",{"_index":1000,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["gh",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2852,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":2021,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":2025,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":2541,"title":{},"body":{"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":1223,"title":{},"body":{"injectables/GamepadService.html":{}}}],["google",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["gp",{"_index":1225,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1224,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1226,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":5740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":929,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":894,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":926,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["greater",{"_index":5494,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5571,"title":{},"body":{"license.html":{}}}],["grid",{"_index":972,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["group/${releasegroupid",{"_index":807,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["group?query=${query}&limit=5&fmt=json",{"_index":799,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":772,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":802,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":803,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["grpc/grpc",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["hack",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":881,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.kind",{"_index":1118,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handle.requestpermission",{"_index":927,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":1138,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1463,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlefilefallback(event",{"_index":1136,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handlemessage",{"_index":1456,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1334,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["handles",{"_index":1109,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["handling",{"_index":1131,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["hanging",{"_index":1442,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1362,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{}}}],["hash",{"_index":738,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["hasing",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":967,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":5599,"title":{},"body":{"license.html":{}}}],["held",{"_index":5645,"title":{},"body":{"license.html":{}}}],["help",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":5825,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1314,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":696,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":5574,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":5436,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":5441,"title":{},"body":{"license.html":{}}}],["hex",{"_index":727,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":1107,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1540,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1619,"title":{},"body":{"injectables/LoaderService.html":{}}}],["highest",{"_index":1005,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["hilfe",{"_index":1321,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["history",{"_index":5287,"title":{},"body":{"changelog.html":{}}}],["hk",{"_index":1352,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1354,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hooks",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["hopefully",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":978,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["host",{"_index":1144,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2494,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2508,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2491,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2492,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2504,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2507,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2505,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2506,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2473,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":1075,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hosting",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["hotkey",{"_index":1291,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1389,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1392,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1395,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1305,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1379,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1372,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1367,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":385,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1306,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":5362,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["htmlaudioelement",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{}}}],["htmlcanvaselement",{"_index":2823,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlelement",{"_index":2362,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["htmlinputelement",{"_index":1535,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":779,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["http_interceptors",{"_index":5776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":756,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["httpevent",{"_index":1608,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1606,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1609,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1604,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":5412,"title":{},"body":{"index.html":{}}}],["https://coverartarchive.org",{"_index":784,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://github.com/motabass/gblaster",{"_index":5686,"title":{},"body":{"properties.html":{}}}],["https://musicbrainz.org/ws/2",{"_index":782,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://on.cypress.io/custom",{"_index":697,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":5414,"title":{},"body":{"index.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1491,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["husky",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":3055,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["iconregistry",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":4213,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["id",{"_index":768,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":763,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3coverpicture",{"_index":730,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":762,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3tagsservice",{"_index":1416,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":5489,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":734,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ignore",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["ignores",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["ii",{"_index":5524,"title":{},"body":{"license.html":{}}}],["iii",{"_index":5529,"title":{},"body":{"license.html":{}}}],["image",{"_index":753,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"license.html":{}}}],["image.front",{"_index":813,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images",{"_index":777,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images.find((img",{"_index":1513,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.length",{"_index":1511,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images[0]?.['#text",{"_index":1517,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images[images.length",{"_index":1522,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["img.size",{"_index":1514,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["iml",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":2044,"title":{},"body":{"injectables/PlayerService.html":{}}}],["implement",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":5558,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":5569,"title":{},"body":{"license.html":{}}}],["implements",{"_index":140,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":5654,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":5817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":5819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":5815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":5820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1431,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["important",{"_index":1841,"title":{},"body":{"injectables/MetadataService.html":{}}}],["imports",{"_index":137,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["improve",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3746,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["including",{"_index":5484,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":5477,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":2146,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["increasevolume(value",{"_index":2156,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":92,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":4994,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["indexeddbservice",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":94,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ineffective",{"_index":5618,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":5634,"title":{},"body":{"license.html":{}}}],["inferred",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["influence",{"_index":1002,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":5430,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5475,"title":{},"body":{"license.html":{}}}],["init",{"_index":2638,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["initbarkscale",{"_index":5364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["initializetheme",{"_index":2529,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2416,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["inject(audioservice",{"_index":943,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2440,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":2002,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1308,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":1076,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1307,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":1921,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["inject(gamepadservice",{"_index":2182,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":2183,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["inject(httpclient",{"_index":780,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["inject(id3tagsservice",{"_index":1728,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1729,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(loaderservice",{"_index":1614,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1378,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1310,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":2000,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":2552,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1730,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(ngzone",{"_index":2821,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject(playerservice",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":1078,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":2441,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2646,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2633,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":1920,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2756,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":1999,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2828,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1377,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":415,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":1069,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('bars",{"_index":2812,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2468,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["inset",{"_index":1155,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2664,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":5410,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2334,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["instead",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["integriert",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["intended",{"_index":5513,"title":{},"body":{"license.html":{}}}],["intending",{"_index":5601,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["intercept",{"_index":1602,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1603,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1598,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1600,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["intergrated",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["internal",{"_index":2914,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":1998,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":1288,"title":{},"body":{"injectables/GamepadService.html":{}}}],["introducing",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":5617,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":5635,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":5633,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":5628,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":5577,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2256,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2260,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2281,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1278,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":5365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":5380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":5366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2401,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":5367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{}}}],["ismediasessionsupported",{"_index":5368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions",{"_index":5371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":5381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{}}}],["isplaying",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2262,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isstopped",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{}}}],["ist",{"_index":1327,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":5372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1743,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["item",{"_index":1115,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":5807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1159,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["itemsize",{"_index":2340,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":5536,"title":{},"body":{"license.html":{}}}],["january",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["jb",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":3464,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["js",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1507,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["judged",{"_index":5615,"title":{},"body":{"license.html":{}}}],["july",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["jurisdictions",{"_index":5444,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1161,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["k",{"_index":666,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kb/s",{"_index":674,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["keine",{"_index":1399,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":5402,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1336,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1332,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":5784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1295,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["keys.replaceall",{"_index":1351,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":5652,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5511,"title":{},"body":{"license.html":{}}}],["known",{"_index":5586,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1805,"title":{},"body":{"injectables/MetadataService.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":5059,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":774,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["large')?.['#text",{"_index":1521,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["largeimage",{"_index":1518,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["larger",{"_index":1823,"title":{},"body":{"injectables/MetadataService.html":{}}}],["last",{"_index":1838,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["last.fm",{"_index":1494,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1720,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1489,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1478,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1485,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1481,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1488,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1487,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1484,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2896,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["late",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["latencyhint",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{}}}],["latent",{"_index":5660,"title":{},"body":{"license.html":{}}}],["later",{"_index":5473,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3135,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["launch",{"_index":2028,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["launchparameters",{"_index":2026,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":2038,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":2036,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":2020,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":5424,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5443,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3030,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layouts",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["lazy",{"_index":5065,"title":{},"body":{"changelog.html":{}}}],["leadingminutezero",{"_index":5387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":1060,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":1065,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2480,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1528,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":5419,"title":{},"body":{"license.html":{}}}],["legally",{"_index":5616,"title":{},"body":{"license.html":{}}}],["legend",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":5438,"title":{},"body":{"license.html":{}}}],["lib",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":136,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":139,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libs",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["libs/.../helpers",{"_index":5353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/helpers",{"_index":5386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":1046,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":5169,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["license.md",{"_index":5172,"title":{},"body":{"changelog.html":{}}}],["licensed",{"_index":5649,"title":{},"body":{"license.html":{}}}],["light",{"_index":2578,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":836,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":2610,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":835,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":5534,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":5485,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":5542,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5517,"title":{},"body":{"license.html":{}}}],["line",{"_index":2128,"title":{},"body":{"injectables/PlayerService.html":{}}}],["lines",{"_index":973,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["linethickness",{"_index":2685,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":5804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3811,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["linting",{"_index":5260,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":2342,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{}}}],["lite",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":755,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/Id3Tags.html":{}}}],["load",{"_index":2241,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["loadcomponent",{"_index":5814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":2079,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["loadedtrack",{"_index":2089,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":878,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":885,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loader.helpers.ts",{"_index":1026,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1613,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":887,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loader.service.abstract.ts",{"_index":1168,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1171,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1172,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1173,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":5352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":880,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:11",{"_index":1530,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:18",{"_index":1903,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:24",{"_index":1533,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:26",{"_index":1531,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:32",{"_index":1905,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:42",{"_index":1904,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:43",{"_index":1532,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1599,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1612,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2455,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["loadingcounter",{"_index":1624,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadlastdirectory",{"_index":2147,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["local",{"_index":1763,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localization",{"_index":5702,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["lock.json",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["locking",{"_index":5405,"title":{},"body":{"index.html":{}}}],["logic",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{}}}],["lowersearchterm",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["lowest",{"_index":992,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["lucene",{"_index":759,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":758,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["made",{"_index":5514,"title":{},"body":{"license.html":{}}}],["main",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["main_audio",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{}}}],["maincolor",{"_index":310,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{}}}],["make",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":5432,"title":{},"body":{"license.html":{}}}],["management",{"_index":5692,"title":{},"body":{"todo.html":{}}}],["manifest",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["manifest.json",{"_index":5109,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2448,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mapping",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["march",{"_index":2960,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["maskable",{"_index":5066,"title":{},"body":{"changelog.html":{}}}],["mat",{"_index":5800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1370,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":5770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1374,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1866,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2620,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2617,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1298,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2642,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1371,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1299,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":3250,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["matformfield",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matformfieldmodule",{"_index":2251,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2331,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":2124,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2330,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(chunksize",{"_index":1818,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(filesize",{"_index":1817,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(math.random",{"_index":2131,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":2125,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":1982,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.log10(freq",{"_index":980,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(maxfreq",{"_index":982,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(minfreq",{"_index":981,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.max(0",{"_index":2344,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":1984,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.round(value",{"_index":673,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["mathint",{"_index":128,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticon",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonbutton",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonmodule",{"_index":1373,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":129,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matlistmodule",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matmenucontent",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":1909,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matmenutrigger",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matoptionmodule",{"_index":2680,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprefix",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressbar",{"_index":2397,"title":{},"body":{"components/ShellComponent.html":{}}}],["matprogressspinnermodule",{"_index":2250,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2679,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2427,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2395,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslider",{"_index":2137,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidermodule",{"_index":932,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matsliderthumb",{"_index":2138,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidetogglechange",{"_index":1876,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1867,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matsuffix",{"_index":131,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mattoolbar",{"_index":2139,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattoolbarmodule",{"_index":1907,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltip",{"_index":2140,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattooltipmodule",{"_index":1908,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":2122,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":288,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":5591,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1727,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["mdc",{"_index":4210,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":5512,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2293,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["meatadata",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1663,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{}}}],["mediametadata(metadata",{"_index":1672,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1644,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasession",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["mediasessionaction",{"_index":1639,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1641,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1674,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1629,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":5374,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":5592,"title":{},"body":{"license.html":{}}}],["medium')?.['#text",{"_index":1516,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["mega')?.['#text",{"_index":1519,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["member",{"_index":5597,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2357,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["menus",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["menutrigger",{"_index":2254,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["merchantability",{"_index":5656,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1329,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["merged.description",{"_index":1347,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1348,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1486,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1457,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":1695,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl.original",{"_index":1799,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.original.startswith('blob",{"_index":1800,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.thumb.startswith('blob",{"_index":1802,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1798,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1809,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1796,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":766,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1721,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1480,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1527,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":764,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1755,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.coverurl.thumb",{"_index":1759,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1757,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1768,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":123,"title":{"injectables/MetadataService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["metadataservice.processing",{"_index":1585,"title":{},"body":{"components/LibraryComponent.html":{}}}],["metadataservice.processionpercent",{"_index":2456,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadataservice.statustext",{"_index":1586,"title":{},"body":{"components/LibraryComponent.html":{}}}],["metadatasettingscomponent",{"_index":389,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["meter",{"_index":5406,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":5741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1504,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["methods",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":5697,"title":{},"body":{"todo.html":{}}}],["middlechunk",{"_index":1819,"title":{},"body":{"injectables/MetadataService.html":{}}}],["middlepos",{"_index":1816,"title":{},"body":{"injectables/MetadataService.html":{}}}],["migrate",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["migrated",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["migrating",{"_index":2503,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2496,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["min",{"_index":2123,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2686,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["mindecibels",{"_index":289,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["minfreq",{"_index":1011,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["miscellaneous",{"_index":5337,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":5212,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":4455,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["mobile",{"_index":4333,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mobx",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modes",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":5476,"title":{},"body":{"license.html":{}}}],["module",{"_index":1432,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["modules",{"_index":3354,"title":{"modules.html":{}},"body":{"changelog.html":{},"modules.html":{}}}],["monochrome",{"_index":5067,"title":{},"body":{"changelog.html":{}}}],["monochrome.svg",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["monorepo",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["moral",{"_index":5525,"title":{},"body":{"license.html":{}}}],["more",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["motabass",{"_index":5688,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":2178,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":2434,"title":{},"body":{"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":5497,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2265,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["move",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["moved",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["mp3",{"_index":1039,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":1044,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":5778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":735,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":793,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1722,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzreleasegroup",{"_index":767,"title":{"interfaces/MusicbrainzReleaseGroup.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzresponse",{"_index":771,"title":{"interfaces/MusicbrainzResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":778,"title":{"injectables/MusicbrainzService.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":832,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Color.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":699,"title":{},"body":{"interfaces/Chainable.html":{}}}],["nan",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["narrowing",{"_index":2514,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":5557,"title":{},"body":{"license.html":{}}}],["native",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["nativebrowserfileloaderservice",{"_index":888,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigates",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["navigateto",{"_index":2403,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2406,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigation",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["navigator.getgamepads",{"_index":1215,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1671,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1675,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1666,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1661,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1670,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1669,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2940,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2941,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":866,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nearby",{"_index":2333,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["nearly",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":5672,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":5516,"title":{},"body":{"license.html":{}}}],["neu",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["newsize",{"_index":316,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["newtrack",{"_index":2046,"title":{},"body":{"injectables/PlayerService.html":{}}}],["next",{"_index":1605,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1616,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1425,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2925,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ng",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["ng11",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["ng15",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["ngafterviewinit",{"_index":1084,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngarraypipesmodule",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ngclass",{"_index":2249,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2513,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2515,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":1098,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngoptimizedimage",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["ngx",{"_index":91,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":90,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1232,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1723,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["node_modules",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["nodes",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{}}}],["non",{"_index":5625,"title":{},"body":{"license.html":{}}}],["none",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"changelog.html":{}}}],["notable",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["notes.md",{"_index":5263,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":2034,"title":{},"body":{"injectables/PlayerService.html":{}}}],["notification",{"_index":5191,"title":{},"body":{"changelog.html":{}}}],["november",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["now",{"_index":2894,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["npm",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["npmrc",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["nrwl",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["nrwl/nx",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":1241,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1206,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1204,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(atrack",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(btrack",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(duration",{"_index":1658,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number.nan",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbers",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbervalue",{"_index":959,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["nx",{"_index":3431,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["obeservable",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1764,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":5782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1770,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":5681,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1302,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1333,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1345,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2443,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2862,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1340,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2865,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtained",{"_index":1127,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["obtaining",{"_index":5671,"title":{},"body":{"license.html":{}}}],["october",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["offers",{"_index":5650,"title":{},"body":{"license.html":{}}}],["offline",{"_index":5409,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":315,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":5746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":2343,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ogg",{"_index":1041,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["ohne",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["oldsource",{"_index":629,"title":{},"body":{"injectables/AudioService.html":{}}}],["onchanges",{"_index":2460,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["oncontextmenu",{"_index":2257,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["oncontextmenu(event",{"_index":2264,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ondestroy",{"_index":1052,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":748,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["onfilehandlesdropped",{"_index":2404,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilehandlesdropped(files",{"_index":2410,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped",{"_index":2405,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped(files",{"_index":2412,"title":{},"body":{"components/ShellComponent.html":{}}}],["oninit",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1870,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1875,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onsliderpositionchanged",{"_index":2148,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":2159,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1871,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1878,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1872,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1880,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1873,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1882,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":2149,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onvolumechange(value",{"_index":2161,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["open",{"_index":2352,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["opened",{"_index":2358,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["openedstate",{"_index":2469,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":902,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2467,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["optimizations",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["optimize",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":2795,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["optional",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":718,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1324,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1331,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":1043,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["origin",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["original",{"_index":825,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"license.html":{}}}],["originalfn",{"_index":722,"title":{},"body":{"interfaces/Chainable.html":{}}}],["os",{"_index":5403,"title":{},"body":{"index.html":{}}}],["osc",{"_index":330,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2687,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":3293,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["oscilloscopepath",{"_index":5742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":307,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":329,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":5411,"title":{},"body":{"index.html":{}}}],["others",{"_index":5496,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1449,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["output",{"_index":1071,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2323,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":1061,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":1067,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":1053,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":1056,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":1055,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":1050,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":1070,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":1073,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:15",{"_index":1072,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:39",{"_index":1068,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:49",{"_index":1066,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:55",{"_index":1064,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":1049,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":1048,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlayref",{"_index":2359,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.left",{"_index":2365,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.position",{"_index":2363,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.top",{"_index":2367,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overrides",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["overtly",{"_index":5575,"title":{},"body":{"license.html":{}}}],["overview",{"_index":5682,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["overwritten",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["owner",{"_index":5457,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":5456,"title":{},"body":{"license.html":{}}}],["owners",{"_index":5462,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2907,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":3246,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["packgr",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":5056,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["palette",{"_index":1781,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1858,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1859,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1852,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1853,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1860,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1861,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1854,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1855,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1856,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1857,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1850,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1851,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pane:last",{"_index":2361,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["panel",{"_index":2461,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2462,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2463,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2459,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2479,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2476,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2483,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2484,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2478,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2481,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2482,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2489,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2485,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2486,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2488,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2487,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2458,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":5543,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1500,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":700,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":5552,"title":{},"body":{"license.html":{}}}],["part",{"_index":4364,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["partial",{"_index":1312,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":5658,"title":{},"body":{"license.html":{}}}],["party",{"_index":5679,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["passed",{"_index":2899,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":5644,"title":{},"body":{"license.html":{}}}],["path",{"_index":5811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":5748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":5813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":311,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1466,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1426,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["per",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["perform",{"_index":5521,"title":{},"body":{"license.html":{}}}],["performance",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["performance.now",{"_index":1274,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":5528,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5464,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":5666,"title":{},"body":{"license.html":{}}}],["permission",{"_index":924,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":5674,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5572,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":3145,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["person",{"_index":5502,"title":{},"body":{"license.html":{}}}],["person's",{"_index":5533,"title":{},"body":{"license.html":{}}}],["persons",{"_index":5670,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":5532,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1415,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":1778,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["pin",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":120,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2289,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{},"overview.html":{}}}],["pipetransform",{"_index":663,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1731,"title":{},"body":{"injectables/MetadataService.html":{}}}],["placement",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["play",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["play/pause",{"_index":2188,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playback",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["player",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":1910,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":1911,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1650,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":5816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/file",{"_index":2436,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/library",{"_index":5818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1887,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{}}}],["player/player",{"_index":2437,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.service",{"_index":2435,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.types",{"_index":2551,"title":{},"body":{"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":391,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":108,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":860,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["playerservice.currentlyloadedtrack();@let",{"_index":875,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["playerservice.currenttime",{"_index":2245,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.repeat",{"_index":2247,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playertoolbarcomponent",{"_index":393,"title":{"components/PlayerToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playing",{"_index":1651,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["playlist",{"_index":1588,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2252,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2253,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.filter((t",{"_index":2085,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.find((playlisttrack",{"_index":2100,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.findindex((track",{"_index":2317,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":2098,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":2095,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":1919,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":396,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.hash",{"_index":2074,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlisttrack.metadata?.hash",{"_index":2101,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":1930,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2258,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2267,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":1931,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":1952,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":5395,"title":{},"body":{"index.html":{}}}],["playstate",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["playtrack",{"_index":1557,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["playtrackbyhash",{"_index":1932,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playtrackbyhash(hash",{"_index":1954,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{}}}],["plug",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["pluginnewanalysernode",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{}}}],["plugins",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":1145,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["points",{"_index":996,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["polfills",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["polyfills",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["pool",{"_index":2886,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":1981,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":3089,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["postcss",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["prdefinded",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["pre",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["precommit",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["prefertagembeddedpicture",{"_index":1677,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefetch",{"_index":5108,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":5762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preparations",{"_index":5323,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":5663,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":5619,"title":{},"body":{"license.html":{}}}],["preset",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["pressedbuttonscaches",{"_index":1202,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prettier",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":2500,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":1933,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":717,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":2566,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":2527,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":2528,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":797,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1901,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":5531,"title":{},"body":{"license.html":{}}}],["private",{"_index":141,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["prive",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["problems",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["process",{"_index":2897,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["processing",{"_index":1678,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["processingfile",{"_index":1679,"title":{},"body":{"injectables/MetadataService.html":{}}}],["processionpercent",{"_index":1680,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":3344,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":786,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1440,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.all(promises",{"_index":1123,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promise.reject(new",{"_index":1437,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1114,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{}}}],["promises.push(promise",{"_index":1120,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promote",{"_index":5488,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":5595,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":398,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2381,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["props",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":5515,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":5537,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5555,"title":{},"body":{"license.html":{}}}],["protobufjs",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":4432,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":5435,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["provideexperimentalzonelesschangedetection",{"_index":5752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":5764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":5753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":5759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":5766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":5751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":5429,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":5754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":5470,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":5530,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5508,"title":{},"body":{"license.html":{}}}],["pure",{"_index":656,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":5442,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":5483,"title":{},"body":{"license.html":{}}}],["put",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["pwa",{"_index":5392,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quality",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["quarter",{"_index":1825,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterchunk",{"_index":1830,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterpos",{"_index":1828,"title":{},"body":{"injectables/MetadataService.html":{}}}],["query",{"_index":761,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["queryparams",{"_index":1502,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["queue",{"_index":2035,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":5609,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":2130,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":2093,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2320,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["rate",{"_index":874,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["react",{"_index":953,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["read",{"_index":695,"title":{},"body":{"interfaces/Chainable.html":{}}}],["readded",{"_index":5107,"title":{},"body":{"changelog.html":{}}}],["reader",{"_index":5416,"title":{},"body":{"index.html":{}}}],["reading",{"_index":1773,"title":{},"body":{"injectables/MetadataService.html":{}}}],["readme",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":5249,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1744,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["real",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["realkeys",{"_index":1350,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":5614,"title":{},"body":{"license.html":{}}}],["record",{"_index":1501,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2855,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["recursive",{"_index":5230,"title":{},"body":{"changelog.html":{}}}],["redirectto",{"_index":5812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":5479,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":5236,"title":{},"body":{"changelog.html":{}}}],["reenabled",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":5434,"title":{},"body":{"license.html":{}}}],["regards",{"_index":5541,"title":{},"body":{"license.html":{}}}],["register",{"_index":1401,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1323,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1180,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1189,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1181,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1193,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1363,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":5758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":5757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1328,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registry",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["regular",{"_index":1126,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["reinstall",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["reject",{"_index":1427,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1454,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1446,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":3134,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["relationship",{"_index":5428,"title":{},"body":{"license.html":{}}}],["release",{"_index":769,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["release:${luceneescapequery.escape(album",{"_index":795,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":789,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2932,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":5471,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":5465,"title":{},"body":{"license.html":{}}}],["reload",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["remainder",{"_index":5636,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":5638,"title":{},"body":{"license.html":{}}}],["remember",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":1769,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverpicture",{"_index":82,"title":{"interfaces/RemoteCoverPicture.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":911,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["removed",{"_index":2077,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["removetrackfromplaylist",{"_index":1934,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist(track",{"_index":1957,"title":{},"body":{"injectables/PlayerService.html":{}}}],["rename",{"_index":5171,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["renderer",{"_index":1077,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":1074,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rendering",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["renew",{"_index":1762,"title":{},"body":{"injectables/MetadataService.html":{}}}],["renovate",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["renovate.json",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":1927,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":747,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["report",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["reposition",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":5685,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":5651,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":5519,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":5493,"title":{},"body":{"license.html":{}}}],["request",{"_index":923,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["request.reject(new",{"_index":1460,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1462,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe",{"_index":5157,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe(draw",{"_index":2910,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1467,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["requestwakelock",{"_index":2939,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":5675,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":5604,"title":{},"body":{"license.html":{}}}],["reset",{"_index":2356,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["resetfrequencybandgain",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{}}}],["resetfrequencybandgain(bandfrequency",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{}}}],["resizeobserver",{"_index":2826,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2863,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1451,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1453,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1551,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resolved",{"_index":1121,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["respect",{"_index":5640,"title":{},"body":{"license.html":{}}}],["response",{"_index":984,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["responsibility",{"_index":5668,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":5407,"title":{},"body":{"index.html":{}}}],["restore",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.map((tag",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.matches",{"_index":2449,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":5440,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1355,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["retained",{"_index":5526,"title":{},"body":{"license.html":{}}}],["return",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":5478,"title":{},"body":{"license.html":{}}}],["revert",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["revocation",{"_index":5603,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":5322,"title":{},"body":{"changelog.html":{}}}],["rgb(255",{"_index":1165,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":851,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["rid",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1021,"title":{},"body":{"components/EqualizerComponent.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{},"license.html":{}}}],["rights",{"_index":5451,"title":{},"body":{"license.html":{}}}],["root",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2889,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["rounding",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":2409,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":2429,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["routeroutlet",{"_index":2396,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":5743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":5624,"title":{},"body":{"license.html":{}}}],["rule",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":4045,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":5821,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1611,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":873,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":328,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["samples",{"_index":1827,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sandbox",{"_index":5415,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["saving",{"_index":5694,"title":{},"body":{"todo.html":{}}}],["scale",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":5205,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":2542,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scientific",{"_index":5469,"title":{},"body":{"license.html":{}}}],["screen",{"_index":5280,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scroll",{"_index":2283,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollbehavior",{"_index":2337,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2295,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2332,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollposition",{"_index":2291,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2284,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2312,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2315,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2255,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scss",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":804,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["searchterm",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["searchterm.tolowercase",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["seconds",{"_index":1961,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seeking",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["seekleft",{"_index":1935,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekleft(seconds",{"_index":1959,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":2163,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekright",{"_index":1936,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekright(seconds",{"_index":1962,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":2165,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekto",{"_index":1668,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["seektohandler(details",{"_index":2107,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektto",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1558,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1559,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":2080,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["selectedalbum",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selection",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["selectnext",{"_index":1937,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":1938,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":1939,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":1966,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1560,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["self",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["semantics",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":2905,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1245,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separate",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":5760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seperated",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["september",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["service/file",{"_index":1025,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":731,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1479,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1529,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":5383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["service/metadata.service.ts",{"_index":1676,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:154",{"_index":1694,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:24",{"_index":1718,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:25",{"_index":1716,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1714,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1701,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:31",{"_index":1707,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:35",{"_index":1703,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:39",{"_index":1704,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:41",{"_index":1712,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:48",{"_index":1690,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:64",{"_index":1697,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:79",{"_index":1699,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":829,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":5385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":751,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:40",{"_index":1902,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":879,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":3180,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":2180,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":2179,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":2181,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["services/loader/loader.service",{"_index":2432,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":1994,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":1915,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":1993,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1664,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["session.service",{"_index":1995,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":5370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1632,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1642,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1647,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1649,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1645,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1637,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1631,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["set(filtered.tosorted((a",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor(color",{"_index":2571,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1633,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1638,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2691,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2701,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2692,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2703,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1634,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1643,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2693,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2705,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2694,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2707,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2530,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":2533,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2531,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":2535,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2695,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2709,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{}}}],["setgap",{"_index":2696,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2711,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2697,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2713,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{}}}],["setmindb",{"_index":2698,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2715,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setoverlayclass",{"_index":2575,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setplaybackstate(state",{"_index":1673,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor(color",{"_index":2560,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":1940,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":1968,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1635,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1646,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2699,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2717,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1444,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["setting",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["settings",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2391,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1868,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2389,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1865,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2621,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2521,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":1884,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1883,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":1881,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1879,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":1877,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":1874,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1864,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2390,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2392,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":400,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2628,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2629,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2861,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":5375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":5382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{}}}],["several",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":5602,"title":{},"body":{"license.html":{}}}],["share",{"_index":5698,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2431,"title":{},"body":{"components/ShellComponent.html":{}}}],["shas",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["shell",{"_index":2394,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["shell'},{'name",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2398,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2399,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":342,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1318,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":2187,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["show",{"_index":1620,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{}}}],["showdelay",{"_index":5772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":897,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showfilepickerandloadfiles",{"_index":2150,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["showpicker",{"_index":896,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["shows",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2688,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":1928,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2470,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["sidenav",{"_index":2402,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["signal",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["signal(0",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(false",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2719,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2723,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('basegain",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2730,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2732,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":2540,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2738,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2740,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2742,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2745,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1700,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":1986,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":1989,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2753,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1713,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1715,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1717,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2923,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.localstorageservice.retrieve('volume",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(true",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(undefined",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["signalös",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":5563,"title":{},"body":{"license.html":{}}}],["simpler",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["simplified",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["sind",{"_index":1398,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1483,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["sizes",{"_index":2066,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":1149,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2407,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2495,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":5745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":403,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":402,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["slider",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["sliders",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":775,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{}}}],["small')?.['#text",{"_index":1515,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smaller",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["smallimage",{"_index":1512,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smooth",{"_index":2314,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2689,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["snyk",{"_index":5235,"title":{},"body":{"changelog.html":{}}}],["soll",{"_index":2669,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["sonarjs/pseudo",{"_index":2129,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":1948,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["song.file.name",{"_index":2373,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2369,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2370,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.hash",{"_index":2348,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.hash",{"_index":2075,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2374,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2372,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2371,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1742,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["sortable",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":5693,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["spark",{"_index":1726,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["spark.append(endchunk",{"_index":1846,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.append(middlechunk",{"_index":1822,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.append(quarterchunk",{"_index":1832,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.append(threequarterchunk",{"_index":1837,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.end",{"_index":1847,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5",{"_index":1725,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["sparkmd5.arraybuffer",{"_index":1811,"title":{},"body":{"injectables/MetadataService.html":{}}}],["specified",{"_index":2084,"title":{},"body":{"injectables/PlayerService.html":{}}}],["spectrogram",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":2278,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["splashscreen",{"_index":5110,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":2064,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stable",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":658,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["standard",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["standing",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":991,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2946,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starts",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["startvisualization(getdatamethod",{"_index":2881,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":5613,"title":{},"body":{"license.html":{}}}],["statt",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["statustext",{"_index":1681,"title":{},"body":{"injectables/MetadataService.html":{}}}],["statutory",{"_index":5655,"title":{},"body":{"license.html":{}}}],["steps",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":318,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2800,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storagesettingscomponent",{"_index":405,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":5783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":5786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(this.equalizergainvalues",{"_index":649,"title":{},"body":{"injectables/AudioService.html":{}}}],["structures",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["stuff",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["stylelint",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1045,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":1054,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styling",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1344,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":919,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"license.html":{}}}],["sublicensable",{"_index":5627,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2290,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1303,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":5455,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1391,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1394,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":5561,"title":{},"body":{"license.html":{}}}],["successors",{"_index":5600,"title":{},"body":{"license.html":{}}}],["such",{"_index":5548,"title":{},"body":{"license.html":{}}}],["suche",{"_index":5691,"title":{},"body":{"todo.html":{}}}],["support",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":1665,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":5398,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":5648,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":5581,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":634,"title":{},"body":{"injectables/AudioService.html":{}}}],["svg",{"_index":5076,"title":{},"body":{"changelog.html":{}}}],["svgo",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["swc/core",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["switch",{"_index":2111,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["switched",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["swupdate",{"_index":2643,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["swupdate.activateupdate().then",{"_index":2660,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2648,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2649,"title":{},"body":{"injectables/UpdateService.html":{}}}],["syntax",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":1133,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{},"todo.html":{}}}],["t",{"_index":2086,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tag",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["tag.album",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.album?.tolowercase().includes(lowersearchterm",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist?.tolowercase().includes(lowersearchterm",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.filename?.tolowercase().includes(lowersearchterm",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.title?.tolowercase().includes(lowersearchterm",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":839,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":788,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":787,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1794,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1785,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1787,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1719,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1417,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1422,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1419,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1791,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1792,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":732,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1414,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1793,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagswithoptionalbloburls",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tagsworkerrequest",{"_index":837,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":838,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":1996,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":5620,"title":{},"body":{"license.html":{}}}],["target",{"_index":5699,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":2316,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1388,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":710,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templates",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["templateurl",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["temporarily",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["termination",{"_index":5606,"title":{},"body":{"license.html":{}}}],["terms",{"_index":5510,"title":{},"body":{"license.html":{}}}],["territories",{"_index":5589,"title":{},"body":{"license.html":{}}}],["test",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":4046,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1482,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":830,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thebespokepixel/es",{"_index":2549,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["theme",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{}}}],["theme.types",{"_index":2550,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice",{"_index":352,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":407,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":5559,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":308,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["this._audiocontext",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.createanalyser",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.resume",{"_index":635,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.state",{"_index":633,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.currenttime",{"_index":645,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.fastseek(position",{"_index":644,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.loop",{"_index":642,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.pause",{"_index":638,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.play",{"_index":636,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.src",{"_index":630,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiosourcenode",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.clear",{"_index":628,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.foreach((analyser",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.connect(analyser",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.disconnect(analyser",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[band",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":647,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._gainnode",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.asobservable",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.next(true",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._internalanalyzer",{"_index":2867,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1339,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":2572,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":2573,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1287,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":2072,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(...validfiles",{"_index":2042,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.filteredbyserchterm",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":271,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":2070,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.allowedtypes().includes(file.type",{"_index":1141,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.alpha",{"_index":2735,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2779,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2850,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2763,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2769,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2767,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2765,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2876,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2875,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2904,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2634,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2909,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}/release",{"_index":798,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1508,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2659,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.basegain",{"_index":957,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.currenttime",{"_index":1659,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2917,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2774,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1657,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.equalizergainvalues",{"_index":956,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":2049,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":2090,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1654,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1652,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":1980,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":2068,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2721,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2877,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":2056,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":2118,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":2116,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(value",{"_index":2236,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1207,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1260,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1258,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1249,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.bands",{"_index":999,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.barcount",{"_index":2725,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2783,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2844,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2868,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2871,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2870,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2869,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.breakpointobserver",{"_index":2442,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1496,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1205,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1256,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1250,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1264,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1273,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1246,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2829,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2856,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2835,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvasref",{"_index":961,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.canvasref()!.nativeelement",{"_index":962,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.capfalldown",{"_index":2728,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2787,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2726,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2785,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1228,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1227,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1289,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1222,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2518,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.colorconfig",{"_index":2848,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":2574,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":2563,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1210,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":806,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1261,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1257,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1797,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1772,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1740,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":903,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(entry.handle",{"_index":895,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(handle",{"_index":898,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":1979,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":1973,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":2069,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":2091,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":2104,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().length",{"_index":2045,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":2073,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist()[this.currentplaylist().length",{"_index":2047,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":2076,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.darkmode",{"_index":2576,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":2556,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1380,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":2205,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.default_deadspace",{"_index":1280,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1192,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1330,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1360,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1366,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1382,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2384,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2383,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1358,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1212,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1313,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":1094,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":1085,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":1091,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":1089,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drawequalizerresponse",{"_index":958,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.drop.bind(this",{"_index":1097,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":1096,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[band",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":646,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":652,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1342,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1493,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1492,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":791,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2764,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2781,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.filehandlesdropped.emit(filehandles",{"_index":1125,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.fileinput",{"_index":1536,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1542,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1550,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1549,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1548,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1539,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1544,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1541,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1538,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.openfiles",{"_index":2071,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.files",{"_index":1552,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1546,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filesdroped.emit(files",{"_index":1143,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.filestoprocess",{"_index":1702,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1737,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1745,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredbyserchterm",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.filteredbyserchterm().filter((track",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":790,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1286,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1266,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":2190,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":2232,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":2234,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":2233,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":2220,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":2221,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":2228,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":2227,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":2230,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":2224,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":2229,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":2225,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":2226,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":2231,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":2222,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":2223,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":2202,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":2191,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":2192,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":2211,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":2209,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":2216,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":2198,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":2214,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":2200,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":2207,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":2218,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":2194,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":2196,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2773,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2771,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2727,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2791,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getcolorobject(new",{"_index":2580,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getmetadata(filedata",{"_index":1748,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":2175,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer.files",{"_index":1137,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1436,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlefilefallback(event",{"_index":1128,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handlemessage",{"_index":1434,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1357,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1364,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1343,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1325,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1353,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1346,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":2184,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":2185,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.register",{"_index":2186,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1774,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":2206,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.indexeddbservice.add('library",{"_index":1795,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('library').topromise",{"_index":1898,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('directoryhandles",{"_index":899,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.indexeddbtracks().filter((tag",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.indexeddbtracks.set(tagswithoptionalbloburls",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.isautoscrollenabled",{"_index":2296,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2297,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1281,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":643,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(false",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(true",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying",{"_index":637,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(false",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(true",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(false",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(true",{"_index":641,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.lastfm_api_key",{"_index":1506,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1779,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":1108,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":1093,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.linethickness",{"_index":2748,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2789,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1617,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1615,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadingcounter",{"_index":1625,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2522,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.retrieve('equalizergainvalues",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2780,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2784,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2788,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2786,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":2557,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('equalizergainvalues",{"_index":651,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2782,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2792,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2790,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2778,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1897,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2776,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1895,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1893,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1890,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2928,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":2003,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":2009,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":2006,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":2004,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":2011,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":2013,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":2015,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":2007,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":2058,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":2017,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.menutrigger",{"_index":2350,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.meta.addtag",{"_index":2569,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.meta.updatetag",{"_index":2570,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":2088,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(tag",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1896,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1894,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1892,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1889,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2768,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2777,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2842,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1780,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":2010,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1439,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2517,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2516,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2846,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2879,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":1088,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":639,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.pendingrequests.clear",{"_index":1477,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1445,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1469,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1459,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1450,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1474,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1760,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...filedata",{"_index":2453,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":2452,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":278,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2734,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2307,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.darkmuted?.hex",{"_index":849,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.lightmuted?.hex",{"_index":850,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.coverurl?.original",{"_index":853,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.hash",{"_index":2346,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2300,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":2246,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.next",{"_index":2215,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpause",{"_index":2189,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2347,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.playtrackbyhash(track.hash",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.previous",{"_index":2217,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectnext",{"_index":2212,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":2210,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":2235,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.stop",{"_index":2193,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playpause",{"_index":2005,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(newtrack",{"_index":2048,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":2096,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":2103,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":2099,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":2102,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1761,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1268,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":2012,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":2561,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":2562,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.processing",{"_index":1709,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile",{"_index":1710,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile.set(filedata.file.name",{"_index":1739,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.register",{"_index":1317,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":1086,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":1104,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":2112,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":2114,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":2119,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":2117,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2938,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2837,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2912,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2451,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.scrolltobottom",{"_index":2305,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2311,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2287,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.seekleft(10",{"_index":2014,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":2199,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seekright(10",{"_index":2016,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":2201,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seektohandler(details",{"_index":2018,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":640,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.selectedalbum",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":2082,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":2105,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":2055,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setaccentcolor(colors.peakcolor",{"_index":2559,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setaccentcolor(this.accentcolor",{"_index":2555,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setfrequencybandgain(bandfrequency",{"_index":653,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.setoverlayclass",{"_index":2553,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setplaybackstate('none",{"_index":1656,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1655,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1653,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setprimarycolor(colors.maincolor",{"_index":2558,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setprimarycolor(this.primarycolor",{"_index":2554,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setseekposition(details.seektime",{"_index":2110,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":2106,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2838,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showfilepickerandloadfiles",{"_index":2219,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.shuffle",{"_index":2092,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":2120,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2450,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2766,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2775,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2878,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2880,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":2008,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2851,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.swupdate",{"_index":2647,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2667,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2666,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.accentcolor",{"_index":1015,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.darkmode",{"_index":848,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.primarycolor",{"_index":987,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":2050,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2623,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2635,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":1922,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1322,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":2208,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.togglerepeat",{"_index":2197,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.toggleshuffle",{"_index":2195,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1706,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1746,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1736,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.uniquealbums",{"_index":265,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1660,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.usetagembeddedpicture",{"_index":1758,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1754,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1776,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2857,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2860,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2858,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2859,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2831,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2836,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2918,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2926,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2927,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2772,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2751,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.wakelock",{"_index":2937,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2942,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2945,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":2052,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":2054,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1428,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1435,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1433,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2833,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1455,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1472,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1471,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1473,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":5466,"title":{},"body":{"license.html":{}}}],["threads.js",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":1826,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterchunk",{"_index":1835,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterpos",{"_index":1833,"title":{},"body":{"injectables/MetadataService.html":{}}}],["through",{"_index":1007,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{}}}],["throughout",{"_index":5445,"title":{},"body":{"license.html":{}}}],["thum",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["thumb",{"_index":818,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thumbnail",{"_index":823,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["thumbnails",{"_index":754,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["time",{"_index":868,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["time.pipe",{"_index":858,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["time.ts",{"_index":5354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timed",{"_index":1448,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1443,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1421,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":843,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2895,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["tinycolor",{"_index":2548,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["tinycolor(hex",{"_index":2592,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(10",{"_index":2595,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(15",{"_index":2597,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(18",{"_index":2599,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(21",{"_index":2601,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(24",{"_index":2603,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(27",{"_index":2605,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(30",{"_index":2607,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(5",{"_index":2593,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(15",{"_index":2590,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(20",{"_index":2588,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(25",{"_index":2586,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(30",{"_index":2584,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(35",{"_index":2583,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(45",{"_index":2582,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(55",{"_index":2581,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(value",{"_index":2609,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":5794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":1914,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2454,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":554,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["todo.md",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["todos",{"_index":4671,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["toggle",{"_index":1886,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["togglehelpdialog",{"_index":1356,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2471,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":2151,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["togglerepeat",{"_index":1941,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["toggleshuffle",{"_index":1942,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["togglevisualmode",{"_index":2921,"title":{},"body":{"injectables/VisualsService.html":{}}}],["token",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["toolbar",{"_index":2135,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["toolbar'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["toolbar.component",{"_index":2438,"title":{},"body":{"components/ShellComponent.html":{}}}],["toolbar.component.html",{"_index":2141,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2142,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":2134,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:106",{"_index":2160,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:112",{"_index":2162,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:123",{"_index":2155,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:127",{"_index":2169,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:131",{"_index":2170,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:135",{"_index":2167,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:140",{"_index":2158,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:144",{"_index":2164,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:148",{"_index":2166,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:152",{"_index":2157,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:156",{"_index":2153,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:160",{"_index":2168,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:29",{"_index":2172,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2174,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":2171,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":2173,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:34",{"_index":2176,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar/player",{"_index":2133,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["tools",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["tooltips",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":2472,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2433,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2415,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1390,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1708,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1393,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":95,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["track.album",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1593,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1596,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.hash",{"_index":284,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":2057,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":2061,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":2060,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.original",{"_index":2065,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.original",{"_index":2063,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":2059,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.hash",{"_index":2318,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1595,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1594,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackby",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["trackbyalbum",{"_index":1561,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":282,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1562,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":281,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyhash",{"_index":1563,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbyhash(index",{"_index":283,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["tracking",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["trackmetadata",{"_index":737,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["tracks().length",{"_index":1592,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tracks.push(...albumtracks",{"_index":269,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trademark",{"_index":5643,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":5626,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2906,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":659,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":660,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["transitions",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["translate",{"_index":5523,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2796,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["treaty",{"_index":5568,"title":{},"body":{"license.html":{}}}],["tree",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trial",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["trials",{"_index":5283,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":2349,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menu",{"_index":2354,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menudata",{"_index":2351,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.openmenu",{"_index":2353,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["true",{"_index":657,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["ts",{"_index":2022,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["tsconfig",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":3503,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tslint",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["ttry",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1190,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5703,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":745,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["types",{"_index":2024,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["types/node",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["typing",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["ubuntu",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2309,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":321,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["um",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["unconditional",{"_index":5629,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":5578,"title":{},"body":{"license.html":{}}}],["und",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":3062,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["understands",{"_index":5677,"title":{},"body":{"license.html":{}}}],["uneeded",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["unfair",{"_index":5539,"title":{},"body":{"license.html":{}}}],["unicorn",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniquealbums().length",{"_index":1589,"title":{},"body":{"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists().length",{"_index":1587,"title":{},"body":{"components/LibraryComponent.html":{}}}],["unit",{"_index":5822,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":5422,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1402,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1349,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["unsubscribe",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["update.service",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":2310,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["updateinterval",{"_index":2900,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1636,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1648,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updates",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["updateservice",{"_index":354,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{}}}],["uploads",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":5453,"title":{},"body":{"license.html":{}}}],["url",{"_index":723,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1430,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2832,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":631,"title":{},"body":{"injectables/AudioService.html":{}}}],["url.createobjecturl(new",{"_index":1766,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.original",{"_index":1801,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumb",{"_index":1803,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1789,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":632,"title":{},"body":{"injectables/AudioService.html":{}}}],["urls",{"_index":1765,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["urlsearchparams",{"_index":1503,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["usage",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["useclass",{"_index":5777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2501,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":5769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":925,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":5696,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":5399,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1682,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1683,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":5771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1684,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":3258,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utc",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":5545,"title":{},"body":{"license.html":{}}}],["v0.10.0",{"_index":5307,"title":{},"body":{"changelog.html":{}}}],["v0.11.0",{"_index":5305,"title":{},"body":{"changelog.html":{}}}],["v0.12.0",{"_index":5303,"title":{},"body":{"changelog.html":{}}}],["v0.13.0",{"_index":5301,"title":{},"body":{"changelog.html":{}}}],["v0.14.0",{"_index":5299,"title":{},"body":{"changelog.html":{}}}],["v0.15.0",{"_index":5295,"title":{},"body":{"changelog.html":{}}}],["v0.16.0",{"_index":5292,"title":{},"body":{"changelog.html":{}}}],["v0.17.0",{"_index":5289,"title":{},"body":{"changelog.html":{}}}],["v0.18.0",{"_index":5285,"title":{},"body":{"changelog.html":{}}}],["v0.19.0",{"_index":5278,"title":{},"body":{"changelog.html":{}}}],["v0.20.0",{"_index":5276,"title":{},"body":{"changelog.html":{}}}],["v0.21.0",{"_index":5271,"title":{},"body":{"changelog.html":{}}}],["v0.22.0",{"_index":5269,"title":{},"body":{"changelog.html":{}}}],["v0.23.0",{"_index":5265,"title":{},"body":{"changelog.html":{}}}],["v0.24.0",{"_index":5258,"title":{},"body":{"changelog.html":{}}}],["v0.25.0",{"_index":5256,"title":{},"body":{"changelog.html":{}}}],["v0.28.0",{"_index":5253,"title":{},"body":{"changelog.html":{}}}],["v0.29.0",{"_index":5251,"title":{},"body":{"changelog.html":{}}}],["v0.4.0",{"_index":5319,"title":{},"body":{"changelog.html":{}}}],["v0.5.0",{"_index":5317,"title":{},"body":{"changelog.html":{}}}],["v0.6.0",{"_index":5315,"title":{},"body":{"changelog.html":{}}}],["v0.7.0",{"_index":5313,"title":{},"body":{"changelog.html":{}}}],["v0.8.0",{"_index":5311,"title":{},"body":{"changelog.html":{}}}],["v0.9.0",{"_index":5309,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":5245,"title":{},"body":{"changelog.html":{}}}],["v1.0.1",{"_index":5243,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":5241,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":5239,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":5234,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":5232,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":5228,"title":{},"body":{"changelog.html":{}}}],["v1.10.0",{"_index":5159,"title":{},"body":{"changelog.html":{}}}],["v1.11.0",{"_index":5154,"title":{},"body":{"changelog.html":{}}}],["v1.11.1",{"_index":5149,"title":{},"body":{"changelog.html":{}}}],["v1.11.10",{"_index":5131,"title":{},"body":{"changelog.html":{}}}],["v1.11.11",{"_index":5129,"title":{},"body":{"changelog.html":{}}}],["v1.11.12",{"_index":5127,"title":{},"body":{"changelog.html":{}}}],["v1.11.2",{"_index":5147,"title":{},"body":{"changelog.html":{}}}],["v1.11.3",{"_index":5145,"title":{},"body":{"changelog.html":{}}}],["v1.11.4",{"_index":5143,"title":{},"body":{"changelog.html":{}}}],["v1.11.5",{"_index":5141,"title":{},"body":{"changelog.html":{}}}],["v1.11.6",{"_index":5139,"title":{},"body":{"changelog.html":{}}}],["v1.11.7",{"_index":5137,"title":{},"body":{"changelog.html":{}}}],["v1.11.8",{"_index":5135,"title":{},"body":{"changelog.html":{}}}],["v1.11.9",{"_index":5133,"title":{},"body":{"changelog.html":{}}}],["v1.12.0",{"_index":5125,"title":{},"body":{"changelog.html":{}}}],["v1.13.0",{"_index":5123,"title":{},"body":{"changelog.html":{}}}],["v1.14.0",{"_index":5121,"title":{},"body":{"changelog.html":{}}}],["v1.15.0",{"_index":5119,"title":{},"body":{"changelog.html":{}}}],["v1.16.0",{"_index":5117,"title":{},"body":{"changelog.html":{}}}],["v1.17.0",{"_index":5115,"title":{},"body":{"changelog.html":{}}}],["v1.18.0",{"_index":5113,"title":{},"body":{"changelog.html":{}}}],["v1.19.0",{"_index":5101,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":5224,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":5221,"title":{},"body":{"changelog.html":{}}}],["v1.2.2",{"_index":5218,"title":{},"body":{"changelog.html":{}}}],["v1.3.0",{"_index":5215,"title":{},"body":{"changelog.html":{}}}],["v1.4.0",{"_index":5209,"title":{},"body":{"changelog.html":{}}}],["v1.4.1",{"_index":5203,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":5200,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":5197,"title":{},"body":{"changelog.html":{}}}],["v1.6.1",{"_index":5194,"title":{},"body":{"changelog.html":{}}}],["v1.6.2",{"_index":5188,"title":{},"body":{"changelog.html":{}}}],["v1.6.3",{"_index":5186,"title":{},"body":{"changelog.html":{}}}],["v1.6.4",{"_index":5184,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":5182,"title":{},"body":{"changelog.html":{}}}],["v1.7.1",{"_index":5180,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":5178,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":5174,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":5167,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":5160,"title":{},"body":{"changelog.html":{}}}],["v1.9.1",{"_index":5163,"title":{},"body":{"changelog.html":{}}}],["v10.0.0",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["v10.0.1",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["v10.0.2",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["v10.0.3",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["v10.0.4",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["v10.1.0",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["v10.2.0",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["v10.3.0",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["v10.3.1",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["v10.3.2",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["v11.0.0",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["v11.0.2",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["v11.1.0",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["v11.1.1",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["v11.1.2",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["v11.18.0",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["v11.2.0",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["v11.20.0",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["v11.22.0",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["v11.24.1",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["v11.3.0",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["v11.3.1",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["v11.30.1",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["v11.4.0",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["v11.4.1",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["v11.4.10",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["v11.4.11",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["v11.4.2",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["v11.4.3",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["v11.4.5",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["v11.4.6",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["v11.4.7",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["v11.4.8",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["v11.4.9",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["v11.5.0",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["v11.5.1",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["v11.5.10",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["v11.5.11",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["v11.5.12",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["v11.5.13",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["v11.5.14",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["v11.5.2",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["v11.5.3",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["v11.5.4",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["v11.5.5",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["v11.5.6",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["v11.5.7",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["v11.5.8",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["v11.5.9",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["v12.0.0",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["v12.0.1",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["v12.0.10",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["v12.0.11",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["v12.0.12",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["v12.0.13",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["v12.0.14",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["v12.0.15",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["v12.0.16",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["v12.0.2",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["v12.0.3",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["v12.0.4",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["v12.0.5",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["v12.0.6",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["v12.0.7",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["v12.0.8",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["v12.0.9",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["v12.2.13",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["v12.2.5",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["v12.3.0",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["v12.6.2",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["v12.8.0",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["v12.9.0",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["v13.0.0",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["v13.0.1",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["v13.0.10",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["v13.0.11",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["v13.0.12",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["v13.0.13",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["v13.0.16",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["v13.0.18",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["v13.0.19",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["v13.0.2",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["v13.0.20",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["v13.0.3",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["v13.0.5",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["v13.0.6",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["v13.0.7",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["v13.0.8",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["v13.0.9",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["v13.1.1",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["v13.1.10",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["v13.1.11",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["v13.1.12",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["v13.1.2",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["v13.1.3",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["v13.1.4",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["v13.1.5",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["v13.1.6",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["v13.1.7",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["v13.1.8",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["v13.1.9",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["v13.10.1",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["v13.11.2",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["v13.11.4",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["v13.13.0",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["v13.14.2",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["v13.15.1",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["v13.2.0",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["v13.2.1",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["v13.2.2",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["v13.2.3",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["v13.2.4",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["v13.2.5",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["v13.2.6",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["v13.22.0",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["v13.24.2",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["v13.26.0",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["v13.28.0",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["v13.29.1",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["v13.29.3",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["v13.3.0",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["v13.3.1",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["v13.3.2",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["v13.3.3",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["v13.3.4",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["v13.3.5",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["v13.31.2",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["v13.32.0",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["v13.33.0",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["v13.34.0",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["v13.35.0",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["v13.35.1",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["v13.5.1",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["v13.7.2",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["v13.7.5",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["v14",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["v14.0.0",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["v14.0.1",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["v14.0.10",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["v14.0.11",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["v14.0.12",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["v14.0.13",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["v14.0.2",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["v14.0.3",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["v14.0.4",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["v14.0.5",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["v14.0.6",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["v14.0.7",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["v14.0.8",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["v14.0.9",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["v14.1.0",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["v14.1.1",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["v14.1.10",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["v14.1.11",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["v14.1.12",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["v14.1.13",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["v14.1.14",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["v14.1.15",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["v14.1.16",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["v14.1.17",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["v14.1.18",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["v14.1.19",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["v14.1.2",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["v14.1.20",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["v14.1.23",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["v14.1.3",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["v14.1.4",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["v14.1.5",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["v14.1.6",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["v14.1.7",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["v14.1.8",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["v14.1.9",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["v15",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["v15.0.0",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["v15.0.1",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["v15.0.2",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["v15.0.3",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["v15.0.4",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["v15.0.5",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["v15.0.6",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["v15.0.7",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["v15.0.8",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["v15.0.9",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["v15.1.0",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["v15.1.1",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["v15.1.10",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["v15.1.11",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["v15.1.12",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["v15.1.13",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["v15.1.14",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["v15.1.16",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["v15.1.17",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["v15.1.2",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["v15.1.3",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["v15.1.4",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["v15.1.5",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["v15.1.6",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["v15.1.7",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["v15.1.8",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["v15.1.9",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["v15.4.4",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["v16.0.0",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["v16.0.1",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["v16.0.2",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["v16.0.3",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["v16.0.4",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["v16.0.5",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["v16.0.6",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["v17.0.1",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["v17.0.10",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["v17.0.11",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["v17.0.12",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["v17.0.13",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["v17.0.14",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["v17.0.15",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["v17.0.16",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["v17.0.17",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["v17.0.18",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["v17.0.2",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["v17.0.3",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["v17.0.4",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["v17.0.5",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["v17.0.6",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["v17.0.7",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["v17.0.8",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["v17.0.9",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["v18.0.0",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["v18.0.1",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["v18.1.0",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["v18.1.1",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["v18.16.5",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["v18.2.0",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["v18.2.2",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["v18.2.3",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["v18.2.4",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["v18.2.5",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["v18.2.6",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["v18.2.7",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["v19",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["v19.0.0",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["v19.0.1",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["v19.0.10",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["v19.0.2",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["v19.0.3",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["v19.0.4",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["v19.0.5",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["v19.0.6",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["v19.0.7",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["v19.0.8",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["v19.0.9",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["v19.1.0",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["v19.1.1",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["v19.2.0",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["v19.2.1",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["v19.2.10",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["v19.2.2",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["v19.2.3",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["v19.2.4",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["v19.2.5",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["v19.2.6",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["v19.2.7",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["v19.2.8",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["v19.2.9",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["v19.3.0",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["v19.4.0",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["v19.4.1",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["v19.4.10",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["v19.4.11",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["v19.4.12",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["v19.4.13",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["v19.4.14",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["v19.4.15",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["v19.4.2",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["v19.4.3",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["v19.4.4",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["v19.4.5",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["v19.4.6",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["v19.4.7",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["v19.4.8",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["v19.4.9",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["v19.5.0",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["v19.5.1",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["v19.5.3",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["v19.5.4",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":5099,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":5105,"title":{},"body":{"changelog.html":{}}}],["v2.0.2",{"_index":5103,"title":{},"body":{"changelog.html":{}}}],["v2.5.0",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["v2.5.3",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["v2.6.0",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["v2.6.1",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["v2.6.2",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["v2.6.3",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["v2.7.0",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["v2.8.1",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["v20.0.0",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["v20.0.1",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["v20.1.0",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["v20.1.1",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["v20.1.2",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["v20.1.3",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["v20.1.4",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["v20.2.0",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["v20.2.1",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["v20.2.10",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["v20.2.11",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["v20.2.12",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["v20.2.13",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["v20.2.14",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["v20.2.15",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["v20.2.16",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["v20.2.17",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["v20.2.18",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["v20.2.19",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["v20.2.2",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["v20.2.20",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["v20.2.21",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["v20.2.22",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["v20.2.23",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["v20.2.24",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["v20.2.25",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["v20.2.26",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["v20.2.27",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["v20.2.28",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["v20.2.29",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["v20.2.3",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["v20.2.30",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["v20.2.31",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["v20.2.4",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["v20.2.5",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["v20.2.6",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["v20.2.7",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["v20.2.8",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["v20.2.9",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["v20.8.6",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["v24",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":5097,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":5095,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":5091,"title":{},"body":{"changelog.html":{}}}],["v3.0.3",{"_index":5090,"title":{},"body":{"changelog.html":{}}}],["v3.0.4",{"_index":5088,"title":{},"body":{"changelog.html":{}}}],["v3.0.5",{"_index":5086,"title":{},"body":{"changelog.html":{}}}],["v3.0.6",{"_index":5084,"title":{},"body":{"changelog.html":{}}}],["v3.0.7",{"_index":5082,"title":{},"body":{"changelog.html":{}}}],["v3.0.8",{"_index":5079,"title":{},"body":{"changelog.html":{}}}],["v3.0.9",{"_index":5075,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":5070,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":5064,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":5062,"title":{},"body":{"changelog.html":{}}}],["v3.10.0",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["v3.11.0",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":5055,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":5051,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":5047,"title":{},"body":{"changelog.html":{}}}],["v3.4.0",{"_index":5044,"title":{},"body":{"changelog.html":{}}}],["v3.4.1",{"_index":5042,"title":{},"body":{"changelog.html":{}}}],["v3.5.0",{"_index":5040,"title":{},"body":{"changelog.html":{}}}],["v3.5.1",{"_index":5038,"title":{},"body":{"changelog.html":{}}}],["v3.6.0",{"_index":5036,"title":{},"body":{"changelog.html":{}}}],["v3.7.0",{"_index":5034,"title":{},"body":{"changelog.html":{}}}],["v3.8.0",{"_index":5032,"title":{},"body":{"changelog.html":{}}}],["v3.8.1",{"_index":5030,"title":{},"body":{"changelog.html":{}}}],["v3.9.0",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["v4.2.0",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["v4.3.1",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["v4.4.0",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["v4.5.0",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["v4.6.0",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["v4.7.0",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":4993,"title":{},"body":{"changelog.html":{}}}],["v5.1.0",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["v5.2.0",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["v5.2.1",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["v5.2.10",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["v5.2.11",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["v5.2.12",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["v5.2.2",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["v5.2.3",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["v5.2.4",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["v5.2.5",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["v5.2.6",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["v5.2.7",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["v5.2.8",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["v5.2.9",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["v5.48.0",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["v6.0.0",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["v6.0.1",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["v6.1.0",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["v6.1.1",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["v6.2.0",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["v6.2.1",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["v6.2.2",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["v6.2.3",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["v6.2.4",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["v6.2.5",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["v6.2.6",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["v6.3.0",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["v6.3.1",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["v6.4.0",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["v6.4.1",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["v6.5.0",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["v6.5.1",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["v6.5.2",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["v6.5.3",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["v6.5.4",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["v6.5.5",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["v6.5.6",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["v6.5.7",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["v6.5.8",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["v6.5.9",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["v6.6.0",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["v6.6.1",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["v6.6.2",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["v6.6.3",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["v6.6.4",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["v6.6.5",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["v6.6.6",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["v6.6.7",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["v6.7.0",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["v6.7.1",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["v6.7.2",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["v6.7.3",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["v6.7.4",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["v7.0.0",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["v7.0.1",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["v7.0.2",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["v7.0.3",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["v7.0.4",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["v7.0.5",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["v7.0.6",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["v7.1.1",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["v7.13.1",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["v7.13.3",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["v7.13.4",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["v8.0.0",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["v8.0.1",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["v8.0.3",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["v8.1.0",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["v8.1.1",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["v8.1.10",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["v8.1.3",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["v8.1.4",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["v8.1.5",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["v8.1.6",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["v8.1.7",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["v8.1.8",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["v8.1.9",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["v8.26.1",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["v8.31.0",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["v8.4.21",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["v8.6.0",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["v9.0.10",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["v9.0.11",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["v9.0.2",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["v9.0.3",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["v9.0.4",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["v9.0.5",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["v9.0.6",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["v9.0.7",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["v9.0.8",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["v9.0.9",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["v9.1.0",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["v9.1.1",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["v9.1.2",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["v9.1.3",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["v9.2.0",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["v9.2.1",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["v9.2.2",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["v9.2.3",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["v9.2.4",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["validfiles",{"_index":2037,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.length",{"_index":2041,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.push",{"_index":2040,"title":{},"body":{"injectables/PlayerService.html":{}}}],["value",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":960,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":667,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value.tostring().slice(0",{"_index":665,"title":{},"body":{"pipes/BandPipe.html":{}}}],["values",{"_index":955,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["var",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":5711,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.scss",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["variant",{"_index":2239,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["various",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verfügbar",{"_index":2668,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":5376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle).then((granted",{"_index":893,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":922,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2653,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2651,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2662,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2655,"title":{},"body":{"injectables/UpdateService.html":{}}}],["versions",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["very",{"_index":1814,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["vi",{"_index":5547,"title":{},"body":{"license.html":{}}}],["via",{"_index":5695,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":831,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["vibrant.from(url).getpalette",{"_index":1849,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1724,"title":{},"body":{"injectables/MetadataService.html":{}}}],["view",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":950,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2421,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('menutrigger",{"_index":2271,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2274,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild>('eqcanvas",{"_index":945,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["viewport",{"_index":2286,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2322,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2339,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2292,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2313,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2345,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2338,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":5562,"title":{},"body":{"license.html":{}}}],["virtual",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1105,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["visible",{"_index":1106,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2321,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2324,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":3253,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["visualizefrequencybars",{"_index":2801,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2806,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2802,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2808,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["visualizer.component.html",{"_index":2681,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2682,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":857,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2276,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":409,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":323,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":319,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizers",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["visualizerworker",{"_index":2825,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2920,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":3243,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["visuals.types",{"_index":2817,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2762,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2759,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2758,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":309,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":412,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2690,"title":{"injectables/VisualsService.html":{}},"body":{"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2793,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":313,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["vm2",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":2238,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["volume",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{},"components/PlayerToolbarComponent.html":{}}}],["volumeicon",{"_index":2143,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["voluntarily",{"_index":5506,"title":{},"body":{"license.html":{}}}],["vulnerabilities",{"_index":5237,"title":{},"body":{"changelog.html":{}}}],["w9jds/firebase",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":2301,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":5646,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5570,"title":{},"body":{"license.html":{}}}],["waives",{"_index":5579,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2930,"title":{},"body":{"injectables/WakelockService.html":{},"changelog.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2936,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":1992,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":5377,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2043,"title":{},"body":{"injectables/PlayerService.html":{}}}],["warns",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":5433,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["wav",{"_index":1042,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["waveform",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["we're",{"_index":1130,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/PlayerService.html":{}}}],["web",{"_index":3068,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["webmanifest",{"_index":5060,"title":{},"body":{"changelog.html":{}}}],["webpack",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["webstorage",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"dependencies.html":{}}}],["webworker",{"_index":5689,"title":{},"body":{"todo.html":{}}}],["well",{"_index":5587,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1806,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2672,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":5482,"title":{},"body":{"license.html":{}}}],["whether",{"_index":5585,"title":{},"body":{"license.html":{}}}],["white",{"_index":1163,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["whitelist",{"_index":5152,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":965,"title":{},"body":{"components/EqualizerComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window",{"_index":2030,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.focus",{"_index":2033,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.showopenfilepicker",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":5463,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":5767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":5765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":5763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1628,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{},"license.html":{}}}],["withviewtransitions",{"_index":5768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":5458,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1424,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1429,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":5755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3025,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":915,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":5446,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":5590,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["writablesignal",{"_index":1170,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["writes",{"_index":2499,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":5700,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":1253,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x",{"_index":989,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y",{"_index":990,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["yield",{"_index":1741,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1156,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zone",{"_index":2820,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["zoneless",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["zu",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["zugewiesen",{"_index":1233,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  readonly searchTerm = signal('');\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : Number.NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : Number.NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('library'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  templateUrl: './app.component.html',\n  imports: [ShellComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                resetFrequencyBandGain\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nresetFrequencyBandGain(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FREQUENCY_BANDS, FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport type EqualizerGainValues = {\n  [Band in FrequencyBand]: number;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private localStorageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.localStorageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.localStorageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._eqGainNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      this._eqGainNode.disconnect(analyser);\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      this._eqGainNode.disconnect(analyser);\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = structuredClone(this.equalizerGainValues());\n    bandGains[bandFrequency] = gainValue;\n\n    this.localStorageService.store('equalizerGainValues', bandGains);\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  resetFrequencyBandGain(bandFrequency: FrequencyBand) {\n    this.setFrequencyBandGain(bandFrequency, 0);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true,\n  standalone: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand, ...arguments_: unknown[]): string {\n    if (!value) {\n      return '';\n    }\n\n    if (value = 1000 && value = 10_000) {\n      return value.toString().slice(0, 2) + 'K';\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  standalone: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | undefined): string {\n    if (!value) {\n      return '0';\n    }\n    const bitrate = Math.round(value / 1000);\n    return `${bitrate} kb/s`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton, getLoadFilesMenuEntry } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.wait(300);\n  getLoadFilesMenuEntry().click();\n\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtImage.html":{"url":"interfaces/CoverArtImage.html","title":"interface - CoverArtImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            thumbnails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnails:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtResponse.html":{"url":"interfaces/CoverArtResponse.html","title":"interface - CoverArtResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            images\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         CoverArtImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverArtImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                                VisualizerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.original)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BitratePipe } from './bitrate.pipe';\nimport { VisualizerComponent } from '../visualizer/visualizer.component';\nimport { PlayerService } from '../player.service';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [TimePipe, BitratePipe, VisualizerComponent]\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n  playerService = inject(PlayerService);\n\n  readonly coverUrl = computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.original);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = playerService.currentlyLoadedTrack();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = playerService.currentlyLoadedTrack();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                            \n                                    Readonly\n                                canvasRef\n                            \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                            \n                                drawEqualizerResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawEqualizerResponse\n                        \n                    \n                \n            \n            \n                \ndrawEqualizerResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild>('eqCanvas')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, effect, ElementRef, inject, viewChild } from '@angular/core';\nimport { AudioService } from '../audio.service';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FREQUENCY_BANDS } from '../player.types';\nimport { ThemeService } from '../../theme/theme.service';\n\n@Component({\n  selector: 'mtb-equalizer',\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  imports: [MatSliderModule],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n  themeService = inject(ThemeService);\n  readonly canvasRef = viewChild>('eqCanvas');\n\n  BANDS = FREQUENCY_BANDS;\n\n  constructor() {\n    // React to changes in equalizer values\n    effect(() => {\n      this.audioService.equalizerGainValues(); // Track the signal\n      this.audioService.baseGain(); // Track gain changes\n      this.drawEqualizerResponse();\n    });\n  }\n\n  displayFunction(value: number): string {\n    const numberValue = value.toFixed(1);\n    return numberValue + ' dB';\n  }\n\n  drawEqualizerResponse(): void {\n    if (!this.canvasRef()) return;\n\n    const canvas = this.canvasRef()!.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw grid lines\n    ctx.strokeStyle = '#dddddd';\n    ctx.lineWidth = 0.2;\n\n    // Horizontal grid lines (every 3dB)\n    for (let db = -12; db  {\n      return ((Math.log10(freq) - Math.log10(minFreq)) / (Math.log10(maxFreq) - Math.log10(minFreq))) * width;\n    };\n\n    // Draw frequency response curve with gain applied\n    ctx.strokeStyle = this.themeService.primaryColor;\n    ctx.lineWidth = 3;\n\n    const freqPoints: { x: number; y: number }[] = [];\n\n    // Start with the lowest frequency\n    freqPoints.push({\n      x: 0,\n      y: height / 2 - ((eqValues[this.BANDS[0]] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw points for each frequency band with gain applied\n    for (const freq of this.BANDS) {\n      const x = getXPos(freq);\n      // Apply gain influence to the curve\n      const y = height / 2 - ((eqValues[freq] + (gainValue - 1) * 12) * height) / 24;\n      freqPoints.push({ x, y });\n    }\n\n    // End with the highest frequency\n    freqPoints.push({\n      x: width,\n      y: height / 2 - ((eqValues[this.BANDS.at(-1)!] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw curve through points\n    ctx.beginPath();\n    ctx.moveTo(freqPoints[0].x, freqPoints[0].y);\n\n    for (let i = 0; i  freq >= minFreq && freq = 1000 ? `${freq / 1000}k` : `${freq}`;\n      ctx.fillText(label, x, height - 5);\n    }\n\n    // Display gain value\n    ctx.fillStyle = this.themeService.accentColor;\n    ctx.font = 'bold 12px Arial';\n    ctx.textAlign = 'right';\n    ctx.fillText(`Gain: ${gainValue.toFixed(1)}x`, width - 10, 20);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  @for (band of BANDS; track band; let i = $index) {\n    \n      \n        {{ band | band }}-->\n        \n      \n    \n  }\n\n  \n    \n      GAIN-->\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          @for (band of BANDS; track band; let i = $index) {                  {{ band | band }}-->                    }            GAIN-->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                fileHandlesDropped\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileHandlesDropped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n  readonly fileHandlesDropped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n\n    // Try to get file handles first\n    if (event.dataTransfer?.items && 'getAsFileSystemHandle' in event.dataTransfer.items[0]) {\n      try {\n        const fileHandles: FileSystemFileHandle[] = [];\n        const promises: Promise[] = [];\n\n        for (const item of Array.from(event.dataTransfer.items)) {\n          const promise = (item as any).getAsFileSystemHandle().then((handle: any) => {\n            if (handle && handle.kind === 'file') {\n              fileHandles.push(handle);\n            }\n          });\n          promises.push(promise);\n        }\n\n        // When all promises are resolved, emit the file handles\n        Promise.all(promises)\n          .then(() => {\n            if (fileHandles.length > 0) {\n              this.fileHandlesDropped.emit(fileHandles);\n            } else {\n              // Fall back to regular files if no file handles were obtained\n              this.handleFileFallback(event);\n            }\n          })\n          .catch(() => {\n            // Fall back to regular files on error\n            this.handleFileFallback(event);\n          });\n\n        return; // Exit early - we're handling with file handles\n      } catch (error) {\n        // Fall through to file fallback\n        console.warn('File System Access API failed:', error);\n      }\n    }\n\n    // Fallback to regular files\n    this.handleFileFallback(event);\n  }\n\n  private handleFileFallback(event: DragEvent) {\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (const file of Array.from(droppedFiles)) {\n      if (file && this.allowedTypes().includes(file.type)) {\n        files.push(file);\n      }\n    }\n    this.filesDroped.emit(files);\n  }\n}\n\n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\nimport { WritableSignal } from '@angular/core';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle: WritableSignal;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService implements FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  private files: File[] = [];\n\n  constructor() {\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  readonly currentFolderHandle = signal(undefined);\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            NgArrayPipesModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatHint\n                            FormsModule\n                            MatFormField\n                            MatInput\n                            MatPrefix\n                            MatSuffix\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                filteredBySerchterm\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Readonly\n                                selectedArtist\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:242\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:238\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:246\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredBySerchterm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedArtist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : Number.NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : Number.NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  readonly searchTerm = signal('');\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : Number.NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : Number.NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('library'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n    \n        @if (metadataService.processing()) {\n  {{ metadataService.statusText() }}\n}\n\n\n  \n    \n      \n        ALL ({{ uniqueArtists().length }})\n        \n          \n            \n           \n      \n        {{ artist }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        ALL ({{ uniqueAlbums().length }})\n        \n          \n            \n           \n      \n        \n          @if (album && album.coverUrl) {\n            \n          }\n        \n        {{ album.name }}{{ album.year ? ' | ' + album.year : '' }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        ALL ({{ tracks().length }})\n        \n          \n            \n          \n        \n      \n      \n        \n          @if (track && track.coverUrl) {\n            \n          }\n        \n        @if (selectedAlbum()) {\n          {{ track.track ? track.track + '. ' : '' }}{{ track.title || track.fileName }}\n        } @else {\n          {{ track.title || track.fileName }}\n        }\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ tracks().length }} entries\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (metadataService.processing()) {  {{ metadataService.statusText() }}}                    ALL ({{ uniqueArtists().length }})                                                       {{ artist }}                                                                          Add to Playlist                          ALL ({{ uniqueAlbums().length }})                                                                 @if (album && album.coverUrl) {                      }                {{ album.name }}{{ album.year ? \\' | \\' + album.year : \\'\\' }}                                                                          Add to Playlist                          ALL ({{ tracks().length }})                                                                              @if (track && track.coverUrl) {                      }                @if (selectedAlbum()) {          {{ track.track ? track.track + \\'. \\' : \\'\\' }}{{ track.title || track.fileName }}        } @else {          {{ track.title || track.fileName }}        }                                                                          Add to Playlist            @if (searchTerm()) {                }  {{ tracks().length }} entries'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processing\n                            \n                            \n                                    Readonly\n                                processingFile\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                statusText\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.filesToProcess() > 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processingFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        statusText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\nimport SparkMD5 from 'spark-md5';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  readonly processing = computed(() => {\n    return this.filesToProcess() > 0;\n  });\n\n  readonly processingFile = signal('');\n\n  readonly statusText = computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        this.processingFile.set(fileData.file.name);\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    this.processingFile.set(fileData.file.name + ' - Generating hash...');\n    const hash = await generateFileHash(fileData.file);\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('library', hash));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumb === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    this.processingFile.set(fileData.file.name + ' - Reading tags...');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n\n    if (!tags) {\n      // if no tags\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverPicture | undefined;\n\n    if (this.useWebMetainfos()) {\n      if (tags.artist && tags.album) {\n        this.processingFile.set(fileData.file.name + ' - Getting cover pictures...');\n        coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n        if (!coverUrls) {\n          coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n        }\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n    this.processingFile.set(fileData.file.name + ' - Reading colors...');\n    if (coverUrls?.original) {\n      palette = await extractColorsWithNodeVibrant(coverUrls.original);\n    } else if (tags.picture) {\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithNodeVibrant(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      hash: hash,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumb: this.PLACEHOLDER_URL, original: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('library', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.original === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl.original.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.original);\n      }\n      if (meta.coverUrl.thumb.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumb);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nasync function generateFileHash(file: File): Promise {\n  const spark = new SparkMD5.ArrayBuffer();\n  const fileSize = file.size;\n\n  // For very small files, hash the entire content\n  if (fileSize  1 * 1024 * 1024) {\n    const middlePos = Math.floor(fileSize / 2) - Math.floor(chunkSize / 2);\n    const middleChunk = await file.slice(middlePos, middlePos + chunkSize).arrayBuffer();\n    spark.append(middleChunk);\n  }\n\n  // For files larger than 8MB, add quarter and three-quarter samples\n  if (fileSize > 8 * 1024 * 1024) {\n    const quarterPos = Math.floor(fileSize * 0.25);\n    const quarterChunk = await file.slice(quarterPos, quarterPos + chunkSize).arrayBuffer();\n    spark.append(quarterChunk);\n\n    const threeQuarterPos = Math.floor(fileSize * 0.75);\n    const threeQuarterChunk = await file.slice(threeQuarterPos, threeQuarterPos + chunkSize).arrayBuffer();\n    spark.append(threeQuarterChunk);\n  }\n\n  // Last chunk - often contains important metadata in audio files\n  const endChunk = await file.slice(Math.max(0, fileSize - chunkSize), fileSize).arrayBuffer();\n  spark.append(endChunk);\n\n  return spark.end();\n}\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  try {\n    const palette = await Vibrant.from(url).getPalette();\n    return {\n      vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n      darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n      lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n      muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n      darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n      lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n    };\n  } catch (error) {\n    console.error('Error extracting colors with Vibrant:', error);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  templateUrl: './metadata-settings.component.html',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule]\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('library').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzReleaseGroup.html":{"url":"interfaces/MusicbrainzReleaseGroup.html","title":"interface - MusicbrainzReleaseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzReleaseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            first-release-date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first-release-date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first-release-date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzResponse.html":{"url":"interfaces/MusicbrainzResponse.html","title":"interface - MusicbrainzResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            release-groups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release-groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release-groups:         MusicbrainzReleaseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MusicbrainzReleaseGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [PlaylistComponent, MatButtonModule, MatIconModule, CoverDisplayComponent, MatToolbarModule, MatTooltipModule, MatSliderModule, MatMenuModule]\n})\nexport default class PlayerComponent implements OnInit {\n  private titleService = inject(TitleService);\n  private fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                playTrackByHash\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                removeTrackFromPlaylist\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrackByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrackByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:254\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:236\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTrackFromPlaylist\n                        \n                    \n                \n            \n            \n                \nremoveTrackFromPlaylist(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:298\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:302\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:281\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:335\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  readonly durationSeconds = computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Focus the window first to ensure we're the active window\n        window.focus();\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n\n        const validFiles: FileData[] = [];\n\n        for (const fileHandle of launchParameters.files) {\n          try {\n            const file = await fileHandle.getFile();\n            if (ALLOWED_MIMETYPES.includes(file.type)) {\n              validFiles.push({ file, fileHandle });\n            }\n          } catch (error) {\n            console.error('Error processing file:', error);\n          }\n        }\n\n        if (validFiles.length) {\n          await this.addFilesToPlaylist(...validFiles);\n          // If you want to play the first file immediately\n          // if (validFiles.length && this.currentPlaylist().length) {\n          //   const newTrack = this.currentPlaylist()[this.currentPlaylist().length - validFiles.length];\n          //   await this.playTrack(newTrack);\n          // }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.original ? [{ src: track.metadata.coverUrl.original, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.hash === song.metadata?.hash)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  removeTrackFromPlaylist(track: Track) {\n    // If the removed track is currently loaded, stop playback\n    if (this.currentlyLoadedTrack() === track) {\n      void this.stop();\n    }\n\n    // If the removed track is currently selected, deselect it\n    if (this.selectedTrack() === track) {\n      this.selectedTrack.set(undefined);\n    }\n    // Update the playlist by filtering out the specified track\n    this.currentPlaylist.update((playlist) => playlist.filter((t) => t !== track));\n  }\n\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async playTrackByHash(hash: string) {\n    const playlist = this.currentPlaylist();\n\n    const track = playlist.find((playlistTrack) => playlistTrack.metadata?.hash === hash);\n    if (track) {\n      await this.playTrack(track);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerToolbarComponent.html":{"url":"components/PlayerToolbarComponent.html","title":"component - PlayerToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-toolbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            MatIcon\n                            MatIconButton\n                            MatMenu\n                            MatSlider\n                            MatSliderThumb\n                            MatToolbar\n                            MatTooltip\n                            TimePipe\n                            MatMenuTrigger\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player-toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                fileLoaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadLastDirectory\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showFilePickerAndLoadFiles\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLastDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLastDirectory()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showFilePickerAndLoadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    showFilePickerAndLoadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileLoaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileLoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatMenu, MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { TimePipe } from '../time.pipe';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { PlayerService } from '../player.service';\nimport { AudioService } from '../audio.service';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { GamepadAxes, GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { HotkeysService } from '../../services/hotkeys/hotkeys.service';\nimport { FileLoaderService } from '../file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Component({\n  selector: 'player-toolbar',\n  imports: [CommonModule, MatIcon, MatIconButton, MatMenu, MatSlider, MatSliderThumb, MatToolbar, MatTooltip, TimePipe, MatMenuTrigger, MatMenuModule],\n  templateUrl: './player-toolbar.component.html',\n  styleUrl: './player-toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayerToolbarComponent implements OnInit, OnDestroy {\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  metadataService = inject(MetadataService);\n\n  readonly volumeIcon = computed(() => this.getVolumeIconForLevel(this.audioService.volume()));\n\n  ngOnInit() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showFilePickerAndLoadFiles());\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol \n    \n\n    \n        \n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n    \n      \n      Load folder/files...\n    \n    @if (fileLoaderService.currentFolderHandle()) {\n      \n        \n        Load last directory\n      \n    }\n  \n\n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (audioService.isPlaying()) {          } @else {          }                                                    Load folder/files...        @if (fileLoaderService.currentFolderHandle()) {                      Load last directory          }      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                menuTrigger\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                onContextMenu\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContextMenu\n                        \n                    \n                \n            \n            \n                \nonContextMenu(event: MouseEvent, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        menuTrigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('menuTrigger')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'mtb-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    FormsModule,\n    MatMenuModule\n  ]\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  private destroRef = inject(DestroyRef);\n\n  readonly menuTrigger = viewChild('menuTrigger');\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.playerService.currentPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.playerService.currentPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.playerService.currentPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.hash === currentTrack.metadata?.hash);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (\n        (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash\n      );\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByHash(index: number, song: Track): string {\n    return song.metadata.hash;\n  }\n\n  onContextMenu(event: MouseEvent, song: Track): void {\n    event.preventDefault();\n    const trigger = this.menuTrigger();\n    if (!trigger) return;\n    trigger.menuData = { song: song };\n\n    // Open with position\n    trigger.openMenu();\n\n    // set position\n    if (trigger.menu) {\n      // Forcefully reset the menu position after it's opened\n      setTimeout(() => {\n        const overlayRef = document.querySelector('.cdk-overlay-pane:last-child') as HTMLElement;\n        if (overlayRef) {\n          overlayRef.style.position = 'absolute';\n          overlayRef.style.left = `${event.clientX}px`;\n          overlayRef.style.top = `${event.clientY}px`;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying) {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n\n\n  \n\n\n\n\n  \n    \n      \n      Remove from playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying) {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }                          Remove from playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverPicture.html":{"url":"interfaces/RemoteCoverPicture.html","title":"interface - RemoteCoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            original\n                                        \n                                \n                                \n                                        \n                                            thumb\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        original\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumb:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent]\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                                FileDropOverlayComponent\n                                PlayerToolbarComponent\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                    Async\n                                onFileHandlesDropped\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFileHandlesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFileHandlesDropped(files: FileSystemFileHandle[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileSystemFileHandle[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { PlayerService } from '../player/player.service';\nimport { ALLOWED_MIMETYPES, FileData } from '../player/file-loader-service/file-loader.helpers';\nimport { PlayerToolbarComponent } from '../player/player-toolbar/player-toolbar.component';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../player/metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-shell',\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss',\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterOutlet,\n    FileDropOverlayComponent,\n    PlayerToolbarComponent,\n    MatProgressBar\n  ]\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  private router = inject(Router);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  playerService = inject(PlayerService);\n  metadataService = inject(MetadataService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  async onFileHandlesDropped(files: FileSystemFileHandle[]) {\n    const fileData: FileData[] = [];\n    for (const fileHandle of files) {\n      const file = await fileHandle.getFile();\n      fileData.push({ file, fileHandle });\n    }\n\n    return this.playerService.addFilesToPlaylist(...fileData);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n\n      @if (loaderService.isLoading()) {\n        \n      }\n\n      \n\n      @let currentTrack = playerService.currentlyLoadedTrack();\n      {{ currentTrack?.metadata?.artist ? currentTrack?.metadata?.artist + ' - ' : '' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n    \n\n    @if (metadataService.processionPercent() \n    }\n    \n\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }            @let currentTrack = playerService.currentlyLoadedTrack();      {{ currentTrack?.metadata?.artist ? currentTrack?.metadata?.artist + \\' - \\' : \\'\\' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}        @if (metadataService.processionPercent()     }              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  templateUrl: './storage-settings.component.html',\n  imports: [MatCardModule, MatButtonModule]\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accentColor\n                            \n                            \n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                primaryColor\n                            \n                            \n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FALLBACK_ACCENT_COLOR\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FALLBACK_PRIMARY_COLOR\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { TinyColor } from '@thebespokepixel/es-tinycolor';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Color } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  primaryColor = FALLBACK_PRIMARY_COLOR;\n\n  accentColor = FALLBACK_ACCENT_COLOR;\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  primaryColorPalette: Color[] = [];\n  accentColorPalette: Color[] = [];\n\n  initializeTheme() {\n    this.setOverlayClass();\n    this.setPrimaryColor(this.primaryColor);\n    this.setAccentColor(this.accentColor);\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n    this.localStorageService.store('darkMode', darkMode);\n    this.setOverlayClass();\n  }\n\n  setColors(colors: ColorConfig) {\n    this.setPrimaryColor(colors.mainColor);\n    this.setAccentColor(colors.peakColor);\n  }\n\n  private setPrimaryColor(color?: string) {\n    this.primaryColor = color || FALLBACK_PRIMARY_COLOR;\n    this.primaryColorPalette = this.computeColors(this.primaryColor);\n\n    for (const clr of this.primaryColorPalette) {\n      document.documentElement.style.setProperty(`--theme-primary-${clr.name}`, clr.hex);\n    }\n\n    this.meta.addTag({ name: 'theme-color', content: this.primaryColor }, true);\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor });\n  }\n\n  private setAccentColor(color?: string) {\n    this.accentColor = color || FALLBACK_ACCENT_COLOR;\n    this.accentColorPalette = this.computeColors(this.accentColor);\n\n    for (const clr of this.accentColorPalette) {\n      document.documentElement.style.setProperty(`--theme-accent-${clr.name}`, clr.hex);\n    }\n  }\n\n  private setOverlayClass() {\n    if (this.darkMode()) {\n      document.documentElement.style.setProperty('--app-color-scheme', 'dark');\n    } else {\n      document.documentElement.style.setProperty('--app-color-scheme', 'light');\n    }\n  }\n\n  private computeColors(hex: string): Color[] {\n    return [\n      this.getColorObject(new TinyColor(hex).lighten(55), '0'),\n      this.getColorObject(new TinyColor(hex).lighten(45), '10'),\n      this.getColorObject(new TinyColor(hex).lighten(35), '20'),\n      this.getColorObject(new TinyColor(hex).lighten(30), '25'),\n      this.getColorObject(new TinyColor(hex).lighten(25), '30'),\n      this.getColorObject(new TinyColor(hex).lighten(20), '35'),\n      this.getColorObject(new TinyColor(hex).lighten(15), '40'),\n      this.getColorObject(new TinyColor(hex), '50'),\n      this.getColorObject(new TinyColor(hex).darken(5), '60'),\n      this.getColorObject(new TinyColor(hex).darken(10), '70'),\n      this.getColorObject(new TinyColor(hex).darken(15), '80'),\n      this.getColorObject(new TinyColor(hex).darken(18), '90'),\n      this.getColorObject(new TinyColor(hex).darken(21), '95'),\n      this.getColorObject(new TinyColor(hex).darken(24), '98'),\n      this.getColorObject(new TinyColor(hex).darken(27), '99'),\n      this.getColorObject(new TinyColor(hex).darken(30), '100')\n    ];\n  }\n\n  private getColorObject(value: TinyColor, name: string): Color {\n    const color = new TinyColor(value);\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name: name,\n      hex: color.toHexString(false),\n      darkContrast: color.getBrightness() > lightnessLimit\n      // darkContrast: c.isLight()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  templateUrl: './theme-settings.component.html',\n  imports: [MatCardModule, MatCheckboxModule]\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true,\n  standalone: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule]\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]',\n  standalone: true\n})\nexport class VisualsDirective implements OnDestroy {\n  // private zone = inject(NgZone);\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\nv20.2.31\n\nchore: update ngx-indexed-db to version 20.0.0 6f996f4\n\nv20.2.30\n\n30 March 2025\n\n\nRelease 20.2.30 b2466b6\nfix:  player test by adding click on menu entry 02fa299\n\nv20.2.29\n\n29 March 2025\n\n\nRelease 20.2.29 8d40437\nrefactor: remove unused router import and enhance playlist component styling 44760bc\n\nv20.2.28\n\n29 March 2025\n\n\nfeat: display processing status during file uploads 3ad6777\nRelease 20.2.28 52990f8\n\nv20.2.27\n\n29 March 2025\n\n\nRelease 20.2.27 327cf90\nfix: handle NaN values for year in metadata processing 908c69c\n\nv20.2.26\n\n29 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v14.0.1 #556\nRelease 20.2.26 8145e20\nfeat: diasble load files button when processing files, remove appenOnly for artists list, use pointer on playlist items cf270fe\n\nv20.2.25\n\n29 March 2025\n\n\nRelease 20.2.25 97ea341\nfeat: update library component to display counts of unique artists, albums, and tracks; fix directory handle update in file loader, sort artists alphabetically e831ba8\n\nv20.2.24\n\n29 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v14 #555\nfeat: enhance color extraction function with error handling 5d555b4\nRelease 20.2.24 3f1a89d\n\nv20.2.23\n\n28 March 2025\n\n\nfeat: refactor track metadata handling and update database configuration, du real file hasing with sparkmd5, remove angular animations de61df5\nRelease 20.2.23 7fbbb95\n\nv20.2.22\n\n23 March 2025\n\n\nfeat: eq canvas working 875f9d3\nfeat: update equalizer frequency bands and enhance UI interactions cc5aab7\nfeat: reposition search input in layout and restore its visibility f44b305\n\nv20.2.21\n\n23 March 2025\n\n\nchore(deps): update dependency angular-eslint to v19.3.0 #550\nRelease 20.2.21 03062a3\nfeat: remove init from file loader service. use signal for current dir handle, only show reload entry when dirHandle exists 0e3c35d\nfeat: refactor cover display to use player service for current track and cover URL, show artist and title on toolbar on the right side 9bb71cc\n\nv20.2.20\n\n23 March 2025\n\n\nfeat: add context menu to remove track from playlist 713322f\nRelease 20.2.20 bfccd74\n\nv20.2.19\n\n23 March 2025\n\n\nfix: update audio service connections to add analyser after eq, get rid of component contents 123835c\nfix: move reload button to menu of load icon button 6655a9c\nRelease 20.2.19 af96dfb\n\nv20.2.18\n\n23 March 2025\n\n\nfix: put metadata progress bar under toolbar 51dfdf7\nRelease 20.2.18 b63676f\nfix: adjust launch handler placement in web manifest faec05d\n\nv20.2.17\n\n23 March 2025\n\n\nRelease 20.2.17 9644dde\nfix: correct formatting of launch handler in web manifest aff4dea\n\nv20.2.16\n\n23 March 2025\n\n\nfix: update launch handler to focus existing client mode and improve file handling 2aee517\nRelease 20.2.16 b6a809a\n\nv20.2.15\n\n23 March 2025\n\n\nRelease 20.2.15 4452ab9\nfeat: add launch handler for existing client mode in web manifest 7579ea9\n\nv20.2.14\n\n23 March 2025\n\n\nfeat: get FileSystemFileHandles for dropped files if possible falling back to File usage, fix launch with app by changing object 93f4474\nRelease 20.2.14 ff39494\nfeat: update font styling in player toolbar and add standard font class 36e8709\n\nv20.2.13\n\n22 March 2025\n\n\nfeat: fix grid lines in library 4aa52ed\nRelease 20.2.13 da978b1\n\nv20.2.12\n\n22 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.35.1 #549\nRelease 20.2.12 0885ef3\nfeat: refactor player component and extract toolbar into a separate component 7e11361\nfeat: enhance layout and styling of player and library components, player toolbar in shell, fixed layouts 9fb859e\n\nv20.2.11\n\n22 March 2025\n\n\nRelease 20.2.11 be7f8fc\nfeat: update track playback method to play by CRC instead of last track in playlist 862a41d\n\nv20.2.10\n\n22 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.35.0 #547\nchore: remove search functionality from playlist and add it to library 99126c0\nfeat: enhance library and playlist components with improved track selection and rendering 7667c50\nRelease 20.2.10 b8a2ac7\n\nv20.2.9\n\n22 March 2025\n\n\nRelease 20.2.9 d933c1e\nchore: update Angular and related dependencies to latest versions 9ea103a\n\nv20.2.8\n\n17 March 2025\n\n\nfeat: refactor progress tracking to use MetadataService and improve track rendering with trackBy functions, use generator for addFilesToLibrary ea0dd16\nfix: fix settings persistence, support etag embedded cover pictures again 5effed4\nfeat: update cover display to use background image for album covers and improve styling 7fa33e8\n\nv20.2.7\n\n16 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.34.0 #541\nfeat: add progress bar for file processing and enhance artist/album display in library, add an add all artist button, show track number and year in library, remove console warns, remember filename in metadata 7353f84\nRelease 20.2.7 dfa400c\n\nv20.2.6\n\n15 March 2025\n\n\nRelease 20.2.6 34663be\nfix: correct formatting in .npmrc for registry configuration f37d715\n\nv20.2.5\n\n15 March 2025\n\n\nRelease 20.2.5 452f074\n\nv20.2.4\n\n15 March 2025\n\n\nRelease 20.2.4 7d3846a\n\nv20.2.3\n\n15 March 2025\n\n\nRelease 20.2.3 0107dc5\nfeat: enhance file handling by introducing FileData interface and updating related services, save file handles in indexed db, fix library and add context menu to tracks c3bb2d1\nfeat: implement virtual scrolling for artists, albums, and tracks; add menus for album and track actions, add (All) option, doubleclick adds and navigates eb5338b\n\nv20.2.2\n\n15 March 2025\n\n\nchore(deps): update Angular and related dependencies to latest versions f0442a7\nRelease 20.2.2 f3f93f6\n\nv20.2.1\n\n11 March 2025\n\n\nfix(deps): update dependency music-metadata to v11.0.2 #540\nchore(deps): update typescript-eslint monorepo to v8.26.1 #529\nRelease 20.2.1 c6dff5e\n\nv20.2.0\n\n11 March 2025\n\n\nfeat: scroll to track when playing starts and its not in view b9445d4\nfeat: remove polyfills from project configuration a0517fe\nfeat: add search functionality to playlist with input field and filtering logic b925747\n\nv20.1.4\n\n11 March 2025\n\n\nrefactor: replace BaseSubscribingClass with DestroyRef 72be3d3\nRelease 20.1.4 5e77b33\nfeat: add view transitions to router configuration b2dcbb8\n\nv20.1.3\n\n9 March 2025\n\n\nfeat: enhance ID3 tags extraction and improve metadata handling, refactorings a11eb42\nRelease 20.1.3 305aec6\n\nv20.1.2\n\n9 March 2025\n\n\nRelease 20.1.2 ba13cfe\nrefactor: change to zoneless change detection 3f668a5\n\nv20.1.1\n\n9 March 2025\n\n\nfeat: update typography settings and optimize font loading in HTML 722901c\nRelease 20.1.1 858ff56\n\nv20.1.0\n\n9 March 2025\n\n\nRelease 20.1.0 d78443f\nfeat: refactor cover and playlist components for improved performance, performance hack für visuals f1580e8\nchore: update dependencies in package.json and package-lock.json 9e95c2d\n\nv20.0.1\n\n9 March 2025\n\n\nfeat: updated to material 3 theme, fixed dark mode handling 9b0ad09\nfeat: implement circular waveform visualization and initialize bark scale mapping 46e627b\nfeat: optimize image loading in cover and playlist components using NgOptimizedImage 79c83aa\n\nv20.0.0\n\n8 March 2025\n\n\nfeat: enhance ESLint configuration with Angular rules and TypeScript support 2b942c4\nRelease 20.0.0 d641392\nfeat: update ESLint configuration with TypeScript and SonarJS support, add custom rule overrides ef11066\n\nv19.5.4\n\n8 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.33.0 #539\nRelease 19.5.4 86a63af\nchore: update dependencies and add eslint packages c9dcf09\nfeat:  nearly complete signal refactoring also fixing long standing bugs f3a3520\n\nv19.5.3\n\n2 March 2025\n\n\nfeat: use @let syntax in templates, better VisualizerOptions types b7bb801\nRelease 19.5.3 eac8dd6\n\nv19.5.1\n\n2 March 2025\n\n\nRelease 19.5.1 8ebff84\nfeat: add circular visualization modes for frequency bars and oscilloscope 4e27dea\nfix: make gamepad and wakelock services optional to improve compatibility bb8466d\n\nv19.5.0\n\n2 March 2025\n\n\nRelease 19.5.0 3f2c562\nfix: fix file drop overlay not working as expected 94b7001\nfix: add postcss-html dependency to package.json and package-lock.json 85d2a14\n\nv19.4.15\n\n2 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.32.0 #532\nchore: update dependencies to latest versions b0d0fe4\nRelease 19.4.15 a2b1db1\nfix: update HTML components to self-closing tags 7785053\n\nv19.4.14\n\n27 February 2025\n\n\nchore: update Angular and related dependencies to version 19.2.x d8a2bf9\nRelease 19.4.14 0c889a3\n\nv19.4.13\n\n24 February 2025\n\n\nchore(deps): update actions/upload-artifact action to v4 #527\nRelease 19.4.13 9fb4192\nfix: eslint unicorn autofixes f154aed\nfeat: enhance visuals worker by optimizing data structures and pre-calculating arrays fee270f\n\nv19.4.12\n\n24 February 2025\n\n\nRelease 19.4.12 6c63788\nrefactor: remove unused dependencies 12a71dd\n\nv19.4.11\n\n23 February 2025\n\n\nRelease 19.4.11 d505863\nfix: update ESLint configuration inputs and production exclusions 6bfb6ba\n\nv19.4.10\n\n23 February 2025\n\n\nRelease 19.4.10 17e4083\n\nv19.4.9\n\n23 February 2025\n\n\nRelease 19.4.9 cf13446\nrefactor: us prive functions instead of modules c31aaa6\n\nv19.4.8\n\n23 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.31.2 #522\nrefactor: update ESLint configuration to use ES module syntax and cleanup deps 4dbf4b8\nRelease 19.4.8 0f45127\nchore: update project configuration and add dotenv-cli dependency 063d395\n\nv19.4.7\n\n23 February 2025\n\n\nRelease 19.4.7 4d9ca69\nchore: update HTML templates and ESLint configuration for consistency 33bb6c8\n\nv19.4.6\n\n23 February 2025\n\n\nchore(deps): update Angular and ESLint dependencies to latest versions 00d5b5e\nRelease 19.4.6 ab5a0f8\n\nv19.4.5\n\n4 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.3 #511\nchore(deps): update @swc/core, @types/node, and @typescript-eslint packages to latest versions 4df45ed\nRelease 19.4.5 f52095f\n\nv19.4.4\n\n2 February 2025\n\n\nchore: deps 76ace70\nRelease 19.4.4 072caca\n\nv19.4.3\n\n27 January 2025\n\n\nchore: deps a04aa39\nRelease 19.4.3 e844d5d\n\nv19.4.2\n\n24 January 2025\n\n\nchore: deps d50fcd7\nRelease 19.4.2 2e2cf66\n\nv19.4.1\n\n21 January 2025\n\n\nchore: deps c3062ed\nRelease 19.4.1 e96ef56\nchore: mise 7b8cdeb\n\nv19.4.0\n\n17 January 2025\n\n\nchore: deps 37fa04d\nRelease 19.4.0 155e1fd\nchore: readme, mise, deps 726da93\n\nv19.3.0\n\n14 January 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.1 #483\nchore: update to latest node-vibrant f306ca1\nRelease 19.3.0 ca87d69\n\nv19.2.10\n\n11 January 2025\n\n\nchore: deps a280f97\nRelease 19.2.10 15dded8\n\nv19.2.9\n\n3 January 2025\n\n\nRelease 19.2.9 bd67275\n\nv19.2.8\n\n14 December 2024\n\n\nRelease 19.2.8 af0ef42\n\nv19.2.7\n\n14 December 2024\n\n\nRelease 19.2.7 7d9d809\n\nv19.2.6\n\n11 December 2024\n\n\nchore: deps c042ae8\nchore: updated config to latest nx defaults 0a9aedc\nchore: updated config to latest nx defaults a555517\n\nv19.2.5\n\n7 December 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.28.0 #473\nRevert \"fix: disable npm caching\" f908dd2\nfix: disable npm caching 1a33b93\nRelease 19.2.5 4a42a18\n\nv19.2.4\n\n7 December 2024\n\n\nchore: deps 1a65661\nRelease 19.2.4 a19a09f\n\nv19.2.3\n\n21 November 2024\n\n\nRelease 19.2.3 dc45fe1\nfeat: migrate to application executor 0325a08\n\nv19.2.2\n\n21 November 2024\n\n\nfix: stylelint fixes 2500235\nRelease 19.2.2 b416bff\n\nv19.2.1\n\n21 November 2024\n\n\nRelease 19.2.1 8cab1e2\nfix: migrate jest and eslint to inferred plugins ee8b31b\n\nv19.2.0\n\n21 November 2024\n\n\nchore: input signal migration f8cbc65\nRelease 19.2.0 c363f4e\nfix: pass sampleRate 56a3899\n\nv19.1.1\n\n21 November 2024\n\n\nchore(deps): update angular monorepo to v19 #466\nchore(deps): update w9jds/firebase-action action to v13.26.0 #465\nchore(deps): update angularmaterial monorepo to v19 #467\nchore(config): migrate config renovate.json #468\nchore: use ng-packgr-lite builds, fix jest-preset-angular config b599685\nfix: revert ng-packgr temporarily bb34f11\nRelease 19.1.1 ada6807\n\nv19.1.0\n\n21 November 2024\n\n\nchore: ng 19 0ba1f5d\nRelease 19.1.0 d2765b8\nchore: remove console time 7b38580\n\nv19.0.10\n\n9 November 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.24.2 #460\nfix(deps): update dependency tslib to v2.8.1 #457\nRelease 19.0.10 1333d05\n\nv19.0.9\n\n9 November 2024\n\n\nchore: updates e42b61f\nRelease 19.0.9 fc998b4\n\nv19.0.8\n\n15 October 2024\n\n\nRelease 19.0.8 e4b565b\nfix: do webpack build again 10bf971\n\nv19.0.7\n\n15 October 2024\n\n\nRelease 19.0.7 308bd9f\nfix: use browser-esbuild executor fe4ebfa\n\nv19.0.6\n\n15 October 2024\n\n\nRelease 19.0.6 953bf76\nfix: use browser-esbuild executor a12f9c3\n\nv19.0.5\n\n15 October 2024\n\n\nfix(deps): update dependency tslib to v2.7.0 #450\nchore(deps): update dependency ubuntu to v24 #455\nchore(deps): update w9jds/firebase-action action to v13.22.0 #448\nRelease 19.0.5 592ac3b\n\nv19.0.4\n\n15 October 2024\n\n\nRelease 19.0.4 27acba5\nchore: eslint update (config todo) 97ccbb6\n\nv19.0.3\n\n15 October 2024\n\n\nchore: migrate to inject() 43a40a4\nfix: removed unused angular imports a0e7ce7\nRelease 19.0.3 972b1ee\n\nv19.0.2\n\n15 October 2024\n\n\nRelease 19.0.2 b8ad144\n\nv19.0.1\n\n15 October 2024\n\n\nRelease 19.0.1 7528cd4\n\nv19.0.0\n\n15 October 2024\n\n\nRelease 19.0.0 2bb5430\n\nv18.2.7\n\n15 October 2024\n\n\nchore(deps): updates ad57b9c\nRelease 18.2.7 8448134\nchange to application executor e2e1eb4\n\nv18.2.6\n\n26 August 2024\n\n\ndeps 0174ddf\nRelease 18.2.6 f0ae911\n\nv18.2.5\n\n15 August 2024\n\n\nsignals for coverdisplay, add item to playlist on by one d489b64\nRelease 18.2.5 4a66bde\n\nv18.2.4\n\n15 August 2024\n\n\nRelease 18.2.4 bbda480\nfix: big layout 8d61f2e\n\nv18.2.3\n\n15 August 2024\n\n\nchore: nx update ec1f94a\nRelease 18.2.3 72fa061\n\nv18.2.2\n\n15 August 2024\n\n\nanalyze and report esbuild bundles d597302\nRelease 18.2.2 681d4cd\nanalyze and report esbuild bundles 8626722\n\nv18.2.0\n\n15 August 2024\n\n\nfix test css class, select first in playlist after load when none selected 7a838a9\nRelease 18.2.0 38d27f1\n\nv18.1.1\n\n15 August 2024\n\n\nfeat: better axis handling for gamepad 4d47689\nmore signalös 019de24\nRelease 18.1.1 0f8e394\n\nv18.1.0\n\n15 August 2024\n\n\nRelease 18.1.0 ff778a5\nfeat: removed mobx, use signals for many things 5824006\n\nv18.0.1\n\n15 August 2024\n\n\nchore(deps): update, import types with import type e252172\nchore(deps): update e7aa58d\nRelease 18.0.1 7560dfa\n\nv18.0.0\n\n10 August 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.15.1 #438\nRelease 18.0.0 0858a77\nfix(eslint): older unused imports plugin cdb5380\n\nv17.0.18\n\n10 August 2024\n\n\nchore(deps): update 6878f22\nRelease 17.0.17 027ad79\nRelease 17.0.18 6756668\n\nv17.0.17\n\n10 August 2024\n\n\nUpdate w9jds/firebase-action action to v13.14.2 #431\nchore(deps): update 592cb7a\nRelease 17.0.17 2db5dc7\n\nv17.0.16\n\n29 July 2024\n\n\nmusic-metadata 10 7f90220\nRelease 17.0.16 80d5e14\nremoved webpack 908f395\n\nv17.0.15\n\n29 July 2024\n\n\ndeps ffe5da9\ndeps 469a890\nRelease 17.0.15 80553e8\n\nv17.0.14\n\n11 July 2024\n\n\ndeps 389407a\nRelease 17.0.14 30fec73\n\nv17.0.13\n\n7 July 2024\n\n\nUpdate dependency @typescript-eslint/utils to v8.0.0-alpha.40 #369\nUpdate w9jds/firebase-action action to v13.13.0 #423\ndeps 2389739\nRelease 17.0.13 4040b59\ndeps a0c15a4\n\nv17.0.12\n\n4 July 2024\n\n\ndeps 892689d\nRelease 17.0.12 af8a6b4\n\nv17.0.11\n\n23 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.4 #419\ndeps babdb9f\nRelease 17.0.11 5273759\n\nv17.0.10\n\n23 June 2024\n\n\ndeps 05a441e\nRelease 17.0.10 3e7b9a4\n\nv17.0.9\n\n12 June 2024\n\n\nRelease 17.0.9 a948ad5\ndeps, webstorage update 0e6195d\n\nv17.0.8\n\n12 June 2024\n\n\ndeps, webstorage update 1e660c9\nRelease 17.0.8 64a34dc\n\nv17.0.7\n\n9 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.2 #409\nUpdate dependency tslib to v2.6.3 #411\nRelease 17.0.7 2bb0e78\n\nv17.0.6\n\n9 June 2024\n\n\nnx + deps a1da736\nRelease 17.0.6 41e632f\n\nv17.0.5\n\n25 May 2024\n\n\nUpdate angularmaterial monorepo to v18 #402\nRelease 17.0.4 549bfa1\nRelease 17.0.5 ea932ef\n\nv17.0.4\n\n25 May 2024\n\n\nUpdate angular monorepo to v18 #401\nUpdate w9jds/firebase-action action to v13.10.1 #395\nRelease 17.0.4 f591692\nswitched to node 22 4f70846\n\nv17.0.3\n\n25 May 2024\n\n\nRelease 17.0.3 cb19d50\nenabled eventCoalescing e6fc6eb\n\nv17.0.2\n\n25 May 2024\n\n\nRelease 17.0.2 96bcdfc\nfixed theme 3ce805f\n\nv17.0.1\n\n25 May 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.5 #390\nng 18 7fcd244\nfixed eslint 2346f13\nnx update 4164d59\n\nv16.0.6\n\n28 April 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.2 #381\ndeps 308b3e5\nRelease 16.0.6 3233ed1\naudit fix 2f67e34\n\nv16.0.5\n\n14 April 2024\n\n\ndeps 84ac04c\nRelease 16.0.5 1a30a33\n\nv16.0.4\n\n7 April 2024\n\n\nRelease 16.0.4 5bab2a7\n\nv16.0.3\n\n16 March 2024\n\n\nRelease 16.0.3 0338bd7\nnew browserlist 013e987\nonly include Buffer in Node Polfills d7b3ea2\n\nv16.0.2\n\n16 March 2024\n\n\nRelease 16.0.2 0629b20\nfixed nx cloud token 870e50b\n\nv16.0.1\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.5.1 #372\nRelease 16.0.1 fe15d24\nfixed nx cloud token 6d2a8fe\n\nv16.0.0\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.3.1 #368\ndeps updated 11ae344\nnx update 0b2a071\nangular update c35bc38\n\nv15.1.17\n\n24 February 2024\n\n\nRelease 15.1.17 f18fa1f\n\nv15.1.16\n\n24 February 2024\n\n\nRelease 15.1.16 d2e1df8\n\nv15.1.14\n\n10 February 2024\n\n\nUpdate nrwl/nx-set-shas action to v4 #362\nUpdate w9jds/firebase-action action to v13.2.1 #358\nRelease 15.1.14 09eba6b\nRevert \"try nx agents\" 90e9f96\ntry nx agents 7362da7\n\nv15.1.13\n\n10 February 2024\n\n\ndeps cace929\nRelease 15.1.13 04dca08\nremoved last modules 0486e25\n\nv15.1.12\n\n4 February 2024\n\n\nnx update ccbf388\nRelease 15.1.12 7a8645a\n\nv15.1.11\n\n28 January 2024\n\n\nUpdate w9jds/firebase-action action to v13.1.0 #338\nUpdate actions/cache action to v4 #343\nRelease 15.1.11 1e340e1\n\nv15.1.10\n\n28 January 2024\n\n\ndeps 64d30e1\nRelease 15.1.10 a9a8e68\n\nv15.1.9\n\n20 January 2024\n\n\nRelease 15.1.9 8596088\n\nv15.1.8\n\n10 January 2024\n\n\nstylelint fixes ac02523\nRelease 15.1.8 4c8c0ad\nlint fixes 764711a\n\nv15.1.7\n\n9 January 2024\n\n\ndeps 362d9db\nRelease 15.1.7 92d89c3\n\nv15.1.6\n\n28 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #312\nRelease 15.1.6 339bd87\n\nv15.1.5\n\n28 December 2023\n\n\ndeps 4ef0700\nRelease 15.1.5 8ee0628\n\nv15.1.4\n\n15 December 2023\n\n\ndeps 998ad7c\nRelease 15.1.4 5c1346d\n\nv15.1.3\n\n10 December 2023\n\n\nRelease 15.1.3 d0b8d34\ndeps 6966d17\nnx update 678aef6\n\nv15.1.2\n\n8 December 2023\n\n\nfix seeking with slider, @switch statt @if 9934470\nRelease 15.1.2 1ebb626\n\nv15.1.1\n\n8 December 2023\n\n\nRelease 15.1.1 586ef29\nfix deploy f36895a\n\nv15.1.0\n\n8 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #310\noptimizations and typing f5c6154\noptimizations 05ddceb\noptimized icon set converter 6bd60c5\n\nv15.0.9\n\n8 December 2023\n\n\ndeps 02d4bfb\ntsconfig refactoring 7445539\nRelease 15.0.9 58fb13b\n\nv15.0.8\n\n30 November 2023\n\n\ntsconfig refactoring 275e54d\nRelease 15.0.8 f3351c2\n\nv15.0.7\n\n30 November 2023\n\n\nUpdate w9jds/firebase-action action to v12.9.0 #301\nRelease 15.0.7 7e45969\n\nv15.0.6\n\n30 November 2023\n\n\nRelease 15.0.6 063950a\ndeps 7522583\n\nv15.0.5\n\n13 November 2023\n\n\ndeps, prettier cbc6e41\nRelease 15.0.5 3bccffb\n\nv15.0.4\n\n10 November 2023\n\n\nRelease 15.0.4 1c4c67e\n\nv15.0.3\n\n10 November 2023\n\n\nRelease 15.0.3 90df676\n\nv15.0.2\n\n10 November 2023\n\n\nRelease 15.0.2 29878bc\neslint flat config 8c297a1\n\nv15.0.1\n\n10 November 2023\n\n\nNEW control flow syntax 84e91e3\nRelease 15.0.1 9dfd762\nstyleUrl instead of urls aefd739\n\nv15.0.0\n\n9 November 2023\n\n\nUpdate angular monorepo to v17 (major) #288\nUpdate angularmaterial monorepo to v17 (major) #289\nUpdate w9jds/firebase-action action to v12.8.0 #286\nUpdate actions/setup-node action to v4 #287\nRelease 15.0.0 7f1e3c1\nUpdate angular monorepo to v17 43d9b1f\nnodejs 20 builds 6f6ac17\n\nv14.1.23\n\n9 November 2023\n\n\nnx update a358906\nRelease 14.1.23 55f3319\nnx update dbc354f\n\nv14.1.20\n\n14 October 2023\n\n\nRelease 14.1.20 8d072f1\n\nv14.1.19\n\n14 October 2023\n\n\nUpdate dependency @types/node to v20.8.6 #242\nUpdate w9jds/firebase-action action to v12.6.2 #272\nRelease 14.1.19 314f02a\nRelease 14.1.18 7cf10f9\n\nv14.1.18\n\n14 October 2023\n\n\nRelease 14.1.18 a8bb04b\n\nv14.1.17\n\n14 October 2023\n\n\nRelease 14.1.17 7a66d5a\n\nv14.1.16\n\n14 October 2023\n\n\nRelease 14.1.16 4ec2e90\n\nv14.1.15\n\n7 October 2023\n\n\nRelease 14.1.15 3f73f6e\n\nv14.1.14\n\n7 October 2023\n\n\nRelease 14.1.14 db2122c\n\nv14.1.13\n\n7 October 2023\n\n\nRelease 14.1.13 a3ae7df\n\nv14.1.12\n\n7 October 2023\n\n\nRelease 14.1.12 0d0dfcb\n\nv14.1.11\n\n7 October 2023\n\n\nRelease 14.1.11 5aecee8\n\nv14.1.10\n\n7 October 2023\n\n\nRelease 14.1.10 d200e57\n\nv14.1.9\n\n23 September 2023\n\n\nRelease 14.1.9 29f1cbe\nupdated from deprecated SwUpdate props bef3e3e\n\nv14.1.8\n\n23 September 2023\n\n\nupdated from deprecated SwUpdate props 2f592f3\nRelease 14.1.8 07d6959\n\nv14.1.7\n\n23 September 2023\n\n\ndeps 1ffd91e\nRelease 14.1.7 6fc1434\n\nv14.1.6\n\n23 September 2023\n\n\nRelease 14.1.6 8b184a4\n\nv14.1.5\n\n21 September 2023\n\n\nRelease 14.1.5 4695772\nfix build fc633d2\n\nv14.1.4\n\n7 September 2023\n\n\nBump protobufjs and google-gax #261\nUpdate dependency tslib to v2.6.2 #262\nUpdate actions/checkout action to v4 #264\nRelease 14.1.4 a6386d2\nfix build b7303ed\n\nv14.1.3\n\n7 September 2023\n\n\nBump word-wrap from 1.2.3 to 1.2.4 #250\nUpdate dependency tslib to v2.6.1 #251\nRelease 14.1.3 9ce5e31\n\nv14.1.2\n\n3 August 2023\n\n\nRelease 14.1.2 8f60273\n\nv14.1.1\n\n7 July 2023\n\n\nUpdate dependency tslib to v2.6.0 #241\nBump @grpc/grpc-js and google-gax #240\nUpdate w9jds/firebase-action action to v12 #235\nRelease 14.1.1 f78467f\nprettier 3ff6d19\n\nv14.1.0\n\n7 July 2023\n\n\nprettier 3 + precommit hooks cd5831f\nRelease 14.1.0 d612735\nprettier 08b1238\n\nv14.0.13\n\n17 June 2023\n\n\nRelease 14.0.13 a10893b\nremoved unused type polyfills af2926f\n\nv14.0.12\n\n17 June 2023\n\n\nRelease 14.0.12 ea688e0\n\nv14.0.11\n\n17 June 2023\n\n\nRelease 14.0.11 32c3f4d\n\nv14.0.10\n\n17 June 2023\n\n\ndeps 8c90a58\nRelease 14.0.10 1d0b823\n\nv14.0.9\n\n8 June 2023\n\n\ndeps fdad632\nRelease 14.0.9 331bb8f\n\nv14.0.8\n\n3 June 2023\n\n\nBump vm2 from 3.9.17 to 3.9.19 #220\nUpdate dependency tslib to v2.5.3 #223\nRelease 14.0.8 8b9fdf5\n\nv14.0.7\n\n3 June 2023\n\n\nuse run-many for tests 97d68d0\nRelease 14.0.7 c82e02b\n\nv14.0.6\n\n3 June 2023\n\n\ndeps 752aa76\nRelease 14.0.6 f038069\n\nv14.0.5\n\n13 May 2023\n\n\ndeps 28cff25\nRelease 14.0.5 20cf16a\n\nv14.0.4\n\n6 May 2023\n\n\nremoved unused js file 5ffbd62\nRelease 14.0.4 7fb56e0\n\nv14.0.3\n\n6 May 2023\n\n\nUpdate dependency jest-preset-angular to v13.1.0 #208\nUpdate dependency @types/node to v18.16.5 #206\nRelease 14.0.3 cdf04e9\ne2e fixed 2708806\n\nv14.0.2\n\n6 May 2023\n\n\nUpdate w9jds/firebase-action action to v11.30.1 #207\ne2e fixed and removed separate project 74e7c83\nRelease 14.0.1 f386a36\nRelease 14.0.2 1081f8e\n\nv14.0.1\n\n6 May 2023\n\n\ne2e fixed and removed separate project d0cd94f\nRelease 14.0.1 bb4e0ce\n\nv14.0.0\n\n6 May 2023\n\n\nnx 16, angular 16, deps 826cbe5\nRelease 14.0.0 ec067ee\nmusic metadata removed 2eb6cae\n\nv13.3.5\n\n13 April 2023\n\n\nBump vm2 #200\nUpdate dependency music-metadata to v7.13.4 #195\nRelease 13.3.5 845189d\n\nv13.3.4\n\n13 April 2023\n\n\nRelease 13.3.4 eab1d35\n\nv13.3.3\n\n10 April 2023\n\n\nRelease 13.3.3 0129566\n\nv13.3.2\n\n25 March 2023\n\n\nRelease 13.3.2 5a92c07\n\nv13.3.1\n\n25 March 2023\n\n\nRelease 13.3.1 42a58d9\n\nv13.3.0\n\n18 March 2023\n\n\nUpdate w9jds/firebase-action action to v11.24.1 #181\ndeps + sidenav fixes e11e3bd\nRelease 13.3.0 3acc7bf\n\nv13.2.6\n\n15 March 2023\n\n\ndeps 0dc096d\nRelease 13.2.6 6d67484\n\nv13.2.5\n\n5 March 2023\n\n\nstandalone bootstrap 6aed158\nRelease 13.2.5 4c272db\n\nv13.2.4\n\n5 March 2023\n\n\nBump http-cache-semantics from 4.1.0 to 4.1.1 #170\nBump cacheable-request from 10.2.5 to 10.2.7 #171\nUpdate dependency tslib to v2.5.0 #164\nRelease 13.2.4 392b41d\ndeps a4b6dab\n\nv13.2.3\n\n5 March 2023\n\n\nRelease 13.2.3 f54702d\n\nv13.2.2\n\n5 March 2023\n\n\nRelease 13.2.2 d9677d0\n\nv13.2.1\n\n22 February 2023\n\n\ndeps 1730f16\nRelease 13.2.1 ba634aa\nuse nx for all 51a51dd\n\nv13.2.0\n\n22 February 2023\n\n\nUpdate w9jds/firebase-action action to v11.22.0 #172\nRelease 13.2.0 4035819\nstandalone migration steps 1 and 2 32e3ad6\nstandalone migration steps 1 and 2 a40c9e8\n\nv13.1.12\n\n22 February 2023\n\n\nRelease 13.1.12 53818e8\n\nv13.1.11\n\n28 January 2023\n\n\ndeps b4d909a\nRelease 13.1.11 d8bf0e7\n\nv13.1.10\n\n22 January 2023\n\n\nRelease 13.1.10 1c7fa4e\n\nv13.1.9\n\n20 January 2023\n\n\ndeps 4781958\nRelease 13.1.9 505e77f\n\nv13.1.8\n\n15 January 2023\n\n\nRelease 13.1.8 580c58d\n\nv13.1.7\n\n15 January 2023\n\n\nUpdate dependency music-metadata to v7.13.3 #150\ndeps 8b6bfeb\nRelease 13.1.7 d516e97\n\nv13.1.6\n\n13 January 2023\n\n\nRelease 13.1.6 166c79d\ndeps 8ec046f\n\nv13.1.5\n\n7 January 2023\n\n\nlayout fixes f3f4ae7\nRelease 13.1.5 eaa27a6\n\nv13.1.4\n\n7 January 2023\n\n\nRelease 13.1.4 49d8293\nfixed e2e 33d73d9\n\nv13.1.3\n\n7 January 2023\n\n\nUpdate dependency firebase-tools to v11.20.0 #147\nUpdate dependency postcss to v8.4.21 #146\nUpdate dependency eslint-config-prettier to v8.6.0 #139\nUpdate angularmaterial monorepo to v15.0.4 #144\nUpdate dependency husky to v8.0.3 #140\nUpdate w9jds/firebase-action action to v11.18.0 #131\nUpdate dependency cypress to v12.3.0 #141\nUpdate nrwl monorepo to v15.4.4 #135\nUpdate dependency eslint to v8.31.0 #138\nUpdate typescript-eslint monorepo to v5.48.0 #58\nUpdate dependency music-metadata to v7.13.1 #142\nRelease 13.1.3 5302fb4\ndeps 801cd46\nmdc migration, vertical sliders, icons size directive removed ffa9bb5\n\nv13.1.2\n\n30 December 2022\n\n\nRelease 13.1.2 c339811\n\nv13.1.1\n\n23 December 2022\n\n\nvisualizers plug their own analyser cea2824\nunsubscribe and disconnect analysers 6a8d3be\nRelease 13.1.1 72575f6\n\nv13.1.0\n\n23 December 2022\n\n\nRelease 13.1.0 1989419\nrenamed song to track, us playState obeservable for better input and CD handling 47b6776\n\nv13.0.20\n\n23 December 2022\n\n\ntransparency control for visuals 7445cc4\nRelease 13.0.20 62cfee7\n\nv13.0.19\n\n23 December 2022\n\n\nstandalone components 620afb8\nno max db slider, mindb range changed, better default f7913c1\nRelease 13.0.19 9280e3a\n\nv13.0.18\n\n22 December 2022\n\n\nRelease 13.0.18 4c16c1e\n\nv13.0.16\n\n22 December 2022\n\n\nRelease 13.0.16 77707fb\n\nv13.0.13\n\n22 December 2022\n\n\nRelease 13.0.13 6f12a37\n\nv13.0.12\n\n19 December 2022\n\n\nremoved d3, use bark scale for bar spectrogram 2bcfefb\nRelease 13.0.12 e336db1\n\nv13.0.11\n\n18 December 2022\n\n\nmerged readme 3f449ec\nRelease 13.0.11 47e3527\nbadges 5f1d097\n\nv13.0.10\n\n17 December 2022\n\n\nRelease 13.0.10 62c64c5\nmoved style to component 006b52c\ntodo 28548eb\n\nv13.0.9\n\n17 December 2022\n\n\nfixed audioContext resume, added gain to eq cb797bc\nRelease 13.0.9 8c56320\n\nv13.0.8\n\n17 December 2022\n\n\nRelease 13.0.8 6f1cdb4\n\nv13.0.7\n\n17 December 2022\n\n\nRelease 13.0.7 d895f0f\n\nv13.0.6\n\n17 December 2022\n\n\nRelease 13.0.6 17266a3\n\nv13.0.5\n\n17 December 2022\n\n\nUpdate angularmaterial monorepo to v15 (major) #108\nRelease 13.0.5 ddab2f3\nremoved uneeded ts-ignores a1a074f\nUpdate angularmaterial monorepo to v15 a4de6d4\n\nv13.0.3\n\n17 December 2022\n\n\nRelease 13.0.3 7f8ad27\nuse config file without .json endings bfd4685\n\nv13.0.2\n\n17 December 2022\n\n\nrefactored type imports and fixed offscreencanvas types 067bbea\nRelease 13.0.2 292ed5a\ncustom typings moved to folders c3208e7\n\nv13.0.1\n\n17 December 2022\n\n\nRelease 13.0.1 667c54e\nfixed debug version bf7b3a9\nfixed debug version 6cee32d\n\nv13.0.0\n\n16 December 2022\n\n\nRelease 13.0.0 b3905a0\nfixed playlist bulk loading 834f706\n\nv12.0.16\n\n16 December 2022\n\n\nRelease 12.0.16 1de2a3c\nfixed playlist bulk loading 8e7ecec\n\nv12.0.15\n\n16 December 2022\n\n\nRelease 12.0.15 5a7054c\nfixed test 9eb089c\n\nv12.0.14\n\n16 December 2022\n\n\nabstacted all audio stuff in audio service 403737f\neq auf mobile funkt auf mobile, flex layout refactoring eccaa4a\nreplaced angular-flex-layout with css 03a0491\n\nv12.0.13\n\n15 December 2022\n\n\nmaterial 15 migration dc55360\nRelease 12.0.13 37f76dc\nsimpler lib 86be7eb\n\nv12.0.12\n\n15 December 2022\n\n\nlibrary ohne filter 8dfc611\nRelease 12.0.12 6d26668\n\nv12.0.11\n\n14 December 2022\n\n\nRelease 12.0.11 635e855\ndeps, eslintrc, vibrant-wasm entfernt 431a9ad\n\nv12.0.10\n\n12 December 2022\n\n\nRelease 12.0.10 f954f07\nappend audioElement to document ce588f9\n\nv12.0.9\n\n12 December 2022\n\n\nseperated audio part into AudioService 0f8326e\nsimplified init of audio 869dddb\nRelease 12.0.9 17a1677\n\nv12.0.8\n\n11 December 2022\n\n\nfixed smaller things, no prdefinded samplerate 986dd30\nRelease 12.0.8 6b9ff38\ntodo 2bdc500\n\nv12.0.7\n\n11 December 2022\n\n\nRelease 12.0.7 a0aa269\nmoved init of seekto handler to constructor 2434ec6\n\nv12.0.6\n\n11 December 2022\n\n\nRelease 12.0.6 14768e6\n\nv12.0.5\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 8738efc\nRelease 12.0.4 fee5161\nRelease 12.0.5 23061dd\n\nv12.0.4\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 81bb449\nRelease 12.0.4 025a430\nUpdate TODO.md 009b48d\n\nv12.0.3\n\n11 December 2022\n\n\nRelease 12.0.3 c398655\n\nv12.0.2\n\n11 December 2022\n\n\nRelease 12.0.2 2bfabd0\n\nv12.0.1\n\n11 December 2022\n\n\nmoved id3tags extraction to worker 9b11a20\nRelease 12.0.1 6c27523\nUpdate devcontainer.json b286be9\n\nv12.0.0\n\n10 December 2022\n\n\nRelease 12.0.0 6ee2324\nadded deps vibrant-wasm and custom webpack config to ttry threads.js 8337321\ncustom webpack config for threads.js workers (still not working, disabled) 55e56b8\n\nv11.5.14\n\n7 December 2022\n\n\nstylelint fixes and config 52d642b\nRelease 11.5.14 b5dfb18\n\nv11.5.13\n\n7 December 2022\n\n\nRelease 11.5.13 a867afe\nstylelint fixes and config 122856c\n\nv11.5.12\n\n7 December 2022\n\n\nRelease 11.5.12 c4668f1\nmusic meatadata, file-drop-overlay as standalone component 2e5b003\nprovide all services in root ca80a43\n\nv11.5.11\n\n7 December 2022\n\n\nRelease 11.5.11 930dc28\n\nv11.5.10\n\n7 December 2022\n\n\ndeps a552ea9\nRelease 11.5.10 d29b113\n\nv11.5.9\n\n6 December 2022\n\n\nRelease 11.5.9 18a45bd\ntags + eslint rule 864d7e1\n\nv11.5.8\n\n6 December 2022\n\n\ndep graph in gh pages, release-it config erweitert um neu generierte dateien mit zu committen 73bd100\nlibs cleanup 59f4ac4\nRelease 11.5.8 24e4c9a\n\nv11.5.7\n\n6 December 2022\n\n\nlibs cleanup 60dbedc\nRelease 11.5.7 2d68f3b\n\nv11.5.6\n\n6 December 2022\n\n\nremoved all dummy tests 7defe9b\nRelease 11.5.6 d1b4f51\nrun tests in github actions 14148e0\n\nv11.5.5\n\n6 December 2022\n\n\nRelease 11.5.5 73b9b59\n\nv11.5.4\n\n6 December 2022\n\n\ncompodoc reenabled 7c00473\nsvgo updated 19bf065\nRelease 11.5.4 8df3910\n\nv11.5.3\n\n6 December 2022\n\n\ncompodoc reenabled 540fdd8\nRelease 11.5.3 7c5bbe5\n\nv11.5.2\n\n5 December 2022\n\n\ncompodoc reenabled 2ce3664\ncompodoc reenabled b7be438\ncompodoc reenabled 29f2b37\n\nv11.5.1\n\n5 December 2022\n\n\nautofix unused imports, removed tslint 71bd586\nautofix unused imports 6d6f310\nRelease 11.5.1 77091b9\n\nv11.5.0\n\n5 December 2022\n\n\nbetter thum quality, bigger coverart in playlist, tooltips, better button color handling bffc736\nRelease 11.5.0 670b3af\n\nv11.4.11\n\n5 December 2022\n\n\nRelease 11.4.11 e615145\n\nv11.4.10\n\n5 December 2022\n\n\nreinstall 418b524\nRelease 11.4.10 eaf46cf\n\nv11.4.9\n\n5 December 2022\n\n\nRelease 11.4.9 3e58c71\n\nv11.4.8\n\n5 December 2022\n\n\nRelease 11.4.8 a409033\nservices in app integriert 1857720\n\nv11.4.7\n\n5 December 2022\n\n\nremoved storybook 9d81efd\nservices in app integriert ce621ee\nmoved visuals lib to app e992cb4\n\nv11.4.6\n\n5 December 2022\n\n\nRelease 11.4.6 f9c93ce\n\nv11.4.5\n\n5 December 2022\n\n\nRelease 11.4.5 839a546\n\nv11.4.3\n\n5 December 2022\n\n\nRelease 11.4.3 50b7005\n\nv11.4.2\n\n5 December 2022\n\n\nRelease 11.4.2 0674adf\n\nv11.4.1\n\n5 December 2022\n\n\nRelease 11.4.1 7ccbc95\n\nv11.4.0\n\n5 December 2022\n\n\nrefactored libs to app, fixed time slider 133059f\nRelease 11.4.0 68d9939\n\nv11.3.1\n\n4 December 2022\n\n\nRelease 11.3.1 7493e98\nprevent lib crossing 3fbfb97\n\nv11.3.0\n\n4 December 2022\n\n\nRelease 11.3.0 ecf45e6\nbetter color usage 965f5d8\nbetter color usage f209ddb\n\nv11.2.0\n\n4 December 2022\n\n\ndeps, better default colors 569161e\nRelease 11.2.0 efc9aad\n\nv11.1.2\n\n4 December 2022\n\n\nRelease 11.1.2 8d47dd4\nfixed visualizer color updating too late e99d4f2\n\nv11.1.1\n\n4 December 2022\n\n\nRelease 11.1.1 287138c\n\nv11.1.0\n\n4 December 2022\n\n\noptimized musicbrainz requests, fixed embedded cover handling 7bebf2d\nRelease 11.1.0 707a0cb\n\nv11.0.0\n\n4 December 2022\n\n\nfixed several metadata related problems, setting for use of embedded tag covers 1745489\nRelease 11.0.0 6c219df\ntodo chromaprint-wasm 2c0f612\n\nv10.3.2\n\n1 December 2022\n\n\nRelease 10.3.2 6fdfa5a\n\nv10.3.1\n\n1 December 2022\n\n\nRelease 10.3.1 05b4ddd\nupdated firebase hosting config and actions for deployment f201082\nupdated firebase hosting config and actions for deployment 0c91659\n\nv10.3.0\n\n1 December 2022\n\n\nRelease 10.3.0 50dbff9\nupdated firebase hosting config and actions for deployment 1455d32\n\nv10.2.0\n\n30 November 2022\n\n\nRelease 10.2.0 7593825\nupdated firebase hosting config and actions for deployment b80e2ea\n\nv10.1.0\n\n30 November 2022\n\n\nupdated firebase hosting config and actions for deployment 02bde5d\nRelease 10.1.0 ffc8723\nupdated github actions 86bda79\n\nv10.0.4\n\n30 November 2022\n\n\ncypress migration to 11 16d8b1b\nRelease 10.0.4 6bf609d\nupdate nodejs to 18 for github actions 16925cf\n\nv10.0.3\n\n30 November 2022\n\n\ngot rid of variables.scss ad7e0f1\nRelease 10.0.3 63f69d0\n\nv10.0.2\n\n30 November 2022\n\n\nRelease 10.0.2 2a99961\n\nv10.0.1\n\n30 November 2022\n\n\nRelease 10.0.1 a9a9c0b\n\nv10.0.0\n\n30 November 2022\n\n\nng15 521e049\nng 15 cleanup, mobx update 0f6c72b\nmaterial 14 1e96bc3\n\nv9.2.4\n\n19 March 2022\n\n\nupdated deps eaeb47a\nRelease 9.2.4 61721ca\njb env 4bdbceb\n\nv9.2.3\n\n19 December 2021\n\n\nupdates 5061051\nRelease 9.2.3 a7f82ab\n\nv9.2.2\n\n9 December 2021\n\n\nupdates 2427749\nRelease 9.2.2 934d323\n\nv9.2.1\n\n20 November 2021\n\n\nRelease 9.2.1 60d5b05\n\nv9.2.0\n\n20 November 2021\n\n\nUpdate dependency @angular/cdk to v12.2.13 #21\nPin dependencies #20\nUpdate dependency ng-packagr to v12.2.5 #17\nUpdate dependency @angular/material to v12.2.13 #15\nUpdate angular monorepo to v12.2.13 #13\nConfigure Renovate #11\nnx 13.2 02e548c\nRelease 9.2.0 22ec300\nmain branch 63600c3\n\nv9.1.3\n\n16 November 2021\n\n\nnx update, nx-stylelint, nx-compodoc f06b116\nRelease 9.1.3 de5bda9\n\nv9.1.2\n\n20 October 2021\n\n\nupdates 8268a8b\nRelease 9.1.2 ab89f63\ntodos e486f52\n\nv9.1.1\n\n4 October 2021\n\n\nprevent duplicates in playlist, drag handle on avatar b6729e6\nRelease 9.1.1 eff95d0\n\nv9.1.0\n\n4 October 2021\n\n\nfile handling api with origin trial d3bca3a\nRelease 9.1.0 6cab435\n\nv9.0.11\n\n2 October 2021\n\n\nupdates 397399b\nRelease 9.0.11 96dbdf6\n\nv9.0.10\n\n5 September 2021\n\n\nRelease 9.0.10 112db1a\n\nv9.0.9\n\n5 September 2021\n\n\nRelease 9.0.9 9458a12\n\nv9.0.8\n\n19 August 2021\n\n\nRelease 9.0.8 cd620b6\n\nv9.0.7\n\n19 August 2021\n\n\nRelease 9.0.7 600f7e6\n\nv9.0.6\n\n19 August 2021\n\n\nRelease 9.0.6 c08196a\ndeps 6b5e613\n\nv9.0.5\n\n19 August 2021\n\n\nRelease 9.0.5 c51af5f\n\nv9.0.4\n\n19 August 2021\n\n\ndeps 43463ab\nRelease 9.0.4 cf00688\n\nv9.0.3\n\n24 July 2021\n\n\ndeps, nx-cloud ada5e83\nRelease 9.0.3 bb4a1a8\n\nv9.0.2\n\n24 July 2021\n\n\ndeps, nx-cloud 5cbeb5b\nRelease 9.0.2 49a76e8\n\nv9.0.1\n\n24 July 2021\n\n\ndeps b99bf0c\nRelease 9.0.1 cbab637\n\nv9.0.0\n\n9 July 2021\n\n\nfixed release-it 8d3ed72\nRelease 9.0.0 5467c6f\n\nv8.1.10\n\n9 July 2021\n\n\nRelease 8.1.10 be90110\n\nv8.1.9\n\n9 July 2021\n\n\nfixed release-it a90639a\nRelease 8.1.9 6d52ad4\n\nv8.1.8\n\n9 July 2021\n\n\nts 4.4, media session types intergrated in ts, deps fd45c70\nRelease 8.1.8 ff7cdad\n\nv8.1.7\n\n8 July 2021\n\n\nRelease 8.1.7 0bde446\n\nv8.1.6\n\n8 July 2021\n\n\ndeps 128a3c3\nRelease 8.1.6 d64a3c3\n\nv8.1.5\n\n2 July 2021\n\n\nRelease 8.1.5 ef22e4a\nlayout fixed dbb788d\n\nv8.1.4\n\n2 July 2021\n\n\nrefactored scss to @use, fixed build 6b0ec83\nRelease 8.1.4 ebab8da\n\nv8.1.3\n\n2 July 2021\n\n\nRelease 8.1.3 0843a41\n\nv8.1.2\n\n2 July 2021\n\n\nfixed types 07de52a\nRelease 8.1.2 00b47ed\n\nv8.1.1\n\n2 July 2021\n\n\nmigrated to eslint and per project config 4feefcd\nRelease 8.1.1 7762874\n\nv8.1.0\n\n26 June 2021\n\n\nupdates e2a0794\nRelease 8.1.0 86a18bb\n\nv8.0.1\n\n26 May 2021\n\n\nRelease 8.0.1 52bf10d\n\nv8.0.0\n\n26 May 2021\n\n\nRelease 7.1.1 c78b2bf\nRelease 8.0.0 2f0d555\n\nv7.2.0\n\n26 May 2021\n\n\nRelease 7.2.0 73ed2ca\nupdates 774ffed\n\nv7.1.1\n\n26 May 2021\n\n\nupdates 2a427ed\nRelease 7.1.1 b73ce66\n\nv7.1.0\n\n9 May 2021\n\n\n30fps visualizer, sortable playlist cd2a934\nRelease 7.1.0 8377116\n\nv7.0.6\n\n9 May 2021\n\n\nRelease 7.0.6 84a2466\nbitrate rounding cbef1c8\n\nv7.0.5\n\n9 May 2021\n\n\nRelease 7.0.5 9c56a21\n\nv7.0.4\n\n9 May 2021\n\n\nbetter title display 51154fe\nRelease 7.0.4 72dafd7\n\nv7.0.3\n\n9 May 2021\n\n\ndeps e36192c\nRelease 7.0.3 7553170\ntodos 51e219a\n\nv7.0.2\n\n9 May 2021\n\n\nfixed navigation 9767ad0\nRelease 7.0.2 59f1df2\n\nv7.0.1\n\n9 May 2021\n\n\nmetadata settings and ui cleanup 3797092\nRelease 6.7.3 6841a21\nRelease 7.0.0 0d76c85\n\nv7.0.0\n\n9 May 2021\n\n\nmetadata settings and ui cleanup b2b5088\nRelease 7.0.0 8c47814\n\nv6.7.4\n\n7 May 2021\n\n\nRelease 6.7.4 2ab7cc1\ncypress studio activated 4eac2a7\ncypress studio activated 6bc0773\n\nv6.7.3\n\n7 May 2021\n\n\nRelease 6.7.3 6841a21\nignore iml e5de213\n\nv6.7.2\n\n5 May 2021\n\n\ngithub actions with node_modules cache 4f91524\nRelease 6.7.2 07ec810\n\nv6.7.1\n\n5 May 2021\n\n\ncypress updated and window.showOpenFilePicker overwritten 32570e0\nRelease 6.7.1 fd18536\n\nv6.7.0\n\n4 May 2021\n\n\ndev deps dc41223\nRelease 6.7.0 f34b7cf\n\nv6.6.7\n\n25 April 2021\n\n\nfixed cypress tests and mobx 00399df\nRelease 6.6.7 bd0ddc3\n\nv6.6.6\n\n25 April 2021\n\n\nRelease 6.6.6 d690072\n\nv6.6.5\n\n25 April 2021\n\n\nRelease 6.6.5 ea63800\n\nv6.6.4\n\n25 April 2021\n\n\ndeps and husky updated 120476b\nRelease 6.6.4 20110c3\n\nv6.6.3\n\n20 April 2021\n\n\nRelease 6.6.3 ee83304\nreadme badges 09ae300\n\nv6.6.2\n\n15 April 2021\n\n\nRelease 6.6.2 e933c61\n\nv6.6.1\n\n15 April 2021\n\n\nRelease 6.6.1 221781e\n\nv6.6.0\n\n14 April 2021\n\n\nRelease 6.6.0 d254989\n\nv6.5.9\n\n11 March 2021\n\n\ndependencies 2119d47\nRelease 6.5.9 c64cd79\n\nv6.5.8\n\n4 March 2021\n\n\nRelease 6.5.8 f401a49\n\nv6.5.7\n\n4 March 2021\n\n\nRelease 6.5.7 49b1735\n\nv6.5.6\n\n4 February 2021\n\n\nRelease 6.5.6 045b043\n\nv6.5.5\n\n1 February 2021\n\n\nRelease 6.5.5 f4324a4\n\nv6.5.4\n\n29 January 2021\n\n\nfixed test 0038838\nRelease 6.5.4 8c75c5f\n\nv6.5.3\n\n28 January 2021\n\n\nRelease 6.5.3 13bf8e2\n\nv6.5.2\n\n21 January 2021\n\n\nRelease 6.5.2 1c876b6\nfixed build d2f46f8\n\nv6.5.1\n\n21 January 2021\n\n\nupdates 120f02a\nRelease 6.5.1 46c60ce\n\nv6.5.0\n\n14 January 2021\n\n\nRelease 6.5.0 e4ec6c1\n\nv6.4.1\n\n14 January 2021\n\n\nchangelog d629a20\nRelease 6.4.1 3d1f63c\n\nv6.4.0\n\n14 January 2021\n\n\nremoved token 51304c2\nRelease 6.4.0 756dc90\n\nv6.3.1\n\n14 January 2021\n\n\nRelease 6.3.1 e727ac0\n\nv6.3.0\n\n14 January 2021\n\n\nrelease-it 5321e86\nRelease 6.3.0 db48fe2\n\nv6.2.6\n\n14 January 2021\n\n\nrelease v6.2.6 ae202ad\n\nv6.2.5\n\n14 January 2021\n\n\nrelease v6.2.5 c20efb2\n\nv6.2.4\n\n14 January 2021\n\n\nci cd 8da74bb\nrelease v6.2.4 f12cad8\n\nv6.2.3\n\n12 January 2021\n\n\nrelease v6.2.3 78fcf7a\n\nv6.2.2\n\n20 December 2020\n\n\nnrwl 11 b2ed530\nrelease v6.2.2 73050ff\n\nv6.2.1\n\n15 December 2020\n\n\nnrwl 11 f1f709b\nrelease v6.2.1 5101ea6\nnrwl 11 8a371a0\n\nv6.2.0\n\n12 December 2020\n\n\nrelease v6.2.0 ef650c5\n\nv6.1.1\n\n8 December 2020\n\n\nrelease v6.1.1 e6660e2\n\nv6.1.0\n\n3 December 2020\n\n\nrelease v6.1.0 f8b7451\n\nv6.0.1\n\n21 November 2020\n\n\nrelease v6.0.1 c0d5ae4\n\nv6.0.0\n\n21 November 2020\n\n\nng11 0960760\nprettier ab98677\nrelease v6.0.0 79d861d\n\nv5.2.12\n\n28 October 2020\n\n\nrelease v5.2.12 40cc765\n\nv5.2.11\n\n28 October 2020\n\n\nrelease v5.2.11 c0c9413\n\nv5.2.10\n\n28 October 2020\n\n\nrelease v5.2.10 f4928f5\n\nv5.2.9\n\n28 October 2020\n\n\nrelease v5.2.9 04b4812\n\nv5.2.8\n\n28 October 2020\n\n\nrelease v5.2.8 4c8f851\n\nv5.2.7\n\n28 October 2020\n\n\nrelease v5.2.7 b65204b\n\nv5.2.6\n\n28 October 2020\n\n\nrelease v5.2.6 f24dcc7\n\nv5.2.5\n\n28 October 2020\n\n\nrelease v5.2.5 6c6f88c\nprettier b20fd36\n\nv5.2.4\n\n28 October 2020\n\n\nMediaSession service 5742e12\nrelease v5.2.4 5059439\n\nv5.2.3\n\n27 October 2020\n\n\nrelease v5.2.3 d4abfdc\n\nv5.2.2\n\n27 October 2020\n\n\nrelease v5.2.2 478c88a\n\nv5.2.1\n\n26 October 2020\n\n\nrelease v5.2.1 e218808\n\nv5.2.0\n\n23 October 2020\n\n\nrelease v5.2.0 62f7474\nreload button be57fa9\n\nv5.1.0\n\n23 October 2020\n\n\nsimplified dir handle save, fixed test f278040\nrelease v5.1.0 9767a1a\n\nv5.0.0\n\n23 October 2020\n\n\nsave latest directory handle to indexeddb 597ee4f\nrelease v5.0.0 5a61397\n\nv4.7.0\n\n23 October 2020\n\n\nrelease v4.7.0 c86decf\n\nv4.6.0\n\n23 October 2020\n\n\ntypes added for mediasession and file-system bfd28ec\nrelease v4.6.0 e4d8e7c\n\nv4.5.0\n\n23 October 2020\n\n\nfix media reporting 220c7f4\nrelease v4.5.0 337a109\n\nv4.4.0\n\n23 October 2020\n\n\nupdates und native file stable changes 939f6b8\nrelease v4.4.0 77c544b\n\nv4.3.1\n\n12 October 2020\n\n\nrelease v4.3.1 3a9067b\n\nv4.3.0\n\n12 October 2020\n\n\nrelease v4.3.0 7def043\nanalyzer report 4a4b1c4\n\nv4.2.0\n\n12 October 2020\n\n\nrelease v4.2.0 866de3e\n\nv4.1.0\n\n6 October 2020\n\n\nrelease v4.1.0 98a793b\n\nv4.0.0\n\n6 October 2020\n\n\nrelease v4.0.0 d38c534\n\nv3.11.0\n\n6 October 2020\n\n\nrelease v3.11.0 2a4184c\n\nv3.10.0\n\n6 October 2020\n\n\nrelease v3.10.0 d562368\n\nv3.9.0\n\n6 October 2020\n\n\ntoggle to disable extraction of color from cover art a84cb97\nrelease v3.9.0 748a302\n\nv3.8.1\n\n6 October 2020\n\n\nrelease v3.8.1 bda90a4\n\nv3.8.0\n\n5 October 2020\n\n\nrelease v3.8.0 c73a2ce\n\nv3.7.0\n\n20 September 2020\n\n\nrelease v3.7.0 61eb69b\n\nv3.6.0\n\n9 September 2020\n\n\nrelease v3.6.0 22da5c7\n\nv3.5.1\n\n2 September 2020\n\n\nrelease v3.5.1 70990de\n\nv3.5.0\n\n2 September 2020\n\n\nrelease v3.5.0 3ccea4c\n\nv3.4.1\n\n30 August 2020\n\n\nrelease v3.4.1 5ed4032\n\nv3.4.0\n\n30 August 2020\n\n\noptimize loading of service worker and caching 5cec62d\nrelease v3.4.0 1385586\n\nv3.3.0\n\n30 August 2020\n\n\noptimize bundles 6cd086c\nrelease v3.3.0 27fdc57\noptimize loading of service worker f1cad4d\n\nv3.2.1\n\n23 August 2020\n\n\nrelease v3.2.1 bb4ded8\nicons compressed c550911\n\nv3.2.0\n\n23 August 2020\n\n\nstart page a7cf166\nrelease v3.2.0 14a5bd3\nlang and description in webmanifest 1e4fd87\n\nv3.1.2\n\n23 August 2020\n\n\nrelease v3.1.2 69ed6f4\n\nv3.1.1\n\n23 August 2020\n\n\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 800fdae\nrelease v3.1.1 7440340\n\nv3.1.0\n\n23 August 2020\n\n\ndeps 3597f8b\nnx 10.1 20050dc\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 0cec276\n\nv3.0.9\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest 8d5f783\nrelease v3.0.9 f3a09c7\n\nv3.0.8\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest b708169\nrelease v3.0.8 7a1bbe5\n\nv3.0.7\n\n21 August 2020\n\n\nrelease v3.0.7 1a92061\n\nv3.0.6\n\n21 August 2020\n\n\nrelease v3.0.6 f31886e\n\nv3.0.5\n\n21 August 2020\n\n\nrelease v3.0.5 e7c9ada\n\nv3.0.4\n\n21 August 2020\n\n\nrelease v3.0.4 20d1b8b\n\nv3.0.3\n\n21 August 2020\n\n\nrelease v3.0.2 ea1fc76\nrelease v3.0.3 f4f50ef\n\nv3.0.2\n\n21 August 2020\n\n\nrelease v3.0.2 bc4e4dc\n\nv3.0.1\n\n21 August 2020\n\n\nrelease v3.0.1 339d07b\n\nv3.0.0\n\n21 August 2020\n\n\nrelease v3.0.0 57f591d\nrelease v2.0.0 6a6ec18\nrelease v1.19.0 d6210df\n\nv2.0.2\n\n21 August 2020\n\n\nrelease v2.0.2 7b491de\n\nv2.0.1\n\n21 August 2020\n\n\nrelease v2.0.1 b820bf4\n\nv2.0.0\n\n21 August 2020\n\n\nreadded polyfills, prefetch, manifest.json, splashscreen e102482\nrelease v2.0.0 c3d7490\n\nv1.18.0\n\n21 August 2020\n\n\nrelease v1.18.0 5aed853\n\nv1.17.0\n\n21 August 2020\n\n\nrelease v1.17.0 901f502\n\nv1.16.0\n\n21 August 2020\n\n\nrelease v1.16.0 5af2ad7\n\nv1.15.0\n\n21 August 2020\n\n\nrelease v1.15.0 abccf03\n\nv1.14.0\n\n21 August 2020\n\n\nrelease v1.14.0 339af30\n\nv1.13.0\n\n21 August 2020\n\n\nrelease v1.13.0 fb05c12\n\nv1.12.0\n\n21 August 2020\n\n\nrelease v1.12.0 67a17ee\n\nv1.11.12\n\n21 August 2020\n\n\nrelease v1.11.12 bba9cb0\n\nv1.11.11\n\n21 August 2020\n\n\nrelease v1.11.11 ba2a28a\n\nv1.11.10\n\n21 August 2020\n\n\nrelease v1.11.10 b7e8f76\n\nv1.11.9\n\n21 August 2020\n\n\nrelease v1.11.9 52afb10\n\nv1.11.8\n\n21 August 2020\n\n\nrelease v1.11.8 e6d7fd2\n\nv1.11.7\n\n21 August 2020\n\n\nrelease v1.11.7 c2c0b8f\n\nv1.11.6\n\n21 August 2020\n\n\nrelease v1.11.6 91d4a54\n\nv1.11.5\n\n21 August 2020\n\n\nrelease v1.11.5 822ff08\n\nv1.11.4\n\n21 August 2020\n\n\nrelease v1.11.4 8c9c5c3\n\nv1.11.3\n\n21 August 2020\n\n\nrelease v1.11.3 8aabc76\n\nv1.11.2\n\n21 August 2020\n\n\nrelease v1.11.2 71e1d6c\n\nv1.11.1\n\n21 August 2020\n\n\nrelease v1.11.1 ed57248\nremove commonjs whitelist entry ad6497d\n\nv1.11.0\n\n19 August 2020\n\n\ndeps and polyfills removed 3e8e5d0\nrelease v1.11.0 289ec3d\ndisable zone for requestAnimationFrame 422fc8e\n\nv1.10.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\nrelease v1.10.0 f9c114e\nrelease v1.9.1 6b2d8b8\n\nv1.9.1\n\n17 August 2020\n\n\nrelease v1.9.0 68e8dc6\nrelease v1.9.1 d5cd7ea\n\nv1.9.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\n\nv1.8.0\n\n17 August 2020\n\n\nrelease v1.8.0 7484f35\nCreate LICENSE f69d368\nRename LICENSE to LICENSE.md 3773370\n\nv1.7.3\n\n30 July 2020\n\n\ndeps a00ccd1\nrelease v1.7.3 47842e1\nnode 14 build f5ee0e6\n\nv1.7.2\n\n24 July 2020\n\n\nrelease v1.7.2 101bbd0\n\nv1.7.1\n\n24 July 2020\n\n\nrelease v1.7.1 28465d6\n\nv1.7.0\n\n24 July 2020\n\n\nrelease v1.7.0 b5f68a1\n\nv1.6.4\n\n24 July 2020\n\n\nrelease v1.6.4 646c494\n\nv1.6.3\n\n24 July 2020\n\n\nrelease v1.6.3 17ed8a6\n\nv1.6.2\n\n18 July 2020\n\n\ndeps 667f875\nRevert \"support for seeking to position on android notification\" f2cfbcc\nrelease v1.6.2 85eb0ba\n\nv1.6.1\n\n10 July 2020\n\n\ndeps 228ee85\nrelease v1.6.1 949055a\n\nv1.6.0\n\n3 July 2020\n\n\nsupport for seeking to position on android notification 9fa1a37\nrelease v1.6.0 4f1794f\n\nv1.5.0\n\n3 July 2020\n\n\ndeps und position reporting to browser 7a6f294\nrelease v1.5.0 f076ced\n\nv1.4.1\n\n26 June 2020\n\n\nangular.json schema und allowedCommonJsDeps 654bac2\nrelease v1.4.1 250d7f9\n\nv1.4.0\n\n26 June 2020\n\n\ndeps fix 4e72fcd\nng 10 update b6bd950\nadded missing decorator 8515368\n\nv1.3.0\n\n4 June 2020\n\n\nnew icons for visualization modes a8073a9\nrelease v1.3.0 b241b46\n\nv1.2.2\n\n28 May 2020\n\n\ndeps 87adc2c\nrelease v1.2.2 abc0b07\n\nv1.2.1\n\n20 May 2020\n\n\ndeps be025cd\nrelease v1.2.1 0b30a9f\n\nv1.2.0\n\n10 May 2020\n\n\nname changes, native file service refactored 170ea47\nrelease v1.2.0 cb01a92\nname changes, native file service refactored 8264f64\n\nv1.1.0\n\n8 May 2020\n\n\nrelease v1.1.0 a2a4811\nopen folders recursive 1c9fedf\n\nv1.0.5\n\n8 May 2020\n\n\nrelease v1.0.5 1604161\n\nv1.0.4\n\n5 May 2020\n\n\nfix: package.json, package-lock.json & .snyk to reduce vulnerabilities #2\nrelease v1.0.4 8e2ff5a\n\nv1.0.3\n\n2 May 2020\n\n\nrelease v1.0.3 8e36da3\n\nv1.0.2\n\n2 May 2020\n\n\nrelease v1.0.2 6926167\n\nv1.0.1\n\n2 May 2020\n\n\nrelease v1.0.1 194199c\n\nv1.0.0\n\n2 May 2020\n\n\nremoved electron, added compodoc 22afab3\nrelease v1.0.0 18cab80\nUpdate README.md 0e060af\n\nv0.29.0\n\n25 April 2020\n\n\nrelease v0.29.0 669facb\n\nv0.28.0\n\n25 April 2020\n\n\ndeps 9d2ef7e\nrelease v0.28.0 eaf70a8\n\nv0.25.0\n\n15 April 2020\n\n\nrelease v0.25.0 0581767\n\nv0.24.0\n\n15 April 2020\n\n\nrelease v0.24.0 a457b9c\ndeps linting formating b04ce8b\nUpdate NOTES.md 0903cd2\n\nv0.23.0\n\n4 April 2020\n\n\nci d954540\nrelease v0.23.0 95902bb\nci 53a8631\n\nv0.22.0\n\n4 April 2020\n\n\nrelease v0.22.0 f0f7618\n\nv0.21.0\n\n31 March 2020\n\n\ndependencies e34b732\nreadme e7032e1\nfile extensions list 53749c8\n\nv0.20.0\n\n30 March 2020\n\n\nrelease v0.20.0 572a9f8\n\nv0.19.0\n\n30 March 2020\n\n\nrelease v0.19.0 72075fe\nscreen wakelock when playing, navigation fixed especially for mobile ae93b7a\norigin trials for native file system and wakelock api a5849e4\n\nv0.18.0\n\n29 March 2020\n\n\nrelease v0.18.0 fefaba0\nprevent browser history 097fe6b\n\nv0.17.0\n\n29 March 2020\n\n\nprevent browser history 80b42ce\nrelease v0.17.0 4e9a327\n\nv0.16.0\n\n29 March 2020\n\n\ndeps f1b02b7\nrelease v0.16.0 5fe0756\n\nv0.15.0\n\n29 March 2020\n\n\ndeps 092dc60\nnx tags 6782ecd\nrelease v0.15.0 0cabcad\n\nv0.14.0\n\n24 March 2020\n\n\nrelease v0.14.0 dd93cb1\n\nv0.13.0\n\n24 March 2020\n\n\nrelease v0.13.0 162acda\n\nv0.12.0\n\n24 March 2020\n\n\nrelease v0.12.0 79fee74\n\nv0.11.0\n\n24 March 2020\n\n\nrelease v0.11.0 828148a\n\nv0.10.0\n\n24 March 2020\n\n\nrelease v0.10.0 35a78e4\n\nv0.9.0\n\n24 March 2020\n\n\nrelease v0.9.0 2011e46\n\nv0.8.0\n\n24 March 2020\n\n\nrelease v0.8.0 02c06cb\n\nv0.7.0\n\n24 March 2020\n\n\nrelease v0.7.0 75fc12c\n\nv0.6.0\n\n24 March 2020\n\n\nrelease v0.6.0 184a834\n\nv0.5.0\n\n24 March 2020\n\n\nrelease v0.5.0 ab311db\n\nv0.4.0\n\n24 March 2020\n\n\nrelease v0.4.0 42f56c1\nfixed visuals cefa1f1\nplay rewrite and project preparations 1098d6a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 19.2.7\n        \n            @angular/common : 19.2.4\n        \n            @angular/compiler : 19.2.4\n        \n            @angular/core : 19.2.4\n        \n            @angular/forms : 19.2.4\n        \n            @angular/material : 19.2.7\n        \n            @angular/platform-browser : 19.2.4\n        \n            @angular/platform-browser-dynamic : 19.2.4\n        \n            @angular/router : 19.2.4\n        \n            @angular/service-worker : 19.2.4\n        \n            @thebespokepixel/es-tinycolor : ^3.1.0\n        \n            date-fns : ^4.1.0\n        \n            lucene-escape-query : ^1.0.1\n        \n            music-metadata : 11.0.2\n        \n            ngx-date-fns : 12.0.0\n        \n            ngx-indexed-db : 20.0.0\n        \n            ngx-pipes : 3.2.2\n        \n            ngx-webstorage : 19.0.1\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            spark-md5 : ^3.0.2\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../helpers-time.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/helpers-time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    40 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.2.31\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : MIT\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nuse webworker for node-vibrant\nAudio-File explorer + Suche\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            EqualizerGainValues   (apps/.../audio.service.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/audio.service.ts\n    \n    \n        \n            \n                \n                    \n                    EqualizerGainValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../idexed-db-config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../player.types.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesMenuEntry   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideExperimentalZonelessChangeDetection(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/idexed-db-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'gblasterDB',\n  version: 3,\n  objectStoresMeta: [\n    {\n      store: 'library',\n      storeConfig: { keyPath: 'hash', autoIncrement: false },\n      storeSchema: [\n        { name: 'hash', keypath: 'hash', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'directoryHandles',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/player.types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesMenuEntry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files_menu')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
