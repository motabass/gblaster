var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.195,1,2.803]],["body/interfaces/ActionCache.html",[0,0.34,1,4.191,2,1.141,3,0.26,4,0.26,5,0.165,6,3.272,7,0.411,8,0.586,9,5.184,10,1.611,11,0.506,12,0.012,13,0.454,14,4.877,15,3.725,16,1.404,17,4.916,18,2.049,19,0.765,20,3.478,21,1.323,22,1.491,23,4.624,24,3.272,25,2.718,26,3.478,27,3.478,28,3.272,29,2.94,30,3.478,31,3.272,32,3.272,33,3.272,34,3.095,35,3.095,36,4.773,37,2.94,38,3.478,39,2.817,40,3.478,41,2.817,42,3.478,43,3.035,44,3.478,45,4.191,46,3.478,47,3.095,48,3.478,49,3.272,50,3.478,51,3.272,52,3.478,53,3.272,54,3.478,55,3.095,56,3.478,57,3.272,58,3.478,59,2.94,60,3.478,61,3.095,62,3.478,63,3.272,64,3.478,65,3.272,66,3.478,67,3.272,68,3.478,69,3.272,70,3.095,71,3.478,72,3.478,73,3.478,74,3.478,75,0.009,76,0.009]],["title/interfaces/AnalyserConfig.html",[0,0.195,77,2.401]],["body/interfaces/AnalyserConfig.html",[0,0.366,2,1.082,3,0.247,4,0.247,5,0.156,7,0.247,8,0.566,10,1.689,11,0.52,12,0.012,13,0.457,18,2.823,19,1.118,22,1.413,25,2.625,75,0.008,76,0.008,77,3.469,78,2.657,79,4,80,4.295,81,4.295,82,4.295,83,2.54,84,2.433,85,2.54,86,2.54,87,2.54,88,2.54,89,2.54,90,2.54,91,2.54,92,2.657,93,2.657,94,2.433,95,3.316,96,3.177,97,3.177,98,3.177,99,2.433,100,3.177,101,2.54,102,2.823,103,2.823,104,3.177,105,2.54,106,2.54,107,2.433,108,2.657,109,2.787,110,2.336,111,3.395,112,2.54,113,2.336,114,3.862,115,2.932,116,2.54,117,3.177,118,3.461,119,3.461,120,2.246,121,3.177,122,3.599]],["title/components/AppComponent.html",[123,0.894,124,1.755]],["body/components/AppComponent.html",[3,0.246,4,0.246,5,0.203,12,0.012,13,0.261,75,0.008,76,0.008,123,1.435,124,2.987,125,1.896,126,2.002,127,2.002,128,2.002,129,4.794,130,1.682,131,4.036,132,4.036,133,3.26,134,3.354,135,1.732,136,2.443,137,2.987,138,2.443,139,6.27,140,3.257,141,0.927,142,4.794,143,0.868,144,3.087,145,0.9,146,0.653,147,4.794,148,2.774,149,4.794,150,2.92,151,2.422,152,4.036,153,3.515,154,4.979,155,4.794,156,4.794,157,0.589,158,2.047,159,4.794,160,4.794,161,4.794,162,4.794,163,4.794,164,3.515,165,4.794,166,4.794,167,4.794,168,4.794,169,4.794,170,4.794,171,4.794,172,2.002,173,2.528,174,2.145,175,1.693,176,3.093,177,2.002,178,1.522,179,2.002,180,1.933,181,1.494,182,2.002,183,1.933,184,2.002,185,1.933,186,1.807,187,2.002,188,1.693,189,1.749,190,1.749,191,2.617,192,1.933,193,1.933,194,3.093,195,1.933,196,2.002,197,1.933,198,2.002,199,1.807,200,1.933,201,1.933,202,2.002,203,1.933,204,1.868,205,2.002,206,1.933,207,2.002,208,1.933,209,1.807,210,1.933,211,1.933,212,1.933,213,1.868,214,1.933,215,2.002]],["title/injectables/AudioService.html",[216,0.677,217,2.199]],["body/injectables/AudioService.html",[0,0.113,3,0.129,4,0.129,5,0.194,7,0.129,8,0.355,10,1.478,11,0.427,12,0.012,13,0.265,16,1.89,21,1.94,22,1.426,39,3.488,41,1.708,75,0.005,76,0.005,110,2.666,120,2.266,135,0.697,140,2.266,141,1.581,143,0.605,145,0.473,146,0.344,157,0.31,158,2.058,174,0.863,178,1.358,216,0.614,217,1.994,218,0.951,219,2.004,220,2.396,221,4.258,222,3.564,223,2.813,224,4.366,225,3.86,226,4.258,227,4.258,228,3.86,229,4.258,230,4.366,231,0.86,232,3.947,233,3.762,234,1.663,235,4.366,236,4.815,237,3.947,238,3.947,239,3.947,240,3.947,241,3.947,242,3.947,243,2.893,244,4.258,245,2.523,246,3.457,247,3.959,248,2.523,249,1.999,250,1.203,251,3.947,252,1.551,253,2.523,254,2.523,255,1.537,256,2.523,257,2.893,258,3.457,259,4.738,260,2.523,261,2.134,262,2.541,263,2.893,264,2.523,265,2.523,266,3.457,267,2.523,268,3.457,269,5.226,270,2.523,271,3.457,272,2.523,273,3.457,274,3.457,275,2.523,276,2.523,277,3.457,278,2.523,279,4.815,280,2.523,281,2.523,282,2.563,283,3.457,284,2.96,285,2.813,286,2.813,287,2.813,288,2.813,289,2.96,290,2.96,291,3.129,292,3.129,293,3.129,294,2.523,295,5.024,296,2.523,297,2.523,298,4.815,299,2.523,300,2.523,301,2.523,302,3.457,303,2.523,304,3.457,305,2.893,306,2.523,307,2.523,308,2.523,309,2.404,310,1.537,311,1.224,312,1.33,313,1.46,314,2.404,315,0.863,316,2.893,317,3.327,318,0.718,319,1.448,320,2.21,321,1.537,322,2.21,323,4.073,324,2.21,325,2.21,326,2.21,327,2.21,328,4.366,329,2.21,330,2.21,331,2.21,332,3.457,333,2.21,334,2.21,335,2.21,336,2.004,337,3.134,338,2.21,339,1.832,340,1.235,341,2.21,342,2.541,343,3.134,344,2.21,345,2.21,346,2.21,347,2.21,348,1.727,349,2.21,350,2.21,351,2.21,352,3.457,353,2.21,354,2.004,355,1.33,356,1.85,357,1.537,358,2.21,359,1.727,360,2.004,361,2.21,362,2.21,363,3.457,364,3.457,365,2.21,366,2.701,367,3.457,368,3.457,369,2.21,370,2.21,371,2.21,372,2.21,373,2.21,374,2.21,375,2.21,376,2.21,377,2.004,378,1.624,379,1.33,380,1.727,381,2.004,382,2.21,383,2.21,384,2.21,385,2.21,386,2.21,387,2.21,388,3.457,389,2.21,390,2.21,391,2.21,392,2.21,393,2.21,394,1.538,395,2.21,396,3.134,397,2.21,398,2.21,399,2.004,400,2.21,401,2.004,402,1.275,403,2.21,404,1.624,405,2.21,406,2.21,407,2.21,408,2.21,409,2.21,410,2.21,411,2.21,412,2.21,413,2.21,414,2.21,415,2.21,416,2.21,417,2.21,418,2.21,419,2.701,420,2.21,421,2.21,422,2.21,423,3.457,424,2.21,425,2.21,426,2.21,427,2.21,428,0.92,429,2.21,430,2.21,431,3.457,432,2.21,433,2.21,434,2.21,435,2.21,436,2.21,437,2.21,438,2.21,439,2.21,440,2.21,441,2.21,442,2.21,443,2.21,444,2.21,445,2.21]],["title/interfaces/AxisGamepadAction.html",[0,0.195,24,2.803]],["body/interfaces/AxisGamepadAction.html",[0,0.339,1,3.261,2,1.138,3,0.26,4,0.26,5,0.164,6,3.261,7,0.368,8,0.585,9,3.467,10,1.513,11,0.506,12,0.012,13,0.454,14,5.307,15,3.713,16,1.4,17,5.178,18,2.042,19,0.763,20,3.467,21,1.319,22,1.486,23,4.617,24,4.182,25,2.994,26,5.178,27,5.178,28,3.261,29,2.931,30,3.467,31,3.261,32,3.261,33,3.261,34,3.085,35,3.085,36,4.763,37,2.931,38,3.467,39,2.811,40,3.467,41,2.811,42,3.467,43,3.029,44,3.467,45,4.182,46,3.467,47,3.085,48,3.467,49,3.261,50,3.467,51,3.261,52,3.467,53,3.261,54,3.467,55,3.085,56,3.467,57,3.261,58,3.467,59,2.931,60,3.467,61,3.085,62,3.467,63,3.261,64,3.467,65,3.261,66,3.467,67,3.261,68,3.467,69,3.261,70,3.085,71,3.467,72,3.467,73,3.467,74,3.467,75,0.009,76,0.009]],["title/pipes/BandPipe.html",[446,2.519,447,3.458]],["body/pipes/BandPipe.html",[3,0.296,4,0.296,5,0.187,11,0.373,12,0.012,13,0.315,19,1.062,43,2.692,75,0.009,76,0.009,130,1.549,141,1.117,143,0.776,146,0.787,157,0.709,178,1.564,231,1.259,247,4.588,249,1.746,250,1.051,252,1.222,255,3.516,261,2.191,288,3.341,313,3.341,317,4.826,340,1.71,446,4.08,447,5.6,448,3.951,449,5.774,450,6.177,451,2.629,452,5.17,453,4.585,454,6.177,455,6.669,456,5.774,457,6.177,458,2.917,459,5.774,460,5.774,461,5.774,462,5.774]],["title/interfaces/BarsVisualizerOptions.html",[0,0.195,117,2.199]],["body/interfaces/BarsVisualizerOptions.html",[0,0.362,2,1.036,3,0.236,4,0.236,5,0.15,7,0.236,8,0.55,10,1.697,11,0.534,12,0.012,13,0.454,18,3.146,19,1.099,22,1.353,25,2.861,75,0.008,76,0.008,77,2.543,78,2.543,79,3.86,80,2.668,81,2.668,82,2.668,83,2.431,84,2.329,85,2.431,86,2.431,87,2.431,88,2.431,89,2.431,90,2.431,91,2.431,92,2.543,93,2.543,94,2.329,95,4.003,96,3.835,97,3.835,98,3.835,99,2.329,100,3.087,101,2.431,102,2.743,103,2.743,104,3.087,105,2.431,106,2.431,107,2.329,108,2.543,109,2.668,110,2.236,111,3.324,112,2.431,113,2.236,114,4.025,115,2.849,116,2.431,117,3.462,118,3.768,119,3.638,120,3.402,121,3.087,122,3.539]],["title/injectables/BaseSubscribingClass.html",[216,0.677,463,3.192]],["body/injectables/BaseSubscribingClass.html",[3,0.311,4,0.311,5,0.197,7,0.311,8,0.654,11,0.392,12,0.012,13,0.331,16,1.676,21,1.579,75,0.01,76,0.01,141,1.173,143,0.799,146,0.826,157,0.745,216,1.13,218,2.285,261,1.676,314,5.02,315,2.075,339,2.738,458,3.063,463,5.325,464,7.264,465,5.769,466,5.517,467,7.264,468,6.064,469,6.176,470,6.064,471,4.676,472,3.904,473,6.064,474,6.064]],["title/interfaces/BaseVisualizerOptions.html",[0,0.195,114,2.401]],["body/interfaces/BaseVisualizerOptions.html",[0,0.365,2,1.07,3,0.244,4,0.244,5,0.155,7,0.244,8,0.562,10,1.683,11,0.526,12,0.012,13,0.457,18,3.175,19,1.226,22,1.398,25,2.607,75,0.008,76,0.008,77,2.628,78,2.628,79,3.584,80,2.757,81,2.757,82,2.757,83,2.513,84,2.407,85,2.513,86,2.513,87,2.513,88,2.513,89,2.513,90,2.513,91,2.513,92,2.628,93,2.628,94,2.407,95,3.293,96,3.155,97,3.155,98,3.155,99,2.407,100,3.155,101,2.513,102,3.445,103,3.445,104,3.877,105,2.513,106,2.513,107,2.407,108,2.628,109,2.757,110,2.311,111,3.378,112,2.513,113,2.311,114,4.077,115,3.446,116,3.898,117,3.155,118,3.446,119,3.446,120,2.222,121,3.155,122,3.584]],["title/interfaces/ButtonGamepadAction.html",[0,0.195,28,2.803]],["body/interfaces/ButtonGamepadAction.html",[0,0.341,1,3.298,2,1.151,3,0.263,4,0.263,5,0.166,6,3.298,7,0.37,8,0.589,9,3.506,10,1.518,11,0.491,12,0.012,13,0.455,14,5.169,15,3.756,16,1.416,17,5.2,18,2.066,19,0.771,20,3.506,21,1.334,22,1.503,23,4.642,24,3.298,25,3.01,26,3.506,27,3.506,28,4.213,29,4.396,30,3.506,31,3.298,32,3.298,33,3.298,34,3.12,35,3.12,36,4.798,37,2.964,38,3.506,39,2.831,40,3.506,41,2.831,42,3.506,43,3.051,44,3.506,45,4.213,46,3.506,47,3.12,48,3.506,49,3.298,50,3.506,51,3.298,52,3.506,53,3.298,54,3.506,55,3.12,56,3.506,57,3.298,58,3.506,59,2.964,60,3.506,61,3.12,62,3.506,63,3.298,64,3.506,65,3.298,66,3.506,67,3.298,68,3.506,69,3.298,70,3.12,71,3.506,72,3.506,73,3.506,74,3.506,75,0.009,76,0.009]],["title/interfaces/Chainable.html",[0,0.195,475,3.814]],["body/interfaces/Chainable.html",[0,0.234,2,1.174,3,0.268,4,0.268,5,0.215,7,0.268,12,0.012,16,1.831,75,0.009,76,0.009,141,1.011,143,0.729,174,1.788,231,1.445,250,0.951,252,1.106,314,4.036,342,3.364,356,4.858,475,5.805,476,5.226,477,6.078,478,5.226,479,5.226,480,4.577,481,5.226,482,4.577,483,5.226,484,5.226,485,5.226,486,5.805,487,7.653,488,5.805,489,5.805,490,5.805,491,5.226,492,5.226,493,5.226,494,5.226,495,4.577,496,5.226,497,5.226,498,5.226,499,5.226,500,7.653,501,5.226,502,5.226,503,3.182,504,5.226,505,5.226,506,6.627,507,5.226,508,6.627,509,6.627,510,5.226,511,5.226,512,5.226,513,5.226,514,6.627,515,4.685,516,5.226,517,5.226,518,5.226,519,5.226,520,2.436]],["title/interfaces/Color.html",[0,0.195,521,2.803]],["body/interfaces/Color.html",[0,0.283,2,1.417,3,0.323,4,0.323,5,0.205,7,0.323,8,0.67,11,0.511,12,0.011,13,0.344,19,1.271,22,2.32,75,0.01,76,0.01,178,1.677,521,4.787,522,6.308,523,7.153,524,5.257]],["title/interfaces/ColorConfig.html",[0,0.195,525,2.519]],["body/interfaces/ColorConfig.html",[0,0.331,2,1.21,3,0.276,4,0.276,5,0.239,7,0.276,8,0.608,10,1.307,11,0.5,12,0.012,13,0.435,19,1.29,75,0.009,76,0.009,102,3.473,103,3.473,130,2.076,143,0.812,223,3.117,247,3.117,250,1.408,284,3.281,285,3.117,286,3.117,287,3.117,288,3.117,289,3.281,290,3.281,291,3.468,292,3.468,293,3.468,378,3.468,525,3.909,526,3.949,527,4.349,528,3.468,529,2.418,530,3.909,531,2.632,532,4.278,533,4.623,534,2.971,535,2.923,536,4.349,537,3.949,538,3.687,539,2.331,540,1.903,541,1.903,542,3.281,543,2.612,544,3.687,545,3.949,546,3.687,547,3.687,548,3.117]],["title/interfaces/CoverArtImage.html",[0,0.195,549,2.803]],["body/interfaces/CoverArtImage.html",[0,0.317,2,0.956,3,0.218,4,0.218,5,0.138,7,0.218,8,0.521,10,0.823,11,0.478,12,0.012,13,0.232,19,1.246,22,1.931,75,0.008,76,0.008,135,1.176,143,0.858,145,0.798,146,0.58,157,0.522,158,2.155,181,1.326,216,0.9,220,1.648,234,2.251,315,1.456,318,1.211,319,1.564,340,1.828,394,2.97,428,2.576,451,1.411,520,2.699,529,1.91,531,1.658,540,1.503,541,1.503,549,4.236,550,1.604,551,2.912,552,4.834,553,3.568,554,4.834,555,5.071,556,2.243,557,2.149,558,2.912,559,2.739,560,2.739,561,3.324,562,1.984,563,2.505,564,2.063,565,2.149,566,2.149,567,2.243,568,3.727,569,3.526,570,2.739,571,4.236,572,2.591,573,2.739,574,3.962,575,2.912,576,2.591,577,2.462,578,2.912,579,2.739,580,2.243,581,2.591,582,2.149,583,2.243,584,2.243,585,2.912,586,2.912,587,2.912,588,2.243,589,2.48,590,2.149,591,2.925,592,2.939,593,2.954,594,3.962,595,2.912,596,2.912,597,3.068,598,3.053,599,2.462,600,2.912,601,2.912,602,2.912,603,2.912,604,2.912,605,2.912,606,1.326,607,3.053,608,3.962,609,2.912,610,2.912,611,2.912,612,2.912,613,2.912,614,2.912,615,2.912,616,3.962,617,2.912,618,2.912,619,1.91,620,2.912,621,2.912,622,2.505,623,2.912,624,2.912,625,2.912,626,2.912]],["title/interfaces/CoverArtResponse.html",[0,0.195,579,2.803]],["body/interfaces/CoverArtResponse.html",[0,0.319,2,0.977,3,0.223,4,0.223,5,0.141,7,0.223,8,0.529,10,0.841,11,0.281,12,0.012,13,0.237,19,1.23,22,1.276,75,0.008,76,0.008,135,1.202,143,0.863,145,0.816,146,0.593,157,0.534,158,2.167,181,1.356,216,0.914,220,1.673,234,2.277,315,1.488,318,1.238,319,1.575,340,1.835,394,2.99,428,2.6,451,1.442,520,2.74,529,1.952,531,1.695,540,1.536,541,1.536,549,4.589,550,1.639,551,2.976,552,2.976,553,2.197,554,2.976,556,2.293,557,2.197,558,2.976,559,2.8,560,2.8,561,3.362,562,2.028,563,2.542,564,2.109,565,2.197,566,2.197,567,2.293,568,3.783,569,3.579,570,2.8,571,4.284,572,2.649,573,2.8,574,4.021,575,2.976,576,2.649,577,2.516,578,2.976,579,3.783,580,3.758,581,2.649,582,2.197,583,2.293,584,2.293,585,2.976,586,2.976,587,2.976,588,2.293,589,2.508,590,2.197,591,2.968,592,2.956,593,2.987,594,4.021,595,2.976,596,2.976,597,3.103,598,3.098,599,2.516,600,2.976,601,2.976,602,2.976,603,2.976,604,2.976,605,2.976,606,1.356,607,3.098,608,4.021,609,2.976,610,2.976,611,2.976,612,2.976,613,2.976,614,2.976,615,2.976,616,4.021,617,2.976,618,2.976,619,1.952,620,2.976,621,2.976,622,2.542,623,2.976,624,2.976,625,2.976,626,2.976]],["title/interfaces/CoverColor.html",[0,0.195,627,3.192]],["body/interfaces/CoverColor.html",[0,0.348,2,1.357,3,0.31,4,0.31,5,0.196,7,0.31,8,0.653,11,0.469,12,0.011,13,0.423,19,1.284,75,0.01,76,0.01,250,1.465,524,5.183,530,3.495,531,2.354,550,2.277,619,2.711,622,2.614,627,6.249,628,4.797,629,5.902,630,3.495,631,4.428,632,4.428,633,4.428,634,4.428,635,4.428]],["title/interfaces/CoverColorPalette.html",[0,0.195,530,2.519]],["body/interfaces/CoverColorPalette.html",[0,0.338,2,1.269,3,0.29,4,0.29,5,0.183,7,0.29,8,0.627,11,0.532,12,0.011,13,0.411,19,1.185,75,0.009,76,0.009,250,1.569,524,3.637,530,4.026,531,2.201,550,2.129,619,2.536,622,2.444,627,6.435,628,4.486,629,4.141,630,4.553,631,5.769,632,5.769,633,5.769,634,5.769,635,5.769]],["title/components/CoverDisplayComponent.html",[123,0.894,180,1.755]],["body/components/CoverDisplayComponent.html",[3,0.176,4,0.176,5,0.161,7,0.176,8,0.448,10,1.133,11,0.222,12,0.012,13,0.187,19,0.882,21,1.296,39,1.485,75,0.007,76,0.007,123,1.203,124,1.383,125,1.505,126,1.432,127,1.432,128,1.432,130,1.335,131,3.204,132,3.204,133,3.142,134,3.218,136,1.939,137,1.383,138,1.939,141,1.319,143,0.75,144,2.209,145,0.644,146,0.468,152,3.204,153,2.515,157,0.421,158,1.375,164,2.515,172,1.432,173,2.006,174,1.703,175,1.212,176,2.682,177,1.432,178,1.401,179,1.432,180,2.59,181,2.287,182,1.432,183,1.383,184,1.432,185,1.383,186,1.293,187,1.432,188,1.212,189,1.251,190,1.251,191,2.078,192,1.383,193,1.383,194,2.682,195,1.383,196,1.432,197,1.383,198,1.432,199,1.293,200,1.383,201,1.383,202,1.432,203,1.383,204,1.337,205,1.432,206,1.383,207,1.432,208,1.383,209,1.293,210,1.383,211,1.383,212,1.383,213,1.337,214,1.383,215,1.432,220,2.181,223,2.88,231,1.085,249,1.037,250,0.624,252,0.726,261,1.375,309,4.153,313,1.985,319,0.726,340,1.532,355,1.809,446,1.985,535,3.252,541,1.758,542,3.031,543,2.413,544,4.667,592,2.57,636,7.113,637,6.23,638,3.431,639,3.406,640,5.856,641,4.293,642,4.977,643,2.413,644,4.977,645,5.856,646,4.977,647,3.648,648,4.977,649,4.977,650,3.431,651,5.626,652,6.423,653,4.977,654,4.977,655,4.977,656,4.977,657,3.431,658,4.977,659,3.431,660,3.031,661,3.005,662,1.985,663,3.431,664,3.431,665,3.431,666,3.431,667,3.431,668,4.977,669,4.977,670,4.977,671,6.423,672,6.423,673,3.431,674,6.423,675,3.406,676,6.423,677,6.423,678,4.977,679,4.977,680,4.977,681,6.423,682,4.977,683,4.977]],["title/components/EqualizerComponent.html",[123,0.894,183,1.755]],["body/components/EqualizerComponent.html",[3,0.227,4,0.227,5,0.193,7,0.345,8,0.536,10,1.3,11,0.287,12,0.012,13,0.242,19,0.897,21,1.75,75,0.008,76,0.008,123,1.381,124,1.788,125,1.8,126,1.852,127,1.852,128,1.852,130,1.597,131,3.833,132,3.833,133,3.236,134,3.325,136,2.32,137,1.788,138,2.32,141,1.3,143,0.79,144,2.855,145,0.832,146,0.604,157,0.545,158,1.226,172,1.852,173,2.401,174,2.037,175,1.566,176,2.999,177,1.852,178,1.539,179,1.852,180,1.788,181,1.383,182,1.852,183,2.897,184,1.852,185,1.788,186,1.672,187,1.852,188,1.566,189,1.618,190,1.618,191,2.486,192,1.788,193,1.788,194,2.999,195,1.788,196,1.852,197,1.788,198,1.852,199,1.672,200,1.788,201,1.788,202,1.852,203,1.788,204,1.728,205,1.852,206,1.788,207,1.852,208,1.788,209,1.672,210,1.788,211,1.788,212,1.788,213,1.728,214,1.788,215,1.852,217,3.629,231,1.298,249,1.341,250,0.807,252,0.939,261,1.857,316,4.928,317,5.483,340,0.996,366,4.075,447,5.338,535,2.576,643,2.887,684,4.435,685,4.729,686,5.338,687,5.954,688,5.954,689,7.494,690,5.954,691,5.954,692,4.435,693,3.626,694,4.435,695,4.435,696,2.855,697,4.435,698,3.522,699,5.954,700,4.435,701,2.566]],["title/interfaces/EqualizerGainValues.html",[0,0.195,224,3.458]],["body/interfaces/EqualizerGainValues.html",[0,0.15,2,0.749,3,0.171,4,0.171,5,0.158,10,1.442,12,0.012,13,0.314,22,0.979,39,3.39,41,1.443,75,0.006,76,0.006,110,1.618,120,1.555,135,0.922,140,1.555,141,0.645,143,0.697,145,0.626,146,0.455,157,0.41,158,2.189,174,1.141,216,0.758,217,1.685,219,2.65,220,2.256,221,2.922,222,2.446,223,1.93,224,4.577,225,2.65,226,2.922,227,2.922,228,2.65,229,2.922,230,2.65,233,2.283,234,1.141,235,2.65,236,2.922,244,2.922,246,2.922,247,3.668,257,2.446,258,2.922,259,4.577,261,1.347,262,2.148,263,3.074,266,2.922,268,2.922,269,5.048,271,2.922,273,2.922,274,2.922,277,2.922,279,4.271,282,2.571,283,2.922,284,2.97,285,2.821,286,2.821,287,2.821,288,2.821,289,2.97,290,2.97,291,3.139,292,3.139,293,3.139,295,4.577,298,4.271,302,2.922,304,2.922,305,2.446,309,2.97,310,2.032,311,1.618,312,1.759,313,1.93,314,2.97,315,1.141,316,3.575,317,4.338,318,0.95,319,1.578,320,2.922,321,2.032,322,2.922,323,4.534,324,2.922,325,2.922,326,2.922,327,2.922,328,5.034,329,2.922,330,2.922,331,2.922,332,4.271,333,2.922,334,2.922,335,2.922,336,2.65,337,3.872,338,2.922,339,2.172,340,1.424,341,2.922,342,3.139,343,3.872,344,2.922,345,2.922,346,2.922,347,2.922,348,2.283,349,2.922,350,2.922,351,2.922,352,4.271,353,2.922,354,2.65,355,1.759,356,2.446,357,2.032,358,2.922,359,2.283,360,2.65,361,2.922,362,2.922,363,4.271,364,4.271,365,2.922,366,3.337,367,4.271,368,4.271,369,2.922,370,2.922,371,2.922,372,2.922,373,2.922,374,2.922,375,2.922,376,2.922,377,2.65,378,2.148,379,1.759,380,2.283,381,2.65,382,2.922,383,2.922,384,2.922,385,2.922,386,2.922,387,2.922,388,4.271,389,2.922,390,2.922,391,2.922,392,2.922,393,2.922,394,1.9,395,2.922,396,3.872,397,2.922,398,2.922,399,2.65,400,2.922,401,2.65,402,1.685,403,2.922,404,2.148,405,2.922,406,2.922,407,2.922,408,2.922,409,2.922,410,2.922,411,2.922,412,2.922,413,2.922,414,2.922,415,2.922,416,2.922,417,2.922,418,2.922,419,3.337,420,2.922,421,2.922,422,2.922,423,4.271,424,2.922,425,2.922,426,2.922,427,2.922,428,1.217,429,2.922,430,2.922,431,4.271,432,2.922,433,2.922,434,2.922,435,2.922,436,2.922,437,2.922,438,2.922,439,2.922,440,2.922,441,2.922,442,2.922,443,2.922,444,2.922,445,2.922,702,3.336,703,3.336]],["title/components/FileDropOverlayComponent.html",[123,0.894,185,1.755]],["body/components/FileDropOverlayComponent.html",[3,0.18,4,0.18,5,0.254,7,0.332,8,0.455,11,0.383,12,0.012,13,0.191,16,1.637,21,1.316,39,2.186,75,0.007,76,0.007,123,1.217,124,1.413,125,1.528,126,1.463,127,1.463,128,1.463,130,1.355,133,3.15,134,3.228,137,1.413,138,1.969,141,1.33,143,0.385,145,0.657,146,0.478,157,0.43,158,0.968,172,1.463,173,2.037,174,1.729,175,1.237,176,2.871,177,1.463,178,1.517,179,1.463,180,1.413,181,1.092,182,1.463,183,1.413,184,1.463,185,2.615,186,3.247,187,1.463,188,1.237,189,1.278,190,1.278,191,2.109,192,1.413,193,1.413,194,2.708,195,1.413,196,1.463,197,1.413,198,1.463,199,1.321,200,1.413,201,1.413,202,1.463,203,1.413,204,1.365,205,1.463,206,1.413,207,1.463,208,1.413,209,1.904,210,1.413,211,1.413,212,1.413,213,1.365,214,1.413,215,1.463,220,2.04,231,1.102,249,1.792,250,1.078,252,1.254,261,1.396,262,2.256,319,1.6,348,2.398,402,2.994,458,2.553,471,3.815,472,2.256,495,4.426,503,3.609,521,3.253,534,2.787,576,2.134,639,2.398,660,3.609,704,3.504,705,5.252,706,6.275,707,7.164,708,7.164,709,3.504,710,5.926,711,3.458,712,5.053,713,5.926,714,5.053,715,5.926,716,5.926,717,5.053,718,5.053,719,4.426,720,7.7,721,3.504,722,5.053,723,3.504,724,5.053,725,3.504,726,3.504,727,5.926,728,3.504,729,3.069,730,3.504,731,3.504,732,3.504,733,3.504,734,3.504,735,3.504,736,3.504,737,3.504,738,3.504,739,3.504,740,3.504,741,5.053,742,6.877,743,3.504,744,5.053,745,5.053,746,3.504,747,5.053,748,3.504,749,5.053,750,5.053,751,3.504,752,5.053,753,3.504,754,5.926,755,5.191,756,5.053,757,3.504,758,3.504,759,5.053,760,5.926,761,3.504,762,5.053,763,3.504,764,3.504,765,3.504,766,3.504,767,3.504,768,3.504,769,3.504,770,3.069,771,3.069,772,5.053,773,3.504,774,5.053,775,3.504,776,3.504,777,3.069,778,3.504,779,3.504,780,3.504,781,3.504,782,3.504,783,5.053,784,3.504,785,3.069,786,3.069,787,3.504,788,3.504,789,5.053,790,3.069]],["title/classes/FileLoaderService.html",[157,0.535,791,2.652]],["body/classes/FileLoaderService.html",[3,0.297,4,0.297,5,0.188,7,0.297,8,0.637,11,0.375,12,0.011,13,0.316,75,0.009,76,0.009,141,1.535,157,0.712,231,1.541,250,1.286,252,1.614,589,3.12,791,4.304,792,5.795,793,5.571,794,4.957,795,5.571,796,5.795,797,8.68,798,6.056,799,5.433,800,6.305,801,5.82,802,5.181,803,5.795,804,5.795,805,5.795,806,5.795]],["title/interfaces/FrequencyBarsConfig.html",[0,0.195,94,2.199]],["body/interfaces/FrequencyBarsConfig.html",[0,0.366,2,1.082,3,0.247,4,0.247,5,0.156,7,0.247,8,0.566,10,1.694,11,0.52,12,0.012,13,0.457,18,2.823,19,1.118,22,1.413,25,2.625,75,0.008,76,0.008,77,2.657,78,2.657,79,3.599,80,2.787,81,2.787,82,2.787,83,2.54,84,2.433,85,2.54,86,2.54,87,2.54,88,2.54,89,2.54,90,2.54,91,2.54,92,2.657,93,2.657,94,3.177,95,4.06,96,3.89,97,3.89,98,3.89,99,2.433,100,3.177,101,2.54,102,2.823,103,2.823,104,3.177,105,2.54,106,2.54,107,2.433,108,2.657,109,2.787,110,2.336,111,3.395,112,2.54,113,2.336,114,3.862,115,2.932,116,2.54,117,3.177,118,3.461,119,3.461,120,2.246,121,3.177,122,3.599]],["title/interfaces/GamepadAction.html",[0,0.195,17,2.98]],["body/interfaces/GamepadAction.html",[0,0.334,1,3.144,2,1.097,3,0.25,4,0.25,5,0.158,6,3.144,7,0.406,8,0.572,9,3.342,10,1.6,11,0.529,12,0.012,13,0.451,14,4.804,15,3.581,16,1.35,17,5.107,18,3.009,19,1.061,20,5.107,21,1.943,22,2.068,23,5.268,24,3.144,25,2.649,26,3.342,27,3.342,28,3.144,29,2.826,30,3.342,31,3.144,32,3.144,33,3.144,34,2.974,35,2.974,36,4.652,37,2.826,38,3.342,39,2.745,40,3.342,41,2.745,42,3.342,43,2.958,44,3.342,45,4.085,46,3.342,47,2.974,48,3.342,49,3.144,50,3.342,51,3.144,52,3.342,53,3.144,54,3.342,55,2.974,56,3.342,57,3.144,58,3.342,59,2.826,60,3.342,61,2.974,62,3.342,63,3.144,64,3.342,65,3.144,66,3.342,67,3.144,68,3.342,69,3.144,70,2.974,71,3.342,72,3.342,73,3.342,74,3.342,75,0.008,76,0.008,250,1.358]],["title/injectables/GamepadService.html",[216,0.677,807,2.803]],["body/injectables/GamepadService.html",[1,3.342,3,0.144,4,0.144,5,0.091,7,0.372,8,0.385,9,2.928,10,1.59,11,0.427,12,0.012,13,0.153,14,5.028,16,1.73,18,3.078,20,5.225,21,1.718,22,0.822,23,1.803,24,3.741,26,4.516,27,4.516,28,3.741,29,3.362,31,1.803,32,4.42,33,3.741,34,3.161,35,2.605,37,3.003,39,2.708,70,3.161,75,0.006,76,0.006,135,0.774,140,2.42,141,1.328,143,0.471,146,0.382,157,0.344,158,2.178,178,1.194,216,0.665,218,1.055,220,1.218,231,0.933,249,1.757,250,1.057,252,1.23,261,2.08,318,0.797,319,1.635,340,1.482,402,2.161,451,1.418,458,1.415,471,2.754,472,1.803,807,2.754,808,2.8,809,5.191,810,5.191,811,4.278,812,4.278,813,5.191,814,4.278,815,4.278,816,4.278,817,2.8,818,7.402,819,4.278,820,2.8,821,7.402,822,2.8,823,5.811,824,2.8,825,7.079,826,4.278,827,2.8,828,2.8,829,2.8,830,2.8,831,2.453,832,2.8,833,2.8,834,2.8,835,2.8,836,2.8,837,5.191,838,2.8,839,5.191,840,2.8,841,2.8,842,5.811,843,2.8,844,2.8,845,2.8,846,2.8,847,4.278,848,5.191,849,4.971,850,4.278,851,2.453,852,4.278,853,2.8,854,2.8,855,2.8,856,2.8,857,2.8,858,4.278,859,2.8,860,2.8,861,2.8,862,2.224,863,2.8,864,2.8,865,3.805,866,6.259,867,2.8,868,2.8,869,5.191,870,2.8,871,2.8,872,2.8,873,2.8,874,1.62,875,2.8,876,2.8,877,2.8,878,4.278,879,2.8,880,2.8,881,2.8,882,2.8,883,2.8,884,2.8,885,4.547,886,4.278,887,3.136,888,4.278,889,4.278,890,2.8,891,2.8,892,2.8,893,4.278,894,2.8,895,2.8,896,2.8,897,4.278,898,4.278,899,5.191,900,5.191,901,5.811,902,4.284,903,5.191,904,2.8,905,5.811,906,2.8,907,6.599,908,4.278,909,4.278,910,4.278,911,2.8,912,5.811,913,2.8,914,2.8,915,4.278,916,2.8,917,2.8,918,4.278,919,4.278,920,2.8,921,2.8,922,2.8,923,2.8]],["title/interfaces/Hotkey.html",[0,0.195,924,2.98]],["body/interfaces/Hotkey.html",[0,0.252,2,0.915,3,0.209,4,0.209,5,0.132,7,0.209,8,0.506,11,0.448,12,0.012,13,0.351,19,1.2,75,0.007,76,0.007,135,1.125,143,0.827,145,0.764,146,0.555,150,2.48,151,2.057,157,0.5,158,2.203,174,2.489,188,1.438,189,2.049,190,1.485,216,0.874,233,2.787,263,3.738,315,1.393,318,1.159,319,1.361,339,2.117,340,1.634,359,2.787,402,2.838,451,1.863,515,2.622,592,1.535,606,1.269,662,2.356,865,2.986,887,2.986,924,3.845,925,3.234,926,5.334,927,4.962,928,5.651,929,3.617,930,3.845,931,2.986,932,3.422,933,2.356,934,4.462,935,3.845,936,5.507,937,3.234,938,2.622,939,2.48,940,3.234,941,3.234,942,3.251,943,2.986,944,2.986,945,4.119,946,3.234,947,3.617,948,3.234,949,2.48,950,3.234,951,3.234,952,3.234,953,3.234,954,3.234,955,3.234,956,3.234,957,3.234,958,4.462,959,3.234,960,4.462,961,4.462,962,4.462,963,2.986,964,3.234,965,3.234,966,3.234,967,3.234,968,3.845,969,3.234,970,3.234,971,3.234,972,3.234,973,5.108,974,3.234,975,4.119,976,3.234,977,3.234,978,4.462,979,3.234,980,3.234,981,3.234,982,3.234,983,3.234,984,3.234,985,3.234,986,4.462,987,3.234,988,3.234,989,2.986,990,3.234,991,5.507,992,3.234,993,4.462,994,3.234,995,2.986,996,3.234,997,3.234,998,2.787,999,3.234,1000,3.234,1001,3.234]],["title/interfaces/HotkeyInfo.html",[0,0.195,938,2.803]],["body/interfaces/HotkeyInfo.html",[0,0.255,2,0.929,3,0.212,4,0.212,5,0.134,7,0.212,8,0.512,11,0.367,12,0.012,13,0.354,19,1.166,75,0.008,76,0.008,135,1.143,143,0.831,145,0.776,146,0.564,150,2.519,151,2.09,157,0.508,158,2.21,174,1.943,188,1.461,189,2.071,190,1.509,216,0.883,233,2.831,263,3.754,315,1.415,318,1.178,319,1.373,339,2.14,340,1.643,359,2.831,402,2.869,451,1.883,515,2.663,592,1.559,606,1.29,662,2.394,865,3.033,887,3.033,924,2.831,925,3.285,926,4.164,927,4.983,928,5.118,930,3.887,931,3.033,932,3.459,933,2.394,934,4.51,935,3.887,936,6.353,937,3.285,938,3.656,939,2.519,940,3.285,941,3.285,942,3.286,943,3.033,944,3.033,945,4.164,946,3.285,947,3.656,948,3.285,949,2.519,950,3.285,951,3.285,952,3.285,953,3.285,954,3.285,955,3.285,956,3.285,957,3.285,958,4.51,959,3.285,960,4.51,961,4.51,962,4.51,963,3.033,964,3.285,965,3.285,966,3.285,967,3.285,968,3.887,969,3.285,970,3.285,971,3.285,972,3.285,973,5.15,974,3.285,975,4.164,976,3.285,977,3.285,978,4.51,979,3.285,980,3.285,981,3.285,982,3.285,983,3.285,984,3.285,985,3.285,986,4.51,987,3.285,988,3.285,989,3.033,990,3.285,991,5.544,992,3.285,993,4.51,994,3.285,995,3.033,996,3.285,997,3.285,998,2.831,999,3.285,1000,3.285,1001,3.285]],["title/interfaces/HotkeysData.html",[0,0.195,1002,3.458]],["body/interfaces/HotkeysData.html",[0,0.254,2,1.271,3,0.29,4,0.29,5,0.184,7,0.29,8,0.627,11,0.366,12,0.012,13,0.38,75,0.009,76,0.009,123,1.431,133,2.133,134,2.205,136,2.205,138,2.205,143,0.905,145,1.062,146,0.771,148,3.274,157,0.695,188,1.999,189,2.752,190,2.872,340,1.271,606,1.764,643,2.744,932,3.447,933,3.274,938,3.643,942,3.274,947,4.858,949,3.447,998,5.389,1002,5.532,1003,4.957,1004,4.149,1005,4.149,1006,5.107,1007,4.957,1008,4.767,1009,3.873,1010,4.242,1011,3.519,1012,2.859,1013,4.957,1014,4.149,1015,4.149,1016,4.149,1017,4.957,1018,4.957,1019,4.957,1020,4.957]],["title/components/HotkeysHelpDialogComponent.html",[123,0.894,188,1.538]],["body/components/HotkeysHelpDialogComponent.html",[0,0.18,3,0.206,4,0.206,5,0.181,7,0.206,8,0.502,12,0.012,13,0.304,16,1.111,21,1.45,41,2.984,43,2.596,75,0.007,76,0.007,123,1.312,124,1.621,125,1.684,126,1.678,127,1.678,128,1.678,130,1.494,133,3.202,134,3.287,136,2.17,137,1.621,138,2.17,141,1.334,143,0.824,145,0.754,146,0.548,148,2.326,157,0.494,172,1.678,173,2.245,174,1.905,175,1.42,176,2.879,177,1.678,178,1.417,179,1.678,180,1.621,181,1.253,182,1.678,183,1.621,184,1.678,185,1.621,186,1.515,187,1.678,188,2.436,189,2.802,190,2.991,191,2.325,192,1.621,193,1.621,194,2.879,195,1.621,196,1.678,197,1.621,198,1.678,199,1.515,200,1.621,201,1.621,202,1.678,203,1.621,204,1.567,205,1.678,206,1.621,207,1.678,208,1.621,209,1.515,210,1.621,211,1.621,212,1.621,213,1.567,214,1.621,215,1.678,231,1.214,243,4.082,252,0.851,261,1.539,340,0.903,535,2.409,606,1.991,643,2.7,924,3.811,932,2.448,933,2.326,938,2.588,942,3.222,947,2.588,949,3.891,998,2.751,1002,3.193,1003,6.343,1004,2.947,1005,2.947,1006,4.684,1007,3.521,1008,4.372,1009,2.751,1010,3.891,1011,3.227,1012,2.031,1013,4.877,1014,4.082,1015,4.082,1016,4.082,1017,6.343,1018,3.521,1019,6.041,1020,3.521,1021,4.02,1022,3.521,1023,4.02,1024,4.02,1025,4.02,1026,6.896,1027,7.492,1028,6.896,1029,5.569,1030,5.569,1031,6.896,1032,5.569,1033,5.569,1034,4.877,1035,4.877,1036,5.569,1037,5.569,1038,5.569]],["title/injectables/HotkeysService.html",[216,0.677,939,2.652]],["body/injectables/HotkeysService.html",[0,0.232,3,0.186,4,0.186,5,0.118,7,0.186,8,0.467,11,0.451,12,0.012,13,0.33,16,1.927,19,1.149,21,1.717,75,0.007,76,0.007,135,1.004,141,1.542,143,0.798,145,0.682,146,0.495,150,2.213,151,1.836,157,0.446,158,2.146,174,2.069,178,1.065,188,1.283,189,2.406,190,1.325,216,0.807,218,1.37,231,1.131,233,4.514,249,1.568,250,1.2,252,1.535,261,1.822,263,3.767,315,1.243,318,1.035,319,1.28,339,2.279,340,1.566,359,4.514,402,2.62,451,1.72,515,3.339,592,1.955,606,1.133,662,2.103,865,2.664,887,2.664,924,2.487,925,2.886,926,3.802,927,4.246,928,5.113,930,3.549,931,2.664,932,3.683,933,2.103,934,4.119,935,3.549,936,5.238,937,2.886,938,2.339,939,3.159,940,2.886,941,2.886,942,3.001,943,2.664,944,4.434,945,5.113,946,4.119,947,4.246,948,4.803,949,3.683,950,4.803,951,2.886,952,2.886,953,2.886,954,2.886,955,2.886,956,2.886,957,4.119,958,4.119,959,2.886,960,4.119,961,4.119,962,4.119,963,2.664,964,2.886,965,2.886,966,2.886,967,2.886,968,3.549,969,2.886,970,2.886,971,2.886,972,2.886,973,4.803,974,2.886,975,3.802,976,2.886,977,2.886,978,4.119,979,2.886,980,2.886,981,2.886,982,2.886,983,4.119,984,2.886,985,2.886,986,4.119,987,2.886,988,2.886,989,4.835,990,5.238,991,5.238,992,2.886,993,4.119,994,2.886,995,2.664,996,2.886,997,2.886,998,2.487,999,2.886,1000,2.886,1001,2.886,1039,5.187,1040,5.187,1041,3.634,1042,3.634,1043,3.634,1044,3.634,1045,3.634,1046,3.634,1047,3.634,1048,3.634,1049,3.634,1050,3.634,1051,3.634]],["title/interfaces/Id3CoverPicture.html",[0,0.195,527,2.803]],["body/interfaces/Id3CoverPicture.html",[0,0.323,2,1.344,3,0.307,4,0.307,5,0.194,7,0.307,8,0.649,10,1.394,11,0.466,12,0.012,13,0.393,19,1.27,75,0.01,76,0.01,113,3.749,130,1.605,143,0.658,250,1.311,527,4.978,528,3.852,533,4.931,534,3.3,535,2.589,539,2.589,540,2.113,541,2.113,542,3.644,543,3.982,550,2.255,563,2.589,606,2.502,874,4.169,1052,5.241,1053,4.752]],["title/interfaces/Id3Tags.html",[0,0.195,563,1.884]],["body/interfaces/Id3Tags.html",[0,0.306,2,1.229,3,0.28,4,0.28,5,0.178,7,0.28,8,0.614,10,1.319,11,0.546,12,0.012,13,0.372,19,1.298,75,0.009,76,0.009,113,2.653,130,1.468,143,0.602,250,1.574,527,5.01,528,3.523,533,5.325,534,3.018,535,3.367,539,3.367,540,2.748,541,2.748,542,4.739,543,3.883,550,2.062,555,5.975,563,2.951,606,1.706,874,3.947,1052,4.793,1053,6.18]],["title/injectables/Id3TagsService.html",[216,0.677,1054,3.458]],["body/injectables/Id3TagsService.html",[3,0.279,4,0.279,5,0.264,7,0.279,11,0.439,12,0.012,13,0.296,16,1.877,75,0.009,76,0.009,135,1.501,140,3.454,141,1.433,143,0.747,146,0.741,157,0.667,178,1.116,216,1.056,218,2.048,220,1.547,231,1.481,249,1.643,250,0.989,252,1.437,318,1.547,319,1.15,339,2.56,340,1.22,394,2.117,528,4.997,529,2.439,550,2.926,563,2.351,564,2.635,589,2.56,606,1.694,975,5.691,1054,5.394,1055,5.434,1056,5.949,1057,5.434,1058,5.434,1059,5.949,1060,5.434,1061,4.648,1062,5.434,1063,4.76,1064,5.434,1065,4.76,1066,4.315,1067,4.76,1068,5.434,1069,5.434,1070,5.434,1071,5.434,1072,5.434,1073,5.434,1074,5.434,1075,5.434,1076,5.434,1077,5.434,1078,4.76,1079,5.434,1080,5.434]],["title/interfaces/LastfmAlbum.html",[0,0.195,1081,2.803]],["body/interfaces/LastfmAlbum.html",[0,0.325,2,1.016,3,0.232,4,0.232,5,0.147,7,0.232,8,0.544,10,0.875,11,0.468,12,0.012,13,0.247,19,1.266,75,0.008,76,0.008,135,1.25,143,0.854,145,0.849,146,0.617,157,0.556,158,2.001,178,1.488,216,0.939,220,1.718,234,2.064,315,1.548,318,1.288,319,1.642,339,1.705,340,1.808,394,2.822,428,1.65,520,2.11,529,2.031,531,2.351,539,3.264,541,2.558,543,2.194,550,1.705,553,3.659,556,2.386,557,2.286,561,2.286,562,2.11,563,2.611,564,2.194,565,2.286,566,2.286,567,2.386,580,3.182,582,2.286,583,2.386,584,2.386,588,2.386,589,2.274,590,2.286,591,3.048,592,2.844,593,2.031,597,2.11,598,2.386,606,2.116,607,2.386,619,2.031,622,1.958,1081,4.371,1082,2.913,1083,2.913,1084,4.663,1085,2.618,1086,2.618,1087,3.675,1088,3.675,1089,2.913,1090,3.885,1091,2.756,1092,3.097,1093,3.097,1094,3.097,1095,3.097,1096,3.097,1097,2.913,1098,3.097,1099,3.097,1100,3.097,1101,3.097,1102,3.097,1103,3.885,1104,3.097,1105,3.097,1106,3.097,1107,3.097,1108,3.097,1109,3.097,1110,2.913,1111,3.097,1112,3.097,1113,3.097,1114,3.097,1115,3.097,1116,3.097]],["title/interfaces/LastfmErrorResponse.html",[0,0.195,1088,2.652]],["body/interfaces/LastfmErrorResponse.html",[0,0.326,2,1.027,3,0.234,4,0.234,5,0.148,7,0.234,8,0.547,10,1.32,11,0.441,12,0.012,13,0.249,19,1.252,75,0.008,76,0.008,135,1.263,143,0.856,145,0.858,146,0.623,157,0.561,158,2.009,178,0.939,216,0.945,220,1.73,234,2.078,315,1.564,318,1.301,319,1.647,339,1.723,340,1.812,394,3.095,428,1.667,520,2.131,529,2.052,531,2.367,539,2.629,541,2.568,543,2.216,550,1.723,553,2.309,556,2.41,557,2.309,561,2.309,562,2.131,563,2.629,564,2.216,565,2.309,566,2.309,567,2.41,580,3.203,582,2.309,583,2.41,584,2.41,588,2.41,589,2.29,590,2.309,591,3.069,592,2.853,593,2.052,597,2.131,598,2.41,606,2.127,607,2.41,619,2.052,622,1.978,1081,3.911,1082,2.943,1083,2.943,1084,3.911,1085,2.645,1086,2.645,1087,3.7,1088,4.156,1089,4.682,1090,3.911,1091,2.784,1092,3.128,1093,3.128,1094,3.128,1095,3.128,1096,3.128,1097,2.943,1098,3.128,1099,3.128,1100,3.128,1101,3.128,1102,3.128,1103,3.911,1104,3.128,1105,3.128,1106,3.128,1107,3.128,1108,3.128,1109,3.128,1110,2.943,1111,3.128,1112,3.128,1113,3.128,1114,3.128,1115,3.128,1116,3.128]],["title/interfaces/LastfmImage.html",[0,0.195,1084,2.803]],["body/interfaces/LastfmImage.html",[0,0.326,2,1.027,3,0.234,4,0.234,5,0.148,7,0.234,8,0.547,10,0.884,11,0.441,12,0.012,13,0.249,19,1.268,75,0.008,76,0.008,135,1.263,143,0.856,145,0.858,146,0.623,157,0.561,158,2.009,178,0.939,216,0.945,220,1.73,234,2.078,315,1.564,318,1.301,319,1.647,339,1.723,340,1.812,394,2.834,428,1.667,520,2.131,529,2.052,531,2.367,539,2.629,541,2.568,543,2.216,550,1.723,553,2.309,556,2.41,557,2.309,561,2.309,562,2.131,563,2.629,564,2.216,565,2.309,566,2.309,567,2.41,580,3.203,582,2.309,583,2.41,584,2.41,588,2.41,589,2.29,590,2.309,591,3.069,592,2.853,593,2.052,597,2.131,598,2.41,606,2.127,607,2.41,619,2.052,622,1.978,1081,3.911,1082,2.943,1083,2.943,1084,4.393,1085,4.208,1086,4.208,1087,3.7,1088,3.7,1089,2.943,1090,3.911,1091,2.784,1092,3.128,1093,3.128,1094,3.128,1095,3.128,1096,3.128,1097,2.943,1098,3.128,1099,3.128,1100,3.128,1101,3.128,1102,3.128,1103,3.911,1104,3.128,1105,3.128,1106,3.128,1107,3.128,1108,3.128,1109,3.128,1110,2.943,1111,3.128,1112,3.128,1113,3.128,1114,3.128,1115,3.128,1116,3.128]],["title/injectables/LastfmMetadataService.html",[216,0.677,1091,2.652]],["body/injectables/LastfmMetadataService.html",[0,0.325,3,0.232,4,0.232,5,0.147,7,0.232,10,0.876,11,0.391,12,0.012,13,0.247,19,1.227,75,0.008,76,0.008,135,1.252,141,0.876,143,0.854,145,0.85,146,0.618,157,0.556,158,2.002,178,1.241,216,0.939,218,1.708,220,1.72,231,1.317,234,2.479,249,1.37,250,0.825,252,0.959,315,1.55,318,1.29,319,1.643,339,1.708,340,1.808,394,2.824,428,1.653,520,2.113,529,2.034,531,2.354,539,2.613,541,2.559,543,2.197,550,2.276,553,2.289,556,2.389,557,2.289,561,2.289,562,2.113,563,3.135,564,2.197,565,2.289,566,2.289,567,2.389,580,3.185,582,2.289,583,2.389,584,2.389,588,3.185,589,2.561,590,2.289,591,3.051,592,2.845,593,2.034,597,2.113,598,2.389,606,2.118,607,2.389,619,2.034,622,1.96,1081,3.889,1082,3.889,1083,2.917,1084,3.889,1085,2.622,1086,2.622,1087,3.679,1088,3.679,1089,2.917,1090,3.889,1091,3.679,1092,3.101,1093,3.101,1094,3.101,1095,3.101,1096,3.101,1097,2.917,1098,3.101,1099,3.101,1100,3.101,1101,3.101,1102,3.101,1103,3.889,1104,3.101,1105,3.101,1106,3.101,1107,3.101,1108,3.101,1109,3.101,1110,2.917,1111,3.101,1112,3.101,1113,3.101,1114,3.101,1115,3.101,1116,3.101,1117,5.291,1118,4.531,1119,2.76]],["title/interfaces/LastfmSuccessResponse.html",[0,0.195,1087,2.652]],["body/interfaces/LastfmSuccessResponse.html",[0,0.327,2,1.037,3,0.237,4,0.237,5,0.15,7,0.237,8,0.551,10,0.893,11,0.396,12,0.012,13,0.252,19,1.232,75,0.008,76,0.008,135,1.276,143,0.859,145,0.866,146,0.629,157,0.567,158,2.018,178,0.949,216,0.951,220,1.741,234,2.093,315,1.58,318,1.315,319,1.652,339,1.74,340,1.816,394,2.845,428,1.684,520,2.153,529,2.073,531,2.384,539,2.646,541,2.812,543,2.239,550,1.74,553,2.333,556,2.435,557,2.333,561,2.333,562,2.153,563,2.646,564,2.239,565,2.333,566,2.333,567,2.435,580,3.225,582,2.333,583,2.435,584,2.435,588,2.435,589,2.305,590,2.333,591,3.09,592,2.863,593,2.073,597,2.153,598,2.435,606,2.138,607,2.435,619,2.073,622,1.998,1081,4.701,1082,2.973,1083,2.973,1084,3.938,1085,2.672,1086,2.672,1087,4.177,1088,3.725,1089,2.973,1090,3.938,1091,2.812,1092,3.16,1093,3.16,1094,3.16,1095,3.16,1096,3.16,1097,2.973,1098,3.16,1099,3.16,1100,3.16,1101,3.16,1102,3.16,1103,3.938,1104,3.16,1105,3.16,1106,3.16,1107,3.16,1108,3.16,1109,3.16,1110,2.973,1111,3.16,1112,3.16,1113,3.16,1114,3.16,1115,3.16,1116,3.16]],["title/injectables/LegacyFileLoaderService.html",[216,0.677,1120,3.814]],["body/injectables/LegacyFileLoaderService.html",[3,0.252,4,0.252,5,0.271,7,0.363,8,0.574,11,0.318,12,0.012,13,0.268,25,2.663,39,2.13,75,0.008,76,0.008,135,1.36,140,3.299,141,1.5,143,0.778,146,0.671,157,0.604,158,1.762,216,0.992,218,1.855,231,1.391,234,2.804,250,1.161,252,1.497,318,1.401,319,1.497,339,1.855,340,1.105,348,3.369,402,2.487,428,1.795,451,1.632,503,4.558,589,2.667,660,2.998,791,4.924,793,4.365,794,3.884,798,5.619,799,5.122,800,5.944,801,5.187,802,4.676,1067,4.311,1120,5.586,1121,6.378,1122,3.909,1123,4.922,1124,5.487,1125,4.922,1126,4.922,1127,4.922,1128,4.922,1129,3.369,1130,3.609,1131,3.609,1132,4.922,1133,4.922,1134,3.909,1135,4.922,1136,4.922,1137,4.922,1138,4.922,1139,4.922,1140,4.922,1141,4.922,1142,4.922,1143,4.922,1144,4.922,1145,6.378,1146,4.922,1147,4.922,1148,4.922,1149,4.922,1150,4.922,1151,4.922]],["title/components/LibraryComponent.html",[123,0.894,192,1.755]],["body/components/LibraryComponent.html",[3,0.178,4,0.178,5,0.163,7,0.178,8,0.452,11,0.462,12,0.012,13,0.189,16,1.784,19,1.252,21,1.681,75,0.007,76,0.007,123,1.21,124,1.399,125,1.517,126,1.448,127,1.448,128,1.448,130,1.346,133,3.118,134,3.187,136,1.955,137,1.399,138,1.955,141,1.424,143,0.753,145,0.651,146,0.473,157,0.426,172,1.448,173,2.023,174,1.716,175,1.225,176,2.695,177,1.448,178,1.512,179,1.448,180,1.399,181,1.081,182,1.448,183,1.399,184,1.448,185,1.399,186,1.307,187,1.448,188,1.225,189,1.265,190,1.265,191,2.094,192,2.603,193,1.399,194,2.695,195,1.399,196,1.448,197,1.399,198,1.448,199,1.307,200,1.399,201,1.399,202,1.448,203,1.399,204,1.352,205,1.448,206,1.399,207,1.448,208,1.399,209,1.307,210,1.399,211,1.399,212,1.399,213,1.352,214,1.399,215,1.448,231,1.094,234,1.187,249,1.782,250,1.072,252,1.366,261,1.628,311,2.433,313,2.007,319,1.45,394,2.296,428,1.265,448,2.374,458,2.534,535,3.538,536,3.23,539,3.375,540,1.225,541,2.755,592,2.895,606,1.081,643,2.433,701,2.007,1008,4.033,1009,2.374,1152,3.469,1153,4.68,1154,5.893,1155,5.017,1156,5.017,1157,6.85,1158,6.85,1159,6.85,1160,5.017,1161,5.017,1162,5.017,1163,6.456,1164,5.017,1165,3.469,1166,5.017,1167,3.469,1168,5.017,1169,3.469,1170,3.469,1171,3.469,1172,3.469,1173,3.469,1174,2.374,1175,2.374,1176,2.543,1177,2.543,1178,3.469,1179,3.469,1180,3.039,1181,2.755,1182,3.469,1183,3.469,1184,3.469,1185,4.68,1186,5.161,1187,3.469,1188,5.893,1189,3.469,1190,3.469,1191,3.469,1192,3.469,1193,3.469,1194,3.469,1195,3.469,1196,3.039,1197,6.254]],["title/interceptors/LoaderInterceptor.html",[1198,4.354,1199,3.458]],["body/interceptors/LoaderInterceptor.html",[3,0.299,4,0.299,5,0.189,7,0.299,11,0.377,12,0.012,13,0.318,75,0.009,76,0.009,141,1.127,143,0.897,145,1.093,146,0.794,157,0.716,178,1.197,216,1.103,231,1.546,249,1.762,250,1.06,252,1.233,315,1.994,319,1.233,340,1.309,458,2.944,557,2.944,935,5.231,1199,5.632,1200,5.827,1201,5.827,1202,7.092,1203,7.092,1204,7.954,1205,6.696,1206,7.954,1207,5.827,1208,4.628,1209,5.827,1210,7.092,1211,5.827,1212,4.272,1213,4.565,1214,5.827,1215,4.272,1216,5.104,1217,5.827,1218,5.104]],["title/injectables/LoaderService.html",[216,0.677,1213,2.803]],["body/injectables/LoaderService.html",[3,0.29,4,0.29,5,0.184,7,0.29,8,0.627,12,0.012,13,0.309,16,1.925,21,1.474,39,3.407,41,3.014,75,0.009,76,0.01,135,1.564,141,1.459,143,0.622,146,0.771,157,0.695,216,1.083,218,2.133,220,2.148,225,5.993,231,1.519,252,1.474,261,1.564,282,2.984,295,5.532,318,1.611,319,1.198,396,4.494,399,4.494,1213,4.484,1219,5.659,1220,8.085,1221,8.085,1222,5.659,1223,5.659,1224,5.659,1225,5.659,1226,8.085,1227,5.659,1228,5.659,1229,4.494,1230,5.659]],["title/injectables/MediaSessionService.html",[216,0.677,1231,2.98]],["body/injectables/MediaSessionService.html",[3,0.228,4,0.228,5,0.144,7,0.228,10,1.494,11,0.465,12,0.012,13,0.243,16,2.135,29,4.342,75,0.008,76,0.008,130,1.195,135,1.231,140,3.14,141,1.451,143,0.657,145,0.836,146,0.607,157,0.547,158,1.861,178,1.478,216,0.929,217,3.017,218,1.679,222,5.664,223,4.164,231,1.302,249,2.176,250,1.31,252,1.523,262,2.867,318,1.268,319,1.264,336,3.537,339,1.679,394,2.327,593,2.68,597,2.784,693,2.713,929,3.844,968,4.925,1231,4.086,1232,6.767,1233,6.135,1234,4.454,1235,5.971,1236,5.971,1237,5.971,1238,5.971,1239,4.454,1240,5.971,1241,6.736,1242,7.505,1243,6.304,1244,4.454,1245,5.971,1246,6.736,1247,4.454,1248,5.971,1249,4.454,1250,5.971,1251,4.454,1252,5.35,1253,4.454,1254,5.23,1255,4.742,1256,4.454,1257,3.537,1258,4.454,1259,4.454,1260,4.454,1261,4.454,1262,3.901,1263,4.454,1264,4.454,1265,5.971,1266,4.742,1267,5.23,1268,5.971,1269,4.454,1270,4.454,1271,3.901,1272,4.454,1273,4.454,1274,4.454,1275,4.454,1276,4.454,1277,4.454,1278,4.454]],["title/injectables/MetadataService.html",[216,0.677,1279,3.192]],["body/injectables/MetadataService.html",[3,0.161,4,0.161,5,0.243,7,0.161,8,0.42,11,0.461,12,0.012,13,0.171,19,0.926,22,2.15,75,0.006,76,0.006,130,0.841,135,0.867,141,1.271,143,0.861,145,0.588,146,0.427,157,0.385,158,2.025,178,0.644,181,1.452,216,0.725,218,1.182,220,0.893,231,1.016,234,2.249,249,0.948,250,0.571,252,0.664,311,2.259,312,1.654,313,1.815,315,1.073,318,0.893,319,1.458,340,1.681,355,2.457,380,2.146,428,2.672,451,2.04,488,4.081,503,1.91,520,3.416,524,4.592,530,2.696,531,1.815,535,1.357,536,4.232,538,4.714,539,1.357,540,1.108,541,1.108,542,1.91,543,1.521,544,5.123,545,2.299,546,2.146,550,2.596,562,1.462,564,1.521,565,1.584,577,1.815,581,2.837,589,2.319,590,1.584,591,1.584,592,2.596,619,2.495,622,2.405,629,5.05,630,2.696,631,2.299,632,2.299,633,2.299,634,2.299,635,2.299,701,1.815,929,3.578,1054,3.7,1091,2.837,1119,3.747,1174,2.146,1175,2.146,1176,2.299,1177,2.299,1279,3.416,1280,2.747,1281,5.559,1282,5.559,1283,4.869,1284,5.559,1285,4.659,1286,4.659,1287,3.136,1288,5.389,1289,4.659,1290,3.136,1291,4.659,1292,3.136,1293,4.659,1294,3.136,1295,4.659,1296,3.136,1297,3.136,1298,2.747,1299,3.136,1300,2.747,1301,3.136,1302,3.136,1303,2.146,1304,3.136,1305,3.136,1306,2.747,1307,2.747,1308,3.136,1309,3.136,1310,3.136,1311,3.136,1312,3.136,1313,3.136,1314,4.081,1315,3.136,1316,4.659,1317,4.869,1318,3.136,1319,3.136,1320,4.659,1321,3.136,1322,4.659,1323,4.659,1324,3.7,1325,4.081,1326,4.081,1327,4.659,1328,3.136,1329,3.136,1330,4.659,1331,4.659,1332,3.7,1333,3.7,1334,3.136,1335,3.136,1336,3.136,1337,3.136,1338,3.136,1339,3.136,1340,3.136,1341,3.136,1342,3.136,1343,3.136,1344,3.136,1345,6.574,1346,3.136,1347,3.136,1348,3.136,1349,3.136,1350,3.136,1351,3.136,1352,4.659,1353,3.136,1354,3.136,1355,3.136,1356,3.136,1357,3.136,1358,3.136,1359,3.136,1360,3.136,1361,3.136,1362,3.136,1363,3.136,1364,3.136,1365,3.136,1366,3.136,1367,3.136,1368,3.136,1369,3.136,1370,3.136,1371,3.136,1372,3.7,1373,3.136,1374,3.136,1375,4.659,1376,3.136,1377,3.136,1378,3.136,1379,3.136,1380,3.136,1381,3.136,1382,3.136,1383,3.136,1384,3.136,1385,3.136,1386,2.747,1387,3.136,1388,3.136,1389,3.136,1390,3.136,1391,3.136,1392,3.136,1393,3.136,1394,3.136,1395,3.136,1396,3.136,1397,3.136,1398,3.136,1399,3.136]],["title/components/MetadataSettingsComponent.html",[123,0.894,193,1.755]],["body/components/MetadataSettingsComponent.html",[3,0.188,4,0.188,5,0.236,7,0.188,11,0.428,12,0.012,13,0.2,16,1.829,22,1.53,75,0.007,76,0.007,123,1.248,124,1.477,125,1.577,126,1.529,127,1.529,128,1.529,130,2.117,133,3.168,134,3.248,136,2.033,137,1.477,138,2.033,141,1.505,143,0.8,145,0.687,146,0.499,157,0.45,172,1.529,173,2.103,174,1.785,175,1.294,176,2.764,177,1.529,178,1.571,179,1.529,180,1.477,181,1.142,182,1.529,183,1.477,184,1.529,185,1.477,186,1.381,187,1.529,188,1.294,189,1.336,190,1.336,191,2.178,192,1.477,193,2.669,194,2.764,195,1.477,196,1.529,197,1.477,198,1.529,199,1.381,200,1.477,201,1.477,202,1.529,203,1.477,204,1.428,205,1.529,206,1.477,207,1.529,208,1.477,209,1.381,210,1.477,211,1.477,212,1.477,213,1.428,214,1.477,215,1.529,231,1.137,234,2.078,243,3.824,249,2.002,250,1.205,252,1.481,311,1.777,319,1.104,340,1.487,379,3.49,402,3.344,428,1.336,599,3.018,701,4.048,902,3.57,1011,3.069,1012,1.851,1097,3.358,1119,4.658,1174,2.507,1175,4.158,1176,2.686,1177,2.686,1279,3.824,1283,5.321,1400,7.894,1401,6.914,1402,2.909,1403,4.825,1404,6.075,1405,3.824,1406,6.62,1407,5.217,1408,5.217,1409,5.217,1410,5.217,1411,6.075,1412,6.075,1413,6.075,1414,3.664,1415,5.217,1416,8.135,1417,3.664,1418,5.217,1419,3.664,1420,5.217,1421,3.664,1422,5.217,1423,3.664,1424,3.664,1425,3.664,1426,3.664,1427,3.664,1428,3.664,1429,3.664,1430,3.664,1431,3.664,1432,3.664,1433,3.209,1434,3.664,1435,3.209,1436,2.909,1437,3.209,1438,5.217,1439,5.217,1440,6.62,1441,3.664,1442,5.217,1443,5.217,1444,5.217,1445,3.358,1446,5.798,1447,5.217,1448,4.569]],["title/interfaces/MusicbrainzReleaseGroup.html",[0,0.195,568,2.803]],["body/interfaces/MusicbrainzReleaseGroup.html",[0,0.316,2,0.948,3,0.216,4,0.216,5,0.137,7,0.216,8,0.519,10,0.816,11,0.424,12,0.012,13,0.23,19,1.272,22,1.238,75,0.008,76,0.008,135,1.166,143,0.856,145,0.792,146,0.575,157,0.518,158,2.15,181,1.316,216,0.895,220,1.639,234,2.242,250,1.048,315,1.444,318,1.202,319,1.559,340,1.825,394,2.963,428,2.568,451,1.399,520,2.684,529,1.894,531,1.645,540,2.486,541,1.491,549,3.707,550,1.591,551,2.888,552,2.888,553,2.132,554,2.888,556,2.225,557,2.132,558,2.888,559,2.717,560,2.717,561,3.31,562,1.968,563,2.491,564,2.047,565,2.132,566,2.132,567,2.225,568,4.219,569,4.487,570,4.532,571,4.895,572,4.287,573,2.717,574,3.94,575,2.888,576,2.57,577,2.442,578,2.888,579,2.717,580,2.225,581,2.57,582,2.132,583,2.225,584,2.225,585,2.888,586,2.888,587,2.888,588,2.225,589,2.47,590,2.132,591,2.909,592,2.933,593,2.941,594,3.94,595,2.888,596,2.888,597,3.055,598,3.036,599,2.442,600,2.888,601,2.888,602,2.888,603,2.888,604,2.888,605,2.888,606,1.316,607,3.036,608,3.94,609,2.888,610,2.888,611,2.888,612,2.888,613,2.888,614,2.888,615,2.888,616,3.94,617,2.888,618,2.888,619,1.894,620,2.888,621,2.888,622,2.491,623,2.888,624,2.888,625,2.888,626,2.888]],["title/interfaces/MusicbrainzResponse.html",[0,0.195,573,2.803]],["body/interfaces/MusicbrainzResponse.html",[0,0.318,2,0.963,3,0.22,4,0.22,5,0.139,7,0.22,8,0.524,10,1.278,11,0.376,12,0.012,13,0.234,19,1.227,22,1.258,75,0.008,76,0.008,135,1.185,143,0.86,145,0.805,146,0.585,157,0.527,158,2.16,181,1.337,216,0.905,220,1.657,234,2.261,315,1.468,318,1.221,319,1.568,340,1.83,394,2.977,428,2.585,451,1.422,520,2.714,529,1.925,531,1.672,540,1.515,541,1.515,549,3.748,550,1.617,551,2.936,552,2.936,553,2.167,554,2.936,556,2.262,557,2.167,558,2.936,559,2.762,560,2.762,561,3.338,562,2,563,2.519,564,2.08,565,2.167,566,2.167,567,2.262,568,4.563,569,3.545,570,2.762,571,4.919,572,2.612,573,3.748,574,5.071,575,4.85,576,2.612,577,2.482,578,2.936,579,2.762,580,2.262,581,2.612,582,2.167,583,2.262,584,2.262,585,2.936,586,2.936,587,2.936,588,2.262,589,2.491,590,2.167,591,2.941,592,2.945,593,2.966,594,3.984,595,2.936,596,2.936,597,3.081,598,3.07,599,2.482,600,2.936,601,2.936,602,2.936,603,2.936,604,2.936,605,2.936,606,1.337,607,3.07,608,3.984,609,2.936,610,2.936,611,2.936,612,2.936,613,2.936,614,2.936,615,2.936,616,3.984,617,2.936,618,2.936,619,1.925,620,2.936,621,2.936,622,2.519,623,2.936,624,2.936,625,2.936,626,2.936]],["title/injectables/MusicbrainzService.html",[216,0.677,581,2.652]],["body/injectables/MusicbrainzService.html",[0,0.317,3,0.219,4,0.219,5,0.139,7,0.219,10,0.827,11,0.277,12,0.012,13,0.233,19,1.227,22,1.255,75,0.008,76,0.008,135,1.182,141,0.827,143,0.859,145,0.803,146,0.583,157,0.525,158,2.158,178,0.879,181,1.334,216,0.904,218,1.612,220,1.654,231,1.267,234,2.533,249,1.294,250,0.778,252,0.905,315,1.464,318,1.218,319,1.567,340,1.83,394,2.975,428,2.582,451,1.418,520,2.709,529,1.92,531,1.667,540,1.511,541,1.511,549,3.741,550,2.19,551,2.928,552,2.928,553,2.161,554,2.928,556,2.256,557,2.161,558,2.928,559,2.754,560,2.754,561,3.334,562,1.994,563,3.063,564,2.074,565,2.161,566,2.161,567,2.256,568,3.741,569,3.539,570,2.754,571,4.248,572,2.605,573,2.754,574,3.977,575,2.928,576,2.605,577,2.475,578,2.928,579,2.754,580,2.256,581,3.539,582,2.161,583,2.256,584,2.256,585,2.928,586,2.928,587,2.928,588,3.064,589,2.668,590,2.161,591,2.935,592,2.943,593,2.962,594,3.977,595,2.928,596,2.928,597,3.077,598,3.064,599,2.475,600,2.928,601,2.928,602,2.928,603,2.928,604,2.928,605,2.928,606,1.334,607,3.064,608,3.977,609,2.928,610,2.928,611,2.928,612,2.928,613,2.928,614,2.928,615,2.928,616,3.977,617,2.928,618,2.928,619,1.92,620,2.928,621,2.928,622,2.514,623,2.928,624,2.928,625,2.928,626,2.928,1117,5.09,1119,2.605,1449,4.278]],["title/injectables/NativeBrowserFileLoaderService.html",[216,0.677,1450,3.814]],["body/injectables/NativeBrowserFileLoaderService.html",[3,0.221,4,0.221,5,0.254,7,0.221,8,0.527,11,0.279,12,0.012,13,0.236,25,2.442,41,2.531,75,0.008,76,0.008,135,1.193,141,1.375,143,0.817,145,0.81,146,0.589,151,2.182,157,0.53,158,2.163,216,0.91,218,1.628,231,1.275,234,2.839,250,1.064,252,1.403,263,2.836,311,2.094,315,1.478,318,1.23,319,1.238,340,1.789,355,2.277,394,2.279,428,2.944,451,1.939,503,4.039,562,2.014,569,2.63,589,2.886,593,1.939,597,2.014,701,2.499,791,4.768,793,2.956,794,2.63,798,5.267,799,4.864,800,5.644,801,5.21,802,5.445,929,3.765,1122,3.43,1124,5.21,1129,2.956,1130,3.166,1131,3.166,1174,2.956,1175,2.956,1176,3.166,1177,3.166,1208,3.43,1450,5.123,1451,3.783,1452,4.319,1453,4.319,1454,4.319,1455,4.319,1456,5.809,1457,4.319,1458,6.632,1459,4.319,1460,6.632,1461,4.319,1462,5.21,1463,4.319,1464,4.319,1465,4.319,1466,4.319,1467,4.319,1468,4.319,1469,4.319,1470,3.783,1471,4.319,1472,4.319,1473,4.319,1474,3.783,1475,3.783,1476,4.319,1477,4.319,1478,4.319,1479,3.783,1480,4.319,1481,3.783,1482,4.319,1483,4.319,1484,4.319,1485,4.319,1486,3.783,1487,6.632,1488,5.849,1489,3.783,1490,4.319,1491,4.319,1492,4.319]],["title/interfaces/OscVisualizerOptions.html",[0,0.195,121,2.199]],["body/interfaces/OscVisualizerOptions.html",[0,0.366,2,1.092,3,0.249,4,0.249,5,0.158,7,0.249,8,0.57,10,1.679,11,0.499,12,0.012,13,0.458,18,3.192,19,1.122,22,1.426,25,2.936,75,0.008,76,0.008,77,2.681,78,2.681,79,3.612,80,2.813,81,2.813,82,2.813,83,2.563,84,2.456,85,2.563,86,2.563,87,2.563,88,2.563,89,2.563,90,2.563,91,2.563,92,2.681,93,2.681,94,2.456,95,3.336,96,3.196,97,3.196,98,3.196,99,2.456,100,3.901,101,2.563,102,2.84,103,2.84,104,3.196,105,2.563,106,2.563,107,2.456,108,2.681,109,2.813,110,2.357,111,3.41,112,2.563,113,2.357,114,4.109,115,2.95,116,2.563,117,3.196,118,3.473,119,3.691,120,2.266,121,3.553,122,3.964]],["title/interfaces/OsciloscopeConfig.html",[0,0.195,99,2.199]],["body/interfaces/OsciloscopeConfig.html",[0,0.368,2,1.118,3,0.255,4,0.255,5,0.161,7,0.255,8,0.579,10,1.682,11,0.486,12,0.012,13,0.46,18,2.868,19,1.132,22,1.46,25,2.682,75,0.009,76,0.009,77,2.745,78,2.745,79,3.645,80,2.88,81,2.88,82,2.88,83,2.624,84,2.514,85,2.624,86,2.624,87,2.624,88,2.624,89,2.624,90,2.624,91,2.624,92,2.745,93,2.745,94,2.514,95,3.387,96,3.245,97,3.245,98,3.245,99,3.245,100,3.931,101,2.624,102,2.883,103,2.883,104,3.245,105,2.624,106,2.624,107,2.514,108,2.745,109,2.88,110,2.413,111,3.449,112,2.624,113,2.413,114,3.923,115,2.995,116,2.624,117,3.245,118,3.504,119,3.504,120,2.32,121,3.245,122,3.645]],["title/components/PlayerComponent.html",[123,0.894,195,1.755]],["body/components/PlayerComponent.html",[3,0.117,4,0.117,5,0.207,7,0.117,8,0.329,10,1.544,11,0.428,12,0.012,13,0.125,16,1.931,19,0.687,21,1.58,34,1.394,35,3.695,37,1.325,39,2.462,59,2.115,70,1.394,75,0.005,76,0.005,84,1.157,123,0.937,124,0.923,125,1.105,126,0.956,127,0.956,128,0.956,130,0.98,131,2.353,132,2.353,133,2.954,134,3.006,136,1.424,137,0.923,138,1.424,141,1.516,143,0.878,144,1.474,145,0.43,146,0.312,148,1.325,157,0.281,172,0.956,173,1.474,174,1.25,175,0.809,176,2.174,177,0.956,178,1.492,179,0.956,180,2.1,181,1.139,182,0.956,183,0.923,184,0.956,185,2.1,186,1.377,187,0.956,188,0.809,189,0.835,190,0.835,191,1.526,192,0.923,193,0.923,194,2.174,195,2.1,196,0.956,197,2.1,198,0.956,199,0.863,200,0.923,201,0.923,202,0.956,203,0.923,204,0.892,205,0.956,206,0.923,207,0.956,208,0.923,209,0.863,210,2.1,211,0.923,212,0.923,213,0.892,214,0.923,215,0.956,217,2.631,220,1.883,230,1.818,231,0.797,234,2.524,249,2,250,1.272,252,1.582,255,3.172,261,2.194,263,1.11,309,3.172,319,1.204,340,1.363,355,1.207,428,1.333,451,1.212,458,1.846,471,2.937,472,1.474,477,4.136,503,1.394,548,2.115,637,2.005,641,3.344,643,1.772,661,2.005,662,1.325,675,3.564,686,3.623,693,2.226,696,1.474,698,1.818,706,2.005,711,1.567,791,2.226,794,2.226,795,2.501,801,3.818,807,2.353,874,1.325,926,1.678,927,1.474,928,1.678,939,2.226,1010,2.778,1011,2.304,1012,1.157,1129,3.122,1130,1.678,1131,1.678,1153,3.623,1181,1.818,1493,2.289,1494,2.501,1495,3.996,1496,3.623,1497,4.562,1498,3.623,1499,3.655,1500,3.655,1501,4.562,1502,5.692,1503,3.564,1504,3.655,1505,3.655,1506,3.655,1507,3.655,1508,3.655,1509,5.208,1510,3.655,1511,3.655,1512,3.201,1513,3.201,1514,5.208,1515,4.562,1516,4.562,1517,3.655,1518,2.289,1519,3.655,1520,2.289,1521,3.655,1522,2.289,1523,2.289,1524,3.655,1525,2.289,1526,2.289,1527,3.655,1528,2.289,1529,3.655,1530,2.289,1531,3.655,1532,2.289,1533,3.655,1534,2.289,1535,2.289,1536,2.289,1537,2.289,1538,2.289,1539,2.289,1540,2.289,1541,3.655,1542,2.289,1543,2.903,1544,2.289,1545,3.655,1546,2.289,1547,1.818,1548,2.005,1549,1.818,1550,2.289,1551,2.005,1552,2.005,1553,2.679,1554,2.005,1555,1.818,1556,2.289,1557,1.818,1558,2.005,1559,2.289,1560,2.289,1561,2.289,1562,2.005,1563,2.005,1564,2.289,1565,2.005,1566,2.289,1567,2.289,1568,2.289,1569,2.289,1570,2.289,1571,2.289,1572,3.655,1573,3.655,1574,2.289,1575,2.289,1576,2.289,1577,2.289,1578,2.289,1579,2.289,1580,2.289,1581,2.289,1582,3.655,1583,2.289,1584,3.655,1585,4.562,1586,2.289,1587,2.289,1588,2.289,1589,2.289,1590,2.289,1591,2.289,1592,2.289,1593,3.655,1594,2.289,1595,3.655,1596,2.289,1597,2.289,1598,2.289,1599,2.289,1600,2.289,1601,2.289,1602,3.655,1603,2.289,1604,2.289,1605,3.655,1606,2.289,1607,2.289,1608,2.289,1609,2.289,1610,3.655,1611,3.201,1612,2.289,1613,2.289,1614,2.289,1615,5.208,1616,2.289,1617,2.289,1618,2.289,1619,2.289,1620,1.818,1621,2.289,1622,2.289,1623,2.289,1624,2.289,1625,2.289,1626,2.289,1627,2.289,1628,2.289,1629,2.289,1630,2.289,1631,2.289,1632,2.289,1633,2.289,1634,2.289,1635,2.289,1636,2.289,1637,2.289,1638,3.201,1639,3.201,1640,3.201,1641,3.201,1642,3.655,1643,3.655,1644,3.655,1645,2.115,1646,3.655,1647,3.511]],["title/injectables/PlayerService.html",[216,0.677,1503,2.98]],["body/injectables/PlayerService.html",[3,0.102,4,0.102,5,0.226,7,0.167,8,0.293,10,1.323,11,0.405,12,0.012,13,0.108,16,1.792,21,1.738,25,1.359,39,2.807,41,2.287,43,1.517,75,0.004,76,0.004,102,2.55,103,2.55,110,2.322,123,0.408,130,1.524,140,1.929,141,1.533,143,0.782,145,0.372,146,0.27,152,2.095,153,1.454,157,0.244,158,2.089,164,1.454,178,1.167,216,0.506,217,1.644,218,0.748,220,2.245,222,3.034,231,0.71,234,2.666,249,1.718,250,1.14,252,1.549,255,1.208,259,3.287,261,2.022,263,2.322,282,2.525,309,3.654,310,1.982,311,0.962,312,1.046,313,1.148,314,1.982,318,0.565,319,1.504,321,1.208,339,0.748,340,1.797,355,1.716,394,0.773,428,2.633,451,1.372,463,3.511,465,1.576,466,1.358,469,2.585,477,3.803,503,1.982,525,2.771,535,3.166,539,0.858,540,0.701,541,0.701,546,2.227,547,1.358,548,1.148,589,1.993,592,2.445,693,1.208,696,1.277,791,1.982,794,1.982,795,2.227,874,2.395,929,1.277,1034,1.738,1103,1.277,1124,1.454,1129,1.358,1130,1.454,1131,1.454,1134,1.576,1180,3.625,1185,2.585,1186,1.738,1196,3.625,1205,4.194,1212,1.454,1213,2.095,1215,1.454,1216,1.738,1218,1.738,1231,2.227,1233,1.576,1243,1.738,1252,2.585,1255,1.576,1257,1.576,1262,2.851,1279,2.386,1435,1.738,1437,1.738,1474,1.738,1503,2.227,1512,2.851,1513,2.851,1515,4.194,1516,4.194,1565,1.738,1645,1.148,1647,2.395,1648,1.738,1649,4.139,1650,4.139,1651,3.255,1652,4.139,1653,4.139,1654,3.255,1655,4.789,1656,3.255,1657,3.625,1658,4.789,1659,4.139,1660,3.255,1661,3.255,1662,1.984,1663,3.255,1664,1.984,1665,1.984,1666,1.984,1667,1.984,1668,3.255,1669,1.984,1670,1.984,1671,3.255,1672,1.984,1673,4.789,1674,3.255,1675,1.984,1676,1.984,1677,1.984,1678,3.255,1679,1.984,1680,3.287,1681,3.255,1682,1.984,1683,1.984,1684,1.984,1685,1.984,1686,3.255,1687,3.255,1688,3.255,1689,1.984,1690,4.789,1691,1.984,1692,1.984,1693,6.265,1694,4.789,1695,5.681,1696,3.255,1697,1.984,1698,3.255,1699,1.984,1700,3.255,1701,1.984,1702,1.984,1703,3.255,1704,1.984,1705,1.738,1706,1.576,1707,2.227,1708,1.984,1709,1.984,1710,1.984,1711,1.738,1712,1.738,1713,1.984,1714,1.984,1715,1.576,1716,1.984,1717,1.984,1718,3.255,1719,1.984,1720,4.139,1721,1.984,1722,1.984,1723,1.984,1724,1.984,1725,3.255,1726,1.984,1727,1.984,1728,1.984,1729,1.984,1730,1.984,1731,1.984,1732,1.984,1733,1.984,1734,1.984,1735,3.255,1736,1.984,1737,1.738,1738,1.984,1739,3.255,1740,1.984,1741,1.984,1742,1.984,1743,1.984,1744,1.984,1745,1.984,1746,1.984,1747,1.984,1748,1.984,1749,1.984,1750,1.984,1751,1.984,1752,1.984,1753,1.984,1754,1.984,1755,1.984,1756,1.984,1757,1.984,1758,1.984,1759,1.984,1760,1.984,1761,1.984,1762,1.984,1763,1.984,1764,1.984,1765,1.984,1766,1.984,1767,1.984,1768,1.984,1769,3.255,1770,1.984,1771,3.255,1772,1.984,1773,1.984,1774,1.984,1775,4.139,1776,4.139,1777,4.139,1778,1.984,1779,1.984,1780,1.738,1781,1.984,1782,3.034,1783,1.984,1784,1.984,1785,1.984,1786,1.738,1787,1.984,1788,1.984,1789,1.984,1790,3.255,1791,1.984,1792,1.984,1793,1.984,1794,1.984,1795,1.984,1796,1.984,1797,1.984,1798,1.984,1799,3.255,1800,1.984,1801,1.984,1802,1.984,1803,1.984,1804,1.984,1805,1.984,1806,4.789,1807,1.984,1808,1.984,1809,1.984,1810,1.984,1811,1.984,1812,3.255,1813,1.984,1814,1.984,1815,1.984,1816,1.984,1817,1.984,1818,1.984,1819,4.139,1820,1.984,1821,1.984,1822,4.139,1823,1.984,1824,1.984,1825,3.255,1826,1.984,1827,1.984,1828,1.984,1829,3.255,1830,1.984,1831,1.984,1832,2.832,1833,1.984,1834,1.984,1835,1.984,1836,1.984,1837,1.984,1838,1.738,1839,3.287,1840,3.287,1841,1.984,1842,1.984,1843,1.984]],["title/components/PlaylistComponent.html",[123,0.894,197,1.755]],["body/components/PlaylistComponent.html",[3,0.156,4,0.156,5,0.148,7,0.403,8,0.41,11,0.392,12,0.012,13,0.166,16,0.841,21,1.69,41,2.622,75,0.006,76,0.006,123,1.121,124,1.226,125,1.377,126,1.27,127,1.27,128,1.27,130,1.221,131,2.932,132,2.932,133,3.091,134,3.161,136,1.775,137,1.226,138,1.775,141,1.436,143,0.873,144,1.958,145,0.571,146,0.415,148,1.76,157,0.373,158,1.258,172,1.27,173,1.836,174,1.558,175,1.074,176,2.53,177,1.27,178,1.491,179,1.27,180,1.226,181,0.948,182,1.27,183,1.226,184,1.27,185,1.226,186,2.284,187,1.27,188,1.074,189,1.109,190,1.109,191,1.901,192,1.226,193,1.226,194,2.53,195,1.226,196,1.27,197,2.443,198,1.27,199,1.146,200,1.226,201,1.226,202,1.27,203,1.226,204,1.185,205,1.27,206,1.226,207,1.27,208,1.226,209,1.146,210,1.226,211,1.226,212,1.226,213,2.362,214,1.226,215,1.27,217,3.062,220,1.554,228,3.617,231,0.993,234,1.868,249,1.832,250,1.103,252,1.283,261,1.793,282,3.422,309,3.952,313,1.76,340,1.586,402,3.278,446,1.76,535,3.433,537,3.339,589,1.716,643,2.208,662,1.76,693,2.774,696,1.958,719,3.989,755,2.664,1008,3.736,1009,2.082,1010,3.324,1011,2.758,1012,1.537,1213,3.902,1215,3.339,1255,3.617,1257,2.416,1498,4.335,1503,4.148,1543,3.617,1549,2.416,1680,5.897,1706,2.416,1782,3.339,1786,3.989,1844,3.042,1845,5.459,1846,5.459,1847,5.459,1848,5.459,1849,4.781,1850,5.459,1851,4.554,1852,4.554,1853,6.49,1854,4.443,1855,4.554,1856,4.554,1857,6.06,1858,3.042,1859,6.06,1860,3.042,1861,6.06,1862,3.042,1863,4.554,1864,3.042,1865,3.042,1866,3.042,1867,3.042,1868,3.989,1869,4.554,1870,4.554,1871,4.554,1872,3.042,1873,3.989,1874,3.042,1875,3.042,1876,3.042,1877,3.042,1878,3.042,1879,2.664,1880,2.664,1881,2.664,1882,4.554,1883,3.042,1884,3.042,1885,3.042,1886,3.042,1887,4.554,1888,4.554,1889,4.554,1890,4.554,1891,4.554,1892,6.811,1893,3.989,1894,4.554,1895,4.554,1896,4.554,1897,4.554]],["title/components/PromptDialogComponent.html",[123,0.894,199,1.641]],["body/components/PromptDialogComponent.html",[0,0.2,3,0.229,4,0.229,5,0.194,7,0.229,8,0.538,12,0.012,13,0.326,16,1.652,19,1.015,21,1.556,75,0.008,76,0.008,123,1.385,124,1.798,125,1.807,126,1.862,127,1.862,128,1.862,130,1.603,133,3.237,134,3.327,136,2.329,137,1.798,138,2.329,141,1.393,143,0.741,145,0.837,146,0.608,157,0.548,172,1.862,173,2.41,174,2.045,175,1.575,176,3.006,177,1.862,178,1.479,179,1.862,180,1.798,181,1.39,182,1.862,183,1.798,184,1.862,185,1.798,186,1.681,187,1.862,188,1.575,189,1.627,190,1.627,191,2.495,192,1.798,193,1.798,194,3.006,195,1.798,196,1.862,197,1.798,198,1.862,199,2.714,200,3.027,201,1.798,202,1.862,203,1.798,204,1.738,205,1.862,206,1.798,207,1.862,208,1.798,209,1.681,210,1.798,211,1.798,212,1.798,213,1.738,214,1.798,215,1.862,231,1.303,252,1.265,261,1.652,404,4.976,540,1.575,606,2.101,705,5.505,932,2.716,933,2.581,942,3.458,949,4.105,1004,3.27,1005,3.27,1006,4.942,1011,3.405,1012,2.253,1014,4.382,1015,4.382,1016,4.382,1022,3.907,1085,2.581,1898,6.577,1899,6.577,1900,6.307,1901,4.46,1902,4.46,1903,4.46,1904,3.27,1905,3.542,1906,3.907,1907,3.907,1908,5.977,1909,5.977,1910,5.977]],["title/interfaces/PromptDialogData.html",[0,0.195,1904,3.192]],["body/interfaces/PromptDialogData.html",[0,0.256,2,1.283,3,0.293,4,0.293,5,0.185,7,0.293,8,0.631,11,0.49,12,0.012,13,0.382,19,1.28,75,0.009,76,0.009,123,1.439,133,2.152,134,2.225,136,2.225,138,2.225,143,0.833,145,1.071,146,0.778,157,0.701,199,2.152,200,2.824,404,3.676,540,2.79,606,1.78,705,4.187,932,3.478,933,3.304,942,3.304,949,3.478,1004,4.187,1005,4.187,1006,5.135,1011,3.538,1012,2.885,1014,4.187,1015,4.187,1016,4.187,1085,4.57,1898,5.002,1899,5.002,1900,5.002,1904,5.135,1905,6.273,1906,5.002,1907,5.002]],["title/interfaces/RemoteCoverPicture.html",[0,0.195,531,1.697]],["body/interfaces/RemoteCoverPicture.html",[0,0.349,2,1.367,3,0.312,4,0.312,5,0.197,7,0.312,8,0.656,11,0.471,12,0.011,13,0.425,19,1.285,75,0.01,76,0.01,524,3.919,530,3.522,531,2.837,550,2.294,619,3.623,622,3.492,627,6.207,628,4.834,629,4.463,630,3.522,631,4.463,632,4.463,633,4.463,634,4.463,635,4.463]],["title/components/SettingsComponent.html",[123,0.894,201,1.755]],["body/components/SettingsComponent.html",[3,0.259,4,0.259,5,0.21,12,0.011,13,0.275,21,1.315,75,0.009,76,0.009,123,1.471,124,2.036,125,1.96,126,2.108,127,2.108,128,2.108,130,1.921,133,3.276,134,3.371,136,2.526,137,2.036,138,2.526,143,0.831,146,0.688,157,0.62,172,2.108,173,2.614,174,2.218,175,1.783,176,3.155,177,2.108,178,1.552,179,2.108,180,2.036,181,1.574,182,2.108,183,2.036,184,2.108,185,2.036,186,1.903,187,2.108,188,1.783,189,1.842,190,1.842,191,2.707,192,2.036,193,3.047,194,3.155,195,2.036,196,2.108,197,2.036,198,2.108,199,1.903,200,2.036,201,3.047,202,2.108,203,2.036,204,1.967,205,2.108,206,3.047,207,2.707,208,3.047,209,2.443,210,2.036,211,2.036,212,2.036,213,1.967,214,2.036,215,2.108,379,3.418,643,3.144,1401,4.422,1405,4.753,1911,5.049,1912,6.483,1913,4.422,1914,7.161,1915,4.422]],["title/components/ShellComponent.html",[123,0.894,137,1.755]],["body/components/ShellComponent.html",[3,0.193,4,0.193,5,0.172,7,0.193,8,0.478,11,0.243,12,0.012,13,0.205,16,1.038,19,0.927,21,1.839,75,0.007,76,0.007,123,1.265,124,1.514,125,1.605,126,1.568,127,1.568,128,1.568,130,1.424,133,3.177,134,3.258,136,2.069,137,2.699,138,2.069,141,1.366,143,0.905,145,0.705,146,0.512,148,2.173,157,0.461,172,1.568,173,2.141,174,1.816,175,1.326,176,2.795,177,1.568,178,1.451,179,1.568,180,1.514,181,1.171,182,1.568,183,1.514,184,1.568,185,1.514,186,1.415,187,1.568,188,1.326,189,1.37,190,1.37,191,2.216,192,1.514,193,1.514,194,2.795,195,1.514,196,1.568,197,1.514,198,1.568,199,1.415,200,1.514,201,1.514,202,1.568,203,1.514,204,1.463,205,1.568,206,1.514,207,1.568,208,1.514,209,1.415,210,1.514,211,1.514,212,1.514,213,1.463,214,1.514,215,1.568,220,2.087,231,1.158,249,1.136,250,0.683,252,0.795,261,1.951,263,3.246,315,1.285,319,1.303,379,2.799,446,2.173,643,2.575,685,4.217,935,3.634,947,2.418,1008,4.215,1009,2.57,1010,3.751,1011,3.111,1012,1.897,1212,2.753,1213,4.309,1215,3.892,1494,3.634,1495,5.394,1553,4.907,1554,3.29,1558,3.29,1562,4.651,1706,2.983,1849,5.394,1879,3.29,1880,3.29,1916,3.756,1917,5.309,1918,6.159,1919,6.159,1920,5.309,1921,5.309,1922,7.331,1923,5.394,1924,5.309,1925,5.309,1926,7.062,1927,3.756,1928,3.29,1929,5.309,1930,5.309,1931,3.756,1932,3.756,1933,5.309,1934,3.756,1935,3.756,1936,5.309,1937,3.756,1938,3.756,1939,3.756,1940,3.756,1941,3.756,1942,5.309,1943,3.29,1944,5.309,1945,3.756,1946,3.756,1947,3.756,1948,3.756,1949,3.756,1950,3.756,1951,3.756,1952,3.756,1953,3.756,1954,3.756,1955,3.756,1956,3.756,1957,3.756,1958,3.756,1959,3.756,1960,6.694,1961,3.233,1962,5.309]],["title/components/SlidePanelComponent.html",[123,0.894,203,1.755]],["body/components/SlidePanelComponent.html",[3,0.151,4,0.151,5,0.144,7,0.151,8,0.401,11,0.476,12,0.012,13,0.161,16,1.482,19,1.084,21,1.918,22,1.573,75,0.006,76,0.006,123,1.101,124,1.191,125,1.347,126,1.233,127,1.233,128,1.233,130,1.195,133,3.078,134,3.146,136,1.736,137,1.191,138,1.736,141,1.526,143,0.705,146,0.402,148,1.709,157,0.363,172,1.233,173,1.796,174,1.524,175,1.043,176,2.493,177,1.233,178,1.226,179,1.233,180,1.191,181,0.921,182,1.233,183,1.191,184,1.233,185,1.191,186,1.113,187,1.233,188,1.043,189,1.077,190,1.077,191,1.859,192,1.191,193,1.191,194,2.493,195,1.191,196,1.233,197,1.191,198,1.233,199,1.113,200,1.191,201,1.191,202,1.233,203,2.407,204,3.102,205,1.233,206,1.191,207,1.233,208,1.191,209,1.113,210,1.191,211,1.191,212,1.191,213,1.151,214,1.191,215,1.233,220,1.527,231,0.971,252,0.943,261,2.035,263,3.49,355,3.687,451,2.488,453,2.345,458,2.25,643,2.16,647,3.265,660,4.947,662,1.709,705,5.835,995,3.931,1010,3.266,1011,2.709,1012,1.492,1288,3.901,1496,4.258,1498,4.258,1557,2.345,1645,2.577,1647,3.455,1832,4.61,1963,6.972,1964,7.959,1965,2.953,1966,4.697,1967,5.502,1968,4.454,1969,4.454,1970,5.362,1971,5.362,1972,4.697,1973,5.971,1974,5.971,1975,5.362,1976,4.697,1977,5.362,1978,6.408,1979,6.992,1980,5.362,1981,4.454,1982,4.454,1983,4.454,1984,2.953,1985,5.971,1986,2.953,1987,2.953,1988,6.736,1989,5.23,1990,2.953,1991,2.953,1992,2.953,1993,2.953,1994,4.454,1995,4.454,1996,2.953,1997,2.953,1998,2.953,1999,4.454,2000,4.454,2001,4.454,2002,6.736,2003,6.992,2004,6.304,2005,2.587,2006,2.587,2007,2.953,2008,2.953,2009,6.736,2010,6.408,2011,6.736,2012,2.953,2013,2.953,2014,2.953,2015,2.953,2016,2.953,2017,2.587,2018,2.587,2019,2.953,2020,2.953,2021,2.953,2022,2.953,2023,2.953,2024,2.953,2025,5.362,2026,5.971,2027,5.971]],["title/components/StorageSettingsComponent.html",[123,0.894,206,1.755]],["body/components/StorageSettingsComponent.html",[3,0.247,4,0.247,5,0.204,7,0.247,12,0.012,13,0.263,16,1.331,75,0.008,76,0.008,123,1.438,124,1.942,125,1.901,126,2.011,127,2.011,128,2.011,130,1.687,133,3.262,134,3.355,136,2.45,137,1.942,138,2.45,141,0.932,143,0.816,145,0.904,146,0.656,157,0.591,172,2.011,173,2.535,174,2.151,175,1.701,176,3.099,177,2.011,178,1.525,179,2.011,180,1.942,181,1.501,182,2.011,183,1.942,184,2.011,185,1.942,186,1.815,187,2.011,188,1.701,189,1.757,190,1.757,191,2.625,192,1.942,193,1.942,194,3.099,195,1.942,196,2.011,197,1.942,198,2.011,199,1.815,200,1.942,201,1.942,202,2.011,203,1.942,204,1.877,205,2.011,206,2.993,207,3.358,208,1.942,209,1.815,210,1.942,211,1.942,212,1.942,213,1.877,214,1.942,215,2.011,231,1.371,252,1.019,310,2.933,311,2.336,312,2.54,319,1.019,321,2.933,379,4.164,380,3.296,902,4.304,1011,3.537,1012,2.433,1324,4.994,1402,3.825,1403,5.56,1405,4.61,1436,3.825,1448,5.508,1913,5.508,2028,6.288,2029,7.423,2030,4.219,2031,4.817]],["title/injectables/ThemeService.html",[152,2.803,216,0.677]],["body/injectables/ThemeService.html",[3,0.181,4,0.181,5,0.115,7,0.181,8,0.458,11,0.421,12,0.012,13,0.193,16,1.647,19,0.981,21,1.697,22,1.748,75,0.007,76,0.007,135,0.978,141,1.39,143,0.815,145,0.664,146,0.482,150,2.156,151,1.788,152,3.277,157,0.435,158,2.252,178,1.521,209,2.989,216,0.792,218,1.334,220,1.697,231,1.11,249,1.539,250,0.926,252,1.261,261,1.647,282,1.866,287,2.048,310,3.1,311,1.716,312,1.866,318,1.008,319,1.634,321,2.156,339,1.918,340,1.143,451,1.976,521,5.206,523,4.458,524,2.279,525,3.771,576,3.1,777,5.22,785,4.458,786,4.458,831,3.1,1372,4.042,1611,3.1,2032,3.54,2033,5.96,2034,6.904,2035,5.96,2036,6.517,2037,5.09,2038,5.09,2039,3.54,2040,5.09,2041,3.54,2042,3.731,2043,5.09,2044,3.54,2045,3.54,2046,5.09,2047,3.54,2048,3.54,2049,5.22,2050,3.1,2051,3.54,2052,4.733,2053,4.733,2054,3.54,2055,3.54,2056,3.54,2057,3.54,2058,3.54,2059,3.54,2060,3.54,2061,3.54,2062,5.09,2063,3.54,2064,3.54,2065,3.54,2066,3.54,2067,3.54,2068,3.54,2069,3.54,2070,5.96,2071,5.09,2072,3.54,2073,5.09,2074,5.09,2075,5.09,2076,6.904,2077,6.517,2078,5.09,2079,5.09,2080,5.09,2081,6.517,2082,5.09,2083,5.09,2084,5.09,2085,5.09,2086,5.09,2087,3.54,2088,3.54,2089,3.54,2090,3.54,2091,5.09,2092,3.54,2093,3.54,2094,3.54,2095,5.09,2096,3.54,2097,3.54,2098,3.54,2099,5.09,2100,3.54,2101,3.54,2102,3.54,2103,3.54,2104,3.54,2105,8.149,2106,3.54,2107,3.54,2108,3.54,2109,3.54,2110,4.458,2111,3.54,2112,3.54,2113,3.54,2114,3.54,2115,3.54,2116,3.54,2117,3.54,2118,3.54,2119,3.1,2120,3.54,2121,3.54,2122,3.54,2123,3.54,2124,3.54,2125,3.54,2126,3.54,2127,3.54,2128,3.54,2129,3.54,2130,3.54,2131,3.54,2132,5.09,2133,3.1,2134,3.54,2135,3.54,2136,3.54]],["title/components/ThemeSettingsComponent.html",[123,0.894,208,1.755]],["body/components/ThemeSettingsComponent.html",[3,0.241,4,0.241,5,0.201,7,0.241,8,0.557,11,0.304,12,0.012,13,0.256,16,1.299,18,2.495,21,1.224,75,0.008,76,0.008,123,1.421,124,1.895,125,1.871,126,1.963,127,1.963,128,1.963,130,1.66,133,3.254,134,3.346,136,2.412,137,1.895,138,2.412,141,1.197,143,0.809,145,0.882,146,0.641,152,4.734,153,3.446,157,0.577,164,4.537,172,1.963,173,2.495,174,2.117,175,1.66,176,3.07,177,1.963,178,1.569,179,1.963,180,1.895,181,1.465,182,1.963,183,1.895,184,1.963,185,1.895,186,1.772,187,1.963,188,1.66,189,1.715,190,1.715,191,2.584,192,1.895,193,1.895,194,3.07,195,1.895,196,1.963,197,1.895,198,1.963,199,1.772,200,1.895,201,1.895,202,1.963,203,1.895,204,1.832,205,1.963,206,1.895,207,1.963,208,2.965,209,3.014,210,1.895,211,1.895,212,1.895,213,1.832,214,1.895,215,1.963,231,1.349,249,1.421,250,0.855,252,0.995,261,1.299,379,3.263,402,2.375,1402,3.733,1403,5.495,1405,4.537,1436,3.733,1915,6.061,2030,4.118,2042,4.537,2137,6.919,2138,6.919,2139,6.189,2140,6.189,2141,7.353,2142,4.701,2143,4.701,2144,4.701,2145,6.189]],["title/pipes/TimePipe.html",[446,2.519,641,3.192]],["body/pipes/TimePipe.html",[3,0.303,4,0.303,5,0.192,10,1.488,11,0.383,12,0.012,13,0.323,19,1.078,75,0.009,76,0.009,130,1.587,141,1.144,143,0.787,146,0.806,157,0.726,178,1.58,231,1.29,249,1.789,250,1.076,252,1.252,255,3.603,261,1.634,340,1.329,446,4.141,448,4.048,450,6.268,451,2.651,452,5.246,453,4.698,454,6.268,455,6.739,457,6.268,458,2.988,592,2.9,641,5.246,675,4.897,1547,4.698,1548,5.181,1620,4.698,2146,5.915,2147,5.915]],["title/injectables/TitleService.html",[216,0.677,1553,3.192]],["body/injectables/TitleService.html",[3,0.304,4,0.304,5,0.192,7,0.304,8,0.645,11,0.383,12,0.012,13,0.323,16,1.638,19,1.16,21,1.543,75,0.009,76,0.009,135,1.638,141,1.386,143,0.788,145,1.112,146,0.808,150,3.609,151,2.994,157,0.728,178,1.217,216,1.114,218,2.234,220,2.192,231,1.562,249,1.792,250,1.078,252,1.254,261,1.638,282,4.06,318,1.687,319,1.254,540,2.893,1553,5.252,2148,5.927,2149,7.164,2150,7.164,2151,5.927,2152,5.927,2153,5.927,2154,5.927,2155,5.927,2156,5.927]],["title/interfaces/Track.html",[0,0.195,535,1.884]],["body/interfaces/Track.html",[0,0.33,2,1.2,3,0.274,4,0.274,5,0.27,7,0.274,8,0.605,10,1.492,11,0.514,12,0.012,13,0.434,19,1.255,75,0.009,76,0.009,102,2.397,103,2.397,130,2.209,143,0.809,223,3.091,247,3.091,250,1.223,284,3.253,285,3.091,286,3.091,287,3.091,288,3.091,289,3.253,290,3.253,291,3.439,292,3.439,293,3.439,378,3.439,525,3.091,526,3.916,527,4.326,528,3.439,529,2.397,530,3.888,531,2.618,532,4.242,533,4.598,534,2.946,535,3.181,536,4.966,537,5.656,538,3.655,539,2.311,540,1.886,541,1.886,542,3.253,543,2.59,544,3.655,545,3.916,546,3.655,547,3.655,548,3.091]],["title/interfaces/TrackMetadata.html",[0,0.195,536,2.803]],["body/interfaces/TrackMetadata.html",[0,0.312,2,1.065,3,0.243,4,0.243,5,0.225,7,0.243,8,0.561,10,1.427,11,0.547,12,0.012,13,0.418,19,1.304,75,0.008,76,0.008,102,2.129,103,2.129,130,1.979,143,0.764,223,4.27,247,2.745,250,1.576,284,2.889,285,2.745,286,2.745,287,2.745,288,2.745,289,2.889,290,2.889,291,3.054,292,3.054,293,3.054,378,3.054,525,2.745,526,3.478,527,4.75,528,3.054,529,2.129,530,4.27,531,2.875,532,3.767,533,5.05,534,2.617,535,3.315,536,4.474,537,3.478,538,5.05,539,3.193,540,2.606,541,2.606,542,4.494,543,3.578,544,5.05,545,5.41,546,5.05,547,3.246,548,2.745]],["title/injectables/UpdateService.html",[154,3.458,216,0.677]],["body/injectables/UpdateService.html",[3,0.236,4,0.236,5,0.149,7,0.236,8,0.549,11,0.297,12,0.012,13,0.251,21,1.197,25,2.546,75,0.008,76,0.008,123,0.944,135,1.27,140,3.191,141,1.41,143,0.875,145,0.863,146,0.627,154,4.844,157,0.565,158,1.891,199,1.733,216,0.949,218,1.733,231,1.33,234,2.667,252,1.291,261,1.27,263,2.229,314,3.714,315,1.573,318,1.309,319,1.291,339,2.299,340,1.537,404,4.692,451,1.524,463,5.344,465,3.651,466,3.146,469,4.844,540,1.624,562,2.144,589,2.747,606,2.133,799,4.988,851,4.027,931,3.371,933,2.66,942,2.66,943,3.371,1061,3.146,1085,2.66,1124,3.371,1134,3.651,1212,3.371,1445,2.96,1555,3.651,1645,2.66,1647,3.96,1705,4.027,1711,4.027,1712,4.027,1832,4.684,1904,4.471,1905,3.651,2157,4.598,2158,7.289,2159,4.598,2160,4.598,2161,4.598,2162,6.099,2163,5.995,2164,4.027,2165,4.598,2166,4.598,2167,4.598,2168,4.598,2169,4.598,2170,4.598,2171,4.598,2172,4.598,2173,5.789,2174,4.988,2175,6.099,2176,4.598,2177,4.598,2178,4.598,2179,4.598,2180,4.598,2181,4.598,2182,4.598,2183,4.598,2184,4.598,2185,4.598,2186,4.598,2187,4.598,2188,4.598,2189,4.598,2190,4.598,2191,4.598,2192,4.598,2193,4.598,2194,4.598,2195,4.027,2196,4.598,2197,4.598,2198,4.598,2199,4.598]],["title/components/VisualizerComponent.html",[123,0.894,210,1.755]],["body/components/VisualizerComponent.html",[3,0.1,4,0.1,5,0.104,7,0.1,8,0.289,10,1.52,11,0.449,12,0.012,13,0.106,16,1.879,21,1.978,37,1.128,43,1.496,47,1.954,55,1.954,75,0.004,76,0.004,79,3.125,83,1.692,84,1.621,85,1.692,86,1.692,87,1.692,88,1.692,89,2.498,90,1.692,91,1.692,92,1.77,93,1.77,94,0.985,95,2.762,96,2.646,97,3.008,98,2.646,99,0.985,100,2.393,104,2.646,115,3.35,118,3.094,119,2.9,122,3.017,123,0.84,124,0.786,125,0.97,126,0.814,127,0.814,128,0.814,130,0.861,131,2.065,132,2.065,133,2.864,134,2.906,136,1.25,137,0.786,138,1.25,140,1.906,141,1.556,143,0.811,144,1.255,145,0.366,146,0.266,148,1.128,157,0.239,172,0.814,173,1.293,174,1.098,175,0.688,176,1.978,177,0.814,178,1.453,179,0.814,180,0.786,181,0.608,182,0.814,183,0.786,184,0.814,185,0.786,186,0.735,187,0.814,188,0.688,189,0.711,190,0.711,191,1.339,192,0.786,193,0.786,194,1.978,195,0.786,196,0.814,197,0.786,198,0.814,199,0.735,200,0.786,201,0.786,202,0.814,203,1.91,204,0.76,205,0.814,206,0.786,207,0.814,208,0.786,209,0.735,210,1.91,211,2.112,212,0.786,213,1.846,214,0.786,215,0.814,217,2.393,220,2.372,231,0.699,249,1.949,250,1.208,252,1.364,257,2.352,261,2.326,282,1.028,305,2.352,309,3.925,310,2.885,311,0.945,312,1.028,319,0.413,321,1.954,340,1.397,419,2.798,451,0.646,458,1.621,471,2.632,472,1.255,525,2.365,535,1.388,643,1.556,686,3.247,693,1.954,696,1.255,698,1.548,701,1.856,807,2.065,874,4.704,1010,2.49,1011,2.065,1012,0.985,1086,1.856,1153,3.247,1181,1.548,1496,3.247,1503,3.242,1543,2.548,1549,1.548,1551,1.708,1552,1.708,1555,1.548,1557,1.548,1563,1.708,1641,2.81,1645,1.856,1647,3.84,1840,2.548,1854,3.473,1873,2.81,1893,2.81,1963,1.708,1967,1.429,1976,2.81,2200,1.949,2201,4.088,2202,4.088,2203,3.208,2204,3.208,2205,3.581,2206,5.237,2207,4.088,2208,3.581,2209,3.581,2210,5.237,2211,5.237,2212,3.208,2213,3.208,2214,3.208,2215,3.208,2216,3.208,2217,3.208,2218,3.208,2219,3.208,2220,3.208,2221,3.208,2222,3.208,2223,1.949,2224,3.208,2225,1.949,2226,3.208,2227,1.949,2228,3.208,2229,1.949,2230,3.208,2231,1.949,2232,3.208,2233,1.949,2234,3.208,2235,1.949,2236,3.208,2237,1.949,2238,3.208,2239,1.949,2240,3.208,2241,3.208,2242,1.949,2243,2.81,2244,1.949,2245,3.208,2246,2.548,2247,1.949,2248,3.208,2249,3.208,2250,3.208,2251,3.208,2252,1.949,2253,3.208,2254,1.949,2255,3.208,2256,1.949,2257,3.208,2258,3.208,2259,1.949,2260,1.949,2261,3.208,2262,1.949,2263,3.208,2264,1.949,2265,3.208,2266,1.949,2267,1.949,2268,3.208,2269,3.208,2270,1.949,2271,3.208,2272,1.949,2273,1.949,2274,3.208,2275,1.949,2276,3.208,2277,3.208,2278,1.949,2279,1.949,2280,1.949,2281,1.949,2282,1.949,2283,1.949,2284,1.949,2285,3.208,2286,1.949,2287,3.208,2288,1.949,2289,3.208,2290,1.949,2291,1.949,2292,1.708,2293,1.949,2294,1.949,2295,1.949,2296,1.949,2297,1.949,2298,1.949,2299,1.949,2300,1.949,2301,1.949,2302,1.949,2303,1.949,2304,1.949,2305,1.949,2306,1.949,2307,1.949,2308,1.949,2309,1.949,2310,1.949,2311,1.949,2312,1.949,2313,1.949,2314,1.949,2315,3.208,2316,5.633,2317,2.81,2318,4.738,2319,3.208]],["title/interfaces/VisualsColorConfig.html",[0,0.195,101,2.296]],["body/interfaces/VisualsColorConfig.html",[0,0.366,2,1.083,3,0.247,4,0.247,5,0.156,7,0.247,8,0.567,10,1.678,11,0.511,12,0.012,13,0.457,18,2.825,19,1.229,22,1.415,25,2.628,75,0.008,76,0.008,77,2.661,78,2.661,79,3.601,80,2.791,81,2.791,82,2.791,83,2.544,84,2.437,85,2.544,86,2.544,87,2.544,88,2.544,89,2.544,90,2.544,91,2.544,92,2.661,93,2.661,94,2.437,95,3.319,96,3.18,97,3.18,98,3.18,99,2.437,100,3.18,101,3.319,102,3.458,103,3.458,104,3.892,105,2.544,106,2.544,107,2.437,108,2.661,109,2.791,110,2.339,111,3.398,112,2.544,113,2.339,114,3.865,115,2.935,116,2.544,117,3.18,118,3.463,119,3.463,120,2.249,121,3.18,122,3.601,250,1.438]],["title/directives/VisualsDirective.html",[175,1.538,213,1.697]],["body/directives/VisualsDirective.html",[3,0.164,4,0.164,5,0.104,7,0.164,8,0.427,10,0.62,11,0.402,12,0.012,13,0.175,16,1.556,18,2.675,21,1.619,22,2.037,39,2.049,41,2.691,43,2.208,75,0.006,76,0.006,79,1.555,94,1.62,95,2.969,96,2.845,97,2.845,98,2.845,99,1.62,100,2.845,101,1.691,102,2.126,103,2.126,104,2.393,105,3.788,106,2.969,107,3.142,108,1.769,110,1.555,111,2.297,112,2.497,113,1.555,115,1.495,116,2.497,118,2.9,119,3.438,120,1.495,122,3.016,130,0.86,133,1.785,140,2.626,141,1.502,143,0.619,145,0.602,146,0.437,157,0.394,158,2.081,175,1.673,178,0.973,212,1.293,213,1.846,214,1.91,217,2.393,220,2.299,231,1.033,243,3.472,249,1.432,250,0.862,252,1.192,257,4.864,261,1.719,305,3.472,319,1.561,339,2.344,340,1.064,342,2.064,419,4.541,451,1.867,452,3.472,458,2.393,471,3.626,472,2.064,525,3.839,548,1.855,577,1.855,592,1.785,606,1.476,647,3.472,660,4.491,693,1.953,696,2.064,729,2.809,1061,2.195,1063,2.809,1065,2.809,1066,2.547,1086,1.855,1089,2.064,1445,2.064,1645,1.855,1647,3.599,1657,2.809,1780,2.809,1832,4.256,1966,4.933,2052,4.473,2053,4.473,2205,4.933,2209,4.933,2243,2.809,2246,3.761,2320,2.809,2321,6.22,2322,4.736,2323,4.736,2324,3.207,2325,4.736,2326,3.207,2327,4.736,2328,3.207,2329,4.736,2330,3.207,2331,3.207,2332,3.207,2333,4.736,2334,3.207,2335,3.207,2336,3.207,2337,3.207,2338,3.207,2339,4.736,2340,2.809,2341,2.809,2342,2.809,2343,2.809,2344,3.207,2345,3.207,2346,3.207,2347,3.207,2348,3.207,2349,3.207,2350,3.207,2351,3.207,2352,3.207,2353,3.207,2354,3.207,2355,3.207,2356,3.207,2357,3.207,2358,6.945,2359,5.632,2360,3.207,2361,5.632,2362,3.207,2363,4.736,2364,3.207,2365,3.207,2366,3.207,2367,4.736,2368,3.207,2369,3.207,2370,3.207,2371,3.207,2372,3.207,2373,3.207,2374,4.736,2375,3.207,2376,3.207,2377,3.207,2378,3.207,2379,4.736,2380,4.736,2381,4.736,2382,5.632,2383,3.207,2384,3.207,2385,3.207,2386,3.207,2387,3.207,2388,3.207,2389,3.207,2390,3.207,2391,3.207,2392,6.22,2393,3.207,2394,4.736,2395,4.736,2396,3.207,2397,2.809,2398,3.207,2399,3.207,2400,2.809,2401,3.207,2402,3.207,2403,3.207,2404,4.736,2405,3.207,2406,3.207,2407,3.207]],["title/injectables/VisualsService.html",[216,0.677,1854,3.192]],["body/injectables/VisualsService.html",[3,0.279,4,0.279,5,0.176,7,0.279,8,0.612,11,0.351,12,0.012,13,0.296,16,1.501,21,1.415,75,0.009,76,0.009,115,3.167,118,3.619,119,3.619,122,3.764,135,1.501,141,1.314,143,0.815,145,1.019,146,0.741,157,0.667,216,1.056,218,2.048,220,2.109,231,1.481,252,1.15,261,1.501,282,2.865,310,4.136,311,2.635,312,2.865,318,1.547,319,1.15,321,3.309,1645,3.144,1647,4.623,1832,5.468,1854,4.979,2340,4.76,2408,5.434,2409,7.41,2410,7.762,2411,5.434,2412,6.792,2413,5.434,2414,8.269,2415,5.434,2416,5.434,2417,5.434]],["title/interfaces/VisualsWorkerMessage.html",[0,0.195,105,2.296]],["body/interfaces/VisualsWorkerMessage.html",[0,0.364,2,1.057,3,0.241,4,0.241,5,0.153,7,0.241,8,0.558,10,1.666,11,0.525,12,0.012,13,0.456,18,2.792,19,1.108,22,2.031,25,2.586,75,0.008,76,0.008,77,2.597,78,2.597,79,3.568,80,2.724,81,2.724,82,2.724,83,2.482,84,2.378,85,2.482,86,2.482,87,2.482,88,2.482,89,2.482,90,2.482,91,2.482,92,2.597,93,2.597,94,2.378,95,3.267,96,3.13,97,3.13,98,3.13,99,2.378,100,3.13,101,2.482,102,2.781,103,2.781,104,3.13,105,3.267,106,3.879,107,3.498,108,4.058,109,4.006,110,3.568,111,3.937,112,3.879,113,3.358,114,3.819,115,2.888,116,2.482,117,3.13,118,3.43,119,3.43,120,2.195,121,3.13,122,3.568,250,1.477]],["title/injectables/WakelockService.html",[216,0.677,1707,2.98]],["body/injectables/WakelockService.html",[3,0.286,4,0.286,5,0.181,7,0.286,8,0.623,11,0.361,12,0.012,13,0.305,75,0.009,76,0.009,135,1.544,140,3.499,141,1.516,143,0.615,146,0.762,157,0.686,216,1.075,218,2.106,231,1.507,234,2.846,250,1.258,252,1.463,255,4.209,318,1.591,319,1.183,340,1.552,394,2.178,428,2.038,593,2.509,597,2.606,1707,4.73,2418,5.589,2419,5.959,2420,7.84,2421,7.84,2422,6.912,2423,5.589,2424,5.589,2425,6.912,2426,7.504,2427,5.589,2428,5.589,2429,5.589,2430,5.589,2431,5.589,2432,5.589,2433,5.589,2434,5.589]],["title/changelog.html",[2435,2.509,2436,2.688,2437,3.211]],["body/changelog.html",[5,0.128,11,0.094,12,0.004,21,0.268,29,4.249,41,1.088,43,2.371,45,2.132,47,3.027,49,3.532,51,3.122,53,3.532,55,2.279,57,3.344,59,2.731,61,2.875,63,2.132,65,1.618,67,3.344,69,3.918,75,0.001,76,0.001,107,0.275,111,0.264,118,0.254,119,0.254,120,0.479,123,0.211,125,0.311,130,0.823,135,0.151,136,0.856,140,0.254,143,0.113,145,0.102,151,1.11,157,0.067,173,0.588,175,0.192,178,0.211,181,0.32,186,0.388,209,0.205,211,0.415,217,0.275,235,0.433,250,0.099,262,0.94,282,0.542,285,0.315,286,0.315,312,0.542,323,1.189,328,0.433,337,0.817,339,0.55,342,0.351,343,0.433,348,0.373,354,0.433,355,0.974,356,1.843,357,1.125,366,0.373,377,0.817,378,0.662,379,0.974,381,0.433,401,1.996,404,5.099,419,0.373,452,1.61,486,1.618,490,0.477,521,1.414,534,1.387,535,0.236,540,0.192,548,0.315,563,0.236,570,0.351,571,5.639,582,0.275,593,0.462,599,0.315,606,0.17,630,0.844,639,0.373,643,0.264,647,0.4,651,0.477,660,0.626,675,0.704,701,0.315,711,0.704,770,0.901,771,5.436,790,3.278,799,0.704,849,0.817,862,2.972,885,0.901,902,0.704,927,0.351,930,0.373,944,0.754,963,0.4,968,0.373,989,0.4,1035,0.477,1061,1.264,1066,1.159,1078,2.202,1086,0.315,1110,0.351,1119,0.889,1185,1.159,1208,0.433,1229,0.433,1254,0.477,1266,0.817,1267,0.477,1271,0.477,1303,1.503,1326,0.477,1332,0.433,1333,0.433,1433,0.477,1445,2.533,1446,0.477,1456,0.477,1462,1.07,1475,1.278,1481,0.901,1638,0.477,1639,0.477,1640,0.477,1645,0.315,1680,0.433,1715,0.433,1737,2.202,1782,2.055,1839,0.433,1923,0.477,1961,0.332,1972,0.477,2004,2.202,2005,0.901,2017,0.901,2018,0.477,2042,0.4,2110,0.477,2133,0.477,2163,0.901,2173,1.467,2174,0.999,2195,4.354,2208,0.477,2246,4.357,2292,0.477,2317,0.477,2343,0.477,2400,0.477,2419,1.159,2437,1.278,2438,0.545,2439,1.847,2440,2.514,2441,0.545,2442,0.545,2443,0.545,2444,0.545,2445,0.332,2446,0.545,2447,3.535,2448,1.028,2449,4.354,2450,2.514,2451,4.281,2452,0.545,2453,2.196,2454,1.847,2455,0.545,2456,0.545,2457,1.028,2458,0.545,2459,0.545,2460,3.068,2461,0.545,2462,0.545,2463,5.664,2464,5.394,2465,5.194,2466,6.022,2467,0.545,2468,0.545,2469,0.545,2470,0.545,2471,5.658,2472,2.249,2473,1.028,2474,0.545,2475,0.545,2476,0.545,2477,1.847,2478,1.459,2479,0.545,2480,0.545,2481,0.545,2482,0.545,2483,0.545,2484,1.459,2485,1.028,2486,3.535,2487,0.545,2488,0.545,2489,0.545,2490,0.545,2491,0.545,2492,0.545,2493,0.901,2494,1.028,2495,0.545,2496,0.477,2497,0.545,2498,5.814,2499,0.545,2500,1.618,2501,0.545,2502,0.545,2503,0.545,2504,0.545,2505,0.545,2506,0.545,2507,0.901,2508,0.545,2509,0.545,2510,1.028,2511,5.738,2512,1.028,2513,0.817,2514,1.028,2515,0.545,2516,0.545,2517,0.545,2518,0.545,2519,2.455,2520,1.459,2521,0.545,2522,0.545,2523,0.545,2524,0.545,2525,0.545,2526,0.545,2527,0.545,2528,1.847,2529,5.194,2530,0.901,2531,0.545,2532,0.545,2533,0.545,2534,0.545,2535,0.545,2536,0.545,2537,0.545,2538,2.196,2539,0.545,2540,0.545,2541,0.545,2542,0.545,2543,0.545,2544,0.545,2545,1.618,2546,0.545,2547,0.545,2548,0.545,2549,0.545,2550,0.545,2551,0.545,2552,0.545,2553,0.545,2554,1.459,2555,2.803,2556,0.545,2557,0.545,2558,5.814,2559,0.545,2560,0.545,2561,0.433,2562,0.545,2563,0.545,2564,0.545,2565,0.545,2566,0.545,2567,0.545,2568,0.545,2569,0.545,2570,0.545,2571,0.433,2572,1.028,2573,0.817,2574,0.545,2575,0.545,2576,0.545,2577,0.545,2578,2.514,2579,6.595,2580,0.545,2581,0.545,2582,0.545,2583,0.545,2584,0.545,2585,0.545,2586,0.545,2587,0.545,2588,0.545,2589,0.545,2590,0.545,2591,0.545,2592,0.545,2593,0.545,2594,0.545,2595,0.545,2596,0.545,2597,0.545,2598,0.545,2599,1.459,2600,0.545,2601,0.545,2602,0.545,2603,0.545,2604,0.545,2605,0.545,2606,0.545,2607,0.545,2608,6.206,2609,0.545,2610,0.545,2611,0.545,2612,0.545,2613,0.545,2614,0.545,2615,0.545,2616,0.545,2617,6.723,2618,0.545,2619,0.545,2620,0.545,2621,1.028,2622,0.545,2623,0.545,2624,4.971,2625,0.545,2626,0.545,2627,0.545,2628,1.847,2629,0.545,2630,0.545,2631,0.545,2632,0.545,2633,0.545,2634,0.545,2635,0.545,2636,0.545,2637,0.545,2638,0.545,2639,0.545,2640,0.545,2641,0.545,2642,0.545,2643,0.545,2644,7.754,2645,7.365,2646,0.545,2647,0.545,2648,0.545,2649,0.545,2650,0.545,2651,0.545,2652,0.545,2653,4.437,2654,3.532,2655,0.545,2656,0.545,2657,0.545,2658,0.545,2659,0.545,2660,1.847,2661,1.847,2662,1.028,2663,1.459,2664,0.545,2665,0.545,2666,0.545,2667,0.545,2668,0.545,2669,0.545,2670,0.545,2671,0.545,2672,0.545,2673,5.956,2674,0.545,2675,0.545,2676,1.847,2677,1.847,2678,0.545,2679,0.545,2680,2.196,2681,0.545,2682,0.477,2683,0.545,2684,0.545,2685,0.477,2686,0.545,2687,1.278,2688,0.545,2689,0.545,2690,0.545,2691,0.545,2692,0.545,2693,0.545,2694,0.545,2695,0.545,2696,0.545,2697,0.545,2698,4.114,2699,1.028,2700,0.545,2701,0.545,2702,0.545,2703,2.514,2704,0.545,2705,0.545,2706,0.545,2707,0.545,2708,2.803,2709,1.028,2710,0.545,2711,1.028,2712,1.028,2713,0.545,2714,0.545,2715,0.545,2716,0.545,2717,0.545,2718,0.545,2719,3.535,2720,0.545,2721,0.545,2722,0.545,2723,0.545,2724,0.545,2725,0.545,2726,0.545,2727,0.545,2728,1.028,2729,2.687,2730,0.545,2731,0.545,2732,0.545,2733,0.545,2734,0.545,2735,3.743,2736,0.545,2737,0.545,2738,0.545,2739,0.545,2740,7.025,2741,0.545,2742,0.545,2743,1.847,2744,2.202,2745,0.545,2746,0.545,2747,0.545,2748,0.545,2749,0.545,2750,1.847,2751,0.545,2752,0.545,2753,0.545,2754,0.545,2755,0.545,2756,0.545,2757,0.545,2758,0.545,2759,0.545,2760,0.545,2761,0.545,2762,0.545,2763,0.545,2764,0.545,2765,0.545,2766,0.545,2767,0.545,2768,0.545,2769,0.545,2770,0.545,2771,0.545,2772,4.849,2773,0.545,2774,0.545,2775,0.545,2776,0.545,2777,0.545,2778,0.545,2779,0.545,2780,0.477,2781,0.545,2782,0.545,2783,0.545,2784,0.545,2785,0.545,2786,0.545,2787,0.545,2788,0.545,2789,0.545,2790,0.545,2791,0.545,2792,3.311,2793,7.257,2794,0.545,2795,0.545,2796,0.545,2797,0.545,2798,0.545,2799,0.477,2800,0.545,2801,0.545,2802,0.545,2803,0.545,2804,0.545,2805,0.545,2806,0.545,2807,1.924,2808,0.545,2809,0.545,2810,0.545,2811,0.545,2812,0.545,2813,0.545,2814,1.028,2815,1.459,2816,1.459,2817,0.545,2818,0.545,2819,0.545,2820,0.545,2821,0.545,2822,1.028,2823,0.545,2824,0.545,2825,0.545,2826,0.545,2827,0.545,2828,0.545,2829,0.545,2830,0.545,2831,2.196,2832,0.545,2833,0.545,2834,0.545,2835,0.545,2836,0.545,2837,0.545,2838,0.545,2839,0.545,2840,1.459,2841,1.028,2842,1.028,2843,0.545,2844,0.545,2845,0.545,2846,0.545,2847,0.545,2848,0.545,2849,0.545,2850,0.545,2851,0.545,2852,0.545,2853,0.545,2854,0.545,2855,0.545,2856,0.545,2857,0.545,2858,0.545,2859,0.545,2860,1.028,2861,0.545,2862,0.545,2863,0.545,2864,0.545,2865,0.545,2866,0.545,2867,0.545,2868,0.545,2869,0.545,2870,2.803,2871,6.022,2872,0.545,2873,0.545,2874,0.545,2875,0.545,2876,0.545,2877,0.545,2878,0.545,2879,0.545,2880,0.545,2881,0.545,2882,0.545,2883,0.545,2884,0.545,2885,0.545,2886,0.545,2887,1.028,2888,0.545,2889,0.545,2890,0.545,2891,0.545,2892,0.545,2893,0.545,2894,0.545,2895,0.545,2896,0.545,2897,0.545,2898,0.545,2899,0.545,2900,0.545,2901,4.849,2902,0.545,2903,0.545,2904,0.545,2905,0.545,2906,0.545,2907,0.545,2908,0.545,2909,0.545,2910,0.545,2911,0.545,2912,0.545,2913,0.545,2914,0.545,2915,0.545,2916,0.545,2917,0.545,2918,0.545,2919,0.545,2920,0.545,2921,0.545,2922,0.545,2923,0.545,2924,0.545,2925,0.545,2926,0.545,2927,0.545,2928,0.545,2929,0.545,2930,0.545,2931,4.114,2932,1.028,2933,0.545,2934,1.028,2935,0.545,2936,0.545,2937,0.545,2938,0.545,2939,0.545,2940,0.545,2941,0.545,2942,0.545,2943,0.545,2944,3.068,2945,0.545,2946,0.545,2947,0.545,2948,0.545,2949,0.477,2950,0.477,2951,0.545,2952,0.545,2953,0.545,2954,0.545,2955,0.545,2956,0.545,2957,0.545,2958,0.545,2959,1.924,2960,0.545,2961,0.545,2962,0.545,2963,0.545,2964,4.72,2965,5.085,2966,0.545,2967,0.545,2968,0.545,2969,0.545,2970,0.545,2971,0.545,2972,0.545,2973,0.545,2974,0.545,2975,0.545,2976,0.545,2977,0.545,2978,0.545,2979,0.545,2980,0.545,2981,0.545,2982,0.545,2983,0.545,2984,0.545,2985,0.477,2986,0.545,2987,0.545,2988,0.545,2989,0.545,2990,0.545,2991,0.545,2992,1.847,2993,1.459,2994,0.545,2995,0.545,2996,0.545,2997,0.545,2998,0.545,2999,0.545,3000,0.545,3001,0.545,3002,1.028,3003,0.545,3004,0.545,3005,0.545,3006,0.545,3007,0.545,3008,0.545,3009,0.545,3010,0.545,3011,0.545,3012,0.545,3013,0.545,3014,0.545,3015,0.545,3016,0.545,3017,1.028,3018,0.545,3019,0.545,3020,0.545,3021,1.028,3022,0.545,3023,0.545,3024,0.545,3025,0.545,3026,0.545,3027,0.545,3028,0.545,3029,0.545,3030,0.545,3031,0.545,3032,0.545,3033,0.545,3034,1.459,3035,0.545,3036,0.545,3037,0.545,3038,0.545,3039,0.545,3040,0.545,3041,0.545,3042,0.545,3043,0.545,3044,0.545,3045,0.545,3046,0.545,3047,0.545,3048,0.545,3049,0.545,3050,0.545,3051,0.477,3052,0.545,3053,0.545,3054,0.545,3055,0.545,3056,0.545,3057,0.545,3058,7.512,3059,1.028,3060,0.545,3061,0.545,3062,0.545,3063,0.545,3064,0.545,3065,0.545,3066,0.545,3067,0.545,3068,0.545,3069,0.545,3070,0.545,3071,0.545,3072,0.545,3073,0.545,3074,0.545,3075,0.545,3076,0.545,3077,1.459,3078,1.459,3079,0.545,3080,0.545,3081,0.545,3082,0.545,3083,0.545,3084,0.545,3085,0.545,3086,0.545,3087,0.545,3088,0.545,3089,1.028,3090,0.545,3091,0.545,3092,0.545,3093,1.028,3094,1.924,3095,0.545,3096,0.545,3097,0.545,3098,0.545,3099,1.028,3100,0.545,3101,0.545,3102,0.545,3103,0.545,3104,4.72,3105,0.545,3106,0.545,3107,0.545,3108,0.545,3109,0.545,3110,0.545,3111,0.545,3112,0.545,3113,0.545,3114,0.545,3115,0.545,3116,0.545,3117,0.545,3118,2.803,3119,0.545,3120,0.545,3121,0.545,3122,1.028,3123,0.545,3124,0.545,3125,0.545,3126,0.545,3127,0.545,3128,0.545,3129,0.545,3130,0.545,3131,0.545,3132,0.545,3133,0.545,3134,0.545,3135,0.545,3136,0.545,3137,0.545,3138,0.545,3139,1.459,3140,1.459,3141,0.545,3142,0.545,3143,0.545,3144,0.545,3145,0.545,3146,0.545,3147,0.545,3148,0.545,3149,0.545,3150,1.028,3151,0.545,3152,0.545,3153,0.545,3154,0.545,3155,0.545,3156,0.545,3157,0.545,3158,0.545,3159,0.545,3160,0.545,3161,0.545,3162,0.545,3163,0.545,3164,0.545,3165,0.545,3166,0.545,3167,1.028,3168,0.545,3169,0.545,3170,0.545,3171,0.545,3172,0.545,3173,0.545,3174,0.545,3175,0.545,3176,0.545,3177,0.545,3178,0.545,3179,0.545,3180,0.545,3181,0.545,3182,0.545,3183,0.545,3184,0.545,3185,0.545,3186,0.545,3187,0.545,3188,0.545,3189,0.545,3190,0.545,3191,0.545,3192,0.545,3193,0.545,3194,0.545,3195,0.545,3196,4.114,3197,0.545,3198,0.545,3199,1.028,3200,1.028,3201,0.545,3202,0.545,3203,0.545,3204,0.545,3205,0.545,3206,0.545,3207,0.545,3208,0.545,3209,0.545,3210,0.545,3211,0.545,3212,0.545,3213,0.545,3214,0.545,3215,0.545,3216,0.545,3217,0.545,3218,2.803,3219,0.545,3220,1.028,3221,1.028,3222,0.545,3223,0.545,3224,0.545,3225,0.545,3226,0.545,3227,0.545,3228,0.545,3229,0.545,3230,0.545,3231,0.545,3232,0.545,3233,0.545,3234,0.545,3235,0.545,3236,0.545,3237,0.545,3238,0.545,3239,0.545,3240,0.545,3241,0.545,3242,0.545,3243,0.545,3244,0.545,3245,0.545,3246,0.545,3247,1.028,3248,0.545,3249,0.545,3250,0.545,3251,0.545,3252,0.545,3253,0.545,3254,0.545,3255,0.545,3256,0.545,3257,0.545,3258,0.545,3259,0.545,3260,0.545,3261,0.545,3262,0.545,3263,0.545,3264,1.459,3265,0.545,3266,0.545,3267,0.545,3268,0.545,3269,0.545,3270,0.545,3271,0.545,3272,0.545,3273,0.545,3274,0.545,3275,0.545,3276,0.545,3277,0.545,3278,0.545,3279,0.545,3280,0.545,3281,1.028,3282,0.545,3283,0.545,3284,0.545,3285,0.545,3286,0.545,3287,0.545,3288,0.545,3289,0.704,3290,1.264,3291,0.545,3292,0.545,3293,0.545,3294,0.545,3295,0.545,3296,0.545,3297,0.545,3298,0.545,3299,0.545,3300,0.545,3301,0.545,3302,0.545,3303,0.545,3304,0.545,3305,0.545,3306,0.545,3307,0.545,3308,0.545,3309,0.545,3310,0.545,3311,0.545,3312,1.847,3313,0.545,3314,0.545,3315,0.545,3316,0.545,3317,1.028,3318,0.545,3319,1.028,3320,0.545,3321,0.545,3322,0.545,3323,0.545,3324,0.545,3325,0.545,3326,0.545,3327,0.545,3328,0.545,3329,0.545,3330,0.545,3331,0.545,3332,0.545,3333,0.545,3334,0.545,3335,0.545,3336,0.545,3337,0.545,3338,0.545,3339,0.545,3340,0.545,3341,0.545,3342,0.545,3343,0.545,3344,0.545,3345,0.545,3346,0.545,3347,0.545,3348,0.545,3349,0.545,3350,0.545,3351,0.545,3352,0.545,3353,0.545,3354,0.545,3355,0.545,3356,0.545,3357,0.545,3358,0.545,3359,0.545,3360,0.545,3361,0.545,3362,0.545,3363,0.545,3364,0.477,3365,0.545,3366,0.545,3367,0.545,3368,0.545,3369,0.545,3370,0.545,3371,0.545,3372,0.545,3373,0.545,3374,0.545,3375,0.545,3376,0.545,3377,0.545,3378,0.545,3379,0.545,3380,0.545,3381,0.545,3382,0.545,3383,0.545,3384,0.545,3385,0.545,3386,0.545,3387,0.545,3388,0.545,3389,0.545,3390,1.028,3391,0.545,3392,0.545,3393,0.545,3394,0.545,3395,0.545,3396,0.545,3397,0.545,3398,0.545,3399,0.545,3400,0.545,3401,0.545,3402,0.545,3403,0.545,3404,0.545,3405,0.545,3406,0.545,3407,0.545,3408,0.545,3409,0.545,3410,0.545,3411,0.545,3412,0.545,3413,0.545,3414,0.545,3415,0.545,3416,0.545,3417,0.545,3418,0.545,3419,0.545,3420,0.545,3421,0.545,3422,0.545,3423,0.545,3424,0.545,3425,0.545,3426,0.545,3427,0.545,3428,2.514,3429,0.545,3430,0.545,3431,0.545,3432,0.545,3433,0.545,3434,0.545,3435,0.545,3436,0.545,3437,1.028,3438,0.545,3439,0.545,3440,0.545,3441,0.545,3442,0.545,3443,0.545,3444,1.847,3445,0.545,3446,0.545,3447,0.545,3448,0.545,3449,0.545,3450,0.545,3451,0.545,3452,0.545,3453,0.545,3454,0.545,3455,0.545,3456,0.477,3457,0.545,3458,0.545,3459,1.924,3460,0.545,3461,0.545,3462,7.592,3463,0.545,3464,0.545,3465,0.545,3466,0.545,3467,0.545,3468,0.545,3469,0.545,3470,0.545,3471,0.545,3472,0.545,3473,0.545,3474,0.545,3475,0.545,3476,0.545,3477,0.545,3478,0.545,3479,0.545,3480,1.028,3481,0.545,3482,0.545,3483,0.545,3484,0.545,3485,0.545,3486,0.545,3487,0.545,3488,0.545,3489,0.545,3490,0.545,3491,0.545,3492,0.545,3493,0.545,3494,0.545,3495,0.545,3496,0.545,3497,0.545,3498,0.545,3499,0.545,3500,0.545,3501,0.545,3502,0.545,3503,0.545,3504,0.545,3505,0.545,3506,0.545,3507,0.545,3508,0.545,3509,0.545,3510,0.545,3511,0.545,3512,0.545,3513,0.545,3514,0.545,3515,1.028,3516,0.545,3517,0.545,3518,0.545,3519,0.545,3520,2.803,3521,0.545,3522,0.545,3523,0.545,3524,0.545,3525,2.803,3526,0.545,3527,0.545,3528,0.545,3529,0.545,3530,0.545,3531,0.545,3532,0.545,3533,0.545,3534,0.545,3535,0.545,3536,0.545,3537,0.545,3538,0.545,3539,1.028,3540,0.545,3541,0.545,3542,0.545,3543,0.545,3544,0.545,3545,0.545,3546,0.545,3547,0.545,3548,0.545,3549,0.545,3550,0.545,3551,0.545,3552,0.545,3553,2.196,3554,0.545,3555,0.545,3556,0.545,3557,0.545,3558,1.028,3559,0.545,3560,0.545,3561,0.545,3562,0.545,3563,1.028,3564,0.545,3565,0.545,3566,0.545,3567,0.545,3568,0.545,3569,1.028,3570,1.847,3571,0.545,3572,0.545,3573,0.545,3574,0.545,3575,0.545,3576,0.545,3577,0.545,3578,0.545,3579,0.545,3580,0.545,3581,0.545,3582,0.545,3583,0.545,3584,1.028,3585,1.924,3586,0.545,3587,0.545,3588,0.545,3589,0.545,3590,0.545,3591,0.901,3592,0.545,3593,0.545,3594,0.545,3595,0.545,3596,1.459,3597,0.545,3598,0.545,3599,0.545,3600,0.545,3601,0.545,3602,0.545,3603,0.545,3604,0.545,3605,0.545,3606,0.545,3607,1.459,3608,0.545,3609,0.545,3610,0.545,3611,0.545,3612,0.545,3613,0.545,3614,0.545,3615,0.545,3616,0.545,3617,0.477,3618,0.545,3619,1.028,3620,0.545,3621,0.545,3622,0.545,3623,0.545,3624,0.545,3625,0.545,3626,0.545,3627,0.545,3628,0.545,3629,0.545,3630,0.545,3631,0.545,3632,0.545,3633,0.545,3634,0.545,3635,0.545,3636,0.545,3637,0.545,3638,1.028,3639,1.028,3640,0.545,3641,1.028,3642,0.545,3643,0.545,3644,0.545,3645,0.545,3646,0.545,3647,0.545,3648,0.545,3649,0.545,3650,0.545,3651,0.545,3652,0.545,3653,0.545,3654,0.545,3655,0.545,3656,0.545,3657,0.817,3658,0.545,3659,0.545,3660,0.545,3661,0.545,3662,0.545,3663,0.545,3664,0.477,3665,0.545,3666,0.545,3667,1.028,3668,0.545,3669,0.545,3670,0.545,3671,0.545,3672,0.545,3673,0.545,3674,0.545,3675,0.545,3676,0.545,3677,0.545,3678,0.545,3679,0.545,3680,0.545,3681,0.545,3682,0.545,3683,0.545,3684,0.545,3685,0.545,3686,0.433,3687,0.545,3688,0.545,3689,0.545,3690,0.545,3691,0.545,3692,0.545,3693,0.545,3694,0.545,3695,0.545,3696,0.545,3697,0.545,3698,0.545,3699,0.545,3700,0.545,3701,0.545,3702,0.545,3703,0.545,3704,0.545,3705,0.545,3706,0.545,3707,0.545,3708,0.545,3709,0.545,3710,0.545,3711,0.545,3712,1.459,3713,0.545,3714,0.545,3715,0.545,3716,0.545,3717,0.545,3718,0.545,3719,0.545,3720,0.545,3721,0.545,3722,0.545,3723,0.545,3724,0.545,3725,1.847,3726,3.311,3727,0.545,3728,0.545,3729,0.545,3730,0.545,3731,0.545,3732,2.803,3733,2.196,3734,0.545,3735,0.545,3736,0.545,3737,0.545,3738,0.545,3739,0.545,3740,0.545,3741,0.545,3742,0.545,3743,0.545,3744,0.545,3745,0.545,3746,0.545,3747,0.545,3748,1.028,3749,0.545,3750,0.545,3751,0.545,3752,0.545,3753,0.545,3754,0.545,3755,0.545,3756,0.545,3757,0.545,3758,0.545,3759,0.545,3760,0.545,3761,0.545,3762,0.545,3763,0.545,3764,0.545,3765,0.545,3766,0.545,3767,0.545,3768,0.545,3769,0.545,3770,0.545,3771,0.545,3772,0.545,3773,0.545,3774,0.545,3775,0.545,3776,1.028,3777,0.545,3778,0.545,3779,0.545,3780,0.545,3781,0.545,3782,0.545,3783,0.545,3784,0.545,3785,0.545,3786,0.545,3787,0.545,3788,0.545,3789,0.545,3790,0.545,3791,0.545,3792,0.545,3793,0.545,3794,0.545,3795,0.545,3796,0.545,3797,0.545,3798,0.545,3799,0.545,3800,0.545,3801,0.545,3802,0.545,3803,0.545,3804,0.545,3805,1.847,3806,0.545,3807,0.545,3808,0.545,3809,0.545,3810,0.545,3811,1.028,3812,0.545,3813,0.545,3814,0.545,3815,0.545,3816,0.545,3817,0.545,3818,0.545,3819,0.545,3820,0.545,3821,0.545,3822,0.545,3823,0.545,3824,0.545,3825,0.545,3826,0.545,3827,0.545,3828,0.545,3829,1.028,3830,0.545,3831,0.545,3832,0.545,3833,0.545,3834,0.545,3835,0.545,3836,0.545,3837,0.545,3838,0.545,3839,0.477,3840,0.545,3841,0.545,3842,0.545,3843,0.545,3844,0.545,3845,0.545,3846,0.545,3847,0.545,3848,0.545,3849,2.196,3850,2.196,3851,0.545,3852,0.545,3853,0.545,3854,0.545,3855,0.545,3856,0.545,3857,0.545,3858,0.545,3859,0.545,3860,0.545,3861,0.545,3862,0.545,3863,0.545,3864,0.545,3865,0.545,3866,0.545,3867,0.545,3868,0.545,3869,0.545,3870,0.545,3871,0.545,3872,0.545,3873,0.545,3874,0.545,3875,0.545,3876,0.545,3877,0.545,3878,0.545,3879,0.545,3880,0.545,3881,0.545,3882,0.545,3883,0.545,3884,0.545,3885,0.545,3886,0.545,3887,0.545,3888,0.545,3889,0.545,3890,0.545,3891,0.545,3892,0.545,3893,0.545,3894,0.545,3895,0.545,3896,7.478,3897,0.545,3898,0.545,3899,0.545,3900,0.545,3901,0.545,3902,0.545,3903,0.545,3904,0.545,3905,0.545,3906,0.545,3907,0.545,3908,0.477,3909,1.459,3910,0.545,3911,0.545,3912,0.545,3913,0.477,3914,0.545,3915,0.545,3916,0.545,3917,0.545,3918,0.545,3919,0.545,3920,0.545,3921,0.545,3922,0.545,3923,0.545,3924,0.545,3925,0.545,3926,0.545,3927,0.545,3928,0.545,3929,0.545,3930,0.545,3931,0.901,3932,0.545,3933,0.545,3934,0.545,3935,0.545,3936,0.545,3937,0.545,3938,0.545,3939,0.545,3940,0.545,3941,1.028,3942,0.545,3943,0.545,3944,0.545,3945,0.545,3946,0.545,3947,0.545,3948,0.545,3949,0.545,3950,0.545,3951,0.545,3952,0.545,3953,0.545,3954,0.545,3955,0.545,3956,0.545,3957,0.545,3958,0.545,3959,0.545,3960,0.545,3961,0.545,3962,0.545,3963,0.545,3964,0.545,3965,0.545,3966,0.545,3967,0.545,3968,0.545,3969,0.545,3970,0.545,3971,0.545,3972,0.545,3973,0.545,3974,0.545,3975,0.545,3976,0.545,3977,0.545,3978,0.545,3979,0.545,3980,0.545,3981,0.545,3982,0.545,3983,0.545,3984,0.545,3985,0.545,3986,0.545,3987,0.545,3988,0.545,3989,0.545,3990,0.545,3991,0.545,3992,0.545,3993,0.545,3994,0.545,3995,0.545,3996,0.545,3997,0.545,3998,0.545,3999,0.545,4000,0.545,4001,0.545,4002,0.545,4003,0.545,4004,0.545,4005,0.545,4006,0.545,4007,0.545,4008,0.545,4009,0.545,4010,0.545,4011,0.545,4012,0.545,4013,0.545,4014,0.545,4015,0.545,4016,0.545,4017,0.545,4018,0.545,4019,0.545,4020,0.545,4021,0.545,4022,0.545,4023,0.545,4024,0.545,4025,0.545,4026,0.545,4027,0.545,4028,0.545,4029,0.545,4030,0.545,4031,0.545,4032,0.545,4033,0.545,4034,0.545,4035,0.545,4036,0.545,4037,0.545,4038,1.028,4039,0.545,4040,0.545,4041,0.545,4042,0.545,4043,0.545,4044,0.545,4045,0.545,4046,0.545,4047,0.545,4048,0.545,4049,0.545,4050,0.545,4051,0.545,4052,0.545,4053,0.545,4054,0.545,4055,0.545,4056,0.545,4057,0.545,4058,0.545,4059,0.545,4060,0.545,4061,0.545,4062,0.545,4063,0.545,4064,0.545,4065,0.545,4066,0.545,4067,0.545,4068,0.545,4069,0.545,4070,0.545,4071,0.545,4072,0.545,4073,1.028,4074,0.545,4075,0.545,4076,0.545,4077,0.545,4078,0.626,4079,0.545,4080,1.028,4081,1.028,4082,1.028,4083,0.545,4084,0.545,4085,0.545,4086,0.545,4087,0.545,4088,0.545,4089,0.545,4090,1.028,4091,1.028,4092,0.545,4093,0.545,4094,0.545,4095,0.545,4096,0.545,4097,0.545,4098,0.545,4099,0.545,4100,0.545,4101,0.545,4102,0.545,4103,0.545,4104,0.545,4105,0.545,4106,0.545,4107,0.545,4108,0.545,4109,0.545,4110,0.545,4111,0.545,4112,0.545,4113,0.545,4114,0.545,4115,0.545,4116,0.545,4117,0.545,4118,0.545,4119,0.545,4120,0.545,4121,0.545,4122,0.545,4123,0.545,4124,0.545,4125,0.545,4126,0.545,4127,0.545,4128,0.545,4129,0.545,4130,0.545,4131,0.545,4132,0.545,4133,0.545,4134,0.545,4135,0.545,4136,0.545,4137,0.545,4138,0.545,4139,0.545,4140,0.545,4141,0.545,4142,0.545,4143,0.545,4144,0.545,4145,0.545,4146,0.545,4147,0.545,4148,0.545,4149,0.545,4150,0.545,4151,0.545,4152,0.545,4153,0.545,4154,0.545,4155,0.545,4156,0.545,4157,0.545,4158,0.545,4159,0.545,4160,0.545,4161,0.545,4162,0.545,4163,0.545,4164,0.545,4165,0.545,4166,0.545,4167,0.545,4168,0.545,4169,0.545,4170,0.545,4171,0.545,4172,0.545,4173,0.545,4174,0.545,4175,0.545,4176,0.545,4177,0.545,4178,0.545,4179,0.545,4180,0.545,4181,0.545,4182,0.545,4183,0.545,4184,0.545,4185,0.545,4186,0.545,4187,0.545,4188,0.545,4189,0.545,4190,1.028,4191,0.545,4192,1.028,4193,0.545,4194,1.028,4195,1.459,4196,0.545,4197,0.545,4198,1.028,4199,0.545,4200,1.028,4201,8.098,4202,0.545,4203,0.545,4204,1.028,4205,0.545,4206,0.545,4207,0.545,4208,1.028,4209,0.545,4210,1.028,4211,0.545,4212,1.028,4213,0.545,4214,1.028,4215,0.545,4216,1.028,4217,0.545,4218,0.545,4219,0.545,4220,0.545,4221,1.028,4222,0.545,4223,1.028,4224,0.545,4225,1.028,4226,0.545,4227,1.028,4228,0.545,4229,1.028,4230,0.545,4231,1.028,4232,0.545,4233,1.028,4234,0.545,4235,1.028,4236,0.545,4237,0.545,4238,1.028,4239,1.028,4240,0.545,4241,0.545,4242,1.028,4243,0.545,4244,1.028,4245,0.545,4246,1.028,4247,0.545,4248,1.028,4249,0.545,4250,0.545,4251,1.028,4252,0.545,4253,1.028,4254,0.545,4255,0.545,4256,1.028,4257,0.477,4258,0.545,4259,0.545,4260,1.028,4261,0.545,4262,1.028,4263,0.901,4264,0.545,4265,0.545,4266,1.028,4267,1.028,4268,0.545,4269,0.545,4270,1.028,4271,1.459,4272,1.847,4273,0.545,4274,0.545,4275,0.545,4276,1.028,4277,0.545,4278,1.028,4279,0.545,4280,0.545,4281,0.545,4282,1.028,4283,0.545,4284,1.028,4285,0.545,4286,1.028,4287,0.545,4288,1.028,4289,0.545,4290,1.028,4291,0.545,4292,1.028,4293,0.545,4294,0.545,4295,1.028,4296,0.545,4297,1.028,4298,0.545,4299,1.028,4300,0.545,4301,1.028,4302,0.545,4303,1.028,4304,0.545,4305,1.028,4306,0.545,4307,1.028,4308,0.545,4309,1.028,4310,1.459,4311,0.545,4312,0.545,4313,1.028,4314,0.545,4315,0.545,4316,0.545,4317,1.028,4318,0.545,4319,0.545,4320,0.545,4321,1.028,4322,0.545,4323,0.351,4324,0.545,4325,0.545,4326,0.545,4327,1.459,4328,0.545,4329,1.028,4330,0.545,4331,1.028,4332,1.028,4333,1.028,4334,1.847,4335,1.028,4336,0.545,4337,0.545,4338,0.545,4339,0.545,4340,0.545,4341,0.545,4342,0.545,4343,1.028,4344,1.028,4345,0.545,4346,0.545,4347,1.028,4348,0.545,4349,0.545,4350,1.028,4351,0.545,4352,1.028,4353,0.545,4354,1.028,4355,0.545,4356,1.028,4357,0.545,4358,1.028,4359,1.459,4360,0.545,4361,0.545,4362,0.545,4363,1.028,4364,0.545,4365,1.028,4366,0.545,4367,1.459,4368,0.545,4369,0.545,4370,0.545,4371,1.028,4372,0.545,4373,1.028,4374,0.545,4375,0.545,4376,0.545,4377,0.545,4378,0.545,4379,0.545,4380,0.545,4381,1.028,4382,0.545,4383,1.028,4384,0.545,4385,1.028,4386,0.545,4387,1.028,4388,0.545,4389,1.028,4390,0.545,4391,1.028,4392,0.545,4393,1.028,4394,0.545,4395,1.028,4396,0.545,4397,1.028,4398,0.545,4399,1.028,4400,0.545,4401,1.028,4402,0.545,4403,1.028,4404,0.545,4405,1.028,4406,0.545,4407,1.028,4408,0.545,4409,1.028,4410,0.545,4411,1.028,4412,0.545,4413,1.028,4414,0.545,4415,1.028,4416,0.545,4417,1.028,4418,0.545,4419,0.545,4420,0.545,4421,0.545,4422,1.028,4423,0.545,4424,0.545,4425,0.545,4426,0.545,4427,1.028,4428,1.847,4429,1.028,4430,0.545,4431,1.459,4432,0.545,4433,0.545,4434,0.545,4435,1.028,4436,0.545,4437,0.754,4438,0.545,4439,0.545,4440,0.545,4441,0.545,4442,1.028,4443,0.545,4444,0.545,4445,0.545,4446,1.028,4447,0.545,4448,1.028,4449,0.545,4450,1.028,4451,0.545,4452,1.028,4453,0.545,4454,1.028,4455,0.545,4456,1.028,4457,0.545,4458,1.028,4459,1.028,4460,0.545,4461,0.545,4462,1.028,4463,0.545,4464,0.545,4465,1.028,4466,0.545,4467,0.545,4468,1.028,4469,0.545,4470,0.545,4471,1.028,4472,0.545,4473,0.545,4474,0.545,4475,0.545,4476,0.545,4477,0.545,4478,0.545,4479,0.545,4480,0.545,4481,0.545,4482,0.545,4483,1.028,4484,0.545,4485,0.545,4486,1.028,4487,0.545,4488,0.545,4489,1.028,4490,0.545,4491,0.545,4492,1.028,4493,0.545,4494,0.545,4495,0.545,4496,1.028,4497,0.545,4498,0.545,4499,0.545,4500,1.028,4501,0.545,4502,1.028,4503,0.545,4504,0.545,4505,0.545,4506,0.545,4507,1.028,4508,0.545,4509,1.028,4510,0.545,4511,1.028,4512,0.545,4513,1.028,4514,0.545,4515,0.545,4516,0.545,4517,0.545,4518,0.545,4519,1.028,4520,0.545,4521,1.028,4522,0.545,4523,0.545,4524,1.028,4525,0.545,4526,1.028,4527,0.545,4528,0.545,4529,0.545,4530,0.545,4531,0.545,4532,0.545,4533,1.028,4534,0.545,4535,0.545,4536,0.545,4537,1.028,4538,0.545,4539,0.545,4540,0.545,4541,0.545,4542,0.545,4543,0.477,4544,0.477,4545,0.545,4546,1.028,4547,0.545,4548,1.028,4549,0.545,4550,0.477,4551,0.545,4552,0.545,4553,0.545,4554,0.545,4555,1.028,4556,0.545,4557,1.028,4558,0.545,4559,1.028,4560,0.545,4561,0.545,4562,1.028,4563,0.545,4564,0.545,4565,1.028,4566,0.545,4567,0.545,4568,0.545,4569,1.028,4570,0.545,4571,1.028,4572,0.545,4573,1.028,4574,0.545,4575,1.028,4576,0.545,4577,1.028,4578,0.545,4579,1.028,4580,0.545,4581,1.028,4582,0.545,4583,1.028,4584,0.545,4585,1.028,4586,0.545,4587,1.028,4588,0.545,4589,1.028,4590,0.545,4591,0.545,4592,0.545,4593,0.545,4594,0.545]],["title/dependencies.html",[2472,3.826,2513,2.912]],["body/dependencies.html",[12,0.012,75,0.009,76,0.009,130,1.521,146,0.773,150,4.247,151,3.523,311,3.821,312,2.989,315,1.94,446,3.28,448,3.88,534,3.127,559,3.65,560,3.65,561,2.864,572,4.247,630,3.28,662,3.28,701,3.28,1061,3.88,1175,3.88,1298,4.966,1303,3.88,1306,4.966,1307,4.966,1881,4.966,1943,4.966,2049,4.966,2050,4.966,2164,4.966,2472,4.156,2682,6.108,2685,7.438,2729,4.966,2780,4.966,3364,4.966,3664,4.966,3839,4.966,3908,4.966,3913,4.966,4595,5.669,4596,5.669,4597,5.669,4598,5.669,4599,5.669,4600,5.669,4601,6.973,4602,5.669,4603,5.669,4604,5.669,4605,5.669,4606,5.669,4607,5.669,4608,5.669,4609,5.669,4610,5.669,4611,5.669]],["title/miscellaneous/enumerations.html",[4612,2.121,4613,4.572]],["body/miscellaneous/enumerations.html",[6,3.738,7,0.298,12,0.012,37,4.094,38,3.973,40,3.973,41,3.061,42,3.973,43,3.299,44,3.973,45,4.555,46,3.973,47,3.536,48,3.973,49,3.738,50,3.973,51,3.738,52,3.973,53,3.738,54,3.973,55,3.536,56,3.973,57,3.738,58,3.973,59,3.359,60,3.973,61,3.536,62,3.973,63,3.738,64,3.973,65,3.738,66,3.973,67,3.738,68,3.973,69,3.738,70,4.309,71,3.973,72,3.973,73,3.973,74,3.973,75,0.009,76,0.009,261,2.427,4612,3.359,4613,5.085,4614,6.197]],["title/miscellaneous/functions.html",[2571,4.145,4612,2.121]],["body/miscellaneous/functions.html",[5,0.26,7,0.215,10,1.358,11,0.525,12,0.012,19,1.17,21,1.092,22,2.059,75,0.008,76,0.008,111,3.68,117,2.118,121,2.118,151,3.299,178,1.683,249,2.477,250,1.491,252,1.794,261,1.584,451,1.39,515,4.204,520,2.672,550,2.461,566,2.895,589,2.461,793,3.922,794,3.49,795,2.869,802,5.146,807,2.699,874,4.062,939,2.553,1056,5.02,1059,3.672,1122,5.186,1231,2.869,1232,3.672,1233,3.329,1280,3.672,1314,3.672,1386,3.672,1451,3.672,1462,3.073,1470,3.672,1486,3.672,1547,4.552,1620,3.329,1648,3.672,1707,2.869,1838,3.672,1839,4.552,1840,3.329,2571,3.329,4612,2.426,4615,6.53,4616,6.927,4617,6.53,4618,6.53,4619,6.53,4620,6.53,4621,4.192,4622,5.731,4623,5.731,4624,4.192,4625,5.72,4626,3.672,4627,5.731,4628,4.192,4629,5.731,4630,5.72,4631,5.731,4632,5.731,4633,5.731,4634,5.731,4635,5.731,4636,4.192,4637,5.72,4638,5.731,4639,5.731,4640,6.53,4641,6.53,4642,6.53,4643,5.731,4644,6.53,4645,5.731,4646,6.53,4647,5.731,4648,5.72,4649,5.731,4650,5.731,4651,5.72,4652,3.672,4653,3.672,4654,4.192,4655,4.192,4656,4.192,4657,4.192,4658,4.192,4659,4.192,4660,4.192,4661,5.731,4662,4.192,4663,3.672,4664,4.192,4665,4.192]],["title/index.html",[7,0.188,2435,2.509,2436,2.688]],["body/index.html",[5,0.223,12,0.012,59,3.211,75,0.009,76,0.009,130,2.098,151,2.803,181,2.145,209,2.091,317,4.709,323,4.43,379,2.926,380,3.798,521,3.572,534,3.061,539,2.401,540,1.96,541,1.96,599,3.211,630,3.211,660,4.191,685,4.407,849,4.407,902,3.798,1053,4.407,1119,3.38,1266,4.407,1300,4.861,1303,3.798,1324,4.407,1332,4.407,1333,5.465,1494,3.798,2042,5.045,2173,4.407,2419,4.407,2435,3.798,2445,3.38,2472,4.068,2493,4.861,2496,4.861,2507,4.861,2519,4.861,2807,4.861,3094,6.028,3459,6.028,3585,4.861,3591,6.552,3657,4.407,4257,4.861,4550,4.861,4666,4.861,4667,6.028,4668,4.861,4669,5.549,4670,5.549,4671,5.549,4672,5.549,4673,5.549,4674,5.549,4675,6.882,4676,6.882,4677,5.549,4678,5.549,4679,5.549,4680,5.549,4681,5.549,4682,5.549,4683,5.549,4684,5.549,4685,5.549,4686,5.549,4687,5.549,4688,5.549,4689,5.549,4690,5.549,4691,5.549,4692,5.549,4693,5.549,4694,5.549,4695,5.549]],["title/license.html",[2435,2.509,2436,2.688,4437,2.688]],["body/license.html",[10,0.849,12,0.006,29,3.422,61,1.765,75,0.006,76,0.006,141,0.561,175,1.551,223,2.541,255,1.765,314,2.675,342,1.866,366,1.984,482,2.539,489,2.539,540,1.024,553,1.464,572,1.765,577,1.677,606,0.904,622,1.9,639,1.984,675,3.005,930,4.35,945,2.125,1229,5.518,1252,2.302,1445,4.473,1479,5.567,1489,2.539,1647,2.541,1868,2.539,1989,2.539,2006,2.539,2174,1.984,2397,2.539,2463,2.539,2500,2.539,2530,6.648,2561,2.302,2744,2.539,2985,2.539,3617,4.644,3657,2.302,3686,2.302,4437,4.903,4543,3.847,4696,6.948,4697,7.156,4698,6.356,4699,6.948,4700,2.899,4701,2.899,4702,2.899,4703,7.156,4704,2.899,4705,4.392,4706,2.899,4707,2.899,4708,2.899,4709,2.899,4710,5.302,4711,2.899,4712,5.302,4713,5.302,4714,2.899,4715,5.915,4716,2.899,4717,5.302,4718,2.899,4719,2.899,4720,2.899,4721,2.899,4722,7.156,4723,2.899,4724,2.899,4725,4.392,4726,4.392,4727,2.899,4728,2.899,4729,4.392,4730,7.59,4731,8.259,4732,4.392,4733,4.392,4734,2.899,4735,2.899,4736,2.899,4737,5.915,4738,4.392,4739,8.372,4740,2.899,4741,5.302,4742,4.392,4743,2.899,4744,4.392,4745,2.899,4746,4.392,4747,2.899,4748,5.302,4749,2.899,4750,4.392,4751,4.392,4752,5.915,4753,2.899,4754,2.899,4755,2.899,4756,5.915,4757,4.392,4758,2.899,4759,2.899,4760,4.392,4761,2.899,4762,2.899,4763,2.899,4764,2.899,4765,5.302,4766,6.356,4767,7.327,4768,6.356,4769,5.302,4770,2.899,4771,2.899,4772,2.899,4773,4.392,4774,2.899,4775,4.392,4776,2.899,4777,2.899,4778,2.899,4779,2.899,4780,2.899,4781,2.899,4782,2.899,4783,1.866,4784,2.899,4785,2.899,4786,4.392,4787,2.899,4788,7.59,4789,6.356,4790,2.899,4791,2.899,4792,4.392,4793,2.899,4794,4.392,4795,6.948,4796,2.899,4797,2.899,4798,2.899,4799,2.899,4800,2.899,4801,2.899,4802,2.899,4803,2.899,4804,2.899,4805,2.899,4806,2.899,4807,2.899,4808,2.899,4809,2.899,4810,2.899,4811,5.915,4812,2.899,4813,2.899,4814,2.899,4815,2.899,4816,5.302,4817,2.899,4818,2.899,4819,2.899,4820,4.392,4821,2.899,4822,2.899,4823,5.302,4824,4.392,4825,2.899,4826,2.899,4827,2.899,4828,2.899,4829,4.392,4830,2.899,4831,2.899,4832,2.899,4833,2.899,4834,6.356,4835,2.899,4836,2.899,4837,2.899,4838,2.899,4839,2.899,4840,2.899,4841,2.899,4842,2.899,4843,4.392,4844,2.899,4845,5.302,4846,2.899,4847,2.899,4848,2.899,4849,2.899,4850,2.899,4851,2.899,4852,2.899,4853,6.948,4854,5.302,4855,2.899,4856,6.948,4857,4.392,4858,4.392,4859,2.899,4860,5.302,4861,2.899,4862,4.392,4863,2.899,4864,2.899,4865,2.899,4866,2.899,4867,2.899,4868,6.688,4869,4.392,4870,5.302,4871,4.392,4872,2.899,4873,2.899,4874,2.899,4875,6.356,4876,4.392,4877,4.392,4878,5.302,4879,4.392,4880,4.392,4881,4.392,4882,4.392,4883,4.392,4884,2.899,4885,2.899,4886,2.899,4887,2.899,4888,2.899,4889,2.899,4890,5.915,4891,2.899,4892,2.899,4893,2.899,4894,2.899,4895,2.899,4896,2.899,4897,2.899,4898,2.899,4899,2.899,4900,5.915,4901,5.302,4902,2.899,4903,4.392,4904,5.302,4905,4.392,4906,4.392,4907,4.392,4908,2.899,4909,2.899,4910,2.899,4911,2.899,4912,4.392,4913,2.899,4914,5.915,4915,2.899,4916,2.899,4917,2.899,4918,4.392,4919,2.899,4920,2.899,4921,2.899,4922,2.899,4923,2.899,4924,2.899,4925,2.899,4926,2.899,4927,2.899,4928,2.899,4929,4.392,4930,2.899,4931,2.899,4932,2.899,4933,2.899,4934,2.899,4935,2.899,4936,2.899,4937,2.899,4938,2.899,4939,4.392,4940,2.899,4941,2.899,4942,2.899,4943,2.899,4944,2.899,4945,2.899,4946,2.899,4947,2.899,4948,2.899,4949,2.899,4950,4.392,4951,2.899,4952,2.899,4953,2.899,4954,2.899,4955,2.899,4956,2.899,4957,2.899,4958,2.899,4959,4.392,4960,2.899,4961,2.899,4962,2.899,4963,2.899,4964,2.899,4965,2.899,4966,2.899,4967,2.899,4968,2.899,4969,2.899,4970,2.899,4971,2.899,4972,2.899]],["title/modules.html",[2573,4.67]],["body/modules.html",[12,0.01,75,0.01,76,0.01,2573,5.448]],["title/overview.html",[4973,5.151]],["body/overview.html",[2,1.501,12,0.01,41,3.328,43,3.116,75,0.01,76,0.01,125,2.021,157,0.821,175,2.361,218,2.519,448,4.574,862,5.308,2959,5.855,4973,5.855,4974,6.684]],["title/properties.html",[8,0.47,2513,2.912]],["body/properties.html",[8,0.593,12,0.011,75,0.01,76,0.01,323,4.24,927,4.24,1494,4.507,1715,5.23,2174,4.507,4437,4.828,4667,5.769,4668,5.769,4975,6.586,4976,6.586,4977,6.586,4978,6.586,4979,6.586,4980,6.586]],["title/todo.html",[355,1.933,2435,2.509,2436,2.688]],["body/todo.html",[5,0.211,12,0.011,18,2.617,75,0.01,76,0.01,323,4.178,630,3.755,1119,3.953,1303,4.442,1372,5.155,1445,4.178,1782,4.758,2545,5.685,3931,5.685,4263,5.685,4981,6.491,4982,6.491,4983,6.491,4984,6.491,4985,6.491,4986,6.491,4987,5.685,4988,6.491,4989,6.491,4990,6.491,4991,6.491,4992,6.491,4993,6.491,4994,6.491]],["title/miscellaneous/typealiases.html",[4612,2.121,4995,5.22]],["body/miscellaneous/typealiases.html",[6,3.591,7,0.286,11,0.361,12,0.012,14,4.445,23,4.445,30,3.818,31,3.591,32,4.445,33,3.591,34,3.398,35,3.398,75,0.009,76,0.009,78,3.077,79,3.348,83,2.942,84,2.818,85,2.942,86,2.942,87,2.942,88,2.942,89,2.942,90,2.942,91,2.942,111,3.348,115,3.219,117,2.818,118,3.219,119,3.219,121,2.818,122,3.348,247,3.995,284,3.398,285,3.228,286,3.228,287,3.228,288,3.228,289,3.398,290,3.398,526,4.09,547,4.725,548,3.228,550,2.103,929,3.591,1082,3.591,1083,4.445,1087,3.398,1088,3.398,1090,4.445,4612,3.228,4614,6.568,4996,5.579,4997,7.498,4998,6.904,4999,5.579,5000,5.579,5001,5.579,5002,5.579,5003,5.579,5004,5.579]],["title/miscellaneous/variables.html",[4612,2.121,5005,4.572]],["body/miscellaneous/variables.html",[7,0.145,10,1.528,11,0.553,12,0.012,18,1.74,19,1.038,21,2.152,39,1.226,43,1.321,75,0.006,76,0.006,79,2.093,96,2.18,97,2.18,98,2.18,100,2.18,102,1.937,103,1.937,104,2.18,106,2.276,107,1.431,112,2.276,113,1.374,115,1.321,116,2.276,120,2.012,178,1.362,181,0.883,219,2.25,247,1.639,261,2.284,262,1.824,263,3.215,284,1.725,285,1.639,286,1.639,287,1.639,288,1.639,289,1.725,290,1.725,291,1.824,292,1.824,293,1.824,316,3.164,360,3.428,379,1.494,451,2.285,480,3.78,515,4.051,538,3.578,539,1.867,540,1.846,541,1.524,569,1.725,639,1.939,791,1.725,793,1.939,794,1.725,795,1.939,807,1.824,874,1.639,939,1.725,1129,2.954,1174,1.939,1197,5.511,1199,2.25,1231,1.939,1317,2.482,1325,3.78,1462,3.164,1494,2.954,1707,1.939,1928,2.482,2052,4.643,2053,4.643,2119,2.482,2174,1.939,2320,2.482,2341,3.78,2342,3.78,2561,3.428,2579,2.482,2799,2.482,2949,2.482,2950,2.482,3456,2.482,3686,5.474,4544,3.78,4612,1.639,4616,7.291,4625,2.482,4626,3.78,4630,2.482,4637,2.482,4648,2.482,4651,2.482,4652,2.482,4653,4.579,4663,2.482,4666,2.482,5005,2.482,5006,4.316,5007,5.228,5008,4.316,5009,4.316,5010,4.316,5011,4.316,5012,4.316,5013,4.316,5014,4.316,5015,4.316,5016,5.846,5017,2.833,5018,2.833,5019,4.316,5020,5.228,5021,4.316,5022,2.833,5023,4.316,5024,4.316,5025,2.833,5026,4.316,5027,6.292,5028,4.316,5029,4.316,5030,5.228,5031,4.316,5032,4.316,5033,4.316,5034,4.316,5035,4.316,5036,4.316,5037,4.316,5038,4.316,5039,4.316,5040,2.833,5041,4.316,5042,2.833,5043,2.833,5044,2.833,5045,2.833,5046,4.316,5047,2.833,5048,2.833,5049,2.833,5050,2.833,5051,2.833,5052,2.833,5053,2.833,5054,2.833,5055,2.833,5056,2.833,5057,2.833,5058,2.833,5059,2.833,5060,2.833,5061,2.833,5062,2.833,5063,2.833,5064,2.833,5065,2.833,5066,2.833,5067,2.833,5068,2.833,5069,2.833,5070,2.833,5071,2.833,5072,2.833,5073,2.833,5074,2.833,5075,2.833,5076,2.833,5077,2.833,5078,2.833,5079,2.833,5080,2.833,5081,2.833,5082,6.292,5083,2.833,5084,2.833,5085,2.833,5086,2.833,5087,2.833,5088,2.833,5089,2.833,5090,2.833,5091,2.833,5092,2.833,5093,4.316,5094,2.833,5095,4.316,5096,6.893,5097,4.316,5098,4.316,5099,2.833,5100,2.833,5101,2.833,5102,2.833,5103,2.833,5104,2.833,5105,2.833,5106,2.833,5107,2.833,5108,2.833,5109,2.833,5110,2.833,5111,2.833,5112,2.833,5113,2.833,5114,2.833,5115,2.833,5116,2.833,5117,2.833,5118,2.833,5119,2.833,5120,2.833,5121,6.629,5122,4.316,5123,2.833,5124,2.833,5125,5.846,5126,2.833,5127,2.833,5128,2.833,5129,2.833,5130,2.833,5131,2.833]],["title/additional-documentation/base-components-base-subscribing-component.html",[123,0.462,125,0.679,466,1.538,4323,1.447,4783,1.447,5132,3.154]],["body/additional-documentation/base-components-base-subscribing-component.html",[12,0.01,75,0.01,76,0.01,123,1.388,125,2.043,466,4.624,1961,4.115,2445,4.115,2654,4.349,5132,6.778]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.073,125,0.679,186,0.847,711,1.538,4078,1.369,4323,1.447,4783,1.447]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.247,12,0.01,75,0.01,76,0.01,125,2.3,186,2.867,357,3.994,711,5.206,1961,3.994,2445,3.994,2654,4.897,3289,4.488,3290,5.206,4078,4.633,5133,4.808,5134,5.577,5135,4.808]],["title/additional-documentation/ui-components-slide-panel.html",[125,0.752,204,0.969,1967,1.824,4078,1.515,4323,1.602,4783,1.602]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,125,2.306,204,2.972,357,4.011,1961,4.011,1967,5.591,2445,4.011,2654,4.909,3289,4.507,3290,5.219,4078,4.644,5133,4.828,5134,5.591,5135,4.828]],["title/additional-documentation/ui-components-dialogs.html",[125,0.843,4078,1.697,4323,1.794,4783,1.794,5136,2.441]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,125,2.311,357,4.028,1961,4.028,2445,4.028,2654,4.921,3289,4.526,3290,5.232,4078,4.656,5133,4.849,5134,5.604,5135,4.849,5136,6.696]],["title/additional-documentation/helpers.html",[4323,2.36,4783,2.36,5137,3.211]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,357,3.961,1961,3.961,2445,3.961,2449,5.697,2654,5.156,2687,5.697,3051,7.015,3289,5.181,3290,5.181,4987,6.631,5133,5.55,5134,5.55,5135,5.55,5137,7.015]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":833,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.15.0",{"_index":4611,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1617,"title":{},"body":{"components/PlayerComponent.html":{}}}],["0.5",{"_index":305,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.7",{"_index":2277,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":2241,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.87",{"_index":2084,"title":{},"body":{"injectables/ThemeService.html":{}}}],["0038838",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["00399df",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["006b52c",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["009b48d",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["00b47ed",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["00d5b5e",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["0129566",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["013e987",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["0174ddf",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["019de24",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["025a430",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["027ad79",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["02bde5d",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["02c06cb",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["02d4bfb",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["02e548c",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["0325a08",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["0338bd7",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["03a0491",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["045b043",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["0486e25",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["04b4812",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["04dca08",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["0581767",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["05a441e",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["05b4ddd",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["05ddceb",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["0629b20",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["063950a",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["063d395",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["0674adf",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["067bbea",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["072caca",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["07d6959",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["07de52a",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["07ec810",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["0843a41",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["0858a77",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["08b1238",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["0903cd2",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["092dc60",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["0960760",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["097fe6b",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["09ae300",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["09eba6b",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["0a9aedc",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["0b2a071",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["0b30a9f",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["0ba1f5d",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["0bde446",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["0c889a3",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["0c91659",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["0cabcad",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["0cec276",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["0d0dfcb",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["0d76c85",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["0dc096d",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["0e060af",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["0e6195d",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["0f45127",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["0f6c72b",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["0f8326e",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["0f8e394",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":4700,"title":{},"body":{"license.html":{}}}],["1.0.1",{"_index":4602,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":4595,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["1.2.4",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/PlayerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["10.0.1",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["10.0.2",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["10.0.3",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["10.0.4",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["10.1",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["10.1.0",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["10.2.5",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["10.2.7",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["10.3.1",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["10.3.2",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1611,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":288,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1000).tostring",{"_index":667,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["101bbd0",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["1024",{"_index":88,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["108",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["1081f8e",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["1098d6a",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["10_000",{"_index":459,"title":{},"body":{"pipes/BandPipe.html":{}}}],["10bf971",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.0.0",{"_index":3839,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["11.1.0",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["11.1.2",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["11.3.0",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["11.3.1",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["11.4.0",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["11.4.1",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["11.4.10",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["11.4.11",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["11.4.2",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["11.4.3",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["11.4.5",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["11.4.6",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["11.4.8",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["11.4.9",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["11.5.0",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["11.5.1",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["11.5.10",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["11.5.11",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["11.5.12",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["11.5.13",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["11.5.14",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["11.5.4",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["11.5.5",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["11.5.6",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["11.5.7",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["11.5.8",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["11.5.9",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["112db1a",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["11ae344",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.0",{"_index":3664,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["12.0.1",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["12.0.10",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["12.0.11",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["12.0.12",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["12.0.13",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["12.0.15",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["12.0.16",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["12.0.3",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["12.0.4",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["12.0.5",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["12.0.6",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["12.0.7",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["12.0.8",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["12.0.9",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["12000",{"_index":5002,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["120476b",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["120f02a",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["122856c",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["128",{"_index":85,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["128a3c3",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["12_000",{"_index":291,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["12a71dd",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["13.0.0",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["13.0.1",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["13.0.10",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["13.0.11",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["13.0.12",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["13.0.13",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["13.0.16",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["13.0.18",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["13.0.19",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["13.0.2",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["13.0.20",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["13.0.3",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["13.0.5",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["13.0.6",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["13.0.7",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["13.0.8",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["13.0.9",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["13.1.0",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["13.1.1",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["13.1.10",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["13.1.11",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["13.1.12",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["13.1.2",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["13.1.3",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["13.1.4",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["13.1.5",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["13.1.6",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["13.1.7",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["13.1.8",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["13.1.9",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["13.2",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["13.2.0",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["13.2.1",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["13.2.2",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["13.2.3",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["13.2.4",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["13.2.5",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["13.2.6",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["13.3.0",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["13.3.1",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["13.3.2",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["13.3.3",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["13.3.4",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["13.3.5",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["131",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["133059f",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["1333d05",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["135",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["1385586",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["139",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["13bf8e2",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["14.0.0",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["14.0.10",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["14.0.11",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["14.0.12",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["14.0.13",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["14.0.2",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["14.0.3",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["14.0.4",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["14.0.5",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["14.0.6",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["14.0.7",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["14.0.8",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["14.0.9",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["14.1.0",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["14.1.1",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["14.1.10",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["14.1.11",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["14.1.12",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["14.1.13",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["14.1.14",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["14.1.15",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["14.1.16",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["14.1.17",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["14.1.18",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["14.1.19",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["14.1.2",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["14.1.20",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["14.1.23",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["14.1.3",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["14.1.4",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["14.1.5",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["14.1.6",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["14.1.7",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["14.1.8",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["14.1.9",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["140",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["14000",{"_index":5003,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["141",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["14148e0",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["142",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["144",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["1455d32",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["146",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["147",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["14768e6",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["14_000",{"_index":292,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["14a5bd3",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["15.0.0",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["15.0.1",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["15.0.2",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["15.0.3",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["15.0.4",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["15.0.5",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["15.0.6",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["15.0.7",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["15.0.8",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["15.0.9",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["15.1.1",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["15.1.10",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["15.1.11",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["15.1.12",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["15.1.13",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["15.1.14",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["15.1.16",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["15.1.17",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["15.1.2",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["15.1.3",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["15.1.4",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["15.1.5",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["15.1.6",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["15.1.7",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["15.1.8",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["15.1.9",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":2133,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["155e1fd",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["15dded8",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":862,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"overview.html":{}}}],["16.0.1",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["16.0.2",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["16.0.3",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["16.0.4",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["16.0.5",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["16.0.6",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["16000",{"_index":5004,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1604161",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["162acda",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["16384",{"_index":5000,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["164",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["166c79d",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["16925cf",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["16_000",{"_index":293,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":92,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["16d8b1b",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["17.0.10",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["17.0.11",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["17.0.12",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["17.0.13",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["17.0.14",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["17.0.15",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["17.0.16",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["17.0.17",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["17.0.18",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["17.0.2",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["17.0.3",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["17.0.4",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["17.0.5",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["17.0.6",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["17.0.7",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["17.0.8",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["17.0.9",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["170",{"_index":285,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["170ea47",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["171",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["172",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["17266a3",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["1730f16",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["1745489",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["17a1677",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["17e4083",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["17ed8a6",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2959,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["18.0.0",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["18.0.1",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["18.1.0",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["18.1.1",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["18.2.0",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["18.2.2",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["18.2.3",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["18.2.4",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["18.2.5",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["18.2.6",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["18.2.7",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["181",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["184a834",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["1857720",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["18a45bd",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["18cab80",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["19.0.1",{"_index":2780,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.0.10",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["19.0.2",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["19.0.3",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["19.0.4",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["19.0.5",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["19.0.6",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["19.0.7",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["19.0.8",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["19.0.9",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["19.1.0",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["19.1.1",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["19.2.0",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["19.2.1",{"_index":2685,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.10",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["19.2.2",{"_index":2682,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.3",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["19.2.4",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["19.2.5",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["19.2.7",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["19.2.8",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["19.2.9",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["19.2.x",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["19.3.0",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["19.3.3",{"_index":4603,"title":{},"body":{"dependencies.html":{}}}],["19.4.0",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["19.4.1",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["19.4.10",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["19.4.11",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["19.4.12",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["19.4.13",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["19.4.14",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["19.4.15",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["19.4.2",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["19.4.3",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["19.4.4",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["19.4.5",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["19.4.6",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["19.4.7",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["19.4.8",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["19.4.9",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["19.5.0",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["19.5.1",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["19.5.3",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["19.5.4",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["194199c",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["1989419",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["199",{"_index":780,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":4840,"title":{},"body":{"license.html":{}}}],["19bf065",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["1a30a33",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["1a33b93",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["1a65661",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["1a92061",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["1c4c67e",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["1c7fa4e",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["1c876b6",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["1c9fedf",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["1d0b823",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["1de2a3c",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["1e340e1",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["1e4fd87",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["1e660c9",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["1e96bc3",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["1ebb626",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["1ffd91e",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.8.1",{"_index":4609,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":790,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["20.0.0",{"_index":4975,"title":{},"body":{"properties.html":{}}}],["200",{"_index":2110,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["2000",{"_index":1795,"title":{},"body":{"injectables/PlayerService.html":{}}}],["20050dc",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["20110c3",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["2011e46",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":89,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["206",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["20cf16a",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["20d1b8b",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["20rem",{"_index":1985,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["2119d47",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["220",{"_index":2292,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["220c7f4",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["221781e",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["223",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["228ee85",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["22afab3",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["22da5c7",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["22ec300",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["23061dd",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["2346f13",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["235",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["2389739",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2246,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["240",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["241",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["242",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["2427749",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["2434ec6",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["24e4c9a",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["250",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["2500235",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["250d7f9",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["251",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":789,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":86,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["26",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["261",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["2708806",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["272",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["275e54d",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["27acba5",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["27fdc57",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["28465d6",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["28548eb",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["286",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["287",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["287138c",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["288",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["289",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["289ec3d",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["28cff25",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["292ed5a",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["29878bc",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["29f1cbe",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["29f2b37",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["2a4184c",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["2a427ed",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["2a99961",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["2ab7cc1",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["2b942c4",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["2bb0e78",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["2bb5430",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["2bcfefb",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["2bdc500",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["2bfabd0",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["2c0f612",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["2ce3664",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["2d68f3b",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["2db5dc7",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["2e2cf66",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["2e5b003",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["2eb6cae",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["2f0d555",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["2f592f3",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["2f67e34",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["2sek",{"_index":1789,"title":{},"body":{"injectables/PlayerService.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.2",{"_index":4608,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":4607,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":4600,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4604,"title":{},"body":{"dependencies.html":{}}}],["3.9.17",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["3.9.19",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["300",{"_index":831,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/ThemeService.html":{}}}],["3000",{"_index":289,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["301",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["308b3e5",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["308bd9f",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["30fec73",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["30fps",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["310",{"_index":286,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["312",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["314f02a",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":83,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3233ed1",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["32570e0",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["32768",{"_index":5001,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":93,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["32c3f4d",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["32e3ad6",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["331bb8f",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["337a109",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["338",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["339af30",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["339bd87",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["339d07b",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["33bb6c8",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["33d73d9",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":4974,"title":{},"body":{"overview.html":{}}}],["358",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["3597f8b",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["35a78e4",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["360px",{"_index":996,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["362",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["362d9db",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["368",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["372",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["3773370",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["3797092",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["37f76dc",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["37fa04d",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["381",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["389407a",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["38d27f1",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["392b41d",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["395",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["397399b",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1093,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3a9067b",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["3acc7bf",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["3bccffb",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["3ccea4c",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["3ce805f",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["3d1f63c",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["3e58c71",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["3e7b9a4",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["3e8e5d0",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["3f2c562",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["3f449ec",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["3f73f6e",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["3fbfb97",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["3ff6d19",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":4831,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":4605,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":3364,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.1.1",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["4.4",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["400",{"_index":2113,"title":{},"body":{"injectables/ThemeService.html":{}}}],["401",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["402",{"_index":2933,"title":{},"body":{"changelog.html":{}}}],["4035819",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["403737f",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["4040b59",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["4096",{"_index":90,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["40cc765",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["411",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["4164d59",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["418b524",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["419",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["41e632f",{"_index":2929,"title":{},"body":{"changelog.html":{}}}],["422fc8e",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["423",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["424242",{"_index":2341,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["42a58d9",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["42f56c1",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["431",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["431a9ad",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["43463ab",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["438",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["43a40a4",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["43d9b1f",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["440hz",{"_index":510,"title":{},"body":{"interfaces/Chainable.html":{}}}],["448",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["450",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["455",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["457",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["460",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["465",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["466",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["467",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["468",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["4695772",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["469a890",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["46c60ce",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["473",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["4781958",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["47842e1",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["478c88a",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["47b6776",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["47e3527",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["483",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["49a76e8",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["49b1735",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["49d8293",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["4a42a18",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["4a4b1c4",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["4a66bde",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["4bdbceb",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["4c16c1e",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["4c272db",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["4c8c0ad",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["4c8f851",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["4d47689",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["4d9ca69",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["4dbf4b8",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["4df45ed",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["4e27dea",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["4e72fcd",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["4e9a327",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["4eac2a7",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["4ec2e90",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["4ef0700",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["4f1794f",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["4f70846",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["4f91524",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["4feefcd",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":2107,"title":{},"body":{"injectables/ThemeService.html":{}}}],["500",{"_index":576,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/ThemeService.html":{}}}],["5059439",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["505e77f",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["5061051",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["50b7005",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["50dbff9",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["5101ea6",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["511",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["51154fe",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":87,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":1768,"title":{},"body":{"injectables/PlayerService.html":{}}}],["51304c2",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["51a51dd",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["51e219a",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["521e049",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["522",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["5273759",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["52afb10",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["52bf10d",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["52d642b",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["5302fb4",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["532",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["5321e86",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["53749c8",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["53818e8",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["539",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["53a8631",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["540fdd8",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["5467c6f",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["549bfa1",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["55e56b8",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["55f3319",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["569161e",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["56a3899",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["572a9f8",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["5742e12",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["57f591d",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["580c58d",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["5824006",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["586ef29",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["58fb13b",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["592ac3b",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["592cb7a",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["597ee4f",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["59f1df2",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["59f4ac4",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["5a61397",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["5a7054c",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["5a92c07",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["5aecee8",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["5aed853",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["5af2ad7",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["5bab2a7",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["5c1346d",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["5cbeb5b",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["5cec62d",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["5ed4032",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["5f1d097",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["5fe0756",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["5ffbd62",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["5sec.mp3",{"_index":511,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["6.3.0",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["6.3.1",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["6.4.1",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["6.5.0",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["6.5.1",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["6.5.2",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["6.5.3",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["6.5.5",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["6.5.6",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["6.5.7",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["6.5.8",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["6.5.9",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["6.6.1",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["6.6.2",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["6.6.4",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["6.6.5",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["6.6.6",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["6.6.7",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["6.7.0",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["6.7.1",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["6.7.2",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["6.7.3",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["6.7.4",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":284,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":287,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["6000",{"_index":290,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600f7e6",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["60d5b05",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["60dbedc",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["61721ca",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["61eb69b",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["620afb8",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["62c64c5",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["62cfee7",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["62f7474",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["635e855",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["63600c3",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["63f69d0",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":84,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["646c494",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["64a34dc",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["64d30e1",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["654bac2",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["667c54e",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["667f875",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["669facb",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["670b3af",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["6756668",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["6782ecd",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["678aef6",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["67a17ee",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["681d4cd",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["6841a21",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["6878f22",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["68d9939",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["68e8dc6",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["6926167",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["6966d17",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["69ed6f4",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["6a6ec18",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["6a8d3be",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["6aed158",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["6b0ec83",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["6b2d8b8",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["6b5e613",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["6b9ff38",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["6bc0773",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["6bd60c5",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["6bf609d",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["6bfb6ba",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["6c219df",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["6c27523",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["6c63788",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["6c6f88c",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["6cab435",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["6cd086c",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["6cee32d",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["6d26668",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["6d2a8fe",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["6d52ad4",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["6d67484",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["6d6f310",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["6ee2324",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["6f12a37",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["6f1cdb4",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["6f6ac17",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["6fc1434",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["6fdfa5a",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":775,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["7.0.3",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["7.0.4",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["7.0.5",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["7.0.6",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["7.1.0",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["7.1.1",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["7.8.2",{"_index":4606,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":2117,"title":{},"body":{"injectables/ThemeService.html":{}}}],["707a0cb",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["70990de",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["71bd586",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["71e1d6c",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["72075fe",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["72575f6",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["726da93",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["72dafd7",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["72fa061",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":2269,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["73050ff",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["7362da7",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["73b9b59",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["73bd100",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["73ed2ca",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["7440340",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["7445539",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["7445cc4",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["7484f35",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["748a302",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["7493e98",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["74e7c83",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["7522583",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["7528cd4",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["752aa76",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["7553170",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["7560dfa",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["756dc90",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["7593825",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["75fc12c",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["764711a",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["76ace70",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["77091b9",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["774ffed",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["7762874",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["77707fb",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["7785053",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["77c544b",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["78fcf7a",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["79d861d",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["79fee74",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["7a1bbe5",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["7a66d5a",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["7a6f294",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["7a838a9",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["7a8645a",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["7b38580",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["7b491de",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["7b8cdeb",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["7bebf2d",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["7c00473",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["7c5bbe5",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["7ccbc95",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["7cf10f9",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["7d9d809",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["7def043",{"_index":4279,"title":{},"body":{"changelog.html":{}}}],["7defe9b",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["7e45969",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["7f1e3c1",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["7f8ad27",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["7f90220",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["7fb56e0",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["7fcd244",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["8.0.0",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["8.0.1",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["8.1.0",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["8.1.1",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["8.1.10",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["8.1.2",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["8.1.3",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["8.1.4",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["8.1.5",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["8.1.6",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["8.1.7",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["8.1.8",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["8.1.9",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["800",{"_index":2119,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["800fdae",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["801cd46",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["8055339",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["80553e8",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["80b42ce",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["80d5e14",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["8192",{"_index":91,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["81bb449",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["822ff08",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["8264f64",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["8268a8b",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["826cbe5",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["828148a",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["8337321",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["834f706",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["8377116",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["839a546",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["8448134",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["845189d",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["84a2466",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["84ac04c",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["84e91e3",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["8515368",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["8596088",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["85d2a14",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["85eb0ba",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["8626722",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["864d7e1",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["866de3e",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["869dddb",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["86a18bb",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["86a63af",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["86bda79",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["86be7eb",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["870e50b",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["8738efc",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["87adc2c",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["892689d",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["8a371a0",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["8aabc76",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["8b184a4",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["8b6bfeb",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["8b9fdf5",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["8c297a1",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["8c47814",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["8c56320",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["8c75c5f",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["8c90a58",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["8c9c5c3",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["8cab1e2",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["8d072f1",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["8d3ed72",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["8d47dd4",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["8d5f783",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["8d61f2e",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["8da74bb",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["8df3910",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["8dfc611",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["8e2ff5a",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["8e36da3",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["8e7ecec",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["8ebff84",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["8ec046f",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["8ee0628",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["8f60273",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["9.0.0",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["9.0.1",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["9.0.10",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["9.0.11",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["9.0.2",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["9.0.3",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["9.0.4",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["9.0.5",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["9.0.6",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["9.0.7",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["9.0.8",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["9.0.9",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["9.1.1",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["9.1.2",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["9.1.3",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["9.2.3",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["9.2.4",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["900",{"_index":2121,"title":{},"body":{"injectables/ThemeService.html":{}}}],["901f502",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["908f395",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["90df676",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["90e9f96",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["91d4a54",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["9280e3a",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["92d89c3",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["930dc28",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["934d323",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["939f6b8",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["9458a12",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["949055a",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["94b7001",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["953bf76",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["95902bb",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["96/9/ec",{"_index":4836,"title":{},"body":{"license.html":{}}}],["965f5d8",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["96bcdfc",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["96dbdf6",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["972b1ee",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["9767a1a",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["9767ad0",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["97ccbb6",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["97d68d0",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["986dd30",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["98a793b",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["9934470",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["998ad7c",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["9b11a20",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["9c56a21",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["9ce5e31",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["9d2ef7e",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["9d81efd",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["9dfd762",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["9eb089c",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["9fa1a37",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["9fb4192",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["_audiocontext",{"_index":327,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audioelement",{"_index":325,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audiosourcenode",{"_index":329,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_eqgainnode",{"_index":333,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_frequencyfilters",{"_index":334,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_gainnode",{"_index":331,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_hasended",{"_index":338,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_internalanalyzer",{"_index":2345,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":950,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a00ccd1",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["a04aa39",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["a0aa269",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["a0c15a4",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["a0e7ce7",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["a100",{"_index":2123,"title":{},"body":{"injectables/ThemeService.html":{}}}],["a10893b",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["a12f9c3",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["a19a09f",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["a1a074f",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["a1da736",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["a200",{"_index":2125,"title":{},"body":{"injectables/ThemeService.html":{}}}],["a280f97",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["a2a4811",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["a2b1db1",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["a358906",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["a3ae7df",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["a400",{"_index":2127,"title":{},"body":{"injectables/ThemeService.html":{}}}],["a409033",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["a40c9e8",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["a457b9c",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["a4b6dab",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["a4de6d4",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["a552ea9",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["a555517",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["a5849e4",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["a6386d2",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["a700",{"_index":2129,"title":{},"body":{"injectables/ThemeService.html":{}}}],["a7cf166",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["a7f82ab",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["a8073a9",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["a84cb97",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["a867afe",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["a8bb04b",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["a90639a",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["a948ad5",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["a9a8e68",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["a9a9c0b",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ab311db",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["ab5a0f8",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["ab89f63",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["ab98677",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["abandoned",{"_index":4936,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":4866,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":1910,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["abc0b07",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["abccf03",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":5086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":4950,"title":{},"body":{"license.html":{}}}],["abstacted",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":797,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":905,"title":{},"body":{"injectables/GamepadService.html":{}}}],["ac02523",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["ac62dde",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["accent",{"_index":777,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":2057,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":2033,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accepts",{"_index":1478,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["accessors",{"_index":243,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":4910,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":4953,"title":{},"body":{"license.html":{}}}],["achse",{"_index":869,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":4969,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"license.html":{}}}],["action(details",{"_index":1270,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["actions/cache",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["actions/checkout",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["actions/setup",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["actions/upload",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["activated",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["activatewakelock",{"_index":2420,"title":{},"body":{"injectables/WakelockService.html":{}}}],["activeaxescaches",{"_index":836,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad57b9c",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["ad6497d",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["ad7e0f1",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["ada5e83",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["ada6807",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["adapt",{"_index":4807,"title":{},"body":{"license.html":{}}}],["add",{"_index":401,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["added",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["addeventlistener('gamepadconnected",{"_index":841,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":844,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestoplaylist",{"_index":1654,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...files",{"_index":1663,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":4911,"title":{},"body":{"license.html":{}}}],["additional",{"_index":4783,"title":{"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["adjust",{"_index":4678,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":4882,"title":{},"body":{"license.html":{}}}],["ae202ad",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["ae93b7a",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["aefd739",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["af0ef42",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["af2926f",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["af8a6b4",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["affected",{"_index":4912,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":4788,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":4868,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4926,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":1753,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":1751,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":710,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["again",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":4825,"title":{},"body":{"license.html":{}}}],["agents",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["aiff",{"_index":5046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":541,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["albums",{"_index":1157,"title":{},"body":{"components/LibraryComponent.html":{}}}],["aliases",{"_index":4996,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":781,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alle",{"_index":1788,"title":{},"body":{"injectables/PlayerService.html":{}}}],["allex/crc32",{"_index":1298,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["allowed_extensions",{"_index":5006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":1129,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":1474,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1142,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":1501,"title":{},"body":{"components/PlayerComponent.html":{}}}],["allowedcommonjsdeps",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["allowedtypes",{"_index":715,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":104,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["alpha.40",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["amended",{"_index":4846,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["analyserconfig",{"_index":77,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":112,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":257,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analysers",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["analyservalue",{"_index":2359,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyze",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["analyzer",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":4741,"title":{},"body":{"license.html":{}}}],["android",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["angular",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["angular.json",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":4596,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3908,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/cdk/drag",{"_index":1876,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/cdk/layout",{"_index":1938,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/common",{"_index":662,"title":{},"body":{"components/CoverDisplayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":557,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["angular/compiler",{"_index":4597,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":1946,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/forms",{"_index":4598,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":3913,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1012,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1436,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2143,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2282,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":933,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/icon",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/list",{"_index":1009,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":1556,"title":{},"body":{"components/PlayerComponent.html":{}}}],["angular/material/progress",{"_index":1879,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2283,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":1941,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1432,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":698,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":1558,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":1557,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1943,"title":{},"body":{"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2164,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angularmaterial",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["angulartitleservice",{"_index":2153,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2347,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["api",{"_index":1481,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["api_key",{"_index":1108,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":584,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["apis",{"_index":4670,"title":{},"body":{"index.html":{}}}],["app",{"_index":2173,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":124,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":5008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["applicable",{"_index":4853,"title":{},"body":{"license.html":{}}}],["application",{"_index":2005,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["applicationconfig",{"_index":5063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":4921,"title":{},"body":{"license.html":{}}}],["apply",{"_index":4792,"title":{},"body":{"license.html":{}}}],["apps",{"_index":4679,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":5009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":5030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":5040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":5022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../default",{"_index":5019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":5017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":5018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":4626,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":4631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":4614,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":4638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../lastfm",{"_index":4999,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":4643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":4621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":4623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":4624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":4634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":5027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":4636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":4998,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../settings.po.ts",{"_index":5025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":5021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":4997,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":4616,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":4647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":5113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":476,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":478,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":5106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":5102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":5062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":5120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":219,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:135",{"_index":256,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:141",{"_index":267,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:147",{"_index":254,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:155",{"_index":253,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:161",{"_index":276,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:169",{"_index":272,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:174",{"_index":260,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:182",{"_index":248,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:186",{"_index":270,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:194",{"_index":275,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:202",{"_index":265,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:25",{"_index":296,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":300,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":299,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":301,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":297,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":280,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":281,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":306,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":278,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:34",{"_index":303,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:36",{"_index":294,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:42",{"_index":308,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:44",{"_index":245,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:8",{"_index":703,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":636,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":449,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:10",{"_index":456,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":684,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14",{"_index":694,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":695,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18",{"_index":692,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":793,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":1152,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:15",{"_index":1172,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:16",{"_index":1171,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:17",{"_index":1173,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:30",{"_index":1170,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:39",{"_index":1167,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:45",{"_index":1165,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:51",{"_index":1169,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":550,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":1493,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:106",{"_index":1526,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:111",{"_index":1542,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:113",{"_index":1528,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:119",{"_index":1532,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:123",{"_index":1534,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:127",{"_index":1536,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:131",{"_index":1522,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:135",{"_index":1518,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:139",{"_index":1530,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:143",{"_index":1525,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:154",{"_index":1546,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:156",{"_index":1537,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:160",{"_index":1538,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:164",{"_index":1520,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:168",{"_index":1535,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:173",{"_index":1523,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:45",{"_index":1544,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:50",{"_index":1540,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:52",{"_index":1539,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":1648,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:118",{"_index":1665,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:123",{"_index":1664,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:160",{"_index":1682,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:166",{"_index":1699,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:170",{"_index":1697,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:178",{"_index":1679,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:182",{"_index":1669,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:194",{"_index":1667,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:210",{"_index":1683,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:219",{"_index":1666,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:241",{"_index":1670,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:254",{"_index":1676,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:26",{"_index":1692,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:268",{"_index":1677,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:28",{"_index":1702,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:282",{"_index":1672,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:286",{"_index":1675,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:30",{"_index":1691,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:300",{"_index":1684,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:319",{"_index":1685,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:41",{"_index":1701,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:42",{"_index":1704,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:44",{"_index":1689,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:49",{"_index":1662,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":526,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":1844,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:36",{"_index":1867,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:37",{"_index":1865,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:38",{"_index":1874,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:39",{"_index":1866,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:41",{"_index":1872,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:49",{"_index":1860,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:55",{"_index":1862,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:61",{"_index":1864,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:66",{"_index":1858,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2146,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:10",{"_index":2147,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2200,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2231,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2225,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2229,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2227,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2235,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2233,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2260,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2244,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2273,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2279,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2267,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2278,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2270,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2242,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2247,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2262,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2256,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2264,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2254,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2266,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2221,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2275,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2259,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2252,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2272,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2239,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2237,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2223,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2320,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:110",{"_index":2330,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:145",{"_index":2326,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2334,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2331,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2335,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2332,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23",{"_index":2325,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33",{"_index":2324,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:49",{"_index":2337,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:89",{"_index":2328,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2408,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2413,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2411,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":78,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":4652,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":4662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":808,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":827,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":820,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":824,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":817,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":828,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":815,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1003,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":4664,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":925,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100",{"_index":1044,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104",{"_index":1045,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26",{"_index":1048,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30",{"_index":1051,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32",{"_index":1050,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34",{"_index":1049,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36",{"_index":1047,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38",{"_index":1041,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48",{"_index":1043,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85",{"_index":1046,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96",{"_index":1042,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1201,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1207,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1219,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1223,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1222,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1224,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1232,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2148,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2152,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2151,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":4665,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2418,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2423,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2424,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2422,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1400,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":1911,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2028,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2137,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":1916,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:24",{"_index":1935,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:25",{"_index":1932,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:35",{"_index":1931,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:37",{"_index":1934,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:39",{"_index":1927,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":5101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":2032,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:20",{"_index":2047,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:22",{"_index":2048,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:23",{"_index":2045,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:25",{"_index":2039,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:34",{"_index":2044,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:40",{"_index":2041,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":522,"title":{},"body":{"interfaces/Color.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2157,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2159,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:46",{"_index":2161,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:53",{"_index":2160,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":5099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":5100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["april",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["arguments_",{"_index":455,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["arising",{"_index":4835,"title":{},"body":{"license.html":{}}}],["array",{"_index":2402,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["arrays",{"_index":2400,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["art",{"_index":1333,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["artifact",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["artist",{"_index":539,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist:${luceneescapequery.escape(artist",{"_index":602,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["artists",{"_index":1158,"title":{},"body":{"components/LibraryComponent.html":{}}}],["artwork",{"_index":1763,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2158,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":4928,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1312,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":4869,"title":{},"body":{"license.html":{}}}],["associating",{"_index":4787,"title":{},"body":{"license.html":{}}}],["async",{"_index":234,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["attorney",{"_index":4706,"title":{},"body":{"license.html":{}}}],["audio",{"_index":323,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["audio.service",{"_index":696,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":5055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":5049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":5057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":5050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":5052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":5058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":5054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":5053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":5056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/x",{"_index":5051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":328,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audiocontext.creategain",{"_index":367,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":365,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement",{"_index":343,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audioelement.autoplay",{"_index":349,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.controls",{"_index":350,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.id",{"_index":345,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.loop",{"_index":344,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.preload",{"_index":353,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.style.display",{"_index":347,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.volume",{"_index":351,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioservice",{"_index":217,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["audioservice.isplaying",{"_index":1641,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":364,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiosource.connect(eqgain",{"_index":373,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audit",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["auf",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":4979,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":4814,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":4740,"title":{},"body":{"license.html":{}}}],["auto",{"_index":354,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["autofix",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["autofixes",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["autoincrement",{"_index":5097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":4727,"title":{},"body":{"license.html":{}}}],["available",{"_index":4801,"title":{},"body":{"license.html":{}}}],["avatar",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1780,"title":{},"body":{"injectables/PlayerService.html":{},"directives/VisualsDirective.html":{}}}],["await",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["axis",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["axis.valueof",{"_index":912,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":917,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":916,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":809,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":915,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":918,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":818,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":4940,"title":{},"body":{"license.html":{}}}],["b04ce8b",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["b0d0fe4",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["b20fd36",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["b241b46",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["b286be9",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["b2b5088",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["b2ed530",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["b3905a0",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["b416bff",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["b4d909a",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["b599685",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["b5dfb18",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["b5f68a1",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["b65204b",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["b6729e6",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["b6bd950",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["b708169",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["b7303ed",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["b73ce66",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["b7bb801",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["b7be438",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["b7e8f76",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["b80e2ea",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["b820bf4",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["b8ad144",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["b99bf0c",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ba2a28a",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["ba634aa",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["babdb9f",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":787,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["backgroundcolor",{"_index":645,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["badges",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["band",{"_index":317,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"index.html":{}}}],["band.pipe",{"_index":697,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bandfrequency",{"_index":251,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandgains[bandfrequency",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandpipe",{"_index":447,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{}}}],["bands",{"_index":689,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["barcount",{"_index":95,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["bark",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["barkscalebandenergy",{"_index":5010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":118,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2205,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":117,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":5011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":5132,"title":{"additional-documentation/base-components-base-subscribing-component.html":{}},"body":{"additional-documentation/base-components-base-subscribing-component.html":{}}}],["base64",{"_index":509,"title":{},"body":{"interfaces/Chainable.html":{}}}],["based",{"_index":4852,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":221,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["basesubscribingclass",{"_index":463,"title":{"injectables/BaseSubscribingClass.html":{}},"body":{"injectables/BaseSubscribingClass.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["basesubscribingclass:6",{"_index":1705,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["basevisualizeroptions",{"_index":114,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":4711,"title":{},"body":{"license.html":{}}}],["bb34f11",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["bb4a1a8",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["bb4ded8",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["bb4e0ce",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["bb8466d",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["bba9cb0",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["bbda480",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["bc4e4dc",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["bcbcbc",{"_index":2342,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["bd0ddc3",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["bd67275",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["bda90a4",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["be025cd",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["be57fa9",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["be90110",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["bef3e3e",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["below",{"_index":4732,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":4884,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":1734,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":887,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["better",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["bf7b3a9",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["bfd28ec",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["bfd4685",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["bffc736",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["bigger",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["biquadfilternode",{"_index":335,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bitrate",{"_index":651,"title":{},"body":{"components/CoverDisplayComponent.html":{},"changelog.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1370,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1328,"title":{},"body":{"injectables/MetadataService.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2001,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["bootstrap",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["border",{"_index":774,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["bottom",{"_index":1975,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["box",{"_index":772,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["branch",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":1832,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":1936,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":1937,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":1954,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":1953,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":1952,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":1955,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browserlist",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["buffer",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["bufferlength",{"_index":116,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bugs",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":2744,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["buildapiurl(method",{"_index":1102,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["builds",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":885,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["button.pressed",{"_index":898,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":900,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":810,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":903,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":908,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":821,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":1905,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":1970,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":4958,"title":{},"body":{"license.html":{}}}],["c.islight",{"_index":2136,"title":{},"body":{"injectables/ThemeService.html":{}}}],["c042ae8",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["c08196a",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["c0c9413",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["c0d5ae4",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["c20efb2",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["c2c0b8f",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["c3062ed",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["c31aaa6",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["c3208e7",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["c339811",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["c35bc38",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["c363f4e",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["c398655",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["c3d7490",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["c4668f1",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["c51af5f",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["c550911",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["c64cd79",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["c73a2ce",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["c78b2bf",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["c82e02b",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["c86decf",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["c9dcf09",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["ca80a43",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["ca87d69",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["cace929",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":902,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":910,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":904,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":909,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cacheable",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":1230,"title":{},"body":{"injectables/LoaderService.html":{}}}],["callback",{"_index":926,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{}}}],["called",{"_index":1228,"title":{},"body":{"injectables/LoaderService.html":{}}}],["cancel",{"_index":1900,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2406,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":4893,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":106,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvasgradient",{"_index":5060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":5012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvaswidth",{"_index":5013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2318,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":98,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":96,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":5014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":5104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":1647,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":5073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":597,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":4870,"title":{},"body":{"license.html":{}}}],["cb01a92",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["cb19d50",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["cb797bc",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["cbab637",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["cbc6e41",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["cbef1c8",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["cc0",{"_index":4699,"title":{},"body":{"license.html":{}}}],["ccbf388",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["cd2a934",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["cd5831f",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["cd620b6",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["cdb5380",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["cdf04e9",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["cdkdrag",{"_index":1846,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["cdkdragdrop",{"_index":1857,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["cdkdraghandle",{"_index":1848,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["cdkdragpreview",{"_index":1847,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["cdkdroplist",{"_index":1845,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ce588f9",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["ce621ee",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["cea2824",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["cefa1f1",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":783,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["certain",{"_index":4743,"title":{},"body":{"license.html":{}}}],["cf00688",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["cf13446",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["chainable",{"_index":475,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["changedarkmode",{"_index":2139,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2140,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changelog",{"_index":2437,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":1477,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":895,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":834,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":512,"title":{},"body":{"interfaces/Chainable.html":{}}}],["child(${link",{"_index":5116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chore",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["chore(config",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["chromaprint",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":4674,"title":{},"body":{"index.html":{}}}],["ci",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":119,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":4756,"title":{},"body":{"license.html":{}}}],["class",{"_index":157,"title":{"classes/FileLoaderService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"overview.html":{}}}],["class.closed",{"_index":1982,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":1983,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":792,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["clean",{"_index":1075,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["cleanup",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":1448,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":4960,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":923,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":875,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1406,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2029,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cli",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":4707,"title":{},"body":{"license.html":{}}}],["close",{"_index":1019,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["closed",{"_index":1971,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2197,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":1973,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closing",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["clr",{"_index":2073,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.darkcontrast",{"_index":2082,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.hex",{"_index":2078,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.name",{"_index":2076,"title":{},"body":{"injectables/ThemeService.html":{}}}],["code",{"_index":2006,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":521,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"index.html":{}}}],["color.getbrightness",{"_index":2135,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.tohexstring(false",{"_index":2134,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":525,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2381,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2379,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2380,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorful",{"_index":4976,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":2042,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["colors.ts",{"_index":5020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":2010,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["command",{"_index":500,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":487,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":483,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":4769,"title":{},"body":{"license.html":{}}}],["committen",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["commons",{"_index":4697,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":4809,"title":{},"body":{"license.html":{}}}],["compatibility",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["compensation",{"_index":4785,"title":{},"body":{"license.html":{}}}],["competition",{"_index":4827,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":123,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/base-components-base-subscribing-component.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"additional-documentation/base-components-base-subscribing-component.html":{}}}],["component.directive.ts",{"_index":468,"title":{},"body":{"injectables/BaseSubscribingClass.html":{}}}],["component.directive.ts:6",{"_index":470,"title":{},"body":{"injectables/BaseSubscribingClass.html":{}}}],["component/src/lib/base",{"_index":467,"title":{},"body":{"injectables/BaseSubscribingClass.html":{}}}],["component_template",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":125,"title":{"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/base",{"_index":465,"title":{},"body":{"injectables/BaseSubscribingClass.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["components/dialogs",{"_index":2165,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":1898,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":706,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlayerComponent.html":{}}}],["components/slide",{"_index":1963,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":491,"title":{},"body":{"interfaces/Chainable.html":{}}}],["compressed",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["computecolors(hex",{"_index":2104,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computed",{"_index":309,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":4944,"title":{},"body":{"license.html":{}}}],["confer",{"_index":4728,"title":{},"body":{"license.html":{}}}],["config",{"_index":2195,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["config).afterclosed",{"_index":2199,"title":{},"body":{"injectables/UpdateService.html":{}}}],["configuration",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":372,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["connected",{"_index":853,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":846,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":4964,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":4784,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["console.error(error",{"_index":395,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["console.log('button",{"_index":864,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":1740,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":870,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":1466,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":868,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":881,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":877,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2177,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2172,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2185,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":872,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":851,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2356,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":854,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1802,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.time('hash",{"_index":1313,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('id3tags",{"_index":1335,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('vibrant",{"_index":1346,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('wasm",{"_index":1349,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('webcover",{"_index":1339,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1804,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.timeend('hash",{"_index":1315,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('id3tags",{"_index":1337,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('vibrant",{"_index":1348,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('wasm",{"_index":1351,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('webcover",{"_index":1342,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":884,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":892,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":598,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('loaderservice",{"_index":1227,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('missing",{"_index":1343,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('no",{"_index":625,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2432,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":960,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1265,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["constructor",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["contemplated",{"_index":4899,"title":{},"body":{"license.html":{}}}],["content",{"_index":785,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":360,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":4930,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":2080,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contravention",{"_index":4859,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":4770,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":4749,"title":{},"body":{"license.html":{}}}],["control",{"_index":2017,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["controls",{"_index":4682,"title":{},"body":{"index.html":{}}}],["converter",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["converttobarkscale",{"_index":4615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":4881,"title":{},"body":{"license.html":{}}}],["copy",{"_index":758,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copying",{"_index":2399,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["copyright",{"_index":4730,"title":{},"body":{"license.html":{}}}],["core",{"_index":322,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["corporation",{"_index":4702,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2365,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["corresponding",{"_index":4851,"title":{},"body":{"license.html":{}}}],["council",{"_index":4839,"title":{},"body":{"license.html":{}}}],["count",{"_index":575,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["cover",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cover_api_url",{"_index":586,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverart",{"_index":1446,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["coverartimage",{"_index":549,"title":{"interfaces/CoverArtImage.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverartresponse",{"_index":579,"title":{"interfaces/CoverArtResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":652,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":627,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{}}}],["covercolorpalette",{"_index":530,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":546,"title":{},"body":{"interfaces/ColorConfig.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":1687,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":1688,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":615,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":617,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdisplay",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["coverdisplaycomponent",{"_index":180,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":616,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":621,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["covers",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["coverurl",{"_index":544,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["crc",{"_index":538,"title":{},"body":{"interfaces/ColorConfig.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["crc32",{"_index":1297,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc32(hashstring",{"_index":1382,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":342,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":867,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":863,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createtrackfromfile(file",{"_index":1801,"title":{},"body":{"injectables/PlayerService.html":{}}}],["creative",{"_index":4696,"title":{},"body":{"license.html":{}}}],["creator",{"_index":4734,"title":{},"body":{"license.html":{}}}],["crossing",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["css",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["cultural",{"_index":4750,"title":{},"body":{"license.html":{}}}],["culture",{"_index":4774,"title":{},"body":{"license.html":{}}}],["current",{"_index":4879,"title":{},"body":{"license.html":{}}}],["currentfolderhandle",{"_index":798,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentlist",{"_index":1798,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currently",{"_index":2023,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":1649,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentplaylist",{"_index":1650,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentpo",{"_index":1822,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":1819,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":222,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["custom",{"_index":486,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":505,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":5108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":5118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":5111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":5112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":5109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":5119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":5103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":5107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":5115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":502,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":356,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":517,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":513,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":501,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":518,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":4967,"title":{},"body":{"license.html":{}}}],["d0b8d34",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["d0cd94f",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["d1b4f51",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["d200e57",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["d254989",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["d2765b8",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["d29b113",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["d2e1df8",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["d2f46f8",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["d3",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["d38c534",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["d3bca3a",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["d489b64",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["d4abfdc",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["d505863",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["d50fcd7",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["d516e97",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["d562368",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["d597302",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["d5cd7ea",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["d612735",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["d6210df",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["d629a20",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["d64a3c3",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["d690072",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["d7b3ea2",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["d895f0f",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["d8a2bf9",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["d8bf0e7",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["d954540",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["d9677d0",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":4719,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2145,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["dark)').matches",{"_index":2060,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":523,"title":{},"body":{"interfaces/Color.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":2034,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":633,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{}}}],["darkvibrant",{"_index":632,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{}}}],["das",{"_index":2192,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":776,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":606,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["data.album.image",{"_index":1113,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":1909,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":1908,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":608,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["database",{"_index":4742,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":5015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":4842,"title":{},"body":{"license.html":{}}}],["date",{"_index":572,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"license.html":{}}}],["date.now",{"_index":1777,"title":{},"body":{"injectables/PlayerService.html":{}}}],["dateien",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["dates",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["db",{"_index":701,"title":{},"body":{"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["db2122c",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["db48fe2",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["dbb788d",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["dbc354f",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["dbconfig",{"_index":5091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dc41223",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["dc45fe1",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["dc55360",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["dd93cb1",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["ddab2f3",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["de5bda9",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["december",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["declare",{"_index":497,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorator",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":1288,"title":{},"body":{"injectables/MetadataService.html":{},"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":1505,"title":{},"body":{"components/PlayerComponent.html":{}}}],["decreasevolume(value",{"_index":1517,"title":{},"body":{"components/PlayerComponent.html":{}}}],["deemed",{"_index":4919,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":832,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":830,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":944,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["defects",{"_index":4952,"title":{},"body":{"license.html":{}}}],["defer",{"_index":1888,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["defined",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1038,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dep",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":2472,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["depicted",{"_index":4822,"title":{},"body":{"license.html":{}}}],["deploy",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":2579,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":811,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":816,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":812,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":819,"title":{},"body":{"injectables/GamepadService.html":{}}}],["description",{"_index":927,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"changelog.html":{},"properties.html":{}}}],["desktop",{"_index":4687,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":469,"title":{},"body":{"injectables/BaseSubscribingClass.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1079,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["details",{"_index":1242,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":1828,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":1827,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detriment",{"_index":4886,"title":{},"body":{"license.html":{}}}],["dev",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["devcontainer.json",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":942,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":937,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1014,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1013,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1004,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":1902,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1903,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1023,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1022,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1025,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1901,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1021,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":1899,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":949,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":993,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1000,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":5136,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":1491,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["die",{"_index":1790,"title":{},"body":{"injectables/PlayerService.html":{}}}],["diesen",{"_index":954,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dir",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":175,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":1480,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":1640,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["dirhandle",{"_index":4663,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dirhandle.values",{"_index":1471,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["disableclose",{"_index":2196,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabled",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["disabletooltipinteractivity",{"_index":5087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":4931,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":4717,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":873,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":871,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":4956,"title":{},"body":{"license.html":{}}}],["display",{"_index":639,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":1560,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":642,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":644,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":638,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":648,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":659,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":657,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:33",{"_index":650,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/cover",{"_index":637,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayed",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["displayfunction",{"_index":690,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":691,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":975,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{}}}],["disrupt",{"_index":4896,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":4832,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4794,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4705,"title":{},"body":{"license.html":{}}}],["document",{"_index":930,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":358,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["document.body.append(this.fileinput",{"_index":1144,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.body.classlist.add('dark",{"_index":2100,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.body.classlist.add('light",{"_index":2102,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.body.classlist.remove('dark",{"_index":2103,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.body.classlist.remove('light",{"_index":2101,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.createelement('input",{"_index":1136,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.setproperty(key1",{"_index":2085,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.documentelement.style.setproperty(key2",{"_index":2086,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.documentelement.style.setproperty(key3",{"_index":2097,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2183,"title":{},"body":{"injectables/UpdateService.html":{}}}],["documented",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":109,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["dotenv",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["double",{"_index":1476,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["download",{"_index":1444,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2366,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drag",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["dragend",{"_index":751,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":738,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":743,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":735,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":720,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":748,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":737,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":746,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":736,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":2395,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":4617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":4618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":4619,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawosc",{"_index":4620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":186,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":719,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["droplistener",{"_index":739,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":516,"title":{},"body":{"interfaces/Chainable.html":{}}}],["dummy",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["duplicate",{"_index":1781,"title":{},"body":{"injectables/PlayerService.html":{}}}],["duplicates",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["duration",{"_index":223,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"license.html":{}}}],["durationseconds",{"_index":1651,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2193,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":4971,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":4599,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":969,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2020,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":971,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":972,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e102482",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["e11e3bd",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["e218808",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["e252172",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["e2a0794",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["e2e1eb4",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["e336db1",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["e34b732",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["e36192c",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["e42b61f",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["e486f52",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["e4b565b",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["e4d8e7c",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["e4ec6c1",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["e5de213",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["e615145",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["e6660e2",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["e6d7fd2",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["e6fc6eb",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["e7032e1",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["e727ac0",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["e7aa58d",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["e7c9ada",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["e844d5d",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["e933c61",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["e96ef56",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["e992cb4",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["e99d4f2",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["ea1fc76",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["ea63800",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["ea688e0",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["ea932ef",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["eaa27a6",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["eab1d35",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["eac8dd6",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":4737,"title":{},"body":{"license.html":{}}}],["eaeb47a",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["eaf46cf",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["eaf70a8",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["ebab8da",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["ec067ee",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["ec1f94a",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["eccaa4a",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["ecf45e6",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["ed57248",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["ee83304",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["ee8b31b",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["ef11066",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["ef22e4a",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["ef650c5",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["efc9aad",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["eff95d0",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1252,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"license.html":{}}}],["effective",{"_index":4920,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":4779,"title":{},"body":{"license.html":{}}}],["eine",{"_index":888,"title":{},"body":{"injectables/GamepadService.html":{}}}],["electron",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["elects",{"_index":4791,"title":{},"body":{"license.html":{}}}],["element",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":729,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":324,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["elr",{"_index":2349,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2352,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embedded",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["embeddedpicture",{"_index":545,"title":{},"body":{"interfaces/ColorConfig.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["empty",{"_index":1034,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enabled",{"_index":2949,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1101,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1100,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":508,"title":{},"body":{"interfaces/Chainable.html":{}}}],["endings",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["enhance",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["enjoyment",{"_index":4898,"title":{},"body":{"license.html":{}}}],["ensurehttps",{"_index":566,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(coverimage.image",{"_index":624,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails.large",{"_index":623,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails['500",{"_index":620,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(images[1]['#text",{"_index":1115,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(images[5]['#text",{"_index":1116,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(url",{"_index":4658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entfernt",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["entries",{"_index":1783,"title":{},"body":{"injectables/PlayerService.html":{}}}],["entry",{"_index":1456,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["entry.getfile",{"_index":1473,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.handle",{"_index":1461,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":1472,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":4613,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":5016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":5068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":378,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["eqgain",{"_index":368,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.connect(eqinput",{"_index":374,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.gain.value",{"_index":385,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqinput",{"_index":369,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput",{"_index":370,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput.connect(gain",{"_index":375,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equalizer",{"_index":685,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":687,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":688,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":183,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":224,"title":{"interfaces/EqualizerGainValues.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equitable",{"_index":4895,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":4850,"title":{},"body":{"license.html":{}}}],["error",{"_index":394,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["error.message",{"_index":2433,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errors",{"_index":4955,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1366,"title":{},"body":{"injectables/MetadataService.html":{}}}],["erweitert",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["es",{"_index":1035,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"changelog.html":{}}}],["esbuild",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["escape",{"_index":560,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["eslint",{"_index":2449,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["eslint/utils",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["eslintrc",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["european",{"_index":4837,"title":{},"body":{"license.html":{}}}],["event",{"_index":402,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.checked",{"_index":1440,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.currentindex",{"_index":1886,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.currentversion.hash",{"_index":2178,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.datatransfer.dropeffect",{"_index":757,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":756,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2187,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":852,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2180,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":754,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.previousindex",{"_index":1885,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.stoppropagation",{"_index":755,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2170,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2175,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventcoalescing",{"_index":2950,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["eventmanager",{"_index":934,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":769,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":482,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":492,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusions",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["exclusive",{"_index":4729,"title":{},"body":{"license.html":{}}}],["execute",{"_index":5135,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["executor",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["exercise",{"_index":4918,"title":{},"body":{"license.html":{}}}],["existing",{"_index":489,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["expect",{"_index":1186,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["expectation",{"_index":4782,"title":{},"body":{"license.html":{}}}],["expected",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":4982,"title":{},"body":{"todo.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":4900,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2019,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":4543,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["extent",{"_index":4789,"title":{},"body":{"license.html":{}}}],["extractcolorswithnodevibrant",{"_index":4622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurl.original",{"_index":1347,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1386,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcolorswithvibrantwasm(coverurl.original",{"_index":1350,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcoverurls(data",{"_index":1112,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extraction",{"_index":3657,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":4677,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1056,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1059,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["f038069",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["f06b116",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["f076ced",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["f0ae911",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["f0f7618",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["f12cad8",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["f154aed",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["f18fa1f",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["f1b02b7",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["f1cad4d",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["f1f709b",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["f201082",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["f209ddb",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["f24dcc7",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["f278040",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["f2cfbcc",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["f306ca1",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["f31886e",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["f3351c2",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["f34b7cf",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["f36895a",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["f386a36",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["f3a09c7",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["f3a3520",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["f3f4ae7",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["f401a49",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["f4324a4",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["f4928f5",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["f4f50ef",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["f52095f",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["f54702d",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["f591692",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["f5c6154",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["f5ee0e6",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["f69d368",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["f78467f",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["f7913c1",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["f8b7451",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["f8cbc65",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["f908dd2",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["f954f07",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["f9c114e",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["f9c93ce",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["fallback",{"_index":4902,"title":{},"body":{"license.html":{}}}],["fallback_accent_color",{"_index":2052,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":2053,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2319,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":263,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["fastseek",{"_index":259,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{}}}],["fb05c12",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["fc633d2",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["fc998b4",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["fd18536",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["fd45c70",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["fdad632",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["fe15d24",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["fe4ebfa",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["fear",{"_index":4754,"title":{},"body":{"license.html":{}}}],["feat",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":4671,"title":{},"body":{"index.html":{}}}],["february",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["fee270f",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["fee5161",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["fefaba0",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["fetchalbuminfo(artist",{"_index":1098,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":612,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ff778a5",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["ff7cdad",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["ffa9bb5",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["ffc8723",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["ffe5da9",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["ffnet",{"_index":953,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2315,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2206,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":79,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.arraybuffer",{"_index":1385,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.lastmodified",{"_index":1381,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.name",{"_index":1378,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.size",{"_index":1380,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.type",{"_index":1379,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":185,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":1745,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filehandle.getfile",{"_index":1747,"title":{},"body":{"injectables/PlayerService.html":{}}}],["fileinput",{"_index":1132,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":766,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":791,"title":{"classes/FileLoaderService.html":{}},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice:11",{"_index":1128,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:13",{"_index":1455,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:15",{"_index":1452,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:25",{"_index":1454,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:27",{"_index":1125,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:29",{"_index":1126,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:35",{"_index":1453,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:46",{"_index":1127,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservicefactory",{"_index":4625,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filepath",{"_index":506,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":503,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["files.entries",{"_index":1778,"title":{},"body":{"injectables/PlayerService.html":{}}}],["files.length",{"_index":1796,"title":{},"body":{"injectables/PlayerService.html":{}}}],["files.push(...subfiles",{"_index":1485,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["files.push(file",{"_index":1482,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["files?.length",{"_index":1774,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filesdroped",{"_index":716,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesystemdirectoryhandle",{"_index":802,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filter",{"_index":381,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["filter.gain.value",{"_index":383,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["finalize",{"_index":1211,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["findreleasegroupid(artist",{"_index":600,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["fireaxisaction(index",{"_index":880,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebase",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["firebuttonaction(index",{"_index":876,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":4704,"title":{},"body":{"license.html":{}}}],["first",{"_index":570,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["firstvaluefrom",{"_index":562,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2198,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":607,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('dirhandle",{"_index":1457,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('metatags",{"_index":1318,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":4948,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["fix(deps",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["fix(eslint",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":771,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["flac",{"_index":5043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flat",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":770,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["float32array",{"_index":4653,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2018,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["fns",{"_index":4601,"title":{},"body":{"dependencies.html":{}}}],["folders",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":4805,"title":{},"body":{"license.html":{}}}],["fontcolor",{"_index":663,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["form",{"_index":4764,"title":{},"body":{"license.html":{}}}],["format",{"_index":543,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formating",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["formatlabel",{"_index":1506,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formatlabel(value",{"_index":1519,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formats",{"_index":4673,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":1547,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":1620,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["found",{"_index":626,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":4773,"title":{},"body":{"license.html":{}}}],["freely",{"_index":4762,"title":{},"body":{"license.html":{}}}],["frequency",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["frequency_bands",{"_index":316,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["frequencyband",{"_index":247,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["frequencybarsconfig",{"_index":94,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":5023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":552,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["full",{"_index":5124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":4993,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":4862,"title":{},"body":{"license.html":{}}}],["function",{"_index":929,"title":{},"body":{"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2571,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["funkt",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["further",{"_index":4775,"title":{},"body":{"license.html":{}}}],["future",{"_index":4875,"title":{},"body":{"license.html":{}}}],["gain",{"_index":366,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":376,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gain.gain.value",{"_index":387,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainnode",{"_index":332,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainvalue",{"_index":269,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gamepad",{"_index":849,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":896,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":829,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":1586,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":1596,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":1587,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":842,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":847,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":850,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":807,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":4630,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":97,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gax",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["gblaster",{"_index":4666,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1369,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":2445,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":4632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1314,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehashmd5(file",{"_index":1383,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator.bitdroid.de/#section",{"_index":4692,"title":{},"body":{"index.html":{}}}],["generierte",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["getanalysernode",{"_index":2336,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getaudiofilesfromdirhandle",{"_index":4633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":1470,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":1484,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":1469,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbitrate",{"_index":646,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["getbitrate(bitrate",{"_index":649,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["getbitrate(track()?.metadata?.format?.bitrate",{"_index":679,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["getbytefrequencydata",{"_index":2389,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2390,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":5024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcolorobject(value",{"_index":2130,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getcoverdisplay",{"_index":5026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpicture",{"_index":1117,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpicture(tags",{"_index":588,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1146,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":232,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":246,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gethasended",{"_index":307,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1024,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":480,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":504,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1285,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(file",{"_index":1286,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":5028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getprefertagembeddedpics",{"_index":1430,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["getrandomint",{"_index":4635,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":1817,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":1838,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":5029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":5031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2435,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettoolbartitle",{"_index":5032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getusetagembeddedpics",{"_index":1428,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["getusetagscache",{"_index":1426,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["getusewebtags",{"_index":1424,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["getvolumebutton",{"_index":5033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":1614,"title":{},"body":{"components/PlayerComponent.html":{}}}],["getvolumeslider",{"_index":5034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gh",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2364,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":1736,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":1738,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":2058,"title":{},"body":{"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":856,"title":{},"body":{"injectables/GamepadService.html":{}}}],["google",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["gp",{"_index":858,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":857,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":859,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":5035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":1492,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":1458,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":1489,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["greater",{"_index":4777,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4857,"title":{},"body":{"license.html":{}}}],["group/${releasegroupid",{"_index":614,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["group?query=${query}&limit=5&fmt=json",{"_index":605,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":574,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":609,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":610,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["grpc/grpc",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":1462,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.requestpermission",{"_index":1490,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":765,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handler",{"_index":968,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["handling",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["hasbackdrop",{"_index":997,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":244,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["hashing",{"_index":1375,"title":{},"body":{"injectables/MetadataService.html":{}}}],["hashstring",{"_index":1377,"title":{},"body":{"injectables/MetadataService.html":{}}}],["height",{"_index":1976,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":4887,"title":{},"body":{"license.html":{}}}],["held",{"_index":4934,"title":{},"body":{"license.html":{}}}],["help",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":5137,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":948,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":495,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":4860,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":4716,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":4721,"title":{},"body":{"license.html":{}}}],["hex",{"_index":524,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":762,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1139,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1220,"title":{},"body":{"injectables/LoaderService.html":{}}}],["hilfe",{"_index":955,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["history",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["hk",{"_index":986,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":988,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hooks",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["hopefully",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":767,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2002,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2016,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":1999,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2000,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2012,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2015,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2013,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2014,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":1981,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":731,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hosting",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["hotkey",{"_index":924,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1027,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1030,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1033,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":938,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1017,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1007,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1002,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":188,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":939,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":4637,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["htmlaudioelement",{"_index":326,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["htmlcanvaselement",{"_index":2346,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlinputelement",{"_index":1133,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":582,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["http_interceptors",{"_index":5088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":556,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["httpevent",{"_index":1209,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1206,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1210,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1204,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":4691,"title":{},"body":{"index.html":{}}}],["https://coverartarchive.org",{"_index":587,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://github.com/motabass/gblaster",{"_index":4978,"title":{},"body":{"properties.html":{}}}],["https://musicbrainz.org/ws/2",{"_index":585,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://on.cypress.io/custom",{"_index":496,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":4693,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/20917710/fast",{"_index":1376,"title":{},"body":{"injectables/MetadataService.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1094,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["husky",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":3094,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["iconregistry",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3459,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["id",{"_index":569,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":564,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["id3coverpicture",{"_index":527,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":563,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["id3tagsservice",{"_index":1054,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":4772,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":533,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ignore",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["ignores",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["ii",{"_index":4811,"title":{},"body":{"license.html":{}}}],["iii",{"_index":4816,"title":{},"body":{"license.html":{}}}],["image",{"_index":553,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["image.front",{"_index":618,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images",{"_index":580,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images[5]?.['#text",{"_index":1114,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["iml",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":1609,"title":{},"body":{"components/PlayerComponent.html":{}}}],["implementation",{"_index":4844,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":4855,"title":{},"body":{"license.html":{}}}],["implements",{"_index":458,"title":{},"body":{"pipes/BandPipe.html":{},"injectables/BaseSubscribingClass.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":4945,"title":{},"body":{"license.html":{}}}],["import",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":5128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":5130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":5126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":5131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1065,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["imports",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["improve",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":2985,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["including",{"_index":4767,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":4759,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":1507,"title":{},"body":{"components/PlayerComponent.html":{}}}],["increasevolume(value",{"_index":1521,"title":{},"body":{"components/PlayerComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":702,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["indexed",{"_index":1175,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":4257,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["indexeddbservice",{"_index":1176,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["ineffective",{"_index":4907,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":4923,"title":{},"body":{"license.html":{}}}],["inferred",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":4710,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4757,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":1124,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["init",{"_index":799,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["initialize",{"_index":359,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["initializetheme",{"_index":2036,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":1930,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["inject(audioservice",{"_index":693,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":1948,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(document",{"_index":941,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":732,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":940,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":1565,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["inject(gamepadservice",{"_index":1563,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":1564,"title":{},"body":{"components/PlayerComponent.html":{}}}],["inject(httpclient",{"_index":583,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["inject(id3tagsservice",{"_index":1308,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1309,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(loaderservice",{"_index":1215,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":321,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1016,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":943,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":1714,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":2055,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":1437,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["inject(musicbrainzservice",{"_index":1310,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":1177,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(ngzone",{"_index":2344,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject(playerservice",{"_index":1543,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":734,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":1949,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2166,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2154,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":1562,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":1873,"title":{},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":1713,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2350,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1015,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":216,"title":{"injectables/AudioService.html":{},"injectables/BaseSubscribingClass.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":218,"title":{},"body":{"injectables/AudioService.html":{},"injectables/BaseSubscribingClass.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":660,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('bars",{"_index":2333,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":647,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["inset",{"_index":778,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2186,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":4689,"title":{},"body":{"index.html":{}}}],["instead",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["integriert",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["intended",{"_index":4799,"title":{},"body":{"license.html":{}}}],["intending",{"_index":4889,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1202,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1203,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1198,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1200,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["intergrated",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["interop",{"_index":1947,"title":{},"body":{"components/ShellComponent.html":{}}}],["interval",{"_index":921,"title":{},"body":{"injectables/GamepadService.html":{}}}],["invalid",{"_index":4906,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":4924,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":4922,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":4916,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":4863,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":1855,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":1859,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":911,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":4639,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":4654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":4640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":1922,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":4641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":225,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":226,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ismediasessionsupported",{"_index":4642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions",{"_index":4645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":4655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":227,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["isplaying",{"_index":228,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":1861,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isplaylistempty",{"_index":1502,"title":{},"body":{"components/PlayerComponent.html":{}}}],["isstopped",{"_index":229,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ist",{"_index":961,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":4646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":2799,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["item__content",{"_index":5117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":782,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["iv",{"_index":4823,"title":{},"body":{"license.html":{}}}],["january",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["jb",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":2687,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["js",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1110,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["judged",{"_index":4904,"title":{},"body":{"license.html":{}}}],["july",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["jurisdictions",{"_index":4724,"title":{},"body":{"license.html":{}}}],["justify",{"_index":784,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["k",{"_index":461,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kb/s",{"_index":680,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["keine",{"_index":1037,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["key1",{"_index":2074,"title":{},"body":{"injectables/ThemeService.html":{}}}],["key2",{"_index":2079,"title":{},"body":{"injectables/ThemeService.html":{}}}],["key3",{"_index":2093,"title":{},"body":{"injectables/ThemeService.html":{}}}],["keyboard",{"_index":4680,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":970,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":966,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":5096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":928,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{}}}],["keys.replaceall",{"_index":985,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":4943,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4797,"title":{},"body":{"license.html":{}}}],["known",{"_index":4873,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1367,"title":{},"body":{"injectables/MetadataService.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":577,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["last",{"_index":1639,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["last.fm",{"_index":1097,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1300,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1092,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1081,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1088,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1084,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1091,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1090,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1087,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["late",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["latencyhint",{"_index":361,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["latent",{"_index":4951,"title":{},"body":{"license.html":{}}}],["later",{"_index":4755,"title":{},"body":{"license.html":{}}}],["latest",{"_index":2519,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["launch",{"_index":1741,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":1739,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":1746,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":1744,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":1735,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":4703,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4723,"title":{},"body":{"license.html":{}}}],["layout",{"_index":2807,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["lazy",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["leadingminutezero",{"_index":4661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":717,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":722,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":1988,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1120,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":4698,"title":{},"body":{"license.html":{}}}],["legally",{"_index":4905,"title":{},"body":{"license.html":{}}}],["legend",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":4718,"title":{},"body":{"license.html":{}}}],["lib",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":1961,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":1155,"title":{},"body":{"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":1156,"title":{},"body":{"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":192,"title":{"components/LibraryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libs",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["libs/.../helpers",{"_index":4628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/base",{"_index":464,"title":{},"body":{"injectables/BaseSubscribingClass.html":{}}}],["libs/helpers/src/lib/helpers",{"_index":4660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":705,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":4437,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["license.md",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["licensed",{"_index":4938,"title":{},"body":{"license.html":{}}}],["light",{"_index":2094,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":635,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{}}}],["lightnesslimit",{"_index":2132,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":634,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{}}}],["likeness",{"_index":4821,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4768,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":4829,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4804,"title":{},"body":{"license.html":{}}}],["linethickness",{"_index":2207,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":5114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3051,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["linting",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":4544,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["liste",{"_index":1792,"title":{},"body":{"injectables/PlayerService.html":{}}}],["listeners",{"_index":403,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lite",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":555,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/Id3Tags.html":{}}}],["load",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["loadcomponent",{"_index":5125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["loader",{"_index":794,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":1130,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loader.helpers.ts",{"_index":5007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1214,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":1131,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loader.service.abstract.ts",{"_index":796,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:2",{"_index":803,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:3",{"_index":805,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:4",{"_index":806,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":804,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":4627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":1122,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:13",{"_index":1123,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1199,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1213,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":1962,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":477,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["loadingcounter",{"_index":1225,"title":{},"body":{"injectables/LoaderService.html":{}}}],["local",{"_index":1324,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localization",{"_index":4994,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":380,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorage('prefertagembeddedpicture",{"_index":1289,"title":{},"body":{"injectables/MetadataService.html":{}}}],["localstorage('usetagembeddedpicture",{"_index":1291,"title":{},"body":{"injectables/MetadataService.html":{}}}],["localstorage('usetagscache",{"_index":1293,"title":{},"body":{"injectables/MetadataService.html":{}}}],["localstorage('usewebmetainfos",{"_index":1295,"title":{},"body":{"injectables/MetadataService.html":{}}}],["localstorageservice",{"_index":310,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["lock.json",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["locking",{"_index":4683,"title":{},"body":{"index.html":{}}}],["long",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["lookup",{"_index":1344,"title":{},"body":{"injectables/MetadataService.html":{}}}],["loop",{"_index":273,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lucene",{"_index":559,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":558,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["made",{"_index":4800,"title":{},"body":{"license.html":{}}}],["main",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["main_audio",{"_index":346,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["maincolor",{"_index":102,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":4712,"title":{},"body":{"license.html":{}}}],["management",{"_index":4984,"title":{},"body":{"todo.html":{}}}],["manifest.json",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":947,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":1956,"title":{},"body":{"components/ShellComponent.html":{}}}],["march",{"_index":2463,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["maskable",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["mat",{"_index":5110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1005,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":5083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1011,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1403,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2141,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2138,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":931,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2162,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1006,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":932,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":3591,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["math.ceil(min",{"_index":1841,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(math.random",{"_index":1843,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":1842,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":1696,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.round(bitrate",{"_index":666,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":1698,"title":{},"body":{"injectables/PlayerService.html":{}}}],["maticonmodule",{"_index":1010,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["matlistmodule",{"_index":1008,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenumodule",{"_index":1497,"title":{},"body":{"components/PlayerComponent.html":{}}}],["matoptionmodule",{"_index":2202,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprogressspinnermodule",{"_index":1849,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2201,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":1940,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":1918,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslidermodule",{"_index":686,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matslidetogglechange",{"_index":1416,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1404,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["mattoolbarmodule",{"_index":1495,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltipmodule",{"_index":1496,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":1839,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":80,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":4878,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1307,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["mdc",{"_index":3456,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":4798,"title":{},"body":{"license.html":{}}}],["meatadata",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1266,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":330,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["mediametadata(metadata",{"_index":1275,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1246,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasession",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["mediasessionaction",{"_index":1241,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1243,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1277,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1231,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":4648,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":4880,"title":{},"body":{"license.html":{}}}],["member",{"_index":4885,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4947,"title":{},"body":{"license.html":{}}}],["merged",{"_index":963,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["merged.description",{"_index":981,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":982,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1089,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["meta",{"_index":1372,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl",{"_index":1365,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1364,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1371,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1361,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":567,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1301,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1083,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1118,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":565,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1317,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["metadatacache.coverurl",{"_index":1321,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1319,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1329,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataprepareforuse(meta",{"_index":1363,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":1279,"title":{"injectables/MetadataService.html":{}},"body":{"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["metadatasettingscomponent",{"_index":193,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["metatags",{"_index":5094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meter",{"_index":4684,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":5036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1107,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["methods",{"_index":231,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":4989,"title":{},"body":{"todo.html":{}}}],["migrate",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["migrated",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["migrating",{"_index":2011,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2004,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["min",{"_index":1840,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2208,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["mindecibels",{"_index":81,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["miscellaneous",{"_index":4612,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1715,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"properties.html":{}}}],["mobile",{"_index":3585,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mobx",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modes",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4758,"title":{},"body":{"license.html":{}}}],["module",{"_index":1066,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["modules",{"_index":2573,"title":{"modules.html":{}},"body":{"changelog.html":{},"modules.html":{}}}],["monochrome",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["monochrome.svg",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["monorepo",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["moral",{"_index":4812,"title":{},"body":{"license.html":{}}}],["more",{"_index":490,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{}}}],["motabass",{"_index":4980,"title":{},"body":{"properties.html":{}}}],["motabass/base",{"_index":1711,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["motabass/helpers",{"_index":1548,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":1555,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":4781,"title":{},"body":{"license.html":{}}}],["moved",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["moveiteminarray",{"_index":1875,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["moveiteminarray(this.songs",{"_index":1884,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["mp3",{"_index":5042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mp4",{"_index":5048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mtb",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":5090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":534,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":599,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1302,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzreleasegroup",{"_index":568,"title":{"interfaces/MusicbrainzReleaseGroup.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzresponse",{"_index":573,"title":{"interfaces/MusicbrainzResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":581,"title":{"injectables/MusicbrainzService.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":631,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{}}}],["name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/Color.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":498,"title":{},"body":{"interfaces/Chainable.html":{}}}],["narrowing",{"_index":2022,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":4843,"title":{},"body":{"license.html":{}}}],["native",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["nativebrowserfileloaderservice",{"_index":1450,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigateto",{"_index":1924,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":1925,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigation",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["navigator.getgamepads",{"_index":848,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1274,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1278,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1269,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1264,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1273,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1272,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2429,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2430,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":673,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nearly",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":4963,"title":{},"body":{"license.html":{}}}],["need",{"_index":1074,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":4803,"title":{},"body":{"license.html":{}}}],["neu",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":339,"title":{},"body":{"injectables/AudioService.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["newsize",{"_index":108,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["next",{"_index":1205,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1217,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextmode",{"_index":2414,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ng",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["ng11",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["ng15",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["ngafterviewinit",{"_index":740,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngarraypipesmodule",{"_index":1154,"title":{},"body":{"components/LibraryComponent.html":{}}}],["ngclass",{"_index":1498,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2021,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2024,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges(changes",{"_index":2362,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ngondestroy",{"_index":472,"title":{},"body":{"injectables/BaseSubscribingClass.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":1181,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngstyle",{"_index":640,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["ngx",{"_index":311,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":1174,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["ngzone",{"_index":2338,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["nicht",{"_index":865,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1303,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["node_modules",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["nodes",{"_index":363,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["non",{"_index":4914,"title":{},"body":{"license.html":{}}}],["none",{"_index":348,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"changelog.html":{}}}],["notable",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["notes.md",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1742,"title":{},"body":{"injectables/PlayerService.html":{}}}],["notification",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["november",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["now",{"_index":4872,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["nrwl",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["nrwl/nx",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":874,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(axisindex",{"_index":839,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(buttonindex",{"_index":837,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(duration",{"_index":1261,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number_",{"_index":699,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["nx",{"_index":2654,"title":{},"body":{"changelog.html":{},"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["obeservable",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1325,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":2398,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["objectstoresmeta",{"_index":5092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1331,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":4972,"title":{},"body":{"license.html":{}}}],["observable",{"_index":935,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":967,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":979,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":1951,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer.next(e",{"_index":974,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["obtaining",{"_index":4962,"title":{},"body":{"license.html":{}}}],["october",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["offers",{"_index":4941,"title":{},"body":{"license.html":{}}}],["offline",{"_index":4688,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":107,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":5059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ogg",{"_index":5044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ohne",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["oldsource",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["onchanges",{"_index":1966,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{}}}],["ondestroy",{"_index":471,"title":{},"body":{"injectables/BaseSubscribingClass.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":548,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["onfilesdropped",{"_index":1508,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onfilesdropped(files",{"_index":1524,"title":{},"body":{"components/PlayerComponent.html":{}}}],["oninit",{"_index":1153,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1407,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1415,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onreload",{"_index":1509,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onsliderpositionchanged",{"_index":1510,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":1527,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1408,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1418,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1409,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1420,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1410,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1422,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":1511,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onvolumechange(value",{"_index":1529,"title":{},"body":{"components/PlayerComponent.html":{}}}],["open",{"_index":1972,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["openedstate",{"_index":1977,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":800,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":1974,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["optimizations",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["optimize",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":2316,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["optional",{"_index":250,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":515,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":958,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":965,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":5047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["original",{"_index":622,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"license.html":{}}}],["originalfn",{"_index":519,"title":{},"body":{"interfaces/Chainable.html":{}}}],["os",{"_index":4681,"title":{},"body":{"index.html":{}}}],["osc",{"_index":122,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2209,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":2496,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["oscilloscopepath",{"_index":5037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":99,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":121,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":4690,"title":{},"body":{"index.html":{}}}],["others",{"_index":4780,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":4939,"title":{},"body":{"license.html":{}}}],["output",{"_index":727,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over",{"_index":718,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":724,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":711,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlayerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":714,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":713,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":709,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":726,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":728,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:38",{"_index":725,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:48",{"_index":723,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:54",{"_index":721,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":708,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":707,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overrides",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["overtly",{"_index":4861,"title":{},"body":{"license.html":{}}}],["overview",{"_index":4973,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":488,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["overwritten",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["owner",{"_index":4738,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":4736,"title":{},"body":{"license.html":{}}}],["owners",{"_index":4744,"title":{},"body":{"license.html":{}}}],["package",{"_index":2513,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["packgr",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":4323,"title":{"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["palette",{"_index":1345,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1396,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1397,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1390,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1391,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1398,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1399,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1392,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1393,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1394,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1395,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1388,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1389,"title":{},"body":{"injectables/MetadataService.html":{}}}],["panel",{"_index":1967,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":1968,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":1969,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":1965,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":1987,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":1984,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":1992,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":1993,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":1986,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":1990,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":1991,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":1998,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":1994,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":1995,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":1997,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":1996,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":1964,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":4830,"title":{},"body":{"license.html":{}}}],["param",{"_index":1716,"title":{},"body":{"injectables/PlayerService.html":{}}}],["parameters",{"_index":249,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1103,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":499,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":4838,"title":{},"body":{"license.html":{}}}],["part",{"_index":3617,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["partial",{"_index":945,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":4949,"title":{},"body":{"license.html":{}}}],["party",{"_index":4970,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":4933,"title":{},"body":{"license.html":{}}}],["path",{"_index":5121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":5061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":5123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":233,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":103,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["perform",{"_index":4808,"title":{},"body":{"license.html":{}}}],["performance.now",{"_index":907,"title":{},"body":{"injectables/GamepadService.html":{}}}],["performer(s",{"_index":4815,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4746,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":4957,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1487,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":4965,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4858,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":4685,"title":{},"body":{"index.html":{}}}],["person",{"_index":4786,"title":{},"body":{"license.html":{}}}],["person's",{"_index":4820,"title":{},"body":{"license.html":{}}}],["persons",{"_index":4961,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":4819,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1053,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pin",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":446,"title":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}},"body":{"pipes/BandPipe.html":{},"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipes",{"_index":448,"title":{},"body":{"pipes/BandPipe.html":{},"components/LibraryComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{},"overview.html":{}}}],["pipetransform",{"_index":457,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder",{"_index":1897,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["placeholder_url",{"_index":1311,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":235,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["play/pause",{"_index":1571,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playback",{"_index":362,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["player",{"_index":1494,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":1499,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":1500,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":481,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":1549,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":313,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1253,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":5127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/library",{"_index":5129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1434,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["player/player.types",{"_index":2054,"title":{},"body":{"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":195,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":1503,"title":{"injectables/PlayerService.html":{}},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":1642,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playerservice.currenttime",{"_index":1643,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playerservice.repeat",{"_index":1646,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playing",{"_index":1254,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["playingtrack",{"_index":1717,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist",{"_index":1782,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":1851,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":1852,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":1561,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":197,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistposition",{"_index":537,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["playlistsong.metadata?.crc",{"_index":1785,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":1655,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":1856,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":1863,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":1656,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":1668,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":4672,"title":{},"body":{"index.html":{}}}],["playstate",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["playtrack(track",{"_index":1755,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":493,"title":{},"body":{"interfaces/Chainable.html":{}}}],["plug",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["pluginnewanalysernode",{"_index":236,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["plugins",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":768,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["polfills",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["polyfills",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["pos",{"_index":1695,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":262,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":4763,"title":{},"body":{"license.html":{}}}],["postcss",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["prdefinded",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["pre",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["precommit",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["prefertagembeddedpics",{"_index":1413,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["prefertagembeddedpicture",{"_index":1281,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefetch",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":5074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preparations",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":4954,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":4908,"title":{},"body":{"license.html":{}}}],["preset",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["pressedbuttonscaches",{"_index":835,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prettier",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":2008,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":1657,"title":{},"body":{"injectables/PlayerService.html":{},"directives/VisualsDirective.html":{}}}],["prevsubject",{"_index":514,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":2075,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":2056,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":2035,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":603,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1447,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":4818,"title":{},"body":{"license.html":{}}}],["private",{"_index":319,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["prive",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["problems",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":2561,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":589,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1067,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promote",{"_index":4771,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":4883,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":199,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":1904,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["props",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":4802,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":4824,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4841,"title":{},"body":{"license.html":{}}}],["protobufjs",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":3686,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":5076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":4715,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":318,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":5078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":5065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":5071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":5080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":5064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":4709,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":5066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":5077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":4752,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":4817,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4793,"title":{},"body":{"license.html":{}}}],["pure",{"_index":450,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":4722,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4766,"title":{},"body":{"license.html":{}}}],["pushen",{"_index":1794,"title":{},"body":{"injectables/PlayerService.html":{}}}],["pwa",{"_index":4668,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quality",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["query",{"_index":561,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["queryparams",{"_index":1105,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["queue",{"_index":1743,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":4897,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["randomposition",{"_index":1816,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["rate",{"_index":683,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["read",{"_index":494,"title":{},"body":{"interfaces/Chainable.html":{}}}],["readded",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["reader",{"_index":4695,"title":{},"body":{"index.html":{}}}],["readhandle(handle",{"_index":1468,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["readme",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":220,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":2179,"title":{},"body":{"injectables/UpdateService.html":{}}}],["real",{"_index":1374,"title":{},"body":{"injectables/MetadataService.html":{}}}],["realkeys",{"_index":984,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":4903,"title":{},"body":{"license.html":{}}}],["record",{"_index":1104,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2367,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["recursive",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["redirectto",{"_index":5122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":4761,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["reenabled",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":4714,"title":{},"body":{"license.html":{}}}],["regards",{"_index":4828,"title":{},"body":{"license.html":{}}}],["register",{"_index":1039,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":957,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":813,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":822,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":814,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":826,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":998,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":5070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":5069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":962,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reinstall",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["reject",{"_index":1068,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1072,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":2530,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["relationship",{"_index":4708,"title":{},"body":{"license.html":{}}}],["release",{"_index":571,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["release:${luceneescapequery.escape(album",{"_index":601,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":594,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2421,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":4753,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":4747,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1638,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["remainder",{"_index":4925,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":4927,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1330,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverpicture",{"_index":531,"title":{"interfaces/RemoteCoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":1475,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["removed",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["renderer",{"_index":733,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":730,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renew",{"_index":1323,"title":{},"body":{"injectables/MetadataService.html":{}}}],["renovate",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["renovate.json",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":1652,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":547,"title":{},"body":{"interfaces/ColorConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":1373,"title":{},"body":{"injectables/MetadataService.html":{}}}],["replaced",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["report",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":4977,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":4942,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":4806,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":4776,"title":{},"body":{"license.html":{}}}],["request",{"_index":1208,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["requestanimationframe",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe(draw",{"_index":2405,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["requestwakelock",{"_index":2428,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":4966,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":4892,"title":{},"body":{"license.html":{}}}],["resolve",{"_index":1151,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resolve(data.tags",{"_index":1070,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1150,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resources",{"_index":1077,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["respect",{"_index":4929,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":4959,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":4686,"title":{},"body":{"index.html":{}}}],["result.matches",{"_index":1957,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":4720,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/base-components-base-subscribing-component.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":989,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["retained",{"_index":4813,"title":{},"body":{"license.html":{}}}],["return",{"_index":340,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":252,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":4760,"title":{},"body":{"license.html":{}}}],["revert",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["revocation",{"_index":4891,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["rgb(255",{"_index":788,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0",{"_index":2083,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rgba(0,0,0,0",{"_index":656,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["rid",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1989,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":4731,"title":{},"body":{"license.html":{}}}],["root",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":5038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rounding",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":1928,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":1942,"title":{},"body":{"components/ShellComponent.html":{}}}],["routeroutlet",{"_index":1919,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":5039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":4913,"title":{},"body":{"license.html":{}}}],["rule",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":3289,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":5133,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":315,"title":{},"body":{"injectables/AudioService.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1212,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":1881,"title":{},"body":{"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":1850,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["sample",{"_index":682,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":120,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sandbox",{"_index":4694,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["saving",{"_index":4986,"title":{},"body":{"todo.html":{}}}],["scale",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":2059,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scientific",{"_index":4751,"title":{},"body":{"license.html":{}}}],["screen",{"_index":4550,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scss",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":611,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["seconds",{"_index":1673,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seeking",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["seekleft",{"_index":1512,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["seekleft(seconds",{"_index":1671,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":1531,"title":{},"body":{"components/PlayerComponent.html":{}}}],["seekright",{"_index":1513,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["seekright(seconds",{"_index":1674,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":1533,"title":{},"body":{"components/PlayerComponent.html":{}}}],["seekto",{"_index":1271,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["seektohandler(details",{"_index":1826,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":237,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":258,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["seektto",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1160,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":1164,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1161,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":1166,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selected",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["selectedalbum",{"_index":1179,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":1178,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":1180,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selectnext",{"_index":1658,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":1659,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":1660,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":1678,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1162,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":1168,"title":{},"body":{"components/LibraryComponent.html":{}}}],["self",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["semantics",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":878,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separate",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":5072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seperated",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["september",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":1078,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["service/file",{"_index":795,"title":{},"body":{"classes/FileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":528,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1082,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1121,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":4657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":1435,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["service/metadata.service.ts",{"_index":1280,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:24",{"_index":1296,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:25",{"_index":1294,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1292,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1290,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:29",{"_index":1287,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":532,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":628,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{}}}],["service/metadata.worker.ts",{"_index":4659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":551,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:40",{"_index":1449,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":1451,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":2500,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":1551,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":1552,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":1550,"title":{},"body":{"components/PlayerComponent.html":{}}}],["services/loader/loader.service",{"_index":1706,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["services/media",{"_index":1709,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":1554,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":1708,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1267,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["session.service",{"_index":1710,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":4644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1234,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1244,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1249,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1251,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1247,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1239,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1233,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":377,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["set.svg",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor(color",{"_index":2089,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1235,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1240,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2212,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2222,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2213,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2224,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":238,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":264,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1236,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1245,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2214,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2226,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2215,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2228,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2037,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":2040,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2038,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":2043,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2216,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2230,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":239,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":266,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setfrequencybandgain",{"_index":240,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":268,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setgap",{"_index":2217,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2232,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2218,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2234,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":241,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":271,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setmindb",{"_index":2219,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2236,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setoverlayclass",{"_index":2098,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setplaybackstate(state",{"_index":1276,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor(color",{"_index":2069,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":1661,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":1681,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1237,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1248,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2220,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2238,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setting",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["settings",{"_index":379,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":1914,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1405,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":1912,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1402,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2142,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2030,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":1425,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:21",{"_index":1427,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":1423,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1421,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:33",{"_index":1414,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:37",{"_index":1429,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:41",{"_index":1419,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:45",{"_index":1431,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:49",{"_index":1417,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1401,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":1913,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":1915,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":201,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2149,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2150,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupvisualsworkerwithoptions",{"_index":4649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":4656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":242,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":274,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["several",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":4890,"title":{},"body":{"license.html":{}}}],["share",{"_index":4990,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":1944,"title":{},"body":{"components/ShellComponent.html":{}}}],["shas",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["shell",{"_index":1917,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":1920,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":1921,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":137,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":952,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":1570,"title":{},"body":{"components/PlayerComponent.html":{}}}],["show",{"_index":1221,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showdelay",{"_index":5085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":1463,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["showpicker",{"_index":801,"title":{},"body":{"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{}}}],["shows",{"_index":484,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2210,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":1653,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sichtbare",{"_index":1793,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":1978,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":1923,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["signal",{"_index":282,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["signal(0",{"_index":279,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(44_100",{"_index":302,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(false",{"_index":295,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2240,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2245,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2253,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2255,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":2046,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2261,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2263,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2265,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2268,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":1700,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":1703,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2276,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2412,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.storageservice.retrieve('basegain",{"_index":277,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(this.storageservice.retrieve('volume",{"_index":304,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(true",{"_index":298,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(undefined",{"_index":1690,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signals",{"_index":337,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["signalös",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":4849,"title":{},"body":{"license.html":{}}}],["simplechanges",{"_index":2339,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["simpler",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["simplified",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["sind",{"_index":1036,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1086,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["sizes",{"_index":1767,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":773,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":1926,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2003,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":5041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":204,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":203,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["slider",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["sliders",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":578,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["smaller",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["smoothing",{"_index":2211,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":82,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["snyk",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["soll",{"_index":2191,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["song",{"_index":1680,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["song.file.name",{"_index":1895,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":1890,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":1891,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.crc",{"_index":1887,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.crc",{"_index":1786,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":1896,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":1894,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":1892,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songs",{"_index":1853,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["sortable",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":4985,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["spark",{"_index":1306,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["sparkmd5",{"_index":1305,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5.arraybuffer.hash(await",{"_index":1384,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spectrogram",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":1880,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["splashscreen",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":1163,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src",{"_index":1765,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stable",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":452,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["standing",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2436,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttime",{"_index":1776,"title":{},"body":{"injectables/PlayerService.html":{}}}],["startvisualization(getdatamethod",{"_index":2388,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":336,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":4901,"title":{},"body":{"license.html":{}}}],["statt",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["statutory",{"_index":4946,"title":{},"body":{"license.html":{}}}],["steps",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":110,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2321,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storageservice",{"_index":320,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["storagesettingscomponent",{"_index":206,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":5093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":5095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":5098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structures",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["stuff",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["stylelint",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":704,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":643,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":712,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["sub",{"_index":978,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":1483,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":314,"title":{},"body":{"injectables/AudioService.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{},"license.html":{}}}],["sublicensable",{"_index":4915,"title":{},"body":{"license.html":{}}}],["subscribing",{"_index":466,"title":{"additional-documentation/base-components-base-subscribing-component.html":{}},"body":{"injectables/BaseSubscribingClass.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{},"additional-documentation/base-components-base-subscribing-component.html":{}}}],["subscription",{"_index":936,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":4735,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1029,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1032,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":4847,"title":{},"body":{"license.html":{}}}],["successors",{"_index":4888,"title":{},"body":{"license.html":{}}}],["such",{"_index":4834,"title":{},"body":{"license.html":{}}}],["suche",{"_index":4983,"title":{},"body":{"todo.html":{}}}],["super",{"_index":1134,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["support",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":1268,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":4675,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":4937,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":4867,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["svg",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["svgo",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["swc/core",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["switch",{"_index":1645,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["switched",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["swupdate",{"_index":2163,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["swupdate.activateupdate().then",{"_index":2182,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2168,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntil(this.destroy$)).subscribe((event",{"_index":2169,"title":{},"body":{"injectables/UpdateService.html":{}}}],["syntax",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":4263,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["tag",{"_index":1332,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["tag.album).filter((album",{"_index":1191,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tag.artist).filter((artist",{"_index":1189,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tag.title).filter((title",{"_index":1193,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tags",{"_index":1119,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":591,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":590,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.picture",{"_index":1353,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1299,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1055,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:12",{"_index":1060,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:21",{"_index":1058,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:6",{"_index":1057,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.types",{"_index":529,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1052,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags?.album",{"_index":1357,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags?.artist",{"_index":1354,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags?.format",{"_index":1359,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags?.title",{"_index":1355,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags?.track?.no?.tostring",{"_index":1356,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags?.year",{"_index":1358,"title":{},"body":{"injectables/MetadataService.html":{}}}],["takeuntil",{"_index":1712,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":4909,"title":{},"body":{"license.html":{}}}],["target",{"_index":4991,"title":{},"body":{"todo.html":{}}}],["tastenkürzel",{"_index":1026,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":507,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templates",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["templateurl",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templist",{"_index":1775,"title":{},"body":{"injectables/PlayerService.html":{}}}],["temporarily",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["temporäre",{"_index":1791,"title":{},"body":{"injectables/PlayerService.html":{}}}],["termination",{"_index":4894,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4796,"title":{},"body":{"license.html":{}}}],["territories",{"_index":4876,"title":{},"body":{"license.html":{}}}],["test",{"_index":357,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3290,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1085,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":629,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{}}}],["thebespokepixel/es",{"_index":2050,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["theme",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{}}}],["theme.types",{"_index":2051,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice",{"_index":152,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":208,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":4845,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":100,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["this._audiocontext",{"_index":390,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.createanalyser",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.resume",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.state",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement",{"_index":388,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":400,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":407,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":393,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":397,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":398,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":414,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":409,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":405,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.currenttime",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.fastseek(position",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.loop",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.pause",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.play",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.src",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode",{"_index":389,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode.connect(analyser",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._eqgainnode",{"_index":391,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[band",{"_index":382,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._gainnode",{"_index":392,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.asobservable",{"_index":341,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.next(true",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._internalanalyzer",{"_index":2361,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":973,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":2090,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":2091,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":920,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...files",{"_index":1773,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(file",{"_index":1748,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.afterpausedorstopped",{"_index":1812,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":1771,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.albums",{"_index":1190,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.alpha",{"_index":2258,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2301,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2360,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.disconnect",{"_index":2296,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.fftsize",{"_index":2285,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2291,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2289,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2287,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyserdata",{"_index":2392,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyserdata.buffer",{"_index":2401,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyserdata.length",{"_index":2393,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.fftsize",{"_index":2383,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2382,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](this.analyserdata",{"_index":2396,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2155,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2404,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}/release",{"_index":604,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1111,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.artists",{"_index":1187,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.askuserforupdate().then((update",{"_index":2181,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.currenttime",{"_index":1262,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.duration",{"_index":1260,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.hasended$.pipe(takeuntil(this.destroy$)).subscribe",{"_index":1749,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":1806,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1257,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1255,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":1694,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pause",{"_index":1811,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":1769,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2243,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2384,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":1757,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":1835,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":1833,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(this.audioservice.volume",{"_index":1610,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.audioservice.setvolume(value",{"_index":1612,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.audioservice.stop",{"_index":1813,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":840,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":893,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":891,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":882,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.barcount",{"_index":2248,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2305,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig().barcount",{"_index":2375,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2378,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2377,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2376,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":386,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.breakpointobserver",{"_index":1950,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1099,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":838,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":889,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":883,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":897,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":906,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":879,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2351,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2368,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2357,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.capfalldown",{"_index":2251,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2309,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2249,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2307,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":861,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":860,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":922,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":855,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2027,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.colorconfig",{"_index":2374,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":2092,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":2072,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":843,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":613,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":894,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":890,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":371,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.createtrackfromfile(file",{"_index":1779,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentfolderhandle",{"_index":1460,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":1693,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":1686,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.crc",{"_index":1807,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.playlistposition",{"_index":1820,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":1770,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(undefined",{"_index":1814,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().length",{"_index":1799,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":1784,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((currentlist",{"_index":1797,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":1787,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":406,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.darkmode",{"_index":2099,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":2065,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(true",{"_index":2061,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.data",{"_index":1182,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.data.map((tag",{"_index":1188,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1018,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":1588,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.default_deadspace",{"_index":913,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":825,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":964,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.destroy$.next",{"_index":473,"title":{},"body":{"injectables/BaseSubscribingClass.html":{}}}],["this.destroy$.unsubscribe",{"_index":474,"title":{},"body":{"injectables/BaseSubscribingClass.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":994,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1001,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1020,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":1907,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":1906,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":992,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":845,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":946,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":750,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":741,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":747,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":745,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drop.bind(this",{"_index":753,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":752,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":408,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[band",{"_index":384,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":976,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1096,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1095,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":596,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2286,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2303,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fileinput",{"_index":1135,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1141,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1149,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1148,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1147,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1138,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1143,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1140,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1137,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.currentfolderhandle",{"_index":1604,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.init",{"_index":1603,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.openfiles",{"_index":1772,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.fileloaderservice.showpicker",{"_index":1621,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.files",{"_index":1145,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":595,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":919,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":899,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":1573,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":1635,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":1637,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":1636,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":1623,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":1624,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":1631,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":1630,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":1633,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":1627,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":1632,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":1628,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":1629,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":1634,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":1625,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":1626,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":1585,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":1574,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":1575,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":1594,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":1592,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":1599,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":1581,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":1597,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":1583,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":1590,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":1601,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":1577,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":1579,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2295,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2293,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2250,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2313,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getcolorobject(new",{"_index":2105,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":1545,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer?.files",{"_index":764,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.helpopen",{"_index":991,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":999,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":977,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":959,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":987,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":980,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":1567,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":1568,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.hotkeysservice.register",{"_index":1569,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.id3tagsservice.extracttags(file",{"_index":1336,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":1589,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.indexeddbservice.add('metatags",{"_index":1360,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('metatags').topromise",{"_index":1441,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.getall('metatags').topromise",{"_index":1183,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.indexeddbservice.update('dirhandle",{"_index":1464,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":914,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":396,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":399,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(false",{"_index":413,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(true",{"_index":416,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(false",{"_index":415,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(true",{"_index":412,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(false",{"_index":411,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(true",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.lastfm_api_key",{"_index":1109,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpicture(tags",{"_index":1340,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":763,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":749,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.linethickness",{"_index":2271,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2311,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1218,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["this.loaderservice.show",{"_index":1216,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["this.loadfiles",{"_index":1605,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.loadingcounter",{"_index":1226,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2031,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2302,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2306,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2310,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2308,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":2066,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2304,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2314,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2312,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2300,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2298,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2417,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":1718,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":1724,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":1721,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":1719,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":1726,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":1728,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":1730,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":1722,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":1759,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":1732,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.meta.addtag",{"_index":2087,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.meta.updatetag",{"_index":2088,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.metadataprepareforuse(metadata",{"_index":1362,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.metadataprepareforuse(metadatacache",{"_index":1334,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.metadataservice.getmetadata(file",{"_index":1803,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.prefertagembeddedpicture",{"_index":1443,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture",{"_index":1442,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache",{"_index":1439,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos",{"_index":1438,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2290,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2299,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2369,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpicture(tags",{"_index":1341,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":1725,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.open",{"_index":2026,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2025,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig().thickness",{"_index":2386,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":744,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.placeholder_url",{"_index":1352,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...files",{"_index":1613,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2257,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.crc",{"_index":1882,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist().entries",{"_index":1869,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist().length",{"_index":1541,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.currentplaylist().map((track",{"_index":1871,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":1644,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.loadfiles",{"_index":1622,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.next",{"_index":1598,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.playpause",{"_index":1572,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":1883,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.previous",{"_index":1600,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.seekleft(value",{"_index":1607,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.seekright(value",{"_index":1608,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.selectnext",{"_index":1595,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":1593,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":1606,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.stop",{"_index":1576,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.togglerepeat",{"_index":1618,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.toggleshuffle",{"_index":1619,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playpause",{"_index":1720,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentpo",{"_index":1821,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[randomposition",{"_index":1818,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.selectedtrack",{"_index":1810,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":1809,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1322,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":901,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":1727,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":2070,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":2071,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.readhandle(this.currentfolderhandle",{"_index":1467,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.register",{"_index":951,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":742,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":759,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":1830,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":1831,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":1836,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":1834,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2427,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.router.navigate([route",{"_index":1959,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":410,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.seekleft(10",{"_index":1729,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":1582,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.seekright(10",{"_index":1731,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":1584,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.seektohandler(details",{"_index":1733,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.selectedalbum",{"_index":1195,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":1194,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":1196,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectedtrack()?.playlistposition",{"_index":1823,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(song",{"_index":1805,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentpo",{"_index":1824,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectsong(this.currentplaylist()[0",{"_index":1800,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":1756,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setaccentcolor(colors.peakcolor",{"_index":2068,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setaccentcolor(this.accentcolor",{"_index":2064,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setoverlayclass",{"_index":2062,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setplaybackstate('none",{"_index":1259,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1258,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1256,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setprimarycolor(colors.maincolor",{"_index":2067,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setprimarycolor(this.primarycolor",{"_index":2063,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setseekposition(details.seektime",{"_index":1829,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":1825,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.showpicker",{"_index":1602,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.shuffle",{"_index":1815,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":1837,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":1958,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2288,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2297,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.song.metadata.covercolors.vibrant.texthex",{"_index":665,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.song?.metadata?.covercolors?.vibrant",{"_index":664,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.split",{"_index":1184,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2385,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2387,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":1723,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2363,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.storageservice.retrieve('equalizergainvalues",{"_index":283,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.swupdate",{"_index":2167,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2189,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2188,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.darkmode",{"_index":653,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":1750,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2144,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2156,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":1566,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":956,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":1591,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglerepeat",{"_index":1580,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.toggleshuffle",{"_index":1578,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.track()?.metadata?.covercolors?.darkmuted?.hex",{"_index":654,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.covercolors?.lightmuted?.hex",{"_index":655,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.coverurl?.original",{"_index":658,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.tracks",{"_index":1192,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1263,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.usetagembeddedpicture",{"_index":1320,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1316,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1338,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2370,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2373,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2371,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2372,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2353,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2358,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2407,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2415,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2416,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2294,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2274,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":352,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.wakelock",{"_index":2426,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2431,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2434,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":1752,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":1754,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1062,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1071,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1069,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2355,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1073,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1080,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.zone.runoutsideangular",{"_index":2391,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["those",{"_index":4748,"title":{},"body":{"license.html":{}}}],["threads.js",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["through",{"_index":4778,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":4725,"title":{},"body":{"license.html":{}}}],["thum",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["thumb",{"_index":619,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{}}}],["thumbnails",{"_index":554,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["time",{"_index":675,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"changelog.html":{},"license.html":{}}}],["time.pipe",{"_index":661,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["time.ts",{"_index":4629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["timepipe",{"_index":641,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{},"pipes/TimePipe.html":{}}}],["tinycolor",{"_index":2049,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["tinycolor(clr.hex).setalpha(0.54).torgbstring",{"_index":2096,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex",{"_index":2114,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(12",{"_index":2116,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(18",{"_index":2118,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(24",{"_index":2120,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(6",{"_index":2115,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(10).saturate(15",{"_index":2126,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(12",{"_index":2111,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(26",{"_index":2109,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(30).saturate(30",{"_index":2124,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(37",{"_index":2108,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(5).saturate(5",{"_index":2128,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(50).saturate(30",{"_index":2122,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(52",{"_index":2106,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(6",{"_index":2112,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(value",{"_index":2131,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":540,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":5105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":1553,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":1960,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":355,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["todo.md",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["todos",{"_index":3931,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["toggle",{"_index":1433,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["togglehelpdialog",{"_index":990,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":1979,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":1514,"title":{},"body":{"components/PlayerComponent.html":{}}}],["togglerepeat",{"_index":1515,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["toggleshuffle",{"_index":1516,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["togglevisualmode",{"_index":2410,"title":{},"body":{"injectables/VisualsService.html":{}}}],["token",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["tools",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["tooltips",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":1980,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["topromise",{"_index":1465,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["tosignal",{"_index":1945,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":1929,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1028,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["touppercase",{"_index":1031,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":535,"title":{"interfaces/Track.html":{}},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["track()?.file?.name",{"_index":669,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track()?.metadata?.album",{"_index":671,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track()?.metadata?.artist",{"_index":670,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track()?.metadata?.format?.bitrate",{"_index":678,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track()?.metadata?.format?.codec",{"_index":677,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track()?.metadata?.format?.container",{"_index":676,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track()?.metadata?.format?.duration",{"_index":674,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track()?.metadata?.format?.samplerate",{"_index":681,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track()?.metadata?.title",{"_index":668,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track()?.metadata?.year",{"_index":672,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track.metadata",{"_index":1758,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":1762,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":1761,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.original",{"_index":1766,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.original",{"_index":1764,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":1760,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.crc",{"_index":1808,"title":{},"body":{"injectables/PlayerService.html":{}}}],["trackmetadata",{"_index":536,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":1159,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trademark",{"_index":4932,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":2397,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["transferred",{"_index":2403,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":453,"title":{},"body":{"pipes/BandPipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":454,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["translate",{"_index":4810,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2317,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["treaty",{"_index":4854,"title":{},"body":{"license.html":{}}}],["tree",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trial",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["trials",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":451,"title":{},"body":{"pipes/BandPipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":593,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["ts",{"_index":1185,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["tsconfig",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":2729,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tslint",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["ttry",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":823,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4995,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1737,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["types/node",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["typing",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["ubuntu",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":4078,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":113,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["uint8array(this.analysernode.frequencybincount",{"_index":2394,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["um",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["unconditional",{"_index":4917,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":4864,"title":{},"body":{"license.html":{}}}],["und",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":592,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":4795,"title":{},"body":{"license.html":{}}}],["understands",{"_index":4968,"title":{},"body":{"license.html":{}}}],["uneeded",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["unfair",{"_index":4826,"title":{},"body":{"license.html":{}}}],["unicorn",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":1197,"title":{},"body":{"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":5134,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":4701,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":255,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1040,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":983,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["unsubscribe",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1076,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["update",{"_index":404,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["update.service",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["updatemediapositionstate",{"_index":1238,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1250,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updates",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["updateservice",{"_index":154,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":479,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":4733,"title":{},"body":{"license.html":{}}}],["url",{"_index":520,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1064,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2354,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["url.createobjecturl(new",{"_index":1327,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["urls",{"_index":1326,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["urlsearchparams",{"_index":1106,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["usage",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":1445,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["useclass",{"_index":5089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2009,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":5082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":1488,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["usermediainput",{"_index":4988,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":4676,"title":{},"body":{"index.html":{}}}],["usetagembeddedpics",{"_index":1412,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["usetagembeddedpicture",{"_index":1282,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1283,"title":{},"body":{"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{}}}],["usevalue",{"_index":5084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1284,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usewebtags",{"_index":1411,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["using",{"_index":4669,"title":{},"body":{"index.html":{}}}],["utc",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":1868,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["v.playlistposition",{"_index":1870,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["v0.10.0",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["v0.11.0",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["v0.12.0",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["v0.13.0",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["v0.14.0",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["v0.15.0",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["v0.16.0",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["v0.17.0",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["v0.18.0",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["v0.19.0",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["v0.20.0",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["v0.21.0",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["v0.22.0",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["v0.23.0",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["v0.24.0",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["v0.25.0",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["v0.28.0",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["v0.29.0",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["v0.4.0",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["v0.5.0",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["v0.6.0",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["v0.7.0",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["v0.8.0",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["v0.9.0",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["v1.0.1",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["v1.10.0",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["v1.11.0",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["v1.11.1",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["v1.11.10",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["v1.11.11",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["v1.11.12",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["v1.11.2",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["v1.11.3",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["v1.11.4",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["v1.11.5",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["v1.11.6",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["v1.11.7",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["v1.11.8",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["v1.11.9",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["v1.12.0",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["v1.13.0",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["v1.14.0",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["v1.15.0",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["v1.16.0",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["v1.17.0",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["v1.18.0",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["v1.19.0",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["v1.2.2",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["v1.3.0",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["v1.4.0",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["v1.4.1",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["v1.6.1",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["v1.6.2",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["v1.6.3",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["v1.6.4",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["v1.7.1",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["v1.9.1",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["v10.0.0",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["v10.0.1",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["v10.0.2",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["v10.0.3",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["v10.0.4",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["v10.1.0",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["v10.2.0",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["v10.3.0",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["v10.3.1",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["v10.3.2",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["v11.0.0",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["v11.1.0",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["v11.1.1",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["v11.1.2",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["v11.18.0",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["v11.2.0",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["v11.20.0",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["v11.22.0",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["v11.24.1",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["v11.3.0",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["v11.3.1",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["v11.30.1",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["v11.4.0",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["v11.4.1",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["v11.4.10",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["v11.4.11",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["v11.4.2",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["v11.4.3",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["v11.4.5",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["v11.4.6",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["v11.4.7",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["v11.4.8",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["v11.4.9",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["v11.5.0",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["v11.5.1",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["v11.5.10",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["v11.5.11",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["v11.5.12",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["v11.5.13",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["v11.5.14",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["v11.5.2",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["v11.5.3",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["v11.5.4",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["v11.5.5",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["v11.5.6",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["v11.5.7",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["v11.5.8",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["v11.5.9",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["v12.0.0",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["v12.0.1",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["v12.0.10",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["v12.0.11",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["v12.0.12",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["v12.0.13",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["v12.0.14",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["v12.0.15",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["v12.0.16",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["v12.0.2",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["v12.0.3",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["v12.0.4",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["v12.0.5",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["v12.0.6",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["v12.0.7",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["v12.0.8",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["v12.0.9",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["v12.2.13",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["v12.2.5",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["v12.3.0",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["v12.6.2",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["v12.8.0",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["v12.9.0",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["v13.0.0",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["v13.0.1",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["v13.0.10",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["v13.0.11",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["v13.0.12",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["v13.0.13",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["v13.0.16",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["v13.0.18",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["v13.0.19",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["v13.0.2",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["v13.0.20",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["v13.0.3",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["v13.0.5",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["v13.0.6",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["v13.0.7",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["v13.0.8",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["v13.0.9",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["v13.1.1",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["v13.1.10",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["v13.1.11",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["v13.1.12",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["v13.1.2",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["v13.1.3",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["v13.1.4",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["v13.1.5",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["v13.1.6",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["v13.1.7",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["v13.1.8",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["v13.1.9",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["v13.10.1",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["v13.11.2",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["v13.11.4",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["v13.13.0",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["v13.14.2",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["v13.15.1",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["v13.2.0",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["v13.2.1",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["v13.2.2",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["v13.2.3",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["v13.2.4",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["v13.2.5",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["v13.2.6",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["v13.22.0",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["v13.24.2",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["v13.26.0",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["v13.28.0",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["v13.29.1",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["v13.29.3",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["v13.3.0",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["v13.3.1",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["v13.3.2",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["v13.3.3",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["v13.3.4",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["v13.3.5",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["v13.31.2",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["v13.32.0",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["v13.33.0",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["v13.5.1",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["v13.7.2",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["v13.7.5",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["v14.0.0",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["v14.0.1",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["v14.0.10",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["v14.0.11",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["v14.0.12",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["v14.0.13",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["v14.0.2",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["v14.0.3",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["v14.0.4",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["v14.0.5",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["v14.0.6",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["v14.0.7",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["v14.0.8",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["v14.0.9",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["v14.1.0",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["v14.1.1",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["v14.1.10",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["v14.1.11",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["v14.1.12",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["v14.1.13",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["v14.1.14",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["v14.1.15",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["v14.1.16",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["v14.1.17",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["v14.1.18",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["v14.1.19",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["v14.1.2",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["v14.1.20",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["v14.1.23",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["v14.1.3",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["v14.1.4",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["v14.1.5",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["v14.1.6",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["v14.1.7",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["v14.1.8",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["v14.1.9",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["v15",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["v15.0.0",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["v15.0.1",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["v15.0.2",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["v15.0.3",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["v15.0.4",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["v15.0.5",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["v15.0.6",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["v15.0.7",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["v15.0.8",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["v15.0.9",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["v15.1.0",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["v15.1.1",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["v15.1.10",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["v15.1.11",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["v15.1.12",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["v15.1.13",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["v15.1.14",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["v15.1.16",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["v15.1.17",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["v15.1.2",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["v15.1.3",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["v15.1.4",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["v15.1.5",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["v15.1.6",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["v15.1.7",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["v15.1.8",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["v15.1.9",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["v15.4.4",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["v16.0.0",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["v16.0.1",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["v16.0.2",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["v16.0.3",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["v16.0.4",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["v16.0.5",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["v16.0.6",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["v17.0.1",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["v17.0.10",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["v17.0.11",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["v17.0.12",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["v17.0.13",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["v17.0.14",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["v17.0.15",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["v17.0.16",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["v17.0.17",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["v17.0.18",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["v17.0.2",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["v17.0.3",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["v17.0.4",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["v17.0.5",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["v17.0.6",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["v17.0.7",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["v17.0.8",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["v17.0.9",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["v18.0.0",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["v18.0.1",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["v18.1.0",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["v18.1.1",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["v18.16.5",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["v18.2.0",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["v18.2.2",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["v18.2.3",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["v18.2.4",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["v18.2.5",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["v18.2.6",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["v18.2.7",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["v19",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["v19.0.0",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["v19.0.1",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["v19.0.10",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["v19.0.2",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["v19.0.3",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["v19.0.4",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["v19.0.5",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["v19.0.6",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["v19.0.7",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["v19.0.8",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["v19.0.9",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["v19.1.0",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["v19.1.1",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["v19.2.0",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["v19.2.1",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["v19.2.10",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["v19.2.2",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["v19.2.3",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["v19.2.4",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["v19.2.5",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["v19.2.6",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["v19.2.7",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["v19.2.8",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["v19.2.9",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["v19.3.0",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["v19.4.0",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["v19.4.1",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["v19.4.10",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["v19.4.11",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["v19.4.12",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["v19.4.13",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["v19.4.14",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["v19.4.15",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["v19.4.2",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["v19.4.3",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["v19.4.4",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["v19.4.5",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["v19.4.6",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["v19.4.7",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["v19.4.8",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["v19.4.9",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["v19.5.0",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["v19.5.1",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["v19.5.3",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["v19.5.4",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["v2.0.2",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["v2.5.0",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["v2.5.3",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["v2.6.0",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["v2.6.1",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["v2.6.2",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["v2.6.3",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["v2.7.0",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["v2.8.1",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["v20.0.0",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["v20.8.6",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["v24",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["v3.0.3",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["v3.0.4",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["v3.0.5",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["v3.0.6",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["v3.0.7",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["v3.0.8",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["v3.0.9",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["v3.10.0",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["v3.11.0",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["v3.4.0",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["v3.4.1",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["v3.5.0",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["v3.5.1",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["v3.6.0",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["v3.7.0",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["v3.8.0",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["v3.8.1",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["v3.9.0",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["v4.2.0",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["v4.3.1",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["v4.4.0",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["v4.5.0",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["v4.6.0",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["v4.7.0",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["v5.1.0",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["v5.2.0",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["v5.2.1",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["v5.2.10",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["v5.2.11",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["v5.2.12",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["v5.2.2",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["v5.2.3",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["v5.2.4",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["v5.2.5",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["v5.2.6",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["v5.2.7",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["v5.2.8",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["v5.2.9",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["v5.48.0",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["v6.0.0",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["v6.0.1",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["v6.1.0",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["v6.1.1",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["v6.2.0",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["v6.2.1",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["v6.2.2",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["v6.2.3",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["v6.2.4",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["v6.2.5",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["v6.2.6",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["v6.3.0",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["v6.3.1",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["v6.4.0",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["v6.4.1",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["v6.5.0",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["v6.5.1",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["v6.5.2",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["v6.5.3",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["v6.5.4",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["v6.5.5",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["v6.5.6",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["v6.5.7",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["v6.5.8",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["v6.5.9",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["v6.6.0",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["v6.6.1",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["v6.6.2",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["v6.6.3",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["v6.6.4",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["v6.6.5",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["v6.6.6",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["v6.6.7",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["v6.7.0",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["v6.7.1",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["v6.7.2",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["v6.7.3",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["v6.7.4",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["v7.0.0",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["v7.0.1",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["v7.0.2",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["v7.0.3",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["v7.0.4",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["v7.0.5",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["v7.0.6",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["v7.1.1",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["v7.13.1",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["v7.13.3",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["v7.13.4",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["v8.0.0",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["v8.0.1",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["v8.0.3",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["v8.1.0",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["v8.1.1",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["v8.1.10",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["v8.1.3",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["v8.1.4",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["v8.1.5",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["v8.1.6",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["v8.1.7",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["v8.1.8",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["v8.1.9",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["v8.31.0",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["v8.4.21",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["v8.6.0",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["v9.0.10",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["v9.0.11",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["v9.0.2",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["v9.0.3",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["v9.0.4",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["v9.0.5",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["v9.0.6",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["v9.0.7",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["v9.0.8",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["v9.0.9",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["v9.1.0",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["v9.1.1",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["v9.1.2",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["v9.1.3",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["v9.2.0",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["v9.2.1",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["v9.2.2",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["v9.2.3",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["v9.2.4",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":261,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/BaseSubscribingClass.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":700,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":462,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value.tostring().slice(0",{"_index":460,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value1",{"_index":2077,"title":{},"body":{"injectables/ThemeService.html":{}}}],["value2",{"_index":2081,"title":{},"body":{"injectables/ThemeService.html":{}}}],["value3",{"_index":2095,"title":{},"body":{"injectables/ThemeService.html":{}}}],["var",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":5005,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.scss",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["variant",{"_index":1616,"title":{},"body":{"components/PlayerComponent.html":{}}}],["various",{"_index":485,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verfügbar",{"_index":2190,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":4650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle",{"_index":1459,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":1486,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2174,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2171,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2184,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2176,"title":{},"body":{"injectables/UpdateService.html":{}}}],["versions",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["vi",{"_index":4833,"title":{},"body":{"license.html":{}}}],["via",{"_index":4987,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":630,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["vibrant.from(url).getpalette",{"_index":1387,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1304,"title":{},"body":{"injectables/MetadataService.html":{}}}],["viewchild",{"_index":1939,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":1933,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewport",{"_index":1889,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":4848,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":760,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":761,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visualization",{"_index":2493,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["visualizefrequencybars",{"_index":2322,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2327,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2323,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2329,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["visualizer.component.html",{"_index":2203,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2204,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":1559,"title":{},"body":{"components/PlayerComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":1878,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizer/visuals/visuals.service",{"_index":1877,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":210,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":115,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":111,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizers",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["visualizerworker",{"_index":2348,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2409,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":2545,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["visuals.types",{"_index":2340,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2284,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2281,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2280,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":101,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":213,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":1854,"title":{"injectables/VisualsService.html":{}},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":1893,"title":{},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":105,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["vm2",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"injectables/BaseSubscribingClass.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":1615,"title":{},"body":{"components/PlayerComponent.html":{}}}],["volume",{"_index":230,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlayerComponent.html":{}}}],["volumeicon",{"_index":1504,"title":{},"body":{"components/PlayerComponent.html":{}}}],["voluntarily",{"_index":4790,"title":{},"body":{"license.html":{}}}],["vulnerabilities",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["w9jds/firebase",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["waived",{"_index":4935,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4856,"title":{},"body":{"license.html":{}}}],["waives",{"_index":4865,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2419,"title":{},"body":{"injectables/WakelockService.html":{},"changelog.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2425,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":1707,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":4651,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":4713,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["wav",{"_index":5045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["web",{"_index":4667,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webmanifest",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["webpack",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["webstorage",{"_index":312,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"dependencies.html":{}}}],["webworker",{"_index":4981,"title":{},"body":{"todo.html":{}}}],["well",{"_index":4874,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1368,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2194,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":4765,"title":{},"body":{"license.html":{}}}],["whether",{"_index":4871,"title":{},"body":{"license.html":{}}}],["white",{"_index":786,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["whitelist",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":995,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window.showopenfilepicker",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":4745,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":5081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":5079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":5075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1229,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{},"license.html":{}}}],["word",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":4739,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1061,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1063,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":5067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2507,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":1479,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":4726,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":4877,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["writes",{"_index":2007,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":4992,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":886,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":542,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["z",{"_index":779,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zone",{"_index":2343,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["zone.js",{"_index":4610,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["zugewiesen",{"_index":866,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  templateUrl: './app.component.html',\n  imports: [ShellComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    return analyser;\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true,\n  standalone: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand, ...arguments_: unknown[]): string {\n    if (!value) {\n      return '';\n    }\n\n    if (value = 1000 && value = 10_000) {\n      return value.toString().slice(0, 2) + 'K';\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseSubscribingClass.html":{"url":"injectables/BaseSubscribingClass.html","title":"injectable - BaseSubscribingClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseSubscribingClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/base-components/base-subscribing-component/src/lib/base-subscribing-component.directive.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in libs/base-components/base-subscribing-component/src/lib/base-subscribing-component.directive.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class BaseSubscribingClass implements OnDestroy {\n  destroy$: Subject = new Subject();\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  metadata: TrackMetadata;\n  playlistPosition?: number;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  duration?: number;\n  format?: IFormat;\n  coverUrl?: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors?: CoverColorPalette;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtImage.html":{"url":"interfaces/CoverArtImage.html","title":"interface - CoverArtImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            thumbnails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnails:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtResponse.html":{"url":"interfaces/CoverArtResponse.html","title":"interface - CoverArtResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            images\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         CoverArtImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverArtImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            NgStyle\n                            TimePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                    Readonly\n                                track\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBitrate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                track\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        track\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBitrate\n                        \n                    \n                \n            \n            \n                \ngetBitrate(bitrate: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bitrate\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.track()?.metadata?.coverUrl?.original)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        track\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, input, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\nimport { NgStyle } from '@angular/common';\nimport { Track } from '../player.types';\n\n@Component({\n  selector: 'mtb-cover-display',\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [NgStyle, TimePipe]\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n\n  readonly track = input();\n\n  readonly coverUrl = computed(() => this.track()?.metadata?.coverUrl?.original);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n\n  // get fontColor(): string | undefined {\n  //   return this.song?.metadata?.coverColors?.vibrant ? this.song.metadata.coverColors.vibrant.textHex : undefined;\n  // }\n\n  // TODO: pipe\n  getBitrate(bitrate: number | undefined): string {\n    if (!bitrate) {\n      return '0';\n    }\n    return Math.round(bitrate / 1000).toString();\n  }\n}\n\n    \n\n    \n        \n  \n    {{ track()?.metadata?.title || track()?.file?.name }}\n  \n  {{ track()?.metadata?.artist }}\n  \n    @if (track()?.metadata?.album) {\n      \n        Album: {{ track()?.metadata?.album }}\n      \n    }\n    @if (track()?.metadata?.year) {\n      \n        Year: {{ track()?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (track()?.metadata?.format?.duration) {\n      \n        Duration: {{ track()?.metadata?.format?.duration | time }}\n      \n    }\n    @if (track()?.metadata?.format?.container && track()?.metadata?.format?.codec) {\n      \n        Format: {{ track()?.metadata?.format?.container }} ({{ track()?.metadata?.format?.codec }})\n      \n    }\n    @if (track()?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ getBitrate(track()?.metadata?.format?.bitrate) }} kb/s\n      \n    }\n    @if (track()?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ track()?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (track() && coverUrl()) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ track()?.metadata?.title || track()?.file?.name }}    {{ track()?.metadata?.artist }}      @if (track()?.metadata?.album) {              Album: {{ track()?.metadata?.album }}          }    @if (track()?.metadata?.year) {              Year: {{ track()?.metadata?.year }}          }         @if (track()?.metadata?.format?.duration) {              Duration: {{ track()?.metadata?.format?.duration | time }}          }    @if (track()?.metadata?.format?.container && track()?.metadata?.format?.codec) {              Format: {{ track()?.metadata?.format?.container }} ({{ track()?.metadata?.format?.codec }})          }    @if (track()?.metadata?.format?.bitrate) {              Bitrate: {{ getBitrate(track()?.metadata?.format?.bitrate) }} kb/s          }    @if (track()?.metadata?.format?.sampleRate) {              Sample-Rate: {{ track()?.metadata?.format?.sampleRate }}          }  @if (track() && coverUrl()) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                            BandPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { AudioService, FREQUENCY_BANDS } from '../audio.service';\nimport { BandPipe } from './band.pipe';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@Component({\n  selector: 'mtb-equalizer',\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  imports: [MatSliderModule, BandPipe],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n\n  BANDS = FREQUENCY_BANDS;\n\n  displayFunction(value: number): string {\n    const number_ = value.toFixed(1);\n    return number_ + ' dB';\n  }\n}\n\n    \n\n    \n        \n  \n    @for (band of BANDS; track band; let i = $index) {\n      \n        \n          {{ band | band }}\n          \n        \n      \n    }\n\n    \n      \n        GAIN\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (band of BANDS; track band; let i = $index) {                        {{ band | band }}                            }                  GAIN                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EqualizerGainValues.html":{"url":"interfaces/EqualizerGainValues.html","title":"interface - EqualizerGainValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EqualizerGainValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [band: number]:        number\n\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    return analyser;\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer?.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (let index = 0; index \n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-500);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                init\n                            \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:2\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:3\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class FileLoaderService {\n  abstract currentFolderHandle?: FileSystemDirectoryHandle;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n  abstract init(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format?: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format?: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispose\n                            \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispose\n                        \n                    \n                \n            \n            \n                \ndispose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService {\n  private readonly worker: Worker;\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n  }\n\n  extractTags(file: File): Promise {\n    return new Promise((resolve, reject) => {\n      this.worker.addEventListener('message', ({ data }) => resolve(data.tags));\n      this.worker.addEventListener('error', ({ error }) => reject(error));\n      this.worker.postMessage({ file });\n    });\n  }\n\n  // If you need to clean up resources when service is destroyed\n  dispose(): void {\n    this.worker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPicture(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:27\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:46\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ALLOWED_MIMETYPES } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService extends FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  private files: File[] = [];\n\n  constructor() {\n    super();\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  async init() {}\n\n  async openFiles(): Promise {\n    return this.files;\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            NgArrayPipesModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                albums\n                            \n                            \n                                artists\n                            \n                            \n                                tracks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                split\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        split\n                        \n                    \n                \n            \n            \n                \nsplit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        albums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        artists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { TrackMetadata } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [MatListModule, NgArrayPipesModule]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  artists: string[] = [];\n  albums: string[] = [];\n  tracks: string[] = [];\n\n  private selectedArtist!: string;\n  private selectedAlbum!: string;\n  private selectedTrack!: string;\n\n  private data?: TrackMetadata[];\n\n  async ngOnInit() {\n    this.data = await this.indexedDbService.getAll('metatags').toPromise();\n    this.split();\n  }\n\n  split() {\n    // @ts-expect-error\n    this.artists = this.data.map((tag) => tag.artist).filter((artist) => !!artist);\n    // @ts-expect-error\n    this.albums = this.data.map((tag) => tag.album).filter((album) => !!album);\n    // @ts-expect-error\n    this.tracks = this.data.map((tag) => tag.title).filter((title) => !!title);\n  }\n\n  selectArtist(artist: string | undefined) {\n    if (artist) {\n      this.selectedArtist = artist;\n    }\n  }\n\n  selectAlbum(album: string | undefined) {\n    if (album) {\n      this.selectedAlbum = album;\n    }\n  }\n\n  selectTrack(track: string | undefined) {\n    if (track) {\n      this.selectedTrack = track;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @for (artist of artists | unique; track artist) {\n        {{ artist }}\n      }\n    \n  \n\n  \n    \n      @for (album of albums | unique; track album) {\n        {{ album }}\n      }\n    \n  \n  \n    \n      @for (track of tracks | unique; track track) {\n        {{ track }}\n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @for (artist of artists | unique; track artist) {        {{ artist }}      }                  @for (album of albums | unique; track album) {        {{ album }}      }                  @for (track of tracks | unique; track track) {        {{ track }}      }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                preferTagEmbeddedPicture\n                            \n                            \n                                    \n                                useTagEmbeddedPicture\n                            \n                            \n                                    \n                                useTagsCache\n                            \n                            \n                                    \n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @LocalStorage('preferTagEmbeddedPicture', undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @LocalStorage('useTagEmbeddedPicture', undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @LocalStorage('useTagsCache', undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @LocalStorage('useWebMetainfos', undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { crc32 } from '@allex/crc32';\nimport { inject, Injectable } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorage } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\n\n// import * as SparkMD5 from 'spark-md5';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  @LocalStorage('useWebMetainfos', true) useWebMetainfos!: boolean;\n  @LocalStorage('useTagsCache', true) useTagsCache!: boolean;\n  @LocalStorage('useTagEmbeddedPicture', true) useTagEmbeddedPicture!: boolean;\n  @LocalStorage('preferTagEmbeddedPicture', true) preferTagEmbeddedPicture!: boolean;\n\n  async getMetadata(file: File): Promise {\n    // console.time('hash');\n    const crc = generateFileHash(file);\n    // console.timeEnd('hash');\n\n    if (this.useTagsCache) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('metatags', crc));\n\n      if (metadataCache) {\n        if (metadataCache.embeddedPicture && this.useTagEmbeddedPicture && (!metadataCache.coverUrl || this.preferTagEmbeddedPicture)) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.metadataPrepareForUse(metadataCache);\n        }\n      }\n    }\n    // console.time('id3tags');\n    const tags = await this.id3TagsService.extractTags(file);\n    // console.timeEnd('id3tags');\n    if (!tags) {\n      // if no tags\n      return { crc: crc };\n    }\n\n    let coverUrl: RemoteCoverPicture | undefined;\n\n    if (this.useWebMetainfos) {\n      if (tags.artist && tags.album) {\n        // console.time('webcover');\n        coverUrl = await this.lastfmMetadataService.getCoverPicture(tags);\n        if (!coverUrl) {\n          coverUrl = await this.musicbrainzService.getCoverPicture(tags);\n        }\n        // console.timeEnd('webcover');\n      } else {\n        console.warn('Missing tags for lookup');\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n    if (coverUrl) {\n      // console.time('vibrant');\n      palette = await extractColorsWithNodeVibrant(coverUrl.original);\n      // console.timeEnd('vibrant');\n      // console.time('wasm');\n      // palette = await extractColorsWithVibrantWasm(coverUrl.original);\n      // console.timeEnd('wasm');\n    }\n\n    const metadata: TrackMetadata = {\n      crc: crc,\n      coverUrl: coverUrl ?? { thumb: this.PLACEHOLDER_URL, original: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette,\n      artist: tags?.artist,\n      title: tags?.title,\n      track: tags?.track?.no?.toString(),\n      album: tags?.album,\n      year: tags?.year,\n      format: tags?.format\n    };\n\n    if (this.useTagsCache) {\n      await this.indexedDBService.add('metatags', metadata).toPromise();\n    }\n    return this.metadataPrepareForUse(metadata);\n  }\n\n  private metadataPrepareForUse(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture && (!meta.coverUrl || this.preferTagEmbeddedPicture)) {\n      // renew local object urls\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nfunction generateFileHash(file: File): string {\n  // TODO: replace with real file hashing? https://stackoverflow.com/questions/20917710/fast-file-hashing-of-large-files\n  const hashString: string = file.name + file.type + file.size + file.lastModified;\n  return crc32(hashString, 'hex') as string;\n}\n//\n// async function generateFileHashMD5(file: File): Promise {\n//   return SparkMD5.ArrayBuffer.hash(await file.arrayBuffer());\n// }\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  const palette = await Vibrant.from(url).getPalette();\n  return {\n    vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n    darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n    lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n    muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n    darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n    lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    useWebTags\n                                \n                                \n                                    useTagsCache\n                                \n                                \n                                    useTagEmbeddedPics\n                                \n                                \n                                    preferTagEmbeddedPics\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        useWebTags\n                    \n                \n\n                \n                    \n                        getuseWebTags()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        useTagsCache\n                    \n                \n\n                \n                    \n                        getuseTagsCache()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        useTagEmbeddedPics\n                    \n                \n\n                \n                    \n                        getuseTagEmbeddedPics()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        preferTagEmbeddedPics\n                    \n                \n\n                \n                    \n                        getpreferTagEmbeddedPics()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:45\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  templateUrl: './metadata-settings.component.html',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule]\n})\nexport class MetadataSettingsComponent {\n  private metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n\n  get useWebTags() {\n    return this.metadataService.useWebMetainfos;\n  }\n\n  get useTagsCache() {\n    return this.metadataService.useTagsCache;\n  }\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos = event.checked;\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache = event.checked;\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('metatags').toPromise();\n  }\n\n  get useTagEmbeddedPics(): boolean {\n    return this.metadataService.useTagEmbeddedPicture;\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture = event.checked;\n  }\n\n  get preferTagEmbeddedPics(): boolean {\n    return this.metadataService.preferTagEmbeddedPicture;\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture = event.checked;\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzReleaseGroup.html":{"url":"interfaces/MusicbrainzReleaseGroup.html","title":"interface - MusicbrainzReleaseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzReleaseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            first-release-date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first-release-date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first-release-date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzResponse.html":{"url":"interfaces/MusicbrainzResponse.html","title":"interface - MusicbrainzResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            release-groups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release-groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release-groups:         MusicbrainzReleaseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MusicbrainzReleaseGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPicture(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPicture(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:15\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:35\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService extends FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  async init() {\n    const entry = await firstValueFrom(this.indexedDbService.getByID('dirHandle', 1));\n    if (entry) {\n      const granted = await verifyPermission(entry.handle);\n      if (granted) {\n        this.currentFolderHandle = entry.handle;\n      }\n    }\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle = handle;\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle }).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    if (this.currentFolderHandle) {\n      return this.readHandle(this.currentFolderHandle);\n    }\n    return [];\n  }\n\n  private async readHandle(handle: FileSystemDirectoryHandle): Promise {\n    return await getAudioFilesFromDirHandle(handle);\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const files: File[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        files.push(file);\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      files.push(...subFiles);\n    }\n  }\n  return files;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                                VisualizerComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                            NgClass\n                                FileDropOverlayComponent\n                            TimePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                isPlaylistEmpty\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                            \n                                    Async\n                                onReload\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onReload\n                        \n                    \n                \n            \n            \n                \n                        \n                    onReload()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaylistEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentPlaylist().length === 0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:154\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { ALLOWED_MIMETYPES } from './file-loader-service/file-loader.helpers';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { HotkeysService } from '../services/hotkeys/hotkeys.service';\nimport { GamepadService } from '../services/gamepad/gamepad.service';\nimport { GamepadAxes, GamepadButtons } from '../services/gamepad/gamepad.types';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { TimePipe } from './time.pipe';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { VisualizerComponent } from './visualizer/visualizer.component';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgClass } from '@angular/common';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    PlaylistComponent,\n    MatButtonModule,\n    MatIconModule,\n    CoverDisplayComponent,\n    VisualizerComponent,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatMenuModule,\n    NgClass,\n    FileDropOverlayComponent,\n    TimePipe\n  ]\n})\nexport default class PlayerComponent implements OnInit, OnDestroy {\n  playerService = inject(PlayerService);\n  private titleService = inject(TitleService);\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  private fileLoaderService = inject(FileLoaderService);\n  audioService = inject(AudioService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  async ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showPicker());\n    }\n  }\n\n  async onReload() {\n    await this.fileLoaderService.init();\n    return this.fileLoaderService.currentFolderHandle ? this.loadFiles() : this.showPicker();\n  }\n\n  readonly isPlaylistEmpty = computed(() => this.playerService.currentPlaylist().length === 0);\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  seekLeft(value: number) {\n    this.playerService.seekLeft(value + 10);\n  }\n\n  seekRight(value: number) {\n    this.playerService.seekRight(value + 10);\n  }\n\n  toggleMute() {\n    // TODO: implement\n  }\n\n  increaseVolume(value: number) {\n    this.audioService.setVolume(this.audioService.volume() + value / 100);\n  }\n\n  decreaseVolume(value: number) {\n    this.audioService.setVolume(this.audioService.volume() - value / 100);\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol  this.getVolumeIconForLevel(this.audioService.volume()));\n\n  toggleRepeat() {\n    this.playerService.toggleRepeat();\n  }\n\n  toggleShuffle() {\n    this.playerService.toggleShuffle();\n  }\n\n  formatLabel(value: number): string {\n    return formatSecondsAsClock(value, false);\n  }\n\n  async showPicker() {\n    await this.fileLoaderService.showPicker();\n    return this.loadFiles();\n  }\n\n  async loadFiles() {\n    return this.playerService.loadFiles();\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n}\n\n    \n\n    \n        \n  @if (isPlaylistEmpty()) {\n    \n       Reload last directory\n    \n  }\n\n\n\n  \n\n\n\n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n\n\n  \n    \n      \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (isPlaylistEmpty()) {           Reload last directory      }        @if (audioService.isPlaying()) {          } @else {          }                                      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseSubscribingClass\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                            \n                                destroy$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                selectNext\n                            \n                            \n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:49\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(...files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:219\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:241\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:282\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:286\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNext\n                        \n                    \n                \n            \n            \n                \nselectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:254\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \nselectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:268\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:210\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:300\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:319\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return pos !== null && pos !== undefined ? Math.floor(pos) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         BaseSubscribingClass\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseSubscribingClass:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { BaseSubscribingClass } from '@motabass/base-components/base-subscribing-component';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'any' })\nexport class PlayerService extends BaseSubscribingClass {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private loaderService = inject(LoaderService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  // TODO: Signal mit param track????\n  // readonly playingTrack = computed(() => {\n  //   const track = this.currentlyLoadedTrack();\n  //   if (track && this.audioService.isPlaying()) {\n  //     return track;\n  //   }\n  //   return;\n  // });\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  constructor() {\n    super();\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n        for (const fileHandle of launchParameters.files) {\n          const file = await fileHandle.getFile();\n          if (ALLOWED_MIMETYPES.includes(file.type)) {\n            await this.addFilesToPlaylist(file);\n          }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.original ? [{ src: track.metadata.coverUrl.original, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const files: File[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...files);\n  }\n\n  async addFilesToPlaylist(...files: File[]) {\n    if (files?.length) {\n      // let tempList: Track[] = [];\n      // let startTime = Date.now();\n\n      for (const [index, file] of files.entries()) {\n        this.loaderService.show();\n        const song = await this.createTrackFromFile(file);\n        this.loaderService.hide();\n        // avoid duplicate playlist entries\n        if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.crc === song.metadata?.crc)) {\n          this.currentPlaylist.update((playlist) => [...playlist, song]);\n        }\n\n        // // alle 2sek die Temporäre Liste in die sichtbare Playlist pushen\n        // if (Date.now() - startTime > 2000 || i === files.length - 1) {\n        //   this.currentPlaylist.update((currentList) => [...currentList, ...tempList]);\n        //   if (this.selectedTrack() === undefined && this.currentPlaylist().length > 0) {\n        //     this.selectSong(this.currentPlaylist()[0]);\n        //   }\n        //   tempList = [];\n        //   startTime = Date.now();\n        // }\n      }\n    }\n  }\n\n  private async createTrackFromFile(file: File): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.metadataService.getMetadata(file);\n    // console.timeEnd('full-metadata');\n    return {\n      file: file,\n      metadata: metadata\n    };\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== null && value !== undefined && value >= 0 && value  {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return pos !== null && pos !== undefined ? Math.floor(pos) : 0;\n  });\n\n  selectSong(song: Track) {\n    this.selectedTrack.set(song);\n  }\n\n  async playPauseTrack(track: Track) {\n    if (this.audioService.isLoading()) {\n      return;\n    }\n\n    if (this.currentlyLoadedTrack()?.metadata?.crc === track.metadata?.crc) {\n      await this.playPause();\n      return;\n    }\n    await this.playTrack(track);\n  }\n\n  async playPause() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      if (this.selectedTrack()) {\n        await this.playTrack(this.selectedTrack());\n      }\n      return;\n    }\n    if (this.audioService.isPaused()) {\n      await this.audioService.play();\n      await this.afterPlayLoaded();\n    } else {\n      this.audioService.pause();\n      await this.afterPausedOrStopped();\n    }\n  }\n\n  async stop() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      return;\n    }\n    this.audioService.stop();\n    this.currentlyLoadedTrack.set(undefined);\n    await this.afterPausedOrStopped();\n  }\n\n  async next(): Promise {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      return;\n    }\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, this.currentPlaylist().length - 1);\n      return this.playTrack(this.currentPlaylist()[randomPosition]);\n    }\n\n    const currentPosition = this.currentlyLoadedTrack()?.playlistPosition;\n    if (!currentPosition) {\n      return;\n    }\n\n    if (currentPosition  1) {\n      return this.playTrack(this.currentPlaylist()[currentPo - 2]);\n    }\n  }\n\n  selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n    const currentPo = this.selectedTrack()?.playlistPosition;\n    if (!currentPo) {\n      return;\n    }\n\n    if (currentPo  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPo - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            CdkDropList\n                            CdkDrag\n                            NgClass\n                            CdkDragPreview\n                            CdkDragHandle\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                loaderService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                songs\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            CdkDragDrop\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        songs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    for (const [index, v] of this.playerService.currentPlaylist().entries()) {\n      v.playlistPosition = index + 1;\n    }\n\n    return this.playerService.currentPlaylist().map((track, index) => ({ ...track, playlistPosition: index + 1 }));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkDrag, CdkDragDrop, CdkDragHandle, CdkDragPreview, CdkDropList, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { ChangeDetectionStrategy, Component, computed, inject, Signal } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { VisualsService } from '../visualizer/visuals/visuals.service';\nimport { LoaderService } from '../../services/loader/loader.service';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\n\n@Component({\n  selector: 'mtb-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatListModule,\n    CdkDropList,\n    CdkDrag,\n    NgClass,\n    CdkDragPreview,\n    CdkDragHandle,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe\n  ]\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  visualsService = inject(VisualsService);\n  loaderService = inject(LoaderService);\n\n  readonly songs = computed(() => {\n    for (const [index, v] of this.playerService.currentPlaylist().entries()) {\n      v.playlistPosition = index + 1;\n    }\n\n    return this.playerService.currentPlaylist().map((track, index) => ({ ...track, playlistPosition: index + 1 }));\n  });\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  drop(event: CdkDragDrop) {\n    moveItemInArray(this.songs(), event.previousIndex, event.currentIndex);\n  }\n}\n\n    \n\n    \n        \n  @for (song of songs(); track song.metadata.crc; let index = $index) {\n    @defer (on viewport) {\n      \n        \n        \n          @if (song && song.metadata && song.metadata.coverUrl) {\n            \n          }\n          @let songPlaying = isPlaying(song)();\n          @if (songPlaying && visualsService.visualMode() !== 'off') {\n            \n          }\n        \n\n        {{ song?.metadata?.title || song.file.name }}\n        {{ song?.metadata?.artist }}\n\n        @if (isActive(song)()) {\n          \n            @if (songPlaying) {\n              \n            } @else {\n              \n            }\n          \n        }\n      \n    } @placeholder {\n      \n        \n      \n    }\n  }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (song of songs(); track song.metadata.crc; let index = $index) {    @defer (on viewport) {                                @if (song && song.metadata && song.metadata.coverUrl) {                      }          @let songPlaying = isPlaying(song)();          @if (songPlaying && visualsService.visualMode() !== \\'off\\') {                      }                {{ song?.metadata?.title || song.file.name }}        {{ song?.metadata?.artist }}        @if (isActive(song)()) {                      @if (songPlaying) {                          } @else {                          }                  }          } @placeholder {                        }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverPicture.html":{"url":"interfaces/RemoteCoverPicture.html","title":"interface - RemoteCoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            original\n                                        \n                                \n                                \n                                        \n                                            thumb\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        original\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumb:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent]\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'mtb-shell',\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss',\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatButtonModule, MatProgressSpinnerModule, RouterOutlet]\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  private router = inject(Router);\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n      \n         Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n      @if (loaderService.isLoading()) {\n        \n      }\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                       Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  templateUrl: './storage-settings.component.html',\n  imports: [MatCardModule, MatButtonModule]\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { TinyColor } from '@thebespokepixel/es-tinycolor';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Color } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private primaryColor = FALLBACK_PRIMARY_COLOR;\n\n  private accentColor = FALLBACK_ACCENT_COLOR;\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? true);\n\n  primaryColorPalette: Color[] = [];\n  accentColorPalette: Color[] = [];\n\n  initializeTheme() {\n    if (globalThis.matchMedia('(prefers-color-scheme: dark)').matches) {\n      this.darkMode.set(true);\n    }\n    this.setOverlayClass();\n    this.setPrimaryColor(this.primaryColor);\n    this.setAccentColor(this.accentColor);\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n    this.localStorageService.store('darkMode', darkMode);\n    this.setOverlayClass();\n  }\n\n  setColors(colors: ColorConfig) {\n    this.setPrimaryColor(colors.mainColor);\n    this.setAccentColor(colors.peakColor);\n  }\n\n  private setPrimaryColor(color?: string) {\n    this.primaryColor = color || FALLBACK_PRIMARY_COLOR;\n    this.primaryColorPalette = this.computeColors(this.primaryColor);\n\n    for (const clr of this.primaryColorPalette) {\n      const key1 = `--theme-primary-${clr.name}`;\n      const value1 = clr.hex;\n      const key2 = `--theme-primary-contrast-${clr.name}`;\n      const value2 = clr.darkContrast ? 'rgba(0,0,0, 0.87)' : 'white';\n      document.documentElement.style.setProperty(key1, value1);\n      document.documentElement.style.setProperty(key2, value2);\n    }\n\n    this.meta.addTag({ name: 'theme-color', content: this.primaryColor }, true);\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor });\n  }\n\n  private setAccentColor(color?: string) {\n    this.accentColor = color || FALLBACK_ACCENT_COLOR;\n    this.accentColorPalette = this.computeColors(this.accentColor);\n\n    for (const clr of this.accentColorPalette) {\n      const key1 = `--theme-accent-${clr.name}`;\n      const value1 = clr.hex;\n      const key2 = `--theme-accent-contrast-${clr.name}`;\n      const value2 = clr.darkContrast ? 'rgba(0,0,0, 0.87)' : 'white';\n      document.documentElement.style.setProperty(key1, value1);\n      document.documentElement.style.setProperty(key2, value2);\n\n      if (clr.name === '500') {\n        const key3 = `--theme-accent-light`;\n        const value3 = new TinyColor(clr.hex).setAlpha(0.54).toRgbString();\n        document.documentElement.style.setProperty(key3, value3);\n      }\n    }\n  }\n\n  private setOverlayClass() {\n    if (this.darkMode()) {\n      document.body.classList.add('dark-theme');\n      document.body.classList.remove('light-theme');\n    } else {\n      document.body.classList.add('light-theme');\n      document.body.classList.remove('dark-theme');\n    }\n  }\n\n  private computeColors(hex: string): Color[] {\n    return [\n      this.getColorObject(new TinyColor(hex).lighten(52), '50'),\n      this.getColorObject(new TinyColor(hex).lighten(37), '100'),\n      this.getColorObject(new TinyColor(hex).lighten(26), '200'),\n      this.getColorObject(new TinyColor(hex).lighten(12), '300'),\n      this.getColorObject(new TinyColor(hex).lighten(6), '400'),\n      this.getColorObject(new TinyColor(hex), '500'),\n      this.getColorObject(new TinyColor(hex).darken(6), '600'),\n      this.getColorObject(new TinyColor(hex).darken(12), '700'),\n      this.getColorObject(new TinyColor(hex).darken(18), '800'),\n      this.getColorObject(new TinyColor(hex).darken(24), '900'),\n      this.getColorObject(new TinyColor(hex).lighten(50).saturate(30), 'a100'),\n      this.getColorObject(new TinyColor(hex).lighten(30).saturate(30), 'a200'),\n      this.getColorObject(new TinyColor(hex).lighten(10).saturate(15), 'a400'),\n      this.getColorObject(new TinyColor(hex).lighten(5).saturate(5), 'a700')\n    ];\n  }\n\n  private getColorObject(value: TinyColor, name: string): Color {\n    const color = new TinyColor(value);\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name: name,\n      hex: color.toHexString(false),\n      darkContrast: color.getBrightness() > lightnessLimit\n      // darkContrast: c.isLight()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  templateUrl: './theme-settings.component.html',\n  imports: [MatCardModule, MatCheckboxModule]\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true,\n  standalone: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playlistPosition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlistPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlistPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  metadata: TrackMetadata;\n  playlistPosition?: number;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  duration?: number;\n  format?: IFormat;\n  coverUrl?: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors?: CoverColorPalette;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            crc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  metadata: TrackMetadata;\n  playlistPosition?: number;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  duration?: number;\n  format?: IFormat;\n  coverUrl?: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors?: CoverColorPalette;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseSubscribingClass\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         BaseSubscribingClass\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseSubscribingClass:6\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseSubscribingClass } from '@motabass/base-components/base-subscribing-component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService extends BaseSubscribingClass {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n\n  constructor() {\n    super();\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule]\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.analyser.disconnect();\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:49\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, inject, input, NgZone, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]',\n  standalone: true\n})\nexport class VisualsDirective implements OnDestroy, OnChanges {\n  private zone = inject(NgZone);\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private analyserData!: Uint8Array;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.stopVisualizer();\n\n    // give canvas size for correct dpi\n    const rect = this.canvas.getBoundingClientRect();\n\n    this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n    switch (this.mode()) {\n      case 'bars': {\n        this.visualizeFrequencyBars(false);\n        break;\n      }\n      case 'osc': {\n        this.visualizeOscilloscope(false);\n        break;\n      }\n      case 'circular-osc': {\n        this.visualizeOscilloscope(true);\n        break;\n      }\n      case 'circular-bars': {\n        this.visualizeFrequencyBars(true);\n        break;\n      }\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    this.zone.runOutsideAngular(() => {\n      if (!this.analyserData || this.analyserData.length !== this.analyserNode.frequencyBinCount) {\n        this.analyserData = new Uint8Array(this.analyserNode.frequencyBinCount);\n      }\n\n      const draw = () => {\n        this.analyserNode[getDataMethod](this.analyserData);\n        // Use transferable objects to avoid copying large arrays\n        this.visualizerWorker.postMessage({ analyserData: this.analyserData } as VisualsWorkerMessage, [this.analyserData.buffer]);\n        // Create a new array since the previous one was transferred\n        this.analyserData = new Uint8Array(this.analyserNode.frequencyBinCount);\n\n        this.animationFrameRef = requestAnimationFrame(draw);\n      };\n      draw();\n    });\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\nv20.0.0\n\nfeat: enhance ESLint configuration with Angular rules and TypeScript support 2b942c4\nfeat: update ESLint configuration with TypeScript and SonarJS support, add custom rule overrides ef11066\nfeat: eslint fixes 8055339\n\nv19.5.4\n\n8 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.33.0 #539\nRelease 19.5.4 86a63af\nchore: update dependencies and add eslint packages c9dcf09\nfeat:  nearly complete signal refactoring also fixing long standing bugs f3a3520\n\nv19.5.3\n\n2 March 2025\n\n\nfeat: use @let syntax in templates, better VisualizerOptions types b7bb801\nRelease 19.5.3 eac8dd6\n\nv19.5.1\n\n2 March 2025\n\n\nRelease 19.5.1 8ebff84\nfeat: add circular visualization modes for frequency bars and oscilloscope 4e27dea\nfix: make gamepad and wakelock services optional to improve compatibility bb8466d\n\nv19.5.0\n\n2 March 2025\n\n\nRelease 19.5.0 3f2c562\nfix: fix file drop overlay not working as expected 94b7001\nfix: add postcss-html dependency to package.json and package-lock.json 85d2a14\n\nv19.4.15\n\n2 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.32.0 #532\nchore: update dependencies to latest versions b0d0fe4\nRelease 19.4.15 a2b1db1\nfix: update HTML components to self-closing tags 7785053\n\nv19.4.14\n\n27 February 2025\n\n\nchore: update Angular and related dependencies to version 19.2.x d8a2bf9\nRelease 19.4.14 0c889a3\n\nv19.4.13\n\n24 February 2025\n\n\nchore(deps): update actions/upload-artifact action to v4 #527\nRelease 19.4.13 9fb4192\nfix: eslint unicorn autofixes f154aed\nfeat: enhance visuals worker by optimizing data structures and pre-calculating arrays fee270f\n\nv19.4.12\n\n24 February 2025\n\n\nRelease 19.4.12 6c63788\nrefactor: remove unused dependencies 12a71dd\n\nv19.4.11\n\n23 February 2025\n\n\nRelease 19.4.11 d505863\nfix: update ESLint configuration inputs and production exclusions 6bfb6ba\n\nv19.4.10\n\n23 February 2025\n\n\nRelease 19.4.10 17e4083\n\nv19.4.9\n\n23 February 2025\n\n\nRelease 19.4.9 cf13446\nrefactor: us prive functions instead of modules c31aaa6\n\nv19.4.8\n\n23 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.31.2 #522\nrefactor: update ESLint configuration to use ES module syntax and cleanup deps 4dbf4b8\nRelease 19.4.8 0f45127\nchore: update project configuration and add dotenv-cli dependency 063d395\n\nv19.4.7\n\n23 February 2025\n\n\nRelease 19.4.7 4d9ca69\nchore: update HTML templates and ESLint configuration for consistency 33bb6c8\n\nv19.4.6\n\n23 February 2025\n\n\nchore(deps): update Angular and ESLint dependencies to latest versions 00d5b5e\nRelease 19.4.6 ab5a0f8\n\nv19.4.5\n\n4 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.3 #511\nchore(deps): update @swc/core, @types/node, and @typescript-eslint packages to latest versions 4df45ed\nRelease 19.4.5 f52095f\n\nv19.4.4\n\n2 February 2025\n\n\nchore: deps 76ace70\nRelease 19.4.4 072caca\n\nv19.4.3\n\n27 January 2025\n\n\nchore: deps a04aa39\nRelease 19.4.3 e844d5d\n\nv19.4.2\n\n24 January 2025\n\n\nchore: deps d50fcd7\nRelease 19.4.2 2e2cf66\n\nv19.4.1\n\n21 January 2025\n\n\nchore: deps c3062ed\nRelease 19.4.1 e96ef56\nchore: mise 7b8cdeb\n\nv19.4.0\n\n17 January 2025\n\n\nchore: deps 37fa04d\nRelease 19.4.0 155e1fd\nchore: readme, mise, deps 726da93\n\nv19.3.0\n\n14 January 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.1 #483\nchore: update to latest node-vibrant f306ca1\nRelease 19.3.0 ca87d69\n\nv19.2.10\n\n11 January 2025\n\n\nchore: deps a280f97\nRelease 19.2.10 15dded8\n\nv19.2.9\n\n3 January 2025\n\n\nRelease 19.2.9 bd67275\n\nv19.2.8\n\n14 December 2024\n\n\nRelease 19.2.8 af0ef42\n\nv19.2.7\n\n14 December 2024\n\n\nRelease 19.2.7 7d9d809\n\nv19.2.6\n\n11 December 2024\n\n\nchore: deps c042ae8\nchore: updated config to latest nx defaults 0a9aedc\nchore: updated config to latest nx defaults a555517\n\nv19.2.5\n\n7 December 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.28.0 #473\nRevert \"fix: disable npm caching\" f908dd2\nfix: disable npm caching 1a33b93\nRelease 19.2.5 4a42a18\n\nv19.2.4\n\n7 December 2024\n\n\nchore: deps 1a65661\nRelease 19.2.4 a19a09f\n\nv19.2.3\n\n21 November 2024\n\n\nRelease 19.2.3 dc45fe1\nfeat: migrate to application executor 0325a08\n\nv19.2.2\n\n21 November 2024\n\n\nfix: stylelint fixes 2500235\nRelease 19.2.2 b416bff\n\nv19.2.1\n\n21 November 2024\n\n\nRelease 19.2.1 8cab1e2\nfix: migrate jest and eslint to inferred plugins ee8b31b\n\nv19.2.0\n\n21 November 2024\n\n\nchore: input signal migration f8cbc65\nRelease 19.2.0 c363f4e\nfix: pass sampleRate 56a3899\n\nv19.1.1\n\n21 November 2024\n\n\nchore(deps): update angular monorepo to v19 #466\nchore(deps): update w9jds/firebase-action action to v13.26.0 #465\nchore(deps): update angularmaterial monorepo to v19 #467\nchore(config): migrate config renovate.json #468\nchore: use ng-packgr-lite builds, fix jest-preset-angular config b599685\nfix: revert ng-packgr temporarily bb34f11\nRelease 19.1.1 ada6807\n\nv19.1.0\n\n21 November 2024\n\n\nchore: ng 19 0ba1f5d\nRelease 19.1.0 d2765b8\nchore: remove console time 7b38580\n\nv19.0.10\n\n9 November 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.24.2 #460\nfix(deps): update dependency tslib to v2.8.1 #457\nRelease 19.0.10 1333d05\n\nv19.0.9\n\n9 November 2024\n\n\nchore: updates e42b61f\nRelease 19.0.9 fc998b4\n\nv19.0.8\n\n15 October 2024\n\n\nRelease 19.0.8 e4b565b\nfix: do webpack build again 10bf971\n\nv19.0.7\n\n15 October 2024\n\n\nRelease 19.0.7 308bd9f\nfix: use browser-esbuild executor fe4ebfa\n\nv19.0.6\n\n15 October 2024\n\n\nRelease 19.0.6 953bf76\nfix: use browser-esbuild executor a12f9c3\n\nv19.0.5\n\n15 October 2024\n\n\nfix(deps): update dependency tslib to v2.7.0 #450\nchore(deps): update dependency ubuntu to v24 #455\nchore(deps): update w9jds/firebase-action action to v13.22.0 #448\nRelease 19.0.5 592ac3b\n\nv19.0.4\n\n15 October 2024\n\n\nRelease 19.0.4 27acba5\nchore: eslint update (config todo) 97ccbb6\n\nv19.0.3\n\n15 October 2024\n\n\nchore: migrate to inject() 43a40a4\nfix: removed unused angular imports a0e7ce7\nRelease 19.0.3 972b1ee\n\nv19.0.2\n\n15 October 2024\n\n\nRelease 19.0.2 b8ad144\n\nv19.0.1\n\n15 October 2024\n\n\nRelease 19.0.1 7528cd4\n\nv19.0.0\n\n15 October 2024\n\n\nRelease 19.0.0 2bb5430\n\nv18.2.7\n\n15 October 2024\n\n\nchore(deps): updates ad57b9c\nRelease 18.2.7 8448134\nchange to application executor e2e1eb4\n\nv18.2.6\n\n26 August 2024\n\n\ndeps 0174ddf\nRelease 18.2.6 f0ae911\n\nv18.2.5\n\n15 August 2024\n\n\nsignals for coverdisplay, add item to playlist on by one d489b64\nRelease 18.2.5 4a66bde\n\nv18.2.4\n\n15 August 2024\n\n\nRelease 18.2.4 bbda480\nfix: big layout 8d61f2e\n\nv18.2.3\n\n15 August 2024\n\n\nchore: nx update ec1f94a\nRelease 18.2.3 72fa061\n\nv18.2.2\n\n15 August 2024\n\n\nanalyze and report esbuild bundles d597302\nRelease 18.2.2 681d4cd\nanalyze and report esbuild bundles 8626722\n\nv18.2.0\n\n15 August 2024\n\n\nfix test css class, select first in playlist after load when none selected 7a838a9\nRelease 18.2.0 38d27f1\n\nv18.1.1\n\n15 August 2024\n\n\nfeat: better axis handling for gamepad 4d47689\nmore signalös 019de24\nRelease 18.1.1 0f8e394\n\nv18.1.0\n\n15 August 2024\n\n\nRelease 18.1.0 ff778a5\nfeat: removed mobx, use signals for many things 5824006\n\nv18.0.1\n\n15 August 2024\n\n\nchore(deps): update, import types with import type e252172\nchore(deps): update e7aa58d\nRelease 18.0.1 7560dfa\n\nv18.0.0\n\n10 August 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.15.1 #438\nRelease 18.0.0 0858a77\nfix(eslint): older unused imports plugin cdb5380\n\nv17.0.18\n\n10 August 2024\n\n\nchore(deps): update 6878f22\nRelease 17.0.17 027ad79\nRelease 17.0.18 6756668\n\nv17.0.17\n\n10 August 2024\n\n\nUpdate w9jds/firebase-action action to v13.14.2 #431\nchore(deps): update 592cb7a\nRelease 17.0.17 2db5dc7\n\nv17.0.16\n\n29 July 2024\n\n\nmusic-metadata 10 7f90220\nRelease 17.0.16 80d5e14\nremoved webpack 908f395\n\nv17.0.15\n\n29 July 2024\n\n\ndeps ffe5da9\ndeps 469a890\nRelease 17.0.15 80553e8\n\nv17.0.14\n\n11 July 2024\n\n\ndeps 389407a\nRelease 17.0.14 30fec73\n\nv17.0.13\n\n7 July 2024\n\n\nUpdate dependency @typescript-eslint/utils to v8.0.0-alpha.40 #369\nUpdate w9jds/firebase-action action to v13.13.0 #423\ndeps 2389739\nRelease 17.0.13 4040b59\ndeps a0c15a4\n\nv17.0.12\n\n4 July 2024\n\n\ndeps 892689d\nRelease 17.0.12 af8a6b4\n\nv17.0.11\n\n23 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.4 #419\ndeps babdb9f\nRelease 17.0.11 5273759\n\nv17.0.10\n\n23 June 2024\n\n\ndeps 05a441e\nRelease 17.0.10 3e7b9a4\n\nv17.0.9\n\n12 June 2024\n\n\nRelease 17.0.9 a948ad5\ndeps, webstorage update 0e6195d\n\nv17.0.8\n\n12 June 2024\n\n\ndeps, webstorage update 1e660c9\nRelease 17.0.8 64a34dc\n\nv17.0.7\n\n9 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.2 #409\nUpdate dependency tslib to v2.6.3 #411\nRelease 17.0.7 2bb0e78\n\nv17.0.6\n\n9 June 2024\n\n\nnx + deps a1da736\nRelease 17.0.6 41e632f\n\nv17.0.5\n\n25 May 2024\n\n\nUpdate angularmaterial monorepo to v18 #402\nRelease 17.0.4 549bfa1\nRelease 17.0.5 ea932ef\n\nv17.0.4\n\n25 May 2024\n\n\nUpdate angular monorepo to v18 #401\nUpdate w9jds/firebase-action action to v13.10.1 #395\nRelease 17.0.4 f591692\nswitched to node 22 4f70846\n\nv17.0.3\n\n25 May 2024\n\n\nRelease 17.0.3 cb19d50\nenabled eventCoalescing e6fc6eb\n\nv17.0.2\n\n25 May 2024\n\n\nRelease 17.0.2 96bcdfc\nfixed theme 3ce805f\n\nv17.0.1\n\n25 May 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.5 #390\nng 18 7fcd244\nfixed eslint 2346f13\nnx update 4164d59\n\nv16.0.6\n\n28 April 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.2 #381\ndeps 308b3e5\nRelease 16.0.6 3233ed1\naudit fix 2f67e34\n\nv16.0.5\n\n14 April 2024\n\n\ndeps 84ac04c\nRelease 16.0.5 1a30a33\n\nv16.0.4\n\n7 April 2024\n\n\nRelease 16.0.4 5bab2a7\n\nv16.0.3\n\n16 March 2024\n\n\nRelease 16.0.3 0338bd7\nnew browserlist 013e987\nonly include Buffer in Node Polfills d7b3ea2\n\nv16.0.2\n\n16 March 2024\n\n\nRelease 16.0.2 0629b20\nfixed nx cloud token 870e50b\n\nv16.0.1\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.5.1 #372\nRelease 16.0.1 fe15d24\nfixed nx cloud token 6d2a8fe\n\nv16.0.0\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.3.1 #368\ndeps updated 11ae344\nnx update 0b2a071\nangular update c35bc38\n\nv15.1.17\n\n24 February 2024\n\n\nRelease 15.1.17 f18fa1f\n\nv15.1.16\n\n24 February 2024\n\n\nRelease 15.1.16 d2e1df8\n\nv15.1.14\n\n10 February 2024\n\n\nUpdate nrwl/nx-set-shas action to v4 #362\nUpdate w9jds/firebase-action action to v13.2.1 #358\nRelease 15.1.14 09eba6b\nRevert \"try nx agents\" 90e9f96\ntry nx agents 7362da7\n\nv15.1.13\n\n10 February 2024\n\n\ndeps cace929\nRelease 15.1.13 04dca08\nremoved last modules 0486e25\n\nv15.1.12\n\n4 February 2024\n\n\nnx update ccbf388\nRelease 15.1.12 7a8645a\n\nv15.1.11\n\n28 January 2024\n\n\nUpdate w9jds/firebase-action action to v13.1.0 #338\nUpdate actions/cache action to v4 #343\nRelease 15.1.11 1e340e1\n\nv15.1.10\n\n28 January 2024\n\n\ndeps 64d30e1\nRelease 15.1.10 a9a8e68\n\nv15.1.9\n\n20 January 2024\n\n\nRelease 15.1.9 8596088\n\nv15.1.8\n\n10 January 2024\n\n\nstylelint fixes ac02523\nRelease 15.1.8 4c8c0ad\nlint fixes 764711a\n\nv15.1.7\n\n9 January 2024\n\n\ndeps 362d9db\nRelease 15.1.7 92d89c3\n\nv15.1.6\n\n28 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #312\nRelease 15.1.6 339bd87\n\nv15.1.5\n\n28 December 2023\n\n\ndeps 4ef0700\nRelease 15.1.5 8ee0628\n\nv15.1.4\n\n15 December 2023\n\n\ndeps 998ad7c\nRelease 15.1.4 5c1346d\n\nv15.1.3\n\n10 December 2023\n\n\nRelease 15.1.3 d0b8d34\ndeps 6966d17\nnx update 678aef6\n\nv15.1.2\n\n8 December 2023\n\n\nfix seeking with slider, @switch statt @if 9934470\nRelease 15.1.2 1ebb626\n\nv15.1.1\n\n8 December 2023\n\n\nRelease 15.1.1 586ef29\nfix deploy f36895a\n\nv15.1.0\n\n8 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #310\noptimizations and typing f5c6154\noptimizations 05ddceb\noptimized icon set converter 6bd60c5\n\nv15.0.9\n\n8 December 2023\n\n\ndeps 02d4bfb\ntsconfig refactoring 7445539\nRelease 15.0.9 58fb13b\n\nv15.0.8\n\n30 November 2023\n\n\ntsconfig refactoring 275e54d\nRelease 15.0.8 f3351c2\n\nv15.0.7\n\n30 November 2023\n\n\nUpdate w9jds/firebase-action action to v12.9.0 #301\nRelease 15.0.7 7e45969\n\nv15.0.6\n\n30 November 2023\n\n\nRelease 15.0.6 063950a\ndeps 7522583\n\nv15.0.5\n\n13 November 2023\n\n\ndeps, prettier cbc6e41\nRelease 15.0.5 3bccffb\n\nv15.0.4\n\n10 November 2023\n\n\nRelease 15.0.4 1c4c67e\n\nv15.0.3\n\n10 November 2023\n\n\nRelease 15.0.3 90df676\n\nv15.0.2\n\n10 November 2023\n\n\nRelease 15.0.2 29878bc\neslint flat config 8c297a1\n\nv15.0.1\n\n10 November 2023\n\n\nNEW control flow syntax 84e91e3\nRelease 15.0.1 9dfd762\nstyleUrl instead of urls aefd739\n\nv15.0.0\n\n9 November 2023\n\n\nUpdate angular monorepo to v17 (major) #288\nUpdate angularmaterial monorepo to v17 (major) #289\nUpdate w9jds/firebase-action action to v12.8.0 #286\nUpdate actions/setup-node action to v4 #287\nRelease 15.0.0 7f1e3c1\nUpdate angular monorepo to v17 43d9b1f\nnodejs 20 builds 6f6ac17\n\nv14.1.23\n\n9 November 2023\n\n\nnx update a358906\nRelease 14.1.23 55f3319\nnx update dbc354f\n\nv14.1.20\n\n14 October 2023\n\n\nRelease 14.1.20 8d072f1\n\nv14.1.19\n\n14 October 2023\n\n\nUpdate dependency @types/node to v20.8.6 #242\nUpdate w9jds/firebase-action action to v12.6.2 #272\nRelease 14.1.19 314f02a\nRelease 14.1.18 7cf10f9\n\nv14.1.18\n\n14 October 2023\n\n\nRelease 14.1.18 a8bb04b\n\nv14.1.17\n\n14 October 2023\n\n\nRelease 14.1.17 7a66d5a\n\nv14.1.16\n\n14 October 2023\n\n\nRelease 14.1.16 4ec2e90\n\nv14.1.15\n\n7 October 2023\n\n\nRelease 14.1.15 3f73f6e\n\nv14.1.14\n\n7 October 2023\n\n\nRelease 14.1.14 db2122c\n\nv14.1.13\n\n7 October 2023\n\n\nRelease 14.1.13 a3ae7df\n\nv14.1.12\n\n7 October 2023\n\n\nRelease 14.1.12 0d0dfcb\n\nv14.1.11\n\n7 October 2023\n\n\nRelease 14.1.11 5aecee8\n\nv14.1.10\n\n7 October 2023\n\n\nRelease 14.1.10 d200e57\n\nv14.1.9\n\n23 September 2023\n\n\nRelease 14.1.9 29f1cbe\nupdated from deprecated SwUpdate props bef3e3e\n\nv14.1.8\n\n23 September 2023\n\n\nupdated from deprecated SwUpdate props 2f592f3\nRelease 14.1.8 07d6959\n\nv14.1.7\n\n23 September 2023\n\n\ndeps 1ffd91e\nRelease 14.1.7 6fc1434\n\nv14.1.6\n\n23 September 2023\n\n\nRelease 14.1.6 8b184a4\n\nv14.1.5\n\n21 September 2023\n\n\nRelease 14.1.5 4695772\nfix build fc633d2\n\nv14.1.4\n\n7 September 2023\n\n\nBump protobufjs and google-gax #261\nUpdate dependency tslib to v2.6.2 #262\nUpdate actions/checkout action to v4 #264\nRelease 14.1.4 a6386d2\nfix build b7303ed\n\nv14.1.3\n\n7 September 2023\n\n\nBump word-wrap from 1.2.3 to 1.2.4 #250\nUpdate dependency tslib to v2.6.1 #251\nRelease 14.1.3 9ce5e31\n\nv14.1.2\n\n3 August 2023\n\n\nRelease 14.1.2 8f60273\n\nv14.1.1\n\n7 July 2023\n\n\nUpdate dependency tslib to v2.6.0 #241\nBump @grpc/grpc-js and google-gax #240\nUpdate w9jds/firebase-action action to v12 #235\nRelease 14.1.1 f78467f\nprettier 3ff6d19\n\nv14.1.0\n\n7 July 2023\n\n\nprettier 3 + precommit hooks cd5831f\nRelease 14.1.0 d612735\nprettier 08b1238\n\nv14.0.13\n\n17 June 2023\n\n\nRelease 14.0.13 a10893b\nremoved unused type polyfills af2926f\n\nv14.0.12\n\n17 June 2023\n\n\nRelease 14.0.12 ea688e0\n\nv14.0.11\n\n17 June 2023\n\n\nRelease 14.0.11 32c3f4d\n\nv14.0.10\n\n17 June 2023\n\n\ndeps 8c90a58\nRelease 14.0.10 1d0b823\n\nv14.0.9\n\n8 June 2023\n\n\ndeps fdad632\nRelease 14.0.9 331bb8f\n\nv14.0.8\n\n3 June 2023\n\n\nBump vm2 from 3.9.17 to 3.9.19 #220\nUpdate dependency tslib to v2.5.3 #223\nRelease 14.0.8 8b9fdf5\n\nv14.0.7\n\n3 June 2023\n\n\nuse run-many for tests 97d68d0\nRelease 14.0.7 c82e02b\n\nv14.0.6\n\n3 June 2023\n\n\ndeps 752aa76\nRelease 14.0.6 f038069\n\nv14.0.5\n\n13 May 2023\n\n\ndeps 28cff25\nRelease 14.0.5 20cf16a\n\nv14.0.4\n\n6 May 2023\n\n\nremoved unused js file 5ffbd62\nRelease 14.0.4 7fb56e0\n\nv14.0.3\n\n6 May 2023\n\n\nUpdate dependency jest-preset-angular to v13.1.0 #208\nUpdate dependency @types/node to v18.16.5 #206\nRelease 14.0.3 cdf04e9\ne2e fixed 2708806\n\nv14.0.2\n\n6 May 2023\n\n\nUpdate w9jds/firebase-action action to v11.30.1 #207\ne2e fixed and removed separate project 74e7c83\nRelease 14.0.1 f386a36\nRelease 14.0.2 1081f8e\n\nv14.0.1\n\n6 May 2023\n\n\ne2e fixed and removed separate project d0cd94f\nRelease 14.0.1 bb4e0ce\n\nv14.0.0\n\n6 May 2023\n\n\nnx 16, angular 16, deps 826cbe5\nRelease 14.0.0 ec067ee\nmusic metadata removed 2eb6cae\n\nv13.3.5\n\n13 April 2023\n\n\nBump vm2 #200\nUpdate dependency music-metadata to v7.13.4 #195\nRelease 13.3.5 845189d\n\nv13.3.4\n\n13 April 2023\n\n\nRelease 13.3.4 eab1d35\n\nv13.3.3\n\n10 April 2023\n\n\nRelease 13.3.3 0129566\n\nv13.3.2\n\n25 March 2023\n\n\nRelease 13.3.2 5a92c07\n\nv13.3.1\n\n25 March 2023\n\n\nRelease 13.3.1 42a58d9\n\nv13.3.0\n\n18 March 2023\n\n\nUpdate w9jds/firebase-action action to v11.24.1 #181\ndeps + sidenav fixes e11e3bd\nRelease 13.3.0 3acc7bf\n\nv13.2.6\n\n15 March 2023\n\n\ndeps 0dc096d\nRelease 13.2.6 6d67484\n\nv13.2.5\n\n5 March 2023\n\n\nstandalone bootstrap 6aed158\nRelease 13.2.5 4c272db\n\nv13.2.4\n\n5 March 2023\n\n\nBump http-cache-semantics from 4.1.0 to 4.1.1 #170\nBump cacheable-request from 10.2.5 to 10.2.7 #171\nUpdate dependency tslib to v2.5.0 #164\nRelease 13.2.4 392b41d\ndeps a4b6dab\n\nv13.2.3\n\n5 March 2023\n\n\nRelease 13.2.3 f54702d\n\nv13.2.2\n\n5 March 2023\n\n\nRelease 13.2.2 d9677d0\n\nv13.2.1\n\n22 February 2023\n\n\ndeps 1730f16\nRelease 13.2.1 ba634aa\nuse nx for all 51a51dd\n\nv13.2.0\n\n22 February 2023\n\n\nUpdate w9jds/firebase-action action to v11.22.0 #172\nRelease 13.2.0 4035819\nstandalone migration steps 1 and 2 32e3ad6\nstandalone migration steps 1 and 2 a40c9e8\n\nv13.1.12\n\n22 February 2023\n\n\nRelease 13.1.12 53818e8\n\nv13.1.11\n\n28 January 2023\n\n\ndeps b4d909a\nRelease 13.1.11 d8bf0e7\n\nv13.1.10\n\n22 January 2023\n\n\nRelease 13.1.10 1c7fa4e\n\nv13.1.9\n\n20 January 2023\n\n\ndeps 4781958\nRelease 13.1.9 505e77f\n\nv13.1.8\n\n15 January 2023\n\n\nRelease 13.1.8 580c58d\n\nv13.1.7\n\n15 January 2023\n\n\nUpdate dependency music-metadata to v7.13.3 #150\ndeps 8b6bfeb\nRelease 13.1.7 d516e97\n\nv13.1.6\n\n13 January 2023\n\n\nRelease 13.1.6 166c79d\ndeps 8ec046f\n\nv13.1.5\n\n7 January 2023\n\n\nlayout fixes f3f4ae7\nRelease 13.1.5 eaa27a6\n\nv13.1.4\n\n7 January 2023\n\n\nRelease 13.1.4 49d8293\nfixed e2e 33d73d9\n\nv13.1.3\n\n7 January 2023\n\n\nUpdate dependency firebase-tools to v11.20.0 #147\nUpdate dependency postcss to v8.4.21 #146\nUpdate dependency eslint-config-prettier to v8.6.0 #139\nUpdate angularmaterial monorepo to v15.0.4 #144\nUpdate dependency husky to v8.0.3 #140\nUpdate w9jds/firebase-action action to v11.18.0 #131\nUpdate dependency cypress to v12.3.0 #141\nUpdate nrwl monorepo to v15.4.4 #135\nUpdate dependency eslint to v8.31.0 #138\nUpdate typescript-eslint monorepo to v5.48.0 #58\nUpdate dependency music-metadata to v7.13.1 #142\nRelease 13.1.3 5302fb4\ndeps 801cd46\nmdc migration, vertical sliders, icons size directive removed ffa9bb5\n\nv13.1.2\n\n30 December 2022\n\n\nRelease 13.1.2 c339811\n\nv13.1.1\n\n23 December 2022\n\n\nvisualizers plug their own analyser cea2824\nunsubscribe and disconnect analysers 6a8d3be\nRelease 13.1.1 72575f6\n\nv13.1.0\n\n23 December 2022\n\n\nRelease 13.1.0 1989419\nrenamed song to track, us playState obeservable for better input and CD handling 47b6776\n\nv13.0.20\n\n23 December 2022\n\n\ntransparency control for visuals 7445cc4\nRelease 13.0.20 62cfee7\n\nv13.0.19\n\n23 December 2022\n\n\nstandalone components 620afb8\nno max db slider, mindb range changed, better default f7913c1\nRelease 13.0.19 9280e3a\n\nv13.0.18\n\n22 December 2022\n\n\nRelease 13.0.18 4c16c1e\n\nv13.0.16\n\n22 December 2022\n\n\nRelease 13.0.16 77707fb\n\nv13.0.13\n\n22 December 2022\n\n\nRelease 13.0.13 6f12a37\n\nv13.0.12\n\n19 December 2022\n\n\nremoved d3, use bark scale for bar spectrogram 2bcfefb\nRelease 13.0.12 e336db1\n\nv13.0.11\n\n18 December 2022\n\n\nmerged readme 3f449ec\nRelease 13.0.11 47e3527\nbadges 5f1d097\n\nv13.0.10\n\n17 December 2022\n\n\nRelease 13.0.10 62c64c5\nmoved style to component 006b52c\ntodo 28548eb\n\nv13.0.9\n\n17 December 2022\n\n\nfixed audioContext resume, added gain to eq cb797bc\nRelease 13.0.9 8c56320\n\nv13.0.8\n\n17 December 2022\n\n\nRelease 13.0.8 6f1cdb4\n\nv13.0.7\n\n17 December 2022\n\n\nRelease 13.0.7 d895f0f\n\nv13.0.6\n\n17 December 2022\n\n\nRelease 13.0.6 17266a3\n\nv13.0.5\n\n17 December 2022\n\n\nUpdate angularmaterial monorepo to v15 (major) #108\nRelease 13.0.5 ddab2f3\nremoved uneeded ts-ignores a1a074f\nUpdate angularmaterial monorepo to v15 a4de6d4\n\nv13.0.3\n\n17 December 2022\n\n\nRelease 13.0.3 7f8ad27\nuse config file without .json endings bfd4685\n\nv13.0.2\n\n17 December 2022\n\n\nrefactored type imports and fixed offscreencanvas types 067bbea\nRelease 13.0.2 292ed5a\ncustom typings moved to folders c3208e7\n\nv13.0.1\n\n17 December 2022\n\n\nRelease 13.0.1 667c54e\nfixed debug version bf7b3a9\nfixed debug version 6cee32d\n\nv13.0.0\n\n16 December 2022\n\n\nRelease 13.0.0 b3905a0\nfixed playlist bulk loading 834f706\n\nv12.0.16\n\n16 December 2022\n\n\nRelease 12.0.16 1de2a3c\nfixed playlist bulk loading 8e7ecec\n\nv12.0.15\n\n16 December 2022\n\n\nRelease 12.0.15 5a7054c\nfixed test 9eb089c\n\nv12.0.14\n\n16 December 2022\n\n\nabstacted all audio stuff in audio service 403737f\neq auf mobile funkt auf mobile, flex layout refactoring eccaa4a\nreplaced angular-flex-layout with css 03a0491\n\nv12.0.13\n\n15 December 2022\n\n\nmaterial 15 migration dc55360\nRelease 12.0.13 37f76dc\nsimpler lib 86be7eb\n\nv12.0.12\n\n15 December 2022\n\n\nlibrary ohne filter 8dfc611\nRelease 12.0.12 6d26668\n\nv12.0.11\n\n14 December 2022\n\n\nRelease 12.0.11 635e855\ndeps, eslintrc, vibrant-wasm entfernt 431a9ad\n\nv12.0.10\n\n12 December 2022\n\n\nRelease 12.0.10 f954f07\nappend audioElement to document ce588f9\n\nv12.0.9\n\n12 December 2022\n\n\nseperated audio part into AudioService 0f8326e\nsimplified init of audio 869dddb\nRelease 12.0.9 17a1677\n\nv12.0.8\n\n11 December 2022\n\n\nfixed smaller things, no prdefinded samplerate 986dd30\nRelease 12.0.8 6b9ff38\ntodo 2bdc500\n\nv12.0.7\n\n11 December 2022\n\n\nRelease 12.0.7 a0aa269\nmoved init of seekto handler to constructor 2434ec6\n\nv12.0.6\n\n11 December 2022\n\n\nRelease 12.0.6 14768e6\n\nv12.0.5\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 8738efc\nRelease 12.0.4 fee5161\nRelease 12.0.5 23061dd\n\nv12.0.4\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 81bb449\nRelease 12.0.4 025a430\nUpdate TODO.md 009b48d\n\nv12.0.3\n\n11 December 2022\n\n\nRelease 12.0.3 c398655\n\nv12.0.2\n\n11 December 2022\n\n\nRelease 12.0.2 2bfabd0\n\nv12.0.1\n\n11 December 2022\n\n\nmoved id3tags extraction to worker 9b11a20\nRelease 12.0.1 6c27523\nUpdate devcontainer.json b286be9\n\nv12.0.0\n\n10 December 2022\n\n\nRelease 12.0.0 6ee2324\nadded deps vibrant-wasm and custom webpack config to ttry threads.js 8337321\ncustom webpack config for threads.js workers (still not working, disabled) 55e56b8\n\nv11.5.14\n\n7 December 2022\n\n\nstylelint fixes and config 52d642b\nRelease 11.5.14 b5dfb18\n\nv11.5.13\n\n7 December 2022\n\n\nRelease 11.5.13 a867afe\nstylelint fixes and config 122856c\n\nv11.5.12\n\n7 December 2022\n\n\nRelease 11.5.12 c4668f1\nmusic meatadata, file-drop-overlay as standalone component 2e5b003\nprovide all services in root ca80a43\n\nv11.5.11\n\n7 December 2022\n\n\nRelease 11.5.11 930dc28\n\nv11.5.10\n\n7 December 2022\n\n\ndeps a552ea9\nRelease 11.5.10 d29b113\n\nv11.5.9\n\n6 December 2022\n\n\nRelease 11.5.9 18a45bd\ntags + eslint rule 864d7e1\n\nv11.5.8\n\n6 December 2022\n\n\ndep graph in gh pages, release-it config erweitert um neu generierte dateien mit zu committen 73bd100\nlibs cleanup 59f4ac4\nRelease 11.5.8 24e4c9a\n\nv11.5.7\n\n6 December 2022\n\n\nlibs cleanup 60dbedc\nRelease 11.5.7 2d68f3b\n\nv11.5.6\n\n6 December 2022\n\n\nremoved all dummy tests 7defe9b\nRelease 11.5.6 d1b4f51\nrun tests in github actions 14148e0\n\nv11.5.5\n\n6 December 2022\n\n\nRelease 11.5.5 73b9b59\n\nv11.5.4\n\n6 December 2022\n\n\ncompodoc reenabled 7c00473\nsvgo updated 19bf065\nRelease 11.5.4 8df3910\n\nv11.5.3\n\n6 December 2022\n\n\ncompodoc reenabled 540fdd8\nRelease 11.5.3 7c5bbe5\n\nv11.5.2\n\n5 December 2022\n\n\ncompodoc reenabled 2ce3664\ncompodoc reenabled b7be438\ncompodoc reenabled 29f2b37\n\nv11.5.1\n\n5 December 2022\n\n\nautofix unused imports, removed tslint 71bd586\nautofix unused imports 6d6f310\nRelease 11.5.1 77091b9\n\nv11.5.0\n\n5 December 2022\n\n\nbetter thum quality, bigger coverart in playlist, tooltips, better button color handling bffc736\nRelease 11.5.0 670b3af\n\nv11.4.11\n\n5 December 2022\n\n\nRelease 11.4.11 e615145\n\nv11.4.10\n\n5 December 2022\n\n\nreinstall 418b524\nRelease 11.4.10 eaf46cf\n\nv11.4.9\n\n5 December 2022\n\n\nRelease 11.4.9 3e58c71\n\nv11.4.8\n\n5 December 2022\n\n\nRelease 11.4.8 a409033\nservices in app integriert 1857720\n\nv11.4.7\n\n5 December 2022\n\n\nremoved storybook 9d81efd\nservices in app integriert ce621ee\nmoved visuals lib to app e992cb4\n\nv11.4.6\n\n5 December 2022\n\n\nRelease 11.4.6 f9c93ce\n\nv11.4.5\n\n5 December 2022\n\n\nRelease 11.4.5 839a546\n\nv11.4.3\n\n5 December 2022\n\n\nRelease 11.4.3 50b7005\n\nv11.4.2\n\n5 December 2022\n\n\nRelease 11.4.2 0674adf\n\nv11.4.1\n\n5 December 2022\n\n\nRelease 11.4.1 7ccbc95\n\nv11.4.0\n\n5 December 2022\n\n\nrefactored libs to app, fixed time slider 133059f\nRelease 11.4.0 68d9939\n\nv11.3.1\n\n4 December 2022\n\n\nRelease 11.3.1 7493e98\nprevent lib crossing 3fbfb97\n\nv11.3.0\n\n4 December 2022\n\n\nRelease 11.3.0 ecf45e6\nbetter color usage 965f5d8\nbetter color usage f209ddb\n\nv11.2.0\n\n4 December 2022\n\n\ndeps, better default colors 569161e\nRelease 11.2.0 efc9aad\n\nv11.1.2\n\n4 December 2022\n\n\nRelease 11.1.2 8d47dd4\nfixed visualizer color updating too late e99d4f2\n\nv11.1.1\n\n4 December 2022\n\n\nRelease 11.1.1 287138c\n\nv11.1.0\n\n4 December 2022\n\n\noptimized musicbrainz requests, fixed embedded cover handling 7bebf2d\nRelease 11.1.0 707a0cb\n\nv11.0.0\n\n4 December 2022\n\n\nfixed several metadata related problems, setting for use of embedded tag covers 1745489\nRelease 11.0.0 6c219df\ntodo chromaprint-wasm 2c0f612\n\nv10.3.2\n\n1 December 2022\n\n\nRelease 10.3.2 6fdfa5a\n\nv10.3.1\n\n1 December 2022\n\n\nRelease 10.3.1 05b4ddd\nupdated firebase hosting config and actions for deployment f201082\nupdated firebase hosting config and actions for deployment 0c91659\n\nv10.3.0\n\n1 December 2022\n\n\nRelease 10.3.0 50dbff9\nupdated firebase hosting config and actions for deployment 1455d32\n\nv10.2.0\n\n30 November 2022\n\n\nRelease 10.2.0 7593825\nupdated firebase hosting config and actions for deployment b80e2ea\n\nv10.1.0\n\n30 November 2022\n\n\nupdated firebase hosting config and actions for deployment 02bde5d\nRelease 10.1.0 ffc8723\nupdated github actions 86bda79\n\nv10.0.4\n\n30 November 2022\n\n\ncypress migration to 11 16d8b1b\nRelease 10.0.4 6bf609d\nupdate nodejs to 18 for github actions 16925cf\n\nv10.0.3\n\n30 November 2022\n\n\ngot rid of variables.scss ad7e0f1\nRelease 10.0.3 63f69d0\n\nv10.0.2\n\n30 November 2022\n\n\nRelease 10.0.2 2a99961\n\nv10.0.1\n\n30 November 2022\n\n\nRelease 10.0.1 a9a9c0b\n\nv10.0.0\n\n30 November 2022\n\n\nng15 521e049\nng 15 cleanup, mobx update 0f6c72b\nmaterial 14 1e96bc3\n\nv9.2.4\n\n19 March 2022\n\n\nupdated deps eaeb47a\nRelease 9.2.4 61721ca\njb env 4bdbceb\n\nv9.2.3\n\n19 December 2021\n\n\nupdates 5061051\nRelease 9.2.3 a7f82ab\n\nv9.2.2\n\n9 December 2021\n\n\nupdates 2427749\nRelease 9.2.2 934d323\n\nv9.2.1\n\n20 November 2021\n\n\nRelease 9.2.1 60d5b05\n\nv9.2.0\n\n20 November 2021\n\n\nUpdate dependency @angular/cdk to v12.2.13 #21\nPin dependencies #20\nUpdate dependency ng-packagr to v12.2.5 #17\nUpdate dependency @angular/material to v12.2.13 #15\nUpdate angular monorepo to v12.2.13 #13\nConfigure Renovate #11\nnx 13.2 02e548c\nRelease 9.2.0 22ec300\nmain branch 63600c3\n\nv9.1.3\n\n16 November 2021\n\n\nnx update, nx-stylelint, nx-compodoc f06b116\nRelease 9.1.3 de5bda9\n\nv9.1.2\n\n20 October 2021\n\n\nupdates 8268a8b\nRelease 9.1.2 ab89f63\ntodos e486f52\n\nv9.1.1\n\n4 October 2021\n\n\nprevent duplicates in playlist, drag handle on avatar b6729e6\nRelease 9.1.1 eff95d0\n\nv9.1.0\n\n4 October 2021\n\n\nfile handling api with origin trial d3bca3a\nRelease 9.1.0 6cab435\n\nv9.0.11\n\n2 October 2021\n\n\nupdates 397399b\nRelease 9.0.11 96dbdf6\n\nv9.0.10\n\n5 September 2021\n\n\nRelease 9.0.10 112db1a\n\nv9.0.9\n\n5 September 2021\n\n\nRelease 9.0.9 9458a12\n\nv9.0.8\n\n19 August 2021\n\n\nRelease 9.0.8 cd620b6\n\nv9.0.7\n\n19 August 2021\n\n\nRelease 9.0.7 600f7e6\n\nv9.0.6\n\n19 August 2021\n\n\nRelease 9.0.6 c08196a\ndeps 6b5e613\n\nv9.0.5\n\n19 August 2021\n\n\nRelease 9.0.5 c51af5f\n\nv9.0.4\n\n19 August 2021\n\n\ndeps 43463ab\nRelease 9.0.4 cf00688\n\nv9.0.3\n\n24 July 2021\n\n\ndeps, nx-cloud ada5e83\nRelease 9.0.3 bb4a1a8\n\nv9.0.2\n\n24 July 2021\n\n\ndeps, nx-cloud 5cbeb5b\nRelease 9.0.2 49a76e8\n\nv9.0.1\n\n24 July 2021\n\n\ndeps b99bf0c\nRelease 9.0.1 cbab637\n\nv9.0.0\n\n9 July 2021\n\n\nfixed release-it 8d3ed72\nRelease 9.0.0 5467c6f\n\nv8.1.10\n\n9 July 2021\n\n\nRelease 8.1.10 be90110\n\nv8.1.9\n\n9 July 2021\n\n\nfixed release-it a90639a\nRelease 8.1.9 6d52ad4\n\nv8.1.8\n\n9 July 2021\n\n\nts 4.4, media session types intergrated in ts, deps fd45c70\nRelease 8.1.8 ff7cdad\n\nv8.1.7\n\n8 July 2021\n\n\nRelease 8.1.7 0bde446\n\nv8.1.6\n\n8 July 2021\n\n\ndeps 128a3c3\nRelease 8.1.6 d64a3c3\n\nv8.1.5\n\n2 July 2021\n\n\nRelease 8.1.5 ef22e4a\nlayout fixed dbb788d\n\nv8.1.4\n\n2 July 2021\n\n\nrefactored scss to @use, fixed build 6b0ec83\nRelease 8.1.4 ebab8da\n\nv8.1.3\n\n2 July 2021\n\n\nRelease 8.1.3 0843a41\n\nv8.1.2\n\n2 July 2021\n\n\nfixed types 07de52a\nRelease 8.1.2 00b47ed\n\nv8.1.1\n\n2 July 2021\n\n\nmigrated to eslint and per project config 4feefcd\nRelease 8.1.1 7762874\n\nv8.1.0\n\n26 June 2021\n\n\nupdates e2a0794\nRelease 8.1.0 86a18bb\n\nv8.0.1\n\n26 May 2021\n\n\nRelease 8.0.1 52bf10d\n\nv8.0.0\n\n26 May 2021\n\n\nRelease 7.1.1 c78b2bf\nRelease 8.0.0 2f0d555\n\nv7.2.0\n\n26 May 2021\n\n\nRelease 7.2.0 73ed2ca\nupdates 774ffed\n\nv7.1.1\n\n26 May 2021\n\n\nupdates 2a427ed\nRelease 7.1.1 b73ce66\n\nv7.1.0\n\n9 May 2021\n\n\n30fps visualizer, sortable playlist cd2a934\nRelease 7.1.0 8377116\n\nv7.0.6\n\n9 May 2021\n\n\nRelease 7.0.6 84a2466\nbitrate rounding cbef1c8\n\nv7.0.5\n\n9 May 2021\n\n\nRelease 7.0.5 9c56a21\n\nv7.0.4\n\n9 May 2021\n\n\nbetter title display 51154fe\nRelease 7.0.4 72dafd7\n\nv7.0.3\n\n9 May 2021\n\n\ndeps e36192c\nRelease 7.0.3 7553170\ntodos 51e219a\n\nv7.0.2\n\n9 May 2021\n\n\nfixed navigation 9767ad0\nRelease 7.0.2 59f1df2\n\nv7.0.1\n\n9 May 2021\n\n\nmetadata settings and ui cleanup 3797092\nRelease 6.7.3 6841a21\nRelease 7.0.0 0d76c85\n\nv7.0.0\n\n9 May 2021\n\n\nmetadata settings and ui cleanup b2b5088\nRelease 7.0.0 8c47814\n\nv6.7.4\n\n7 May 2021\n\n\nRelease 6.7.4 2ab7cc1\ncypress studio activated 4eac2a7\ncypress studio activated 6bc0773\n\nv6.7.3\n\n7 May 2021\n\n\nRelease 6.7.3 6841a21\nignore iml e5de213\n\nv6.7.2\n\n5 May 2021\n\n\ngithub actions with node_modules cache 4f91524\nRelease 6.7.2 07ec810\n\nv6.7.1\n\n5 May 2021\n\n\ncypress updated and window.showOpenFilePicker overwritten 32570e0\nRelease 6.7.1 fd18536\n\nv6.7.0\n\n4 May 2021\n\n\ndev deps dc41223\nRelease 6.7.0 f34b7cf\n\nv6.6.7\n\n25 April 2021\n\n\nfixed cypress tests and mobx 00399df\nRelease 6.6.7 bd0ddc3\n\nv6.6.6\n\n25 April 2021\n\n\nRelease 6.6.6 d690072\n\nv6.6.5\n\n25 April 2021\n\n\nRelease 6.6.5 ea63800\n\nv6.6.4\n\n25 April 2021\n\n\ndeps and husky updated 120476b\nRelease 6.6.4 20110c3\n\nv6.6.3\n\n20 April 2021\n\n\nRelease 6.6.3 ee83304\nreadme badges 09ae300\n\nv6.6.2\n\n15 April 2021\n\n\nRelease 6.6.2 e933c61\n\nv6.6.1\n\n15 April 2021\n\n\nRelease 6.6.1 221781e\n\nv6.6.0\n\n14 April 2021\n\n\nRelease 6.6.0 d254989\n\nv6.5.9\n\n11 March 2021\n\n\ndependencies 2119d47\nRelease 6.5.9 c64cd79\n\nv6.5.8\n\n4 March 2021\n\n\nRelease 6.5.8 f401a49\n\nv6.5.7\n\n4 March 2021\n\n\nRelease 6.5.7 49b1735\n\nv6.5.6\n\n4 February 2021\n\n\nRelease 6.5.6 045b043\n\nv6.5.5\n\n1 February 2021\n\n\nRelease 6.5.5 f4324a4\n\nv6.5.4\n\n29 January 2021\n\n\nfixed test 0038838\nRelease 6.5.4 8c75c5f\n\nv6.5.3\n\n28 January 2021\n\n\nRelease 6.5.3 13bf8e2\n\nv6.5.2\n\n21 January 2021\n\n\nRelease 6.5.2 1c876b6\nfixed build d2f46f8\n\nv6.5.1\n\n21 January 2021\n\n\nupdates 120f02a\nRelease 6.5.1 46c60ce\n\nv6.5.0\n\n14 January 2021\n\n\nRelease 6.5.0 e4ec6c1\n\nv6.4.1\n\n14 January 2021\n\n\nchangelog d629a20\nRelease 6.4.1 3d1f63c\n\nv6.4.0\n\n14 January 2021\n\n\nremoved token 51304c2\nRelease 6.4.0 756dc90\n\nv6.3.1\n\n14 January 2021\n\n\nRelease 6.3.1 e727ac0\n\nv6.3.0\n\n14 January 2021\n\n\nrelease-it 5321e86\nRelease 6.3.0 db48fe2\n\nv6.2.6\n\n14 January 2021\n\n\nrelease v6.2.6 ae202ad\n\nv6.2.5\n\n14 January 2021\n\n\nrelease v6.2.5 c20efb2\n\nv6.2.4\n\n14 January 2021\n\n\nci cd 8da74bb\nrelease v6.2.4 f12cad8\n\nv6.2.3\n\n12 January 2021\n\n\nrelease v6.2.3 78fcf7a\n\nv6.2.2\n\n20 December 2020\n\n\nnrwl 11 b2ed530\nrelease v6.2.2 73050ff\n\nv6.2.1\n\n15 December 2020\n\n\nnrwl 11 f1f709b\nrelease v6.2.1 5101ea6\nnrwl 11 8a371a0\n\nv6.2.0\n\n12 December 2020\n\n\nrelease v6.2.0 ef650c5\n\nv6.1.1\n\n8 December 2020\n\n\nrelease v6.1.1 e6660e2\n\nv6.1.0\n\n3 December 2020\n\n\nrelease v6.1.0 f8b7451\n\nv6.0.1\n\n21 November 2020\n\n\nrelease v6.0.1 c0d5ae4\n\nv6.0.0\n\n21 November 2020\n\n\nng11 0960760\nprettier ab98677\nrelease v6.0.0 79d861d\n\nv5.2.12\n\n28 October 2020\n\n\nrelease v5.2.12 40cc765\n\nv5.2.11\n\n28 October 2020\n\n\nrelease v5.2.11 c0c9413\n\nv5.2.10\n\n28 October 2020\n\n\nrelease v5.2.10 f4928f5\n\nv5.2.9\n\n28 October 2020\n\n\nrelease v5.2.9 04b4812\n\nv5.2.8\n\n28 October 2020\n\n\nrelease v5.2.8 4c8f851\n\nv5.2.7\n\n28 October 2020\n\n\nrelease v5.2.7 b65204b\n\nv5.2.6\n\n28 October 2020\n\n\nrelease v5.2.6 f24dcc7\n\nv5.2.5\n\n28 October 2020\n\n\nrelease v5.2.5 6c6f88c\nprettier b20fd36\n\nv5.2.4\n\n28 October 2020\n\n\nMediaSession service 5742e12\nrelease v5.2.4 5059439\n\nv5.2.3\n\n27 October 2020\n\n\nrelease v5.2.3 d4abfdc\n\nv5.2.2\n\n27 October 2020\n\n\nrelease v5.2.2 478c88a\n\nv5.2.1\n\n26 October 2020\n\n\nrelease v5.2.1 e218808\n\nv5.2.0\n\n23 October 2020\n\n\nrelease v5.2.0 62f7474\nreload button be57fa9\n\nv5.1.0\n\n23 October 2020\n\n\nsimplified dir handle save, fixed test f278040\nrelease v5.1.0 9767a1a\n\nv5.0.0\n\n23 October 2020\n\n\nsave latest directory handle to indexeddb 597ee4f\nrelease v5.0.0 5a61397\n\nv4.7.0\n\n23 October 2020\n\n\nrelease v4.7.0 c86decf\n\nv4.6.0\n\n23 October 2020\n\n\ntypes added for mediasession and file-system bfd28ec\nrelease v4.6.0 e4d8e7c\n\nv4.5.0\n\n23 October 2020\n\n\nfix media reporting 220c7f4\nrelease v4.5.0 337a109\n\nv4.4.0\n\n23 October 2020\n\n\nupdates und native file stable changes 939f6b8\nrelease v4.4.0 77c544b\n\nv4.3.1\n\n12 October 2020\n\n\nrelease v4.3.1 3a9067b\n\nv4.3.0\n\n12 October 2020\n\n\nrelease v4.3.0 7def043\nanalyzer report 4a4b1c4\n\nv4.2.0\n\n12 October 2020\n\n\nrelease v4.2.0 866de3e\n\nv4.1.0\n\n6 October 2020\n\n\nrelease v4.1.0 98a793b\n\nv4.0.0\n\n6 October 2020\n\n\nrelease v4.0.0 d38c534\n\nv3.11.0\n\n6 October 2020\n\n\nrelease v3.11.0 2a4184c\n\nv3.10.0\n\n6 October 2020\n\n\nrelease v3.10.0 d562368\n\nv3.9.0\n\n6 October 2020\n\n\ntoggle to disable extraction of color from cover art a84cb97\nrelease v3.9.0 748a302\n\nv3.8.1\n\n6 October 2020\n\n\nrelease v3.8.1 bda90a4\n\nv3.8.0\n\n5 October 2020\n\n\nrelease v3.8.0 c73a2ce\n\nv3.7.0\n\n20 September 2020\n\n\nrelease v3.7.0 61eb69b\n\nv3.6.0\n\n9 September 2020\n\n\nrelease v3.6.0 22da5c7\n\nv3.5.1\n\n2 September 2020\n\n\nrelease v3.5.1 70990de\n\nv3.5.0\n\n2 September 2020\n\n\nrelease v3.5.0 3ccea4c\n\nv3.4.1\n\n30 August 2020\n\n\nrelease v3.4.1 5ed4032\n\nv3.4.0\n\n30 August 2020\n\n\noptimize loading of service worker and caching 5cec62d\nrelease v3.4.0 1385586\n\nv3.3.0\n\n30 August 2020\n\n\noptimize bundles 6cd086c\nrelease v3.3.0 27fdc57\noptimize loading of service worker f1cad4d\n\nv3.2.1\n\n23 August 2020\n\n\nrelease v3.2.1 bb4ded8\nicons compressed c550911\n\nv3.2.0\n\n23 August 2020\n\n\nstart page a7cf166\nrelease v3.2.0 14a5bd3\nlang and description in webmanifest 1e4fd87\n\nv3.1.2\n\n23 August 2020\n\n\nrelease v3.1.2 69ed6f4\n\nv3.1.1\n\n23 August 2020\n\n\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 800fdae\nrelease v3.1.1 7440340\n\nv3.1.0\n\n23 August 2020\n\n\ndeps 3597f8b\nnx 10.1 20050dc\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 0cec276\n\nv3.0.9\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest 8d5f783\nrelease v3.0.9 f3a09c7\n\nv3.0.8\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest b708169\nrelease v3.0.8 7a1bbe5\n\nv3.0.7\n\n21 August 2020\n\n\nrelease v3.0.7 1a92061\n\nv3.0.6\n\n21 August 2020\n\n\nrelease v3.0.6 f31886e\n\nv3.0.5\n\n21 August 2020\n\n\nrelease v3.0.5 e7c9ada\n\nv3.0.4\n\n21 August 2020\n\n\nrelease v3.0.4 20d1b8b\n\nv3.0.3\n\n21 August 2020\n\n\nrelease v3.0.2 ea1fc76\nrelease v3.0.3 f4f50ef\n\nv3.0.2\n\n21 August 2020\n\n\nrelease v3.0.2 bc4e4dc\n\nv3.0.1\n\n21 August 2020\n\n\nrelease v3.0.1 339d07b\n\nv3.0.0\n\n21 August 2020\n\n\nrelease v3.0.0 57f591d\nrelease v2.0.0 6a6ec18\nrelease v1.19.0 d6210df\n\nv2.0.2\n\n21 August 2020\n\n\nrelease v2.0.2 7b491de\n\nv2.0.1\n\n21 August 2020\n\n\nrelease v2.0.1 b820bf4\n\nv2.0.0\n\n21 August 2020\n\n\nreadded polyfills, prefetch, manifest.json, splashscreen e102482\nrelease v2.0.0 c3d7490\n\nv1.18.0\n\n21 August 2020\n\n\nrelease v1.18.0 5aed853\n\nv1.17.0\n\n21 August 2020\n\n\nrelease v1.17.0 901f502\n\nv1.16.0\n\n21 August 2020\n\n\nrelease v1.16.0 5af2ad7\n\nv1.15.0\n\n21 August 2020\n\n\nrelease v1.15.0 abccf03\n\nv1.14.0\n\n21 August 2020\n\n\nrelease v1.14.0 339af30\n\nv1.13.0\n\n21 August 2020\n\n\nrelease v1.13.0 fb05c12\n\nv1.12.0\n\n21 August 2020\n\n\nrelease v1.12.0 67a17ee\n\nv1.11.12\n\n21 August 2020\n\n\nrelease v1.11.12 bba9cb0\n\nv1.11.11\n\n21 August 2020\n\n\nrelease v1.11.11 ba2a28a\n\nv1.11.10\n\n21 August 2020\n\n\nrelease v1.11.10 b7e8f76\n\nv1.11.9\n\n21 August 2020\n\n\nrelease v1.11.9 52afb10\n\nv1.11.8\n\n21 August 2020\n\n\nrelease v1.11.8 e6d7fd2\n\nv1.11.7\n\n21 August 2020\n\n\nrelease v1.11.7 c2c0b8f\n\nv1.11.6\n\n21 August 2020\n\n\nrelease v1.11.6 91d4a54\n\nv1.11.5\n\n21 August 2020\n\n\nrelease v1.11.5 822ff08\n\nv1.11.4\n\n21 August 2020\n\n\nrelease v1.11.4 8c9c5c3\n\nv1.11.3\n\n21 August 2020\n\n\nrelease v1.11.3 8aabc76\n\nv1.11.2\n\n21 August 2020\n\n\nrelease v1.11.2 71e1d6c\n\nv1.11.1\n\n21 August 2020\n\n\nrelease v1.11.1 ed57248\nremove commonjs whitelist entry ad6497d\n\nv1.11.0\n\n19 August 2020\n\n\ndeps and polyfills removed 3e8e5d0\nrelease v1.11.0 289ec3d\ndisable zone for requestAnimationFrame 422fc8e\n\nv1.10.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\nrelease v1.10.0 f9c114e\nrelease v1.9.1 6b2d8b8\n\nv1.9.1\n\n17 August 2020\n\n\nrelease v1.9.0 68e8dc6\nrelease v1.9.1 d5cd7ea\n\nv1.9.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\n\nv1.8.0\n\n17 August 2020\n\n\nrelease v1.8.0 7484f35\nCreate LICENSE f69d368\nRename LICENSE to LICENSE.md 3773370\n\nv1.7.3\n\n30 July 2020\n\n\ndeps a00ccd1\nrelease v1.7.3 47842e1\nnode 14 build f5ee0e6\n\nv1.7.2\n\n24 July 2020\n\n\nrelease v1.7.2 101bbd0\n\nv1.7.1\n\n24 July 2020\n\n\nrelease v1.7.1 28465d6\n\nv1.7.0\n\n24 July 2020\n\n\nrelease v1.7.0 b5f68a1\n\nv1.6.4\n\n24 July 2020\n\n\nrelease v1.6.4 646c494\n\nv1.6.3\n\n24 July 2020\n\n\nrelease v1.6.3 17ed8a6\n\nv1.6.2\n\n18 July 2020\n\n\ndeps 667f875\nRevert \"support for seeking to position on android notification\" f2cfbcc\nrelease v1.6.2 85eb0ba\n\nv1.6.1\n\n10 July 2020\n\n\ndeps 228ee85\nrelease v1.6.1 949055a\n\nv1.6.0\n\n3 July 2020\n\n\nsupport for seeking to position on android notification 9fa1a37\nrelease v1.6.0 4f1794f\n\nv1.5.0\n\n3 July 2020\n\n\ndeps und position reporting to browser 7a6f294\nrelease v1.5.0 f076ced\n\nv1.4.1\n\n26 June 2020\n\n\nangular.json schema und allowedCommonJsDeps 654bac2\nrelease v1.4.1 250d7f9\n\nv1.4.0\n\n26 June 2020\n\n\ndeps fix 4e72fcd\nng 10 update b6bd950\nadded missing decorator 8515368\n\nv1.3.0\n\n4 June 2020\n\n\nnew icons for visualization modes a8073a9\nrelease v1.3.0 b241b46\n\nv1.2.2\n\n28 May 2020\n\n\ndeps 87adc2c\nrelease v1.2.2 abc0b07\n\nv1.2.1\n\n20 May 2020\n\n\ndeps be025cd\nrelease v1.2.1 0b30a9f\n\nv1.2.0\n\n10 May 2020\n\n\nname changes, native file service refactored 170ea47\nrelease v1.2.0 cb01a92\nname changes, native file service refactored 8264f64\n\nv1.1.0\n\n8 May 2020\n\n\nrelease v1.1.0 a2a4811\nopen folders recursive 1c9fedf\n\nv1.0.5\n\n8 May 2020\n\n\nrelease v1.0.5 1604161\n\nv1.0.4\n\n5 May 2020\n\n\nfix: package.json, package-lock.json & .snyk to reduce vulnerabilities #2\nrelease v1.0.4 8e2ff5a\n\nv1.0.3\n\n2 May 2020\n\n\nrelease v1.0.3 8e36da3\n\nv1.0.2\n\n2 May 2020\n\n\nrelease v1.0.2 6926167\n\nv1.0.1\n\n2 May 2020\n\n\nrelease v1.0.1 194199c\n\nv1.0.0\n\n2 May 2020\n\n\nremoved electron, added compodoc 22afab3\nrelease v1.0.0 18cab80\nUpdate README.md 0e060af\n\nv0.29.0\n\n25 April 2020\n\n\nrelease v0.29.0 669facb\n\nv0.28.0\n\n25 April 2020\n\n\ndeps 9d2ef7e\nrelease v0.28.0 eaf70a8\n\nv0.25.0\n\n15 April 2020\n\n\nrelease v0.25.0 0581767\n\nv0.24.0\n\n15 April 2020\n\n\nrelease v0.24.0 a457b9c\ndeps linting formating b04ce8b\nUpdate NOTES.md 0903cd2\n\nv0.23.0\n\n4 April 2020\n\n\nci d954540\nrelease v0.23.0 95902bb\nci 53a8631\n\nv0.22.0\n\n4 April 2020\n\n\nrelease v0.22.0 f0f7618\n\nv0.21.0\n\n31 March 2020\n\n\ndependencies e34b732\nreadme e7032e1\nfile extensions list 53749c8\n\nv0.20.0\n\n30 March 2020\n\n\nrelease v0.20.0 572a9f8\n\nv0.19.0\n\n30 March 2020\n\n\nrelease v0.19.0 72075fe\nscreen wakelock when playing, navigation fixed especially for mobile ae93b7a\norigin trials for native file system and wakelock api a5849e4\n\nv0.18.0\n\n29 March 2020\n\n\nrelease v0.18.0 fefaba0\nprevent browser history 097fe6b\n\nv0.17.0\n\n29 March 2020\n\n\nprevent browser history 80b42ce\nrelease v0.17.0 4e9a327\n\nv0.16.0\n\n29 March 2020\n\n\ndeps f1b02b7\nrelease v0.16.0 5fe0756\n\nv0.15.0\n\n29 March 2020\n\n\ndeps 092dc60\nnx tags 6782ecd\nrelease v0.15.0 0cabcad\n\nv0.14.0\n\n24 March 2020\n\n\nrelease v0.14.0 dd93cb1\n\nv0.13.0\n\n24 March 2020\n\n\nrelease v0.13.0 162acda\n\nv0.12.0\n\n24 March 2020\n\n\nrelease v0.12.0 79fee74\n\nv0.11.0\n\n24 March 2020\n\n\nrelease v0.11.0 828148a\n\nv0.10.0\n\n24 March 2020\n\n\nrelease v0.10.0 35a78e4\n\nv0.9.0\n\n24 March 2020\n\n\nrelease v0.9.0 2011e46\n\nv0.8.0\n\n24 March 2020\n\n\nrelease v0.8.0 02c06cb\n\nv0.7.0\n\n24 March 2020\n\n\nrelease v0.7.0 75fc12c\n\nv0.6.0\n\n24 March 2020\n\n\nrelease v0.6.0 184a834\n\nv0.5.0\n\n24 March 2020\n\n\nrelease v0.5.0 ab311db\n\nv0.4.0\n\n24 March 2020\n\n\nrelease v0.4.0 42f56c1\nfixed visuals cefa1f1\nplay rewrite and project preparations 1098d6a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @allex/crc32 : ^1.0.4\n        \n            @angular/animations : 19.2.1\n        \n            @angular/cdk : 19.2.2\n        \n            @angular/common : 19.2.1\n        \n            @angular/compiler : 19.2.1\n        \n            @angular/core : 19.2.1\n        \n            @angular/forms : 19.2.1\n        \n            @angular/material : 19.2.2\n        \n            @angular/platform-browser : 19.2.1\n        \n            @angular/platform-browser-dynamic : 19.2.1\n        \n            @angular/router : 19.2.1\n        \n            @angular/service-worker : 19.2.1\n        \n            @thebespokepixel/es-tinycolor : ^3.1.0\n        \n            date-fns : ^4.1.0\n        \n            lucene-escape-query : ^1.0.1\n        \n            music-metadata : 11.0.0\n        \n            ngx-date-fns : 12.0.0\n        \n            ngx-indexed-db : 19.3.3\n        \n            ngx-pipes : 3.2.2\n        \n            ngx-webstorage : 19.0.1\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            spark-md5 : ^3.0.2\n        \n            tslib : 2.8.1\n        \n            zone.js : 0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../helpers-time.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/helpers-time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    35 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.0.0\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : MIT\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nuse webworker for node-vibrant\nAudio-File explorer + Suche\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \"60\" | \"170\" | \"310\" | \"600\" | \"1000\" | \"3000\" | \"6000\" | \"12000\" | \"14000\" | \"16000\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../app.config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../audio.service.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'metadataCache',\n  version: 2,\n  objectStoresMeta: [\n    {\n      store: 'metatags',\n      storeConfig: { keyPath: 'crc', autoIncrement: false },\n      storeSchema: [\n        { name: 'crc', keypath: 'crc', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'dirHandle',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/audio.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FrequencyBand[]\n\n                    \n                \n                \n                    \n                        Default value : [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/base-components-base-subscribing-component.html":{"url":"additional-documentation/base-components-base-subscribing-component.html","title":"additional-page - base-components-base-subscribing-component","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbase-components-base-subscribing-component\nThis library was generated with Nx.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
