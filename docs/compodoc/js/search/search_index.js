var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.096,1,2.827]],["body/interfaces/ActionCache.html",[0,0.17,1,4.35,2,1.077,3,0.237,4,0.237,5,0.145,6,3.429,7,0.365,8,0.536,9,5.335,10,1.585,11,0.558,12,0.011,13,0.405,14,5.024,15,3.895,16,1.468,17,5.072,18,2.102,19,0.708,20,3.429,21,1.24,22,1.746,23,4.777,24,3.429,25,2.851,26,3.641,27,3.641,28,3.429,29,3.089,30,3.641,31,3.429,32,3.429,33,3.429,34,3.247,35,3.247,36,4.941,37,3.089,38,3.641,39,1.862,40,3.641,41,2.756,42,3.641,43,3.058,44,3.641,45,3.578,46,3.641,47,3.247,48,3.641,49,3.247,50,3.641,51,3.429,52,3.641,53,3.429,54,3.641,55,3.089,56,3.641,57,3.429,58,3.641,59,2.947,60,3.641,61,3.247,62,3.641,63,3.247,64,3.641,65,3.429,66,3.641,67,3.429,68,3.641,69,3.429,70,3.247,71,3.641,72,3.641,73,3.641,74,3.641,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.096,77,1.397]],["body/interfaces/Album.html",[0,0.064,2,0.589,3,0.129,4,0.129,5,0.176,7,0.129,8,0.352,10,1.196,11,0.372,12,0.011,13,0.21,16,0.803,19,1.064,21,0.678,39,1.221,75,0.005,76,0.005,77,2.415,78,2.539,79,3.735,80,1.333,81,3.272,82,2.022,83,0.707,84,0.975,85,3.565,86,0.541,87,3.029,88,2.262,89,0.388,90,1.777,91,2.081,92,1.69,93,1.48,94,4.089,95,3.255,96,1.69,97,3.861,98,1.777,99,2.852,100,1.876,101,1.23,102,0.984,103,3.506,104,3.861,105,3.861,106,3.24,107,1.992,108,2.346,109,1.777,110,3.506,111,1.48,112,3.506,113,1.319,114,3.506,115,3.506,116,3.506,117,2.306,118,3.506,119,2.131,120,1.48,121,3.24,122,2.131,123,1.32,124,1.876,125,2.569,126,1.992,127,3.506,128,2.131,129,3.861,130,3.861,131,3.861,132,3.861,133,3.861,134,2.539,135,1.079,136,2.539,137,1.319,138,2.539,139,1.079,140,0.363,141,1.114,142,1.189,143,1.084,144,1.876,145,1.876,146,2.306,147,1.992,148,1.69,149,1.938,150,3.861,151,2.539,152,2.539,153,1.768,154,3.861,155,2.539,156,2.539,157,1.647,158,2.539,159,2.539,160,2.539,161,2.539,162,2.539,163,2.539,164,3.451,165,2.539,166,2.306,167,2.539,168,6.332,169,5.218,170,2.539,171,2.539,172,2.539,173,3.124,174,1.693,175,2.539,176,4.241,177,2.539,178,2.539,179,3.861,180,5.218,181,3.861,182,4.671,183,2.452,184,2.306,185,3.24,186,5.097,187,2.539,188,1.992,189,3.861,190,2.539,191,2.539,192,2.539,193,2.539,194,2.539,195,2.539,196,2.539,197,5.579,198,2.539,199,2.306,200,2.346,201,1.496,202,2.539,203,4.671,204,2.306,205,1.543,206,4.671,207,2.539,208,2.539,209,4.671,210,2.539,211,2.539,212,1.369,213,3.861,214,2.539,215,2.511,216,2.539,217,3.861,218,3.861,219,2.539,220,2.539,221,2.539,222,2.539,223,2.539,224,2.539,225,2.306,226,1.69,227,1.543,228,2.539,229,2.539,230,2.539,231,2.223,232,1.992,233,1.079,234,2.539,235,2.724,236,2.539,237,2.539,238,2.539,239,2.539,240,2.539,241,1.114,242,1.33,243,2.131,244,2.306,245,1.613,246,0.927,247,2.539,248,2.539,249,2.539,250,3.506,251,2.539,252,2.539,253,2.539,254,2.539,255,2.306,256,2.306,257,2.539,258,2.539,259,2.539,260,4.671,261,2.539,262,5.218,263,2.539,264,2.539,265,3.861,266,3.861,267,2.131,268,2.539,269,2.539,270,2.539,271,2.539,272,2.539,273,2.539,274,2.539,275,2.539,276,3.861,277,3.861,278,2.539,279,1.422,280,2.539,281,2.539,282,2.539,283,1.777,284,2.539,285,2.539,286,2.306,287,2.539]],["title/interfaces/AnalyserConfig.html",[0,0.096,288,2.43]],["body/interfaces/AnalyserConfig.html",[0,0.183,2,1.025,3,0.225,4,0.225,5,0.138,7,0.225,8,0.52,10,1.657,11,0.573,12,0.011,13,0.407,18,2.861,19,1.019,22,1.661,25,2.761,75,0.008,76,0.008,288,3.622,289,2.804,290,4.13,291,4.443,292,4.443,293,4.443,294,2.684,295,2.574,296,2.684,297,2.684,298,2.684,299,2.574,300,2.684,301,2.684,302,2.684,303,2.804,304,2.804,305,2.574,306,3.466,307,3.324,308,3.324,309,3.324,310,2.574,311,3.324,312,2.684,313,2.859,314,2.859,315,3.324,316,2.684,317,2.473,318,2.574,319,2.804,320,2.939,321,2.574,322,3.538,323,2.684,324,2.473,325,4.012,326,3.074,327,2.684,328,3.324,329,3.598,330,3.598,331,2.473,332,3.324,333,3.739]],["title/components/AppComponent.html",[84,0.966,334,1.733]],["body/components/AppComponent.html",[3,0.223,4,0.223,5,0.177,12,0.011,13,0.238,75,0.008,76,0.008,80,1.5,83,0.7,84,1.588,86,0.931,89,0.667,111,2.548,123,1.601,135,2.407,139,2.407,140,0.625,141,1.917,153,1.588,334,3.012,335,2.069,336,2.047,337,2.047,338,2.047,339,4.983,340,3.965,341,3.965,342,3.281,343,3.363,344,1.792,345,3.012,346,6.458,347,3.044,348,1.015,349,4.983,350,3.059,351,4.983,352,4.983,353,3.059,354,2.449,355,3.965,356,3.43,357,5.145,358,4.983,359,4.983,360,4.983,361,4.983,362,4.983,363,4.983,364,4.983,365,3.43,366,4.983,367,4.983,368,4.983,369,4.983,370,4.983,371,4.983,372,4.983,373,2.047,374,2.566,375,2.263,376,1.746,377,3.113,378,2.047,379,2.047,380,1.98,381,1.551,382,2.047,383,1.98,384,2.047,385,1.98,386,1.858,387,2.047,388,1.746,389,1.801,390,1.801,391,2.652,392,1.98,393,3.113,394,1.98,395,2.047,396,1.98,397,1.801,398,2.047,399,1.98,400,2.047,401,1.858,402,1.98,403,1.98,404,2.047,405,1.98,406,1.917,407,2.047,408,1.98,409,2.047,410,1.98,411,1.858,412,1.98,413,1.98,414,1.98,415,1.917,416,1.98,417,2.047]],["title/injectables/AudioService.html",[418,0.769,419,2.23]],["body/injectables/AudioService.html",[3,0.116,4,0.116,5,0.167,7,0.116,8,0.323,10,1.434,11,0.511,12,0.011,13,0.193,16,2.129,21,1.774,22,1.638,39,2.282,41,1.658,75,0.005,76,0.005,80,1.415,83,0.488,85,2.25,86,0.484,88,2.109,89,0.347,91,1.224,96,1.511,102,0.88,140,0.325,143,1.456,149,2.238,153,1.561,157,1.175,174,2.157,231,1.638,235,0.935,242,1.221,267,1.906,321,2.868,331,2.439,344,0.718,347,2.109,348,1.707,375,0.907,418,0.712,419,2.065,420,1.029,421,2.271,422,4.963,423,3.955,424,3.656,425,5.652,426,4.355,427,4.963,428,4.963,429,4.355,430,4.963,431,4.92,432,0.92,433,5.607,434,4.037,435,4.037,436,4.129,437,4.467,438,5.607,439,4.037,440,4.037,441,4.037,442,4.037,443,4.037,444,4.037,445,4.037,446,3.217,447,4.963,448,2.588,449,2.588,450,1.72,451,4.037,452,4.844,453,2.588,454,2.226,455,1.415,456,3.656,457,4.037,458,4.574,459,2.588,460,4.963,461,2.588,462,2.588,463,1.442,464,2.588,465,4.037,466,2.588,467,4.037,468,5.334,469,2.588,470,2,471,2.617,472,3.109,473,2.588,474,2.588,475,4.037,476,2.588,477,4.037,478,5.334,479,2.588,480,4.037,481,2.588,482,4.037,483,4.037,484,2.588,485,2.588,486,4.037,487,2.588,488,4.92,489,2.588,490,2.588,491,4.037,492,2.479,493,2.617,494,2.617,495,2.479,496,2.065,497,2.25,498,2.617,499,2.617,500,2.617,501,2.617,502,2.588,503,5.132,504,2.588,505,2.588,506,5.607,507,2.588,508,2.588,509,2.588,510,4.037,511,2.588,512,4.037,513,3.217,514,2.588,515,2.588,516,2.588,517,2.358,518,1.38,519,2.479,520,3.217,521,3.656,522,0.76,523,1.511,524,2.588,525,4.176,526,2.588,527,2.588,528,2.588,529,2.588,530,4.92,531,2.588,532,2.588,533,2.588,534,4.037,535,2.588,536,2.588,537,2.588,538,2.588,539,2.973,540,2.271,541,3.217,542,2.588,543,2.588,544,2.153,545,3.543,546,2.588,547,2.588,548,2.588,549,2.588,550,1.906,551,2.588,552,2.588,553,2.588,554,4.037,555,2.588,556,2.062,557,1.511,558,2.062,559,1.678,560,2.588,561,1.782,562,2.062,563,2.588,564,2.062,565,4.037,566,4.037,567,2.588,568,2.973,569,4.037,570,4.037,571,2.588,572,2.588,573,2.588,574,2.588,575,2.588,576,2.588,577,2.588,578,2.588,579,1.678,580,1.442,581,2.062,582,2.588,583,2.588,584,2.588,585,2.588,586,2.588,587,2.588,588,4.037,589,2.588,590,2.588,591,2.588,592,2.588,593,2.588,594,2.588,595,3.543,596,2.588,597,2.588,598,2.271,599,2.588,600,1.782,601,1.324,602,2.588,603,1.678,604,2.588,605,2.588,606,2.588,607,2.588,608,2.588,609,2.588,610,2.588,611,2.588,612,2.588,613,2.588,614,2.588,615,2.588,616,2.588,617,2.588,618,2.588,619,2.588,620,2.588,621,2.588,622,4.037,623,2.588,624,2.271,625,2.271,626,2.271,627,2.271,628,1.782,629,2.271,630,2.588,631,2.588,632,2.588,633,4.037,634,2.588,635,2.588,636,2.588,637,2.588,638,2.588,639,2.588,640,4.037,641,2.588,642,2.588,643,2.588,644,2.588,645,2.588,646,2.588,647,2.588,648,2.588,649,2.588,650,2.588,651,4.037,652,2.588,653,2.588,654,2.588,655,2.588,656,2.588]],["title/interfaces/AxisGamepadAction.html",[0,0.096,24,2.827]],["body/interfaces/AxisGamepadAction.html",[0,0.17,1,3.419,2,1.074,3,0.236,4,0.236,5,0.145,6,3.419,7,0.329,8,0.535,9,3.63,10,1.493,11,0.558,12,0.011,13,0.404,14,5.443,15,3.884,16,1.463,17,5.329,18,2.096,19,0.706,20,3.419,21,1.236,22,1.74,23,4.771,24,4.341,25,3.126,26,5.329,27,5.329,28,3.419,29,3.079,30,3.63,31,3.419,32,3.419,33,3.419,34,3.238,35,3.238,36,4.932,37,3.079,38,3.63,39,1.858,40,3.63,41,2.751,42,3.63,43,3.053,44,3.63,45,3.571,46,3.63,47,3.238,48,3.63,49,3.238,50,3.63,51,3.419,52,3.63,53,3.419,54,3.63,55,3.079,56,3.63,57,3.419,58,3.63,59,2.939,60,3.63,61,3.238,62,3.63,63,3.238,64,3.63,65,3.419,66,3.63,67,3.419,68,3.63,69,3.419,70,3.238,71,3.63,72,3.63,73,3.63,74,3.63,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[120,2.23,657,3.826]],["body/pipes/BandPipe.html",[3,0.266,4,0.266,5,0.163,11,0.415,12,0.011,13,0.284,19,0.966,43,2.712,75,0.009,76,0.009,80,1.538,83,0.628,89,0.797,96,3.474,98,3.653,120,3.691,123,1.475,140,0.746,142,2.444,157,1.628,348,1.211,432,1.356,450,1.319,454,1.851,455,1.177,458,4.96,463,3.315,470,2.06,497,3.315,521,5.315,657,6.333,658,5.949,659,6.333,660,3.012,661,4.968,662,4.381,663,5.75,664,6.817,665,5.949,666,5.75,667,5.949,668,5.949,669,5.949,670,5.949]],["title/interfaces/BarsVisualizerOptions.html",[0,0.096,328,2.23]],["body/interfaces/BarsVisualizerOptions.html",[0,0.181,2,0.984,3,0.216,4,0.216,5,0.133,7,0.216,8,0.506,10,1.664,11,0.588,12,0.011,13,0.405,18,3.171,19,1.003,22,1.595,25,2.999,75,0.008,76,0.008,288,2.693,289,2.693,290,3.995,291,2.822,292,2.822,293,2.822,294,2.577,295,2.472,296,2.577,297,2.577,298,2.577,299,2.472,300,2.577,301,2.577,302,2.577,303,2.693,304,2.693,305,2.472,306,4.147,307,3.977,308,3.977,309,3.977,310,2.472,311,3.238,312,2.577,313,2.784,314,2.784,315,3.238,316,2.577,317,2.375,318,2.472,319,2.693,320,2.822,321,2.472,322,3.469,323,2.577,324,2.375,325,4.174,326,2.994,327,2.577,328,3.61,329,3.901,330,3.774,331,3.681,332,3.238,333,3.681]],["title/interfaces/BaseVisualizerOptions.html",[0,0.096,325,2.43]],["body/interfaces/BaseVisualizerOptions.html",[0,0.183,2,1.015,3,0.223,4,0.223,5,0.137,7,0.223,8,0.516,10,1.651,11,0.58,12,0.011,13,0.407,18,3.197,19,1.111,22,1.645,25,2.744,75,0.008,76,0.008,288,2.777,289,2.777,290,3.725,291,2.91,292,2.91,293,2.91,294,2.657,295,2.548,296,2.657,297,2.657,298,2.657,299,2.548,300,2.657,301,2.657,302,2.657,303,2.777,304,2.777,305,2.548,306,3.444,307,3.303,308,3.303,309,3.303,310,2.548,311,3.303,312,2.657,313,3.454,314,3.454,315,4.016,316,2.657,317,2.449,318,2.548,319,2.777,320,2.91,321,2.548,322,3.521,323,2.657,324,2.449,325,4.224,326,3.585,327,4.042,328,3.303,329,3.585,330,3.585,331,2.449,332,3.303,333,3.725]],["title/pipes/BitratePipe.html",[120,2.23,671,3.474]],["body/pipes/BitratePipe.html",[3,0.272,4,0.272,5,0.167,10,1.467,11,0.425,12,0.011,13,0.291,19,0.981,39,1.691,75,0.009,76,0.009,80,1.554,83,0.53,89,0.816,98,3.741,120,3.745,123,1.511,140,0.764,142,2.503,153,1.276,157,1.534,215,2.926,348,1.241,432,1.389,450,1.35,454,1.896,455,1.206,470,1.867,497,3.395,660,2.73,661,5.04,662,4.487,663,5.834,666,5.834,671,5.834,672,6.425,673,6.093,674,6.488,675,6.093,676,6.093,677,6.093]],["title/interfaces/ButtonGamepadAction.html",[0,0.096,28,2.827]],["body/interfaces/ButtonGamepadAction.html",[0,0.171,1,3.455,2,1.085,3,0.238,4,0.238,5,0.146,6,3.455,7,0.331,8,0.539,9,3.668,10,1.498,11,0.543,12,0.011,13,0.405,14,5.308,15,3.925,16,1.479,17,5.349,18,2.118,19,0.714,20,3.455,21,1.249,22,1.759,23,4.794,24,3.455,25,3.142,26,3.668,27,3.668,28,4.37,29,4.538,30,3.668,31,3.455,32,3.455,33,3.455,34,3.272,35,3.272,36,4.965,37,3.112,38,3.668,39,1.871,40,3.668,41,2.769,42,3.668,43,3.073,44,3.668,45,3.595,46,3.668,47,3.272,48,3.668,49,3.272,50,3.668,51,3.455,52,3.668,53,3.455,54,3.668,55,3.112,56,3.668,57,3.455,58,3.668,59,2.97,60,3.668,61,3.272,62,3.668,63,3.272,64,3.668,65,3.455,66,3.668,67,3.455,68,3.668,69,3.455,70,3.272,71,3.668,72,3.668,73,3.668,74,3.668,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.096,678,3.826]],["body/interfaces/Chainable.html",[0,0.119,2,1.105,3,0.243,4,0.243,5,0.187,7,0.243,12,0.011,16,1.892,75,0.008,76,0.008,83,0.593,348,1.105,375,1.902,432,1.554,450,1.203,455,1.074,520,5.434,544,2.894,558,5.434,678,5.984,679,5.427,680,6.864,681,5.427,682,5.427,683,4.762,684,5.427,685,4.762,686,5.427,687,5.427,688,5.427,689,5.984,690,7.823,691,5.984,692,5.434,693,5.434,694,5.427,695,5.427,696,5.427,697,5.427,698,4.762,699,5.427,700,5.427,701,5.427,702,5.427,703,7.823,704,5.427,705,5.427,706,3.169,707,5.427,708,5.427,709,6.82,710,5.427,711,6.82,712,6.82,713,5.427,714,5.427,715,4.762,716,5.427,717,6.82,718,4.834,719,5.427,720,5.427,721,5.427,722,5.427,723,2.474]],["title/interfaces/Color.html",[0,0.096,724,2.827]],["body/interfaces/Color.html",[0,0.142,2,1.313,3,0.288,4,0.288,5,0.177,7,0.288,8,0.606,11,0.561,12,0.011,13,0.308,19,1.148,22,2.654,75,0.009,76,0.009,80,1.642,724,4.91,725,6.449,726,7.28,727,4.845]],["title/interfaces/ColorConfig.html",[0,0.096,728,2.43]],["body/interfaces/ColorConfig.html",[0,0.173,2,1.116,3,0.245,4,0.245,5,0.206,7,0.245,8,0.548,11,0.564,12,0.011,13,0.399,19,1.168,25,2.327,75,0.009,76,0.009,77,1.755,79,3.199,81,2.802,82,2.332,83,0.651,94,3.199,95,2.914,123,1.946,124,3.551,153,1.437,173,2.177,201,1.863,279,3.371,313,3.452,314,3.452,455,1.554,458,4.211,492,3.363,493,3.551,494,3.551,495,3.363,496,2.802,497,3.053,498,3.551,499,3.551,500,3.551,501,3.551,519,3.363,579,3.551,728,3.823,729,3.551,730,4.211,731,3.363,732,2.042,733,3.508,734,4.447,735,2.921,736,4.211,737,4.855,738,3.363,739,3.551,740,2.591,741,3.771,742,3.551,743,4.034,744,4.034,745,4.034,746,4.034,747,3.551,748,3.199]],["title/interfaces/CoverArtImage.html",[0,0.096,749,2.827]],["body/interfaces/CoverArtImage.html",[0,0.156,2,0.859,3,0.189,4,0.189,5,0.116,7,0.189,8,0.462,10,0.789,11,0.519,12,0.011,13,0.201,19,1.119,22,2.176,39,1.171,75,0.007,76,0.007,77,1.352,82,1.435,83,0.683,86,0.789,89,0.565,101,1.793,102,1.435,140,0.529,143,1.513,149,1.516,153,1.676,157,1.736,200,2.25,201,1.435,205,3.082,212,2.734,215,2.982,226,2.464,227,2.25,231,2.176,233,2.644,235,2.563,241,2.537,242,2.319,246,1.352,283,2.591,344,1.171,381,2.052,418,1.019,496,2.158,522,1.24,544,2.25,723,2.635,732,1.573,749,4.274,750,1.525,751,2.905,752,5.281,753,3.77,754,5.114,755,5.072,756,2.25,757,2.158,758,2.905,759,2.736,760,2.736,761,3.372,762,2.155,763,1.677,764,2.074,765,2.158,766,2.25,767,3.747,768,2.635,769,4.274,770,2.591,771,2.736,772,3.979,773,2.905,774,3.747,775,2.591,776,2.736,777,2.25,778,2.591,779,2.158,780,2.25,781,2.25,782,2.905,783,2.905,784,2.905,785,2.25,786,2.383,787,2.158,788,2.956,789,3.979,790,2.905,791,2.905,792,3.082,793,2.464,794,2.905,795,2.905,796,2.905,797,2.905,798,2.905,799,2.905,800,3.082,801,3.979,802,2.905,803,2.905,804,2.736,805,2.905,806,2.905,807,2.905,808,2.905,809,2.905,810,2.25,811,4.882,812,2.905,813,2.905,814,2.905,815,2.905,816,2.591,817,2.905,818,2.456,819,2.905,820,2.905,821,2.905,822,3.979,823,2.905,824,2.736,825,2.374,826,2.905,827,2.905]],["title/interfaces/CoverArtResponse.html",[0,0.096,776,2.827]],["body/interfaces/CoverArtResponse.html",[0,0.157,2,0.876,3,0.192,4,0.192,5,0.118,7,0.192,8,0.468,10,0.804,11,0.3,12,0.011,13,0.205,19,1.103,22,1.42,39,1.194,75,0.007,76,0.007,77,1.379,82,1.463,83,0.687,86,0.804,89,0.576,101,1.828,102,1.463,140,0.54,143,1.523,149,1.536,153,1.683,157,1.742,200,2.294,201,1.463,205,3.123,212,2.77,215,2.996,226,2.512,227,2.294,231,2.198,233,2.665,235,2.583,241,2.562,242,2.333,246,1.379,283,2.641,344,1.194,381,2.073,418,1.033,496,2.2,522,1.264,544,2.294,723,2.67,732,1.604,749,4.635,750,1.555,751,2.961,752,4.584,753,3.273,754,4.032,756,2.294,757,2.2,758,2.961,759,2.789,760,2.789,761,3.406,762,2.184,763,1.71,764,2.114,765,2.2,766,2.294,767,3.797,768,2.67,769,4.317,770,2.641,771,2.789,772,4.032,773,2.961,774,3.797,775,2.641,776,3.797,777,3.812,778,2.641,779,2.2,780,2.294,781,2.294,782,2.961,783,2.961,784,2.961,785,2.294,786,2.407,787,2.2,788,2.996,789,4.032,790,2.961,791,2.961,792,3.123,793,2.512,794,2.961,795,2.961,796,2.961,797,2.961,798,2.961,799,2.961,800,3.123,801,4.032,802,2.961,803,2.961,804,2.789,805,2.961,806,2.961,807,2.961,808,2.961,809,2.961,810,2.294,811,4.921,812,2.961,813,2.961,814,2.961,815,2.961,816,2.641,817,2.961,818,2.488,819,2.961,820,2.961,821,2.961,822,4.032,823,2.961,824,2.789,825,2.406,826,2.961,827,2.961]],["title/interfaces/CoverColor.html",[0,0.096,828,2.827]],["body/interfaces/CoverColor.html",[0,0.182,2,1.207,3,0.265,4,0.265,5,0.213,7,0.265,8,0.576,11,0.503,12,0.011,13,0.395,19,1.17,75,0.009,76,0.009,82,2.016,83,0.516,242,1.793,455,1.597,727,4.712,732,2.21,733,3.032,750,2.143,762,2.685,763,2.356,768,3.283,818,2.519,825,2.435,828,5.566,829,4.081,830,5.231,831,3.162,832,3.844,833,3.844,834,3.844,835,3.844,836,3.844,837,3.64,838,3.64,839,2.804]],["title/interfaces/CoverColorPalette.html",[0,0.096,733,2.23]],["body/interfaces/CoverColorPalette.html",[0,0.179,2,1.138,3,0.25,4,0.25,5,0.208,7,0.25,8,0.556,11,0.579,12,0.011,13,0.388,19,1.125,75,0.009,76,0.009,82,1.901,83,0.486,242,1.69,455,1.723,727,3.265,732,2.084,733,3.553,750,2.02,762,2.59,763,2.222,768,3.167,818,2.375,825,2.296,828,5.752,829,3.848,830,3.624,831,4.216,832,5.126,833,5.126,834,5.126,835,5.126,836,5.126,837,3.433,838,3.433,839,2.644]],["title/components/CoverDisplayComponent.html",[84,0.966,380,1.733]],["body/components/CoverDisplayComponent.html",[3,0.171,4,0.171,5,0.148,7,0.171,8,0.432,12,0.011,13,0.183,21,1.467,75,0.007,76,0.007,77,1.73,79,4.186,80,1.345,81,2.762,83,0.647,84,1.387,85,3.995,86,0.715,89,0.512,108,3.625,109,2.349,123,1.339,135,2.013,137,2.462,139,2.013,140,0.48,141,1.472,143,0.779,148,3.153,149,1.951,153,1.131,157,1.131,334,1.521,335,1.73,336,1.572,337,1.572,338,1.572,340,3.315,341,3.315,342,3.196,343,3.261,345,1.521,348,1.274,350,2.349,355,3.315,356,2.634,365,2.634,373,1.572,374,2.146,375,1.892,376,1.341,377,2.792,378,1.572,379,1.572,380,2.702,381,2.533,382,1.572,383,1.521,384,1.572,385,1.521,386,1.426,387,1.572,388,1.341,389,1.383,390,1.383,391,2.218,392,1.521,393,2.792,394,1.521,395,1.572,396,1.521,397,1.383,398,1.572,399,1.521,400,1.572,401,1.426,402,1.521,403,1.521,404,1.572,405,1.521,406,1.472,407,1.572,408,1.521,409,1.572,410,1.521,411,1.426,412,2.702,413,1.521,414,1.521,415,1.472,416,1.521,417,1.572,424,3.977,470,1.596,671,4.986,672,5.965,674,5.416,740,2.554,840,5.965,841,3.826,842,3.501,843,4.609,844,5.4,845,5.4,846,6.258,847,6.798,848,5.4,849,5.4,850,5.4,851,5.4,852,3.826,853,5.4,854,3.826,855,3.826,856,3.826,857,3.826,858,3.357,859,5.416,860,3.049,861,4.738,862,4.738,863,4.738,864,6.798,865,6.798,866,3.826,867,6.798,868,3.501,869,6.798,870,6.798,871,6.798,872,6.798,873,5.4,874,5.4,875,3.826]],["title/interfaces/DirHandleEntry.html",[0,0.096,876,3.474]],["body/interfaces/DirHandleEntry.html",[0,0.104,2,0.966,3,0.212,4,0.212,5,0.222,7,0.212,8,0.5,10,1.307,11,0.437,12,0.011,13,0.226,41,1.948,75,0.008,76,0.008,83,0.672,86,0.886,88,2.015,89,0.635,90,2.911,91,2.243,92,2.769,93,2.425,101,2.015,102,1.612,140,0.595,142,1.948,143,0.966,144,3.074,145,3.074,149,1.244,153,1.663,157,1.695,164,3.074,231,2.454,233,1.768,235,2.868,241,1.825,242,1.89,279,2.33,344,1.316,347,2.015,354,2.33,418,1.102,472,3.197,522,1.393,557,2.769,660,2.331,706,2.769,768,3.523,786,2.527,876,4.981,877,2.911,878,2.243,879,3.778,880,3.492,881,5.387,882,6.158,883,2.911,884,3.965,885,2.911,886,3.484,887,3.074,888,3.778,889,3.492,890,4.161,891,4.161,892,5.573,893,4.161,894,5.486,895,4.161,896,3.492,897,4.161,898,4.161,899,4.161,900,4.161,901,4.161,902,3.492,903,4.161,904,4.161,905,3.651,906,3.778,907,4.161,908,4.161,909,4.161,910,3.778,911,3.492,912,4.161,913,4.161,914,4.161,915,3.778,916,4.161,917,3.492,918,3.778,919,4.161,920,4.161,921,4.161,922,3.778,923,3.264,924,6.137,925,4.981,926,3.778,927,4.161,928,4.161,929,4.161]],["title/components/EqualizerComponent.html",[84,0.966,383,1.733]],["body/components/EqualizerComponent.html",[3,0.151,4,0.151,5,0.135,7,0.261,8,0.394,10,1.275,11,0.235,12,0.011,13,0.161,16,1.368,19,0.66,21,1.599,39,1.617,41,2.634,43,2.656,45,1.797,49,2.069,59,1.878,63,3.937,75,0.006,76,0.006,80,1.35,83,0.593,84,1.291,86,0.63,88,1.432,89,0.451,93,2.98,95,2.724,96,1.968,123,1.222,135,1.837,137,2.247,139,1.837,140,0.423,141,1.297,149,1.528,153,1.613,157,1.343,317,2.422,334,1.339,335,1.579,336,1.384,337,1.384,338,1.384,340,3.026,341,3.026,342,3.148,343,3.205,345,1.339,347,2.476,348,1.499,350,2.069,355,3.937,356,2.319,365,3.393,373,1.384,374,1.959,375,1.727,376,1.181,377,2.634,378,1.384,379,1.384,380,1.339,381,1.049,382,1.384,383,2.548,384,1.384,385,1.339,386,1.256,387,1.384,388,1.181,389,1.218,390,1.218,391,2.024,392,1.339,393,2.634,394,1.339,395,1.384,396,1.339,397,1.218,398,1.384,399,1.339,400,1.384,401,1.256,402,1.339,403,1.339,404,1.384,405,1.339,406,1.297,407,1.384,408,1.339,409,1.384,410,1.339,411,1.256,412,1.339,413,1.339,414,1.339,415,1.297,416,1.339,417,1.384,419,3.279,432,1.123,450,1.092,454,1.049,455,0.667,470,1.817,478,5.113,497,1.878,519,3.578,521,5.67,568,5.421,842,2.184,930,3.369,931,4.292,932,4.643,933,4.928,934,4.928,935,5.986,936,5.827,937,4.928,938,6.412,939,4.928,940,4.928,941,3.369,942,3.369,943,2.878,944,3.369,945,4.928,946,3.369,947,3.369,948,3.195,949,2.685,950,2.685,951,2.069,952,2.482,953,3.369,954,3.927,955,3.369,956,3.369,957,3.369,958,3.369,959,4.928,960,3.369,961,3.369,962,3.369,963,4.928,964,3.369,965,4.696,966,3.369,967,5.67,968,3.369,969,2.685,970,3.369,971,5.626,972,4.325,973,4.325,974,4.928,975,3.369,976,4.928,977,2.957,978,3.369,979,3.369,980,3.369,981,4.928,982,3.369,983,5.626,984,3.369,985,5.827,986,4.325,987,3.369,988,3.369,989,7.127,990,6.822,991,2.957,992,3.369,993,5.827,994,3.369,995,4.292,996,4.928,997,2.482,998,6.822,999,3.369,1000,3.369,1001,2.957,1002,3.369,1003,3.369,1004,3.369,1005,3.369,1006,3.369,1007,2.685,1008,3.369,1009,3.369,1010,3.369,1011,3.369,1012,3.369,1013,3.369,1014,3.369,1015,3.369,1016,3.369,1017,3.369,1018,3.369,1019,3.369,1020,3.369,1021,2.482,1022,3.369,1023,3.369,1024,2.319]],["title/interfaces/FileData.html",[0,0.096,884,2.325]],["body/interfaces/FileData.html",[0,0.136,2,1.258,3,0.276,4,0.276,5,0.238,7,0.276,8,0.59,11,0.516,12,0.011,13,0.377,75,0.009,76,0.009,153,1.547,279,4.021,455,1.461,736,4.848,877,3.793,878,2.922,883,3.793,884,3.937,1025,3.443,1026,5.421,1027,5.421,1028,5.421,1029,5.421,1030,6.479,1031,5.421,1032,5.421,1033,5.421,1034,5.421,1035,5.421,1036,5.421,1037,5.421,1038,5.421,1039,5.421,1040,5.421,1041,5.421,1042,5.421,1043,5.421,1044,5.421]],["title/components/FileDropOverlayComponent.html",[84,0.966,385,1.733]],["body/components/FileDropOverlayComponent.html",[3,0.144,4,0.144,5,0.229,7,0.213,8,0.381,11,0.396,12,0.011,13,0.153,16,1.574,21,1.329,39,1.321,75,0.006,76,0.006,80,1.436,83,0.28,84,1.257,86,0.601,89,0.431,123,1.181,135,1.775,140,0.403,141,1.237,142,1.956,143,1.549,149,1.995,153,1.468,157,0.674,205,1.715,226,3.312,227,2.539,233,1.775,241,1.832,242,1.715,334,1.278,335,1.526,336,1.321,337,1.321,338,1.321,342,3.13,343,3.183,345,1.278,348,1.427,373,1.321,374,1.893,375,1.669,376,1.127,377,2.749,378,1.321,379,1.321,380,1.278,381,1.001,382,1.321,383,1.278,384,1.321,385,2.492,386,3.243,387,1.321,388,1.127,389,1.162,390,1.162,391,1.956,392,1.278,393,2.575,394,1.278,395,1.321,396,1.278,397,1.162,398,1.321,399,1.278,400,1.321,401,1.199,402,1.278,403,1.278,404,1.321,405,1.278,406,1.237,407,1.321,408,1.278,409,1.321,410,1.278,411,1.775,412,1.278,413,1.278,414,1.278,415,1.237,416,1.278,417,1.321,432,1.085,450,1.257,454,1.765,455,1.122,470,1.446,471,2.085,550,2.368,601,2.9,627,2.822,629,2.822,698,4.179,706,4.093,724,3.087,735,2.539,736,1.974,786,1.721,816,2.924,842,2.085,881,2.085,917,2.368,949,2.562,1007,2.562,1024,2.214,1045,3.216,1046,5.342,1047,6.364,1048,7.253,1049,7.253,1050,3.216,1051,5.671,1052,3.676,1053,3.087,1054,4.762,1055,5.671,1056,4.762,1057,5.671,1058,5.671,1059,5.671,1060,4.762,1061,4.762,1062,4.762,1063,7.739,1064,3.216,1065,4.762,1066,3.216,1067,4.762,1068,3.216,1069,3.676,1070,3.216,1071,6.693,1072,3.216,1073,3.216,1074,3.216,1075,3.216,1076,3.216,1077,3.216,1078,3.216,1079,3.216,1080,3.216,1081,3.216,1082,3.216,1083,3.216,1084,3.216,1085,4.762,1086,6.693,1087,3.216,1088,4.762,1089,4.762,1090,3.216,1091,4.762,1092,3.216,1093,4.762,1094,4.762,1095,3.216,1096,4.762,1097,3.216,1098,2.085,1099,4.976,1100,4.976,1101,4.762,1102,3.216,1103,3.216,1104,4.762,1105,4.976,1106,2.822,1107,4.762,1108,3.216,1109,5.501,1110,3.216,1111,3.216,1112,3.216,1113,3.216,1114,4.179,1115,3.507,1116,3.216,1117,3.216,1118,3.216,1119,3.216,1120,3.216,1121,3.216,1122,3.216,1123,3.216,1124,3.216,1125,3.216,1126,5.671,1127,3.216,1128,5.671,1129,3.216,1130,2.822,1131,2.822,1132,3.216,1133,2.562,1134,2.822,1135,3.216,1136,3.216,1137,3.216,1138,3.216,1139,3.216,1140,3.216,1141,3.216,1142,3.216,1143,3.216,1144,3.216,1145,3.216,1146,2.822,1147,2.822,1148,4.762,1149,3.216,1150,4.762,1151,3.216,1152,3.216,1153,2.822,1154,2.822,1155,3.216,1156,3.216,1157,3.216,1158,3.216,1159,2.822,1160,4.179,1161,3.216,1162,2.562,1163,3.216,1164,2.822,1165,3.216,1166,4.762]],["title/classes/FileLoaderService.html",[140,0.547,886,2.43]],["body/classes/FileLoaderService.html",[3,0.27,4,0.27,5,0.2,7,0.27,8,0.582,11,0.422,12,0.011,13,0.288,75,0.009,76,0.009,83,0.633,89,0.809,140,0.758,348,1.593,432,1.66,450,1.614,786,2.934,877,4.985,878,3.841,884,3.221,885,3.709,886,4.059,889,5.76,896,5.98,902,5.98,1025,4.525,1167,6.041,1168,6.041,1169,8.72,1170,7.821,1171,6.041,1172,6.041,1173,6.041]],["title/interfaces/FrequencyBarsConfig.html",[0,0.096,305,2.23]],["body/interfaces/FrequencyBarsConfig.html",[0,0.183,2,1.025,3,0.225,4,0.225,5,0.138,7,0.225,8,0.52,10,1.662,11,0.573,12,0.011,13,0.407,18,2.861,19,1.019,22,1.661,25,2.761,75,0.008,76,0.008,288,2.804,289,2.804,290,3.739,291,2.939,292,2.939,293,2.939,294,2.684,295,2.574,296,2.684,297,2.684,298,2.684,299,2.574,300,2.684,301,2.684,302,2.684,303,2.804,304,2.804,305,3.324,306,4.2,307,4.028,308,4.028,309,4.028,310,2.574,311,3.324,312,2.684,313,2.859,314,2.859,315,3.324,316,2.684,317,2.473,318,2.574,319,2.804,320,2.939,321,2.574,322,3.538,323,2.684,324,2.473,325,4.012,326,3.074,327,2.684,328,3.324,329,3.598,330,3.598,331,2.473,332,3.324,333,3.739]],["title/interfaces/GamepadAction.html",[0,0.096,17,3.001]],["body/interfaces/GamepadAction.html",[0,0.168,1,3.305,2,1.038,3,0.228,4,0.228,5,0.14,6,3.305,7,0.362,8,0.524,9,3.509,10,1.574,11,0.582,12,0.011,13,0.402,14,4.956,15,3.755,16,1.415,17,5.262,18,3.038,19,0.97,20,4.956,21,1.792,22,2.39,23,5.406,24,3.305,25,2.784,26,3.509,27,3.509,28,3.305,29,2.977,30,3.509,31,3.305,32,3.305,33,3.305,34,3.13,35,3.13,36,4.827,37,2.977,38,3.509,39,1.819,40,3.509,41,2.692,42,3.509,43,2.987,44,3.509,45,3.495,46,3.509,47,3.13,48,3.509,49,3.13,50,3.509,51,3.305,52,3.509,53,3.305,54,3.509,55,2.977,56,3.509,57,3.305,58,3.509,59,2.841,60,3.509,61,3.13,62,3.509,63,3.13,64,3.509,65,3.305,66,3.509,67,3.305,68,3.509,69,3.305,70,3.13,71,3.509,72,3.509,73,3.509,74,3.509,75,0.008,76,0.008,455,1.513]],["title/injectables/GamepadService.html",[418,0.769,1174,2.827]],["body/injectables/GamepadService.html",[1,3.538,3,0.135,4,0.135,5,0.083,7,0.334,8,0.363,9,3.124,10,1.569,11,0.478,12,0.011,13,0.144,14,5.189,16,1.807,18,3.115,20,5.082,21,1.604,22,0.995,23,1.955,24,3.937,26,4.711,27,4.711,28,3.937,29,3.546,31,1.955,32,4.603,33,3.937,34,3.351,35,2.786,37,3.187,39,1.807,70,3.351,75,0.006,76,0.006,80,1.202,83,0.395,89,0.404,140,0.378,142,1.238,143,1.614,149,1.19,153,1.691,157,1.434,344,0.837,347,2.319,348,1.446,418,0.8,420,1.198,432,1.035,450,1.346,454,1.89,455,1.202,470,1.973,522,0.886,601,2.321,660,1.692,1052,2.942,1098,1.955,1174,2.942,1175,3.015,1176,5.457,1177,5.457,1178,4.538,1179,4.538,1180,5.457,1181,4.538,1182,4.538,1183,4.538,1184,3.015,1185,7.617,1186,4.538,1187,3.015,1188,7.617,1189,3.015,1190,6.072,1191,3.015,1192,7.307,1193,4.538,1194,3.015,1195,3.015,1196,3.015,1197,3.015,1198,3.015,1199,3.015,1200,3.015,1201,3.015,1202,3.015,1203,3.015,1204,5.457,1205,3.015,1206,5.457,1207,3.015,1208,3.015,1209,6.072,1210,3.015,1211,3.015,1212,3.015,1213,3.015,1214,4.538,1215,5.457,1216,5.189,1217,4.538,1218,2.646,1219,4.538,1220,3.015,1221,3.015,1222,3.015,1223,3.015,1224,3.015,1225,4.538,1226,3.015,1227,3.015,1228,3.015,1229,2.646,1230,3.015,1231,3.015,1232,4.019,1233,6.513,1234,3.015,1235,3.015,1236,5.457,1237,3.015,1238,3.015,1239,3.015,1240,3.015,1241,1.851,1242,3.015,1243,3.015,1244,3.015,1245,4.538,1246,3.015,1247,3.015,1248,3.015,1249,3.015,1250,3.015,1251,3.015,1252,4.789,1253,4.538,1254,3.343,1255,4.538,1256,4.538,1257,3.015,1258,3.015,1259,3.015,1260,4.538,1261,3.015,1262,3.015,1263,3.015,1264,4.538,1265,4.538,1266,5.457,1267,5.457,1268,6.072,1269,4.483,1270,5.457,1271,3.015,1272,6.072,1273,3.015,1274,6.005,1275,4.538,1276,4.538,1277,4.538,1278,3.015,1279,6.072,1280,3.015,1281,3.015,1282,4.538,1283,3.015,1284,3.015,1285,4.538,1286,4.538,1287,3.015,1288,3.015,1289,3.015,1290,3.015]],["title/interfaces/Hotkey.html",[0,0.096,1291,3.001]],["body/interfaces/Hotkey.html",[0,0.129,2,0.876,3,0.192,4,0.192,5,0.118,7,0.192,8,0.468,11,0.499,12,0.011,13,0.318,19,1.091,75,0.007,76,0.007,83,0.671,86,0.804,89,0.576,102,1.463,140,0.54,143,1.356,153,1.707,157,1.567,174,2.254,183,3.264,215,1.604,246,1.379,344,1.194,353,2.641,354,2.114,375,2.621,388,1.508,389,2.117,390,1.555,418,1.033,436,3.169,472,4.038,522,1.264,561,2.961,601,2.996,660,2.184,718,2.789,905,3.42,965,2.961,1232,3.169,1254,3.169,1291,4.032,1292,3.428,1293,5.508,1294,5.119,1295,5.815,1296,4.032,1297,2.641,1298,3.169,1299,3.596,1300,2.512,1301,4.667,1302,4.032,1303,5.696,1304,3.428,1305,2.789,1306,2.641,1307,3.428,1308,3.428,1309,3.42,1310,3.169,1311,3.169,1312,4.314,1313,3.428,1314,3.428,1315,2.641,1316,3.428,1317,3.428,1318,3.428,1319,3.428,1320,3.428,1321,3.428,1322,3.428,1323,3.428,1324,4.667,1325,3.428,1326,4.667,1327,4.667,1328,4.667,1329,3.169,1330,3.428,1331,3.428,1332,3.428,1333,3.428,1334,4.032,1335,3.428,1336,3.428,1337,3.428,1338,3.428,1339,5.306,1340,3.428,1341,4.667,1342,3.428,1343,3.428,1344,4.667,1345,3.428,1346,3.428,1347,3.428,1348,3.428,1349,3.428,1350,3.428,1351,3.428,1352,4.667,1353,3.428,1354,3.428,1355,3.169,1356,3.428,1357,5.696,1358,3.428,1359,4.667,1360,3.428,1361,3.428,1362,3.428,1363,2.961,1364,3.428,1365,3.428,1366,3.428]],["title/interfaces/HotkeyInfo.html",[0,0.096,1305,2.827]],["body/interfaces/HotkeyInfo.html",[0,0.13,2,0.889,3,0.195,4,0.195,5,0.12,7,0.195,8,0.473,11,0.413,12,0.011,13,0.32,19,1.061,75,0.007,76,0.007,83,0.674,86,0.816,89,0.585,102,1.485,140,0.548,143,1.366,153,1.712,157,1.575,174,2.276,183,3.297,215,1.628,246,1.399,344,1.212,353,2.681,354,2.146,375,2.073,388,1.53,389,2.138,390,1.578,418,1.043,436,3.216,472,4.054,522,1.283,561,3.005,601,3.026,660,2.205,718,2.83,965,3.005,1232,3.216,1254,3.216,1291,3.005,1292,3.479,1293,4.357,1294,5.138,1295,5.297,1296,4.072,1297,2.681,1298,3.216,1299,3.632,1300,2.55,1301,4.714,1302,4.072,1303,6.512,1304,3.479,1305,3.835,1306,2.681,1307,3.479,1308,3.479,1309,3.455,1310,3.216,1311,3.216,1312,4.357,1313,3.479,1314,3.479,1315,2.681,1316,3.479,1317,3.479,1318,3.479,1319,3.479,1320,3.479,1321,3.479,1322,3.479,1323,3.479,1324,4.714,1325,3.479,1326,4.714,1327,4.714,1328,4.714,1329,3.216,1330,3.479,1331,3.479,1332,3.479,1333,3.479,1334,4.072,1335,3.479,1336,3.479,1337,3.479,1338,3.479,1339,5.346,1340,3.479,1341,4.714,1342,3.479,1343,3.479,1344,4.714,1345,3.479,1346,3.479,1347,3.479,1348,3.479,1349,3.479,1350,3.479,1351,3.479,1352,4.714,1353,3.479,1354,3.479,1355,3.216,1356,3.479,1357,5.731,1358,3.479,1359,4.714,1360,3.479,1361,3.479,1362,3.479,1363,3.005,1364,3.479,1365,3.479,1366,3.479]],["title/interfaces/HotkeysData.html",[0,0.096,1367,3.474]],["body/interfaces/HotkeysData.html",[0,0.128,2,1.189,3,0.261,4,0.261,5,0.16,7,0.261,8,0.571,11,0.408,12,0.011,13,0.341,75,0.009,76,0.009,83,0.728,84,1.582,86,1.092,89,0.782,99,4.627,100,3.787,111,2.987,113,2.663,135,2.177,137,2.663,139,2.177,140,0.733,157,1.224,183,4.295,246,1.872,342,2.177,343,2.247,388,2.047,389,2.785,390,2.901,1299,3.586,1300,3.411,1305,3.787,1309,3.411,1315,3.586,1363,5.526,1367,5.686,1368,5.125,1369,4.302,1370,4.302,1371,5.256,1372,5.125,1373,4.382,1374,3.65,1375,5.125,1376,4.302,1377,4.302,1378,4.302,1379,5.125,1380,5.125,1381,4.654,1382,5.125]],["title/components/HotkeysHelpDialogComponent.html",[84,0.966,388,1.528]],["body/components/HotkeysHelpDialogComponent.html",[0,0.093,3,0.189,4,0.189,5,0.159,7,0.189,8,0.463,12,0.011,13,0.276,16,1.174,21,1.357,41,2.916,43,2.639,75,0.007,76,0.007,80,1.405,83,0.668,84,1.463,86,0.791,89,0.566,95,2.46,99,4.28,100,2.742,111,2.163,113,1.928,123,1.436,135,2.158,137,2.639,139,2.158,140,0.531,141,1.628,157,0.886,183,2.357,246,2.115,334,1.681,335,1.855,336,1.737,337,1.737,338,1.737,342,3.231,343,3.302,345,1.681,348,1.446,373,1.737,374,2.301,375,2.029,376,1.482,377,2.916,378,1.737,379,1.737,380,1.681,381,1.316,382,1.737,383,1.681,384,1.737,385,1.681,386,1.577,387,1.737,388,2.488,389,2.841,390,3.021,391,2.378,392,1.681,393,2.916,394,1.681,395,1.737,396,1.681,397,1.529,398,1.737,399,1.681,400,1.737,401,1.577,402,1.681,403,1.681,404,1.737,405,1.681,406,1.628,407,1.737,408,1.681,409,1.737,410,1.681,411,1.577,412,1.681,413,1.681,414,1.681,415,1.628,416,1.681,417,1.737,432,1.32,446,4.613,450,0.937,470,1.476,1291,3.985,1299,2.597,1300,2.47,1305,2.742,1309,3.381,1315,4.053,1363,2.912,1367,3.37,1368,6.524,1369,3.115,1370,3.115,1371,4.862,1372,3.712,1373,4.053,1374,3.376,1375,5.08,1376,4.264,1377,4.264,1378,4.264,1379,6.524,1380,3.712,1381,5.656,1382,3.712,1383,4.23,1384,3.712,1385,4.23,1386,4.23,1387,4.23,1388,7.099,1389,7.677,1390,7.099,1391,5.79,1392,5.79,1393,7.099,1394,5.79,1395,5.79,1396,5.08,1397,5.08,1398,5.79,1399,5.79,1400,5.79]],["title/injectables/HotkeysService.html",[418,0.769,1306,2.677]],["body/injectables/HotkeysService.html",[0,0.12,3,0.173,4,0.173,5,0.106,7,0.173,8,0.435,11,0.502,12,0.011,13,0.3,16,1.997,19,1.048,21,1.601,75,0.007,76,0.007,80,1.076,83,0.649,86,0.722,89,0.517,102,1.314,140,0.485,143,1.281,153,1.667,157,1.507,174,2.421,183,3.805,215,2.027,246,1.238,344,1.072,348,1.66,353,2.372,354,1.899,375,2.205,388,1.354,389,2.467,390,1.396,418,0.959,420,1.536,432,1.239,436,5.028,450,1.654,454,1.692,455,1.351,470,1.741,472,4.07,522,1.135,561,4.7,601,2.781,660,2.027,718,3.525,965,2.66,1232,2.846,1254,2.846,1291,2.66,1292,3.079,1293,4.005,1294,4.426,1295,5.299,1296,3.743,1297,2.372,1298,2.846,1299,3.863,1300,2.256,1301,4.332,1302,3.743,1303,5.44,1304,3.079,1305,2.505,1306,3.338,1307,3.079,1308,3.079,1309,3.175,1310,2.846,1311,4.633,1312,5.299,1313,4.332,1314,5.013,1315,3.863,1316,5.013,1317,3.079,1318,3.079,1319,3.079,1320,3.079,1321,3.079,1322,3.079,1323,4.332,1324,4.332,1325,3.079,1326,4.332,1327,4.332,1328,4.332,1329,2.846,1330,3.079,1331,3.079,1332,3.079,1333,3.079,1334,3.743,1335,3.079,1336,3.079,1337,3.079,1338,3.079,1339,5.013,1340,3.079,1341,4.332,1342,3.079,1343,3.079,1344,4.332,1345,3.079,1346,3.079,1347,3.079,1348,3.079,1349,4.332,1350,3.079,1351,3.079,1352,4.332,1353,3.079,1354,3.079,1355,5.028,1356,5.44,1357,5.44,1358,3.079,1359,4.332,1360,3.079,1361,3.079,1362,3.079,1363,2.66,1364,3.079,1365,3.079,1366,3.079,1401,5.437,1402,5.437,1403,3.864,1404,3.864,1405,3.864,1406,3.864,1407,3.864,1408,3.864,1409,3.864,1410,3.864,1411,3.864,1412,3.864,1413,3.864]],["title/interfaces/Id3CoverPicture.html",[0,0.096,730,2.677]],["body/interfaces/Id3CoverPicture.html",[0,0.162,2,1.256,3,0.276,4,0.276,5,0.169,7,0.276,8,0.59,10,1.378,11,0.515,12,0.011,13,0.352,19,1.148,75,0.009,76,0.009,77,1.976,81,3.154,83,0.536,95,2.62,123,1.529,173,2.451,201,2.097,246,2.62,324,3.878,730,4.845,731,3.787,734,4.782,735,3.289,740,3.953,750,2.229,762,2.299,1241,4.528,1414,5.412,1415,4.914]],["title/interfaces/Id3Tags.html",[0,0.096,762,1.625]],["body/interfaces/Id3Tags.html",[0,0.154,2,1.157,3,0.254,4,0.254,5,0.156,7,0.254,8,0.561,10,1.311,11,0.6,12,0.011,13,0.335,19,1.173,75,0.009,76,0.009,77,2.548,81,4.066,83,0.494,95,3.378,123,1.409,173,3.16,201,2.704,246,1.82,324,2.792,455,1.727,730,4.882,731,3.488,734,5.154,735,3.029,740,3.864,750,2.053,755,6.157,762,2.616,1241,4.308,1414,4.985,1415,6.335]],["title/injectables/Id3TagsService.html",[418,0.769,1416,3.474]],["body/injectables/Id3TagsService.html",[3,0.204,4,0.204,5,0.216,7,0.204,10,1.139,11,0.426,12,0.011,13,0.218,16,2.118,20,2.959,21,1.07,39,1.266,75,0.008,76,0.008,80,0.903,83,0.597,89,0.611,140,0.572,142,1.875,143,1.554,153,1.645,157,1.277,174,2.641,183,2.543,200,2.434,242,2.462,344,1.266,347,2.916,348,1.241,418,1.075,420,1.814,432,1.389,450,1.011,454,1.42,455,0.903,463,2.543,470,1.164,522,1.341,539,3.361,601,3.51,731,4.213,732,1.701,750,2.48,762,1.701,763,1.814,764,2.243,768,3.479,786,2.203,837,3.742,838,2.802,839,2.883,923,5.041,1052,3.951,1098,2.959,1114,4.005,1416,4.856,1417,4.564,1418,5.348,1419,4.564,1420,5.348,1421,7.323,1422,4.564,1423,6.095,1424,5.253,1425,4.564,1426,4.564,1427,7.631,1428,6.862,1429,4.005,1430,4.564,1431,4.005,1432,3.636,1433,4.564,1434,6.095,1435,4.564,1436,6.095,1437,4.564,1438,6.095,1439,4.564,1440,4.005,1441,4.564,1442,4.564,1443,4.564,1444,4.005,1445,6.862,1446,4.564,1447,3.361,1448,4.564,1449,4.005,1450,4.564,1451,4.005,1452,6.095,1453,4.564,1454,4.564,1455,4.564,1456,4.564,1457,4.564,1458,4.564,1459,4.564,1460,6.862,1461,4.564,1462,4.564,1463,4.564,1464,4.564,1465,4.564,1466,6.095,1467,5.348,1468,4.564,1469,4.564,1470,4.564,1471,4.564,1472,4.564,1473,4.564,1474,4.564,1475,4.564,1476,4.564,1477,4.564]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.096,94,2.546]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.173,2,1.128,3,0.248,4,0.248,5,0.207,7,0.248,8,0.552,11,0.55,12,0.011,13,0.4,19,1.145,25,2.934,75,0.009,76,0.009,77,1.775,79,3.234,81,2.832,82,2.348,83,0.655,94,4.033,95,2.934,123,1.954,124,3.59,153,1.447,173,2.201,201,1.883,279,3.985,313,2.436,314,2.436,455,1.367,458,4.24,492,3.4,493,3.59,494,3.59,495,3.4,496,2.832,497,3.086,498,3.59,499,3.59,500,3.59,501,3.59,519,3.4,579,3.59,728,3.086,729,3.59,730,4.24,731,3.4,732,2.065,733,3.532,734,4.477,735,2.953,736,4.838,737,5.108,738,3.4,739,3.59,740,2.619,741,3.812,742,3.59,743,4.079,744,4.079,745,4.079,746,4.079,747,3.59,748,3.234]],["title/interfaces/LastfmAlbum.html",[0,0.096,1478,2.827]],["body/interfaces/LastfmAlbum.html",[0,0.159,2,0.9,3,0.198,4,0.198,5,0.121,7,0.198,8,0.477,10,0.826,11,0.505,12,0.011,13,0.211,19,1.135,39,1.227,75,0.007,76,0.007,77,2.317,80,1.431,82,2.029,83,0.676,86,0.826,89,0.592,101,1.878,102,1.503,140,0.554,143,1.584,149,1.565,153,1.63,157,1.717,173,3,174,1.701,215,2.9,231,1.969,233,1.648,235,1.598,241,1.701,242,2.186,246,2.164,344,1.227,418,1.052,522,1.299,723,2.015,732,1.648,740,2.091,750,1.598,753,3.553,756,2.357,757,2.261,761,2.261,762,2.224,763,1.757,764,2.173,765,2.261,766,2.357,777,3.601,779,2.261,780,2.357,781,2.357,785,2.357,786,2.156,787,2.261,788,3.051,792,2.357,800,2.357,810,2.357,818,1.878,825,1.816,1478,4.378,1479,2.866,1480,2.866,1481,4.687,1482,2.582,1483,3.484,1484,3.663,1485,3.663,1486,2.866,1487,3.868,1488,2.714,1489,3.043,1490,3.043,1491,3.043,1492,3.043,1493,3.043,1494,2.866,1495,3.043,1496,3.043,1497,3.043,1498,3.043,1499,3.043,1500,3.868,1501,3.043,1502,3.043,1503,3.043,1504,2.866,1505,3.043,1506,3.043,1507,2.866,1508,3.043,1509,3.043,1510,3.043,1511,3.043,1512,4.648,1513,5.197,1514,5.197,1515,3.043,1516,3.043,1517,3.043,1518,4.107,1519,3.043,1520,3.043,1521,3.043,1522,3.043,1523,3.043,1524,3.043,1525,3.043]],["title/interfaces/LastfmErrorResponse.html",[0,0.096,1485,2.677]],["body/interfaces/LastfmErrorResponse.html",[0,0.16,2,0.908,3,0.199,4,0.199,5,0.123,7,0.199,8,0.48,10,1.268,11,0.474,12,0.011,13,0.213,19,1.121,39,1.238,75,0.007,76,0.007,77,2.325,80,0.883,82,2.041,83,0.678,86,0.834,89,0.597,101,1.895,102,1.517,140,0.559,143,1.588,149,1.574,153,1.634,157,1.72,173,2.385,174,1.716,215,2.907,231,1.981,233,1.663,235,1.612,241,1.716,242,2.409,246,2.174,344,1.238,418,1.058,522,1.31,723,2.033,732,1.663,740,2.109,750,1.612,753,2.192,756,2.378,757,2.281,761,2.281,762,2.237,763,1.772,764,2.192,765,2.281,766,2.378,777,3.617,779,2.281,780,2.378,781,2.378,785,2.378,786,2.169,787,2.281,788,3.07,792,2.378,800,2.378,810,2.378,818,1.895,825,1.832,1478,3.891,1479,2.891,1480,2.891,1481,3.891,1482,2.604,1483,3.505,1484,3.685,1485,4.165,1486,4.704,1487,3.891,1488,2.738,1489,3.07,1490,3.07,1491,3.07,1492,3.07,1493,3.07,1494,2.891,1495,3.07,1496,3.07,1497,3.07,1498,3.07,1499,3.07,1500,3.891,1501,3.07,1502,3.07,1503,3.07,1504,2.891,1505,3.07,1506,3.07,1507,2.891,1508,3.07,1509,3.07,1510,3.07,1511,3.07,1512,4.669,1513,5.212,1514,5.212,1515,3.07,1516,3.07,1517,3.07,1518,4.131,1519,3.07,1520,3.07,1521,3.07,1522,3.07,1523,3.07,1524,3.07,1525,3.07]],["title/interfaces/LastfmImage.html",[0,0.096,1481,2.827]],["body/interfaces/LastfmImage.html",[0,0.16,2,0.908,3,0.199,4,0.199,5,0.123,7,0.199,8,0.48,10,0.834,11,0.474,12,0.011,13,0.213,19,1.136,39,1.238,75,0.007,76,0.007,77,2.325,80,0.883,82,2.041,83,0.678,86,0.834,89,0.597,101,1.895,102,1.517,140,0.559,143,1.588,149,1.574,153,1.634,157,1.72,173,2.385,174,1.716,215,2.907,231,1.981,233,1.663,235,1.612,241,1.716,242,2.194,246,2.174,344,1.238,418,1.058,522,1.31,723,2.033,732,1.663,740,2.109,750,1.612,753,2.192,756,2.378,757,2.281,761,2.281,762,2.237,763,1.772,764,2.192,765,2.281,766,2.378,777,3.617,779,2.281,780,2.378,781,2.378,785,2.378,786,2.169,787,2.281,788,3.07,792,2.378,800,2.378,810,2.378,818,1.895,825,1.832,1478,3.891,1479,2.891,1480,2.891,1481,4.398,1482,4.237,1483,4.422,1484,3.685,1485,3.685,1486,2.891,1487,3.891,1488,2.738,1489,3.07,1490,3.07,1491,3.07,1492,3.07,1493,3.07,1494,2.891,1495,3.07,1496,3.07,1497,3.07,1498,3.07,1499,3.07,1500,3.891,1501,3.07,1502,3.07,1503,3.07,1504,2.891,1505,3.07,1506,3.07,1507,2.891,1508,3.07,1509,3.07,1510,3.07,1511,3.07,1512,4.669,1513,5.212,1514,5.212,1515,3.07,1516,3.07,1517,3.07,1518,4.131,1519,3.07,1520,3.07,1521,3.07,1522,3.07,1523,3.07,1524,3.07,1525,3.07]],["title/injectables/LastfmMetadataService.html",[418,0.769,1488,2.677]],["body/injectables/LastfmMetadataService.html",[0,0.159,3,0.198,4,0.198,5,0.122,7,0.198,10,0.827,11,0.417,12,0.011,13,0.211,19,1.098,39,1.228,75,0.007,76,0.007,77,2.318,80,1.182,82,2.03,83,0.677,86,0.827,89,0.593,101,1.881,102,1.505,140,0.555,143,1.585,149,1.566,153,1.63,157,1.717,173,2.373,174,1.703,215,2.901,231,2.387,233,1.65,235,1.6,241,1.703,242,2.187,246,2.165,344,1.228,348,0.901,418,1.053,420,1.759,432,1.361,450,0.981,454,1.378,455,0.876,522,1.3,723,2.018,732,1.65,740,2.094,750,2.158,753,2.175,756,2.36,757,2.264,761,2.264,762,2.697,763,1.759,764,2.175,765,2.264,766,2.36,777,3.603,779,2.264,780,2.36,781,2.36,785,3.184,786,2.442,787,2.264,788,3.054,792,2.36,800,2.36,810,2.36,818,1.881,825,1.818,839,2.094,1478,3.871,1479,3.871,1480,2.87,1481,3.871,1482,2.585,1483,3.487,1484,3.666,1485,3.666,1486,2.87,1487,3.871,1488,3.666,1489,3.047,1490,3.047,1491,3.047,1492,3.047,1493,3.047,1494,2.87,1495,3.047,1496,3.047,1497,3.047,1498,3.047,1499,3.047,1500,3.871,1501,3.047,1502,3.047,1503,3.047,1504,2.87,1505,3.047,1506,3.047,1507,2.87,1508,3.047,1509,3.047,1510,3.047,1511,3.047,1512,4.651,1513,5.199,1514,5.199,1515,3.047,1516,3.047,1517,3.047,1518,4.11,1519,3.047,1520,3.047,1521,3.047,1522,3.047,1523,3.047,1524,3.047,1525,3.047,1526,5.24,1527,4.426]],["title/interfaces/LastfmSuccessResponse.html",[0,0.096,1484,2.677]],["body/interfaces/LastfmSuccessResponse.html",[0,0.16,2,0.916,3,0.201,4,0.201,5,0.124,7,0.201,8,0.483,10,0.841,11,0.422,12,0.011,13,0.215,19,1.101,39,1.249,75,0.007,76,0.007,77,2.56,80,0.891,82,2.053,83,0.68,86,0.841,89,0.603,101,1.912,102,1.53,140,0.564,143,1.592,149,1.583,153,1.638,157,1.723,173,2.399,174,1.731,215,2.915,231,1.993,233,1.677,235,1.626,241,1.731,242,2.202,246,2.183,344,1.249,418,1.065,522,1.322,723,2.051,732,1.677,740,2.128,750,1.626,753,2.211,756,2.4,757,2.301,761,2.301,762,2.251,763,1.788,764,2.211,765,2.301,766,2.4,777,3.634,779,2.301,780,2.4,781,2.4,785,2.4,786,2.182,787,2.301,788,3.088,792,2.4,800,2.4,810,2.4,818,1.912,825,1.848,1478,4.721,1479,2.917,1480,2.917,1481,3.914,1482,2.628,1483,3.526,1484,4.183,1485,3.707,1486,2.917,1487,3.914,1488,2.763,1489,3.097,1490,3.097,1491,3.097,1492,3.097,1493,3.097,1494,2.917,1495,3.097,1496,3.097,1497,3.097,1498,3.097,1499,3.097,1500,3.914,1501,3.097,1502,3.097,1503,3.097,1504,2.917,1505,3.097,1506,3.097,1507,2.917,1508,3.097,1509,3.097,1510,3.097,1511,3.097,1512,4.69,1513,5.228,1514,5.228,1515,3.097,1516,3.097,1517,3.097,1518,4.156,1519,3.097,1520,3.097,1521,3.097,1522,3.097,1523,3.097,1524,3.097,1525,3.097]],["title/injectables/LegacyFileLoaderService.html",[418,0.769,1528,3.826]],["body/injectables/LegacyFileLoaderService.html",[3,0.23,4,0.23,5,0.239,7,0.325,8,0.527,12,0.011,13,0.246,21,1.207,39,1.429,75,0.008,76,0.008,83,0.633,88,2.188,89,0.69,140,0.646,142,2.115,143,1.482,149,1.909,153,1.382,157,1.079,164,4.276,174,1.982,231,2.618,235,1.861,344,1.429,347,3.092,348,1.563,418,1.163,420,2.047,432,1.504,450,1.462,470,1.313,522,1.513,550,3.793,601,2.634,660,1.92,706,4.481,786,2.63,877,4.871,878,3.752,880,3.793,883,3.162,884,2.746,885,3.162,886,3.676,887,3.339,889,5.36,896,5.36,902,5.652,1069,3.339,1440,4.519,1451,4.519,1528,5.788,1529,7.933,1530,5.15,1531,5.15,1532,5.15,1533,5.15,1534,5.15,1535,5.15,1536,5.15,1537,5.15,1538,5.15,1539,5.15,1540,5.15,1541,5.15,1542,5.15,1543,5.15,1544,5.15,1545,5.15,1546,5.15,1547,5.15,1548,5.15,1549,5.15,1550,5.15,1551,5.15,1552,5.15]],["title/components/LibraryComponent.html",[84,0.966,141,1.678]],["body/components/LibraryComponent.html",[0,0.038,3,0.078,4,0.078,5,0.147,7,0.198,8,0.233,10,1.289,11,0.461,12,0.011,13,0.139,16,1.229,19,1.028,21,1.547,39,1.229,75,0.004,76,0.004,77,2.478,78,1.523,79,2.205,80,1.495,81,1.932,82,0.992,83,0.637,84,0.837,85,3.463,86,0.324,87,2.6,88,1.881,89,0.232,90,1.065,91,1.38,92,1.013,93,0.887,94,4.278,95,3.236,96,1.013,97,3.314,98,1.065,99,2.448,100,1.125,101,0.737,102,0.59,103,3.009,104,3.314,105,3.314,106,2.782,107,1.194,108,2.361,109,1.065,110,3.009,111,0.887,112,3.009,113,0.791,114,3.009,115,3.009,116,3.009,117,1.383,118,3.009,119,1.278,120,0.887,121,2.149,122,1.278,123,1.225,124,1.125,125,2.586,126,1.194,127,3.009,128,1.278,129,3.314,130,3.314,131,3.314,132,3.314,133,3.314,134,1.523,135,1.088,136,2.561,137,1.33,138,2.561,139,1.088,140,0.218,141,1.704,142,1.199,143,0.769,144,1.125,145,1.125,146,1.383,147,2.009,148,1.704,149,2.054,150,4.992,151,1.523,152,3.314,153,1.727,154,3.885,155,2.561,156,2.561,157,1.608,158,2.561,159,2.561,160,2.561,161,2.561,162,2.561,163,3.314,164,3.469,165,4.334,166,3.009,167,3.314,168,6.348,169,4.992,170,2.561,171,2.561,172,2.561,173,3.161,174,1.704,175,2.561,176,4.263,177,2.561,178,3.314,179,3.885,180,5.241,181,3.885,182,4.695,183,2.468,184,2.325,185,2.782,186,4.533,187,2.561,188,2.009,189,3.885,190,2.561,191,2.561,192,2.561,193,2.561,194,2.561,195,2.561,196,2.561,197,5.259,198,2.561,199,2.325,200,2.361,201,1.506,202,2.561,203,4.695,204,2.325,205,1.556,206,4.695,207,2.561,208,2.561,209,4.695,210,2.561,211,2.561,212,1.38,213,3.885,214,2.561,215,2.697,216,2.561,217,3.885,218,3.885,219,2.561,220,2.561,221,2.561,222,2.561,223,2.561,224,2.561,225,2.325,226,1.704,227,1.556,228,2.561,229,2.561,230,2.561,231,2.388,232,1.194,233,0.647,234,1.523,235,2.32,236,1.523,237,1.523,238,1.523,239,1.523,240,1.523,241,0.668,242,0.882,243,1.278,244,1.383,245,0.967,246,0.556,247,2.561,248,1.523,249,1.523,250,2.325,251,2.561,252,1.523,253,2.561,254,1.523,255,2.325,256,1.383,257,1.523,258,1.523,259,2.561,260,3.314,261,1.523,262,3.885,263,1.523,264,2.561,265,2.561,266,3.885,267,1.278,268,1.523,269,1.523,270,1.523,271,1.523,272,1.523,273,2.561,274,1.523,275,2.561,276,2.561,277,3.314,278,1.523,279,0.853,280,1.523,281,1.523,282,1.523,283,1.065,284,2.561,285,2.561,286,2.325,287,1.523,334,0.69,335,0.935,336,0.713,337,0.713,338,0.713,342,2.762,343,2.745,345,0.69,348,1.551,373,0.713,374,1.16,375,1.023,376,0.608,377,1.819,378,0.713,379,0.713,380,0.69,381,0.54,382,0.713,383,0.69,384,0.713,385,0.69,386,0.647,387,0.713,388,0.608,389,0.627,390,0.627,391,1.199,392,0.69,393,1.819,394,0.69,395,0.713,396,0.69,397,0.627,398,0.713,399,0.69,400,0.713,401,0.647,402,0.69,403,0.69,404,0.713,405,0.69,406,0.668,407,0.713,408,0.69,409,0.713,410,0.69,411,0.647,412,0.69,413,0.69,414,0.69,415,0.668,416,0.69,417,0.713,432,0.665,450,1.463,454,2.054,455,1.306,470,1.637,600,3.683,1553,2.918,1554,2.918,1555,2.918,1556,2.561,1557,2.918,1558,2.918,1559,2.918,1560,2.918,1561,2.918,1562,2.918,1563,2.561,1564,1.735,1565,1.735,1566,1.735,1567,1.735,1568,1.735,1569,1.735,1570,1.735,1571,1.735,1572,1.735,1573,1.735,1574,1.735,1575,1.735,1576,1.735,1577,1.735,1578,1.735,1579,1.735,1580,1.735,1581,1.735,1582,1.735,1583,1.735,1584,1.735,1585,2.918,1586,3.683,1587,2.918,1588,2.918,1589,4.428,1590,4.428,1591,2.918,1592,4.428,1593,4.428,1594,4.428,1595,2.918]],["title/interceptors/LoaderInterceptor.html",[1596,4.36,1597,3.474]],["body/interceptors/LoaderInterceptor.html",[3,0.268,4,0.268,5,0.165,7,0.268,11,0.419,12,0.011,13,0.286,75,0.009,76,0.009,80,1.187,83,0.721,86,1.121,89,0.803,102,2.04,140,0.753,142,2.464,143,1.222,157,1.257,348,1.222,418,1.279,432,1.654,450,1.33,454,1.867,455,1.187,757,3.069,923,4.13,1302,5.368,1597,5.78,1598,6,1599,6,1600,7.254,1601,7.254,1602,8.101,1603,6.842,1604,8.101,1605,6,1606,6,1607,7.254,1608,6,1609,5.265,1610,5.343,1611,6,1612,5.265,1613,6,1614,6,1615,6]],["title/injectables/LoaderService.html",[418,0.769,1610,3.211]],["body/injectables/LoaderService.html",[3,0.261,4,0.261,5,0.16,7,0.261,8,0.571,12,0.011,13,0.279,16,1.981,21,1.369,39,2.228,41,2.931,75,0.009,76,0.01,83,0.508,88,2.481,89,0.782,140,0.733,143,1.189,149,2.021,344,1.621,348,1.569,418,1.259,420,2.321,426,6.763,432,1.627,450,1.582,470,1.489,503,5.686,522,1.716,595,5.125,598,5.125,624,5.125,1610,5.256,1616,5.841,1617,8.233,1618,7.224,1619,5.841,1620,5.841,1621,5.841,1622,5.841,1623,8.233,1624,5.841,1625,5.841,1626,4.654]],["title/injectables/MediaSessionService.html",[418,0.769,1627,3.001]],["body/injectables/MediaSessionService.html",[3,0.209,4,0.209,5,0.129,7,0.209,10,1.478,11,0.516,12,0.011,13,0.223,16,2.194,29,4.493,75,0.008,76,0.008,80,1.464,83,0.539,86,0.874,89,0.627,123,1.16,140,0.587,143,1.262,153,1.456,174,1.8,233,2.31,241,2.384,242,1.873,344,1.298,347,2.952,348,1.567,418,1.093,419,3.169,420,1.859,423,6.3,424,5.447,432,1.413,450,1.639,454,2.302,455,1.464,471,3.033,522,1.374,540,4.105,905,3.619,943,2.732,948,4.504,1334,5.091,1627,4.266,1628,6.938,1629,6.3,1630,4.679,1631,6.197,1632,6.197,1633,6.197,1634,6.197,1635,4.679,1636,6.197,1637,6.948,1638,7.694,1639,6.49,1640,4.679,1641,6.197,1642,6.948,1643,4.679,1644,6.197,1645,4.679,1646,6.197,1647,4.679,1648,4.679,1649,4.937,1650,5.437,1651,4.679,1652,4.105,1653,4.679,1654,4.679,1655,4.679,1656,4.679,1657,4.105,1658,4.679,1659,4.679,1660,6.197,1661,4.937,1662,5.437,1663,6.197,1664,4.679,1665,4.679,1666,4.105,1667,4.679,1668,4.679,1669,4.679,1670,4.679,1671,4.679,1672,4.679,1673,4.679]],["title/injectables/MetadataService.html",[125,2.546,418,0.769]],["body/injectables/MetadataService.html",[3,0.116,4,0.116,5,0.155,7,0.116,8,0.324,11,0.487,12,0.011,13,0.124,19,0.349,21,1.429,41,1.666,43,1.849,55,1.52,75,0.005,76,0.005,77,0.834,79,2.909,80,1.113,81,1.332,82,1.379,83,0.659,85,2.776,86,0.487,88,1.106,89,0.349,90,1.598,91,1.918,92,1.52,93,1.332,94,2.368,95,2.743,96,1.52,101,1.106,102,0.885,123,1.729,125,2.368,140,0.327,143,1.42,144,1.688,145,1.688,149,2.11,153,1.706,157,1.609,173,1.035,174,1.002,188,2.792,201,0.885,215,2.273,231,2.462,233,0.971,235,2.837,241,1.002,242,1.226,243,1.917,279,1.993,299,2.877,344,0.722,348,1.459,381,1.262,418,0.715,420,1.035,432,0.925,450,1.247,454,1.75,455,1.113,470,1.555,488,3.559,517,2.368,518,1.388,522,0.765,523,1.52,525,1.688,557,1.52,600,1.792,660,2.6,691,3.559,706,3.284,723,3.179,727,3.771,733,2.074,737,4.371,738,3.743,739,1.688,740,1.231,741,1.792,742,1.688,750,2.647,763,1.035,764,1.279,775,1.598,778,2.49,786,2.333,787,2.074,788,2.074,818,2.117,825,2.046,830,4.186,831,2.657,832,1.688,833,1.688,834,1.688,835,1.688,836,1.688,839,2.66,878,1.231,884,4.096,885,1.598,905,2.368,997,1.917,1025,1.451,1162,2.074,1416,3.232,1488,2.49,1674,2.284,1675,4.982,1676,4.982,1677,4.982,1678,4.982,1679,4.982,1680,3.559,1681,4.056,1682,4.056,1683,4.056,1684,2.603,1685,2.603,1686,2.284,1687,4.056,1688,4.056,1689,2.603,1690,3.97,1691,4.056,1692,2.603,1693,4.056,1694,2.603,1695,4.056,1696,2.603,1697,4.935,1698,4.056,1699,4.056,1700,2.603,1701,4.056,1702,2.603,1703,4.056,1704,2.603,1705,4.056,1706,2.603,1707,2.603,1708,2.284,1709,2.603,1710,2.603,1711,1.792,1712,2.603,1713,2.284,1714,3.559,1715,2.284,1716,2.603,1717,2.603,1718,2.603,1719,2.603,1720,2.603,1721,2.603,1722,2.603,1723,2.603,1724,2.603,1725,2.603,1726,2.603,1727,2.603,1728,2.603,1729,4.056,1730,2.603,1731,2.284,1732,2.284,1733,2.603,1734,2.603,1735,2.603,1736,2.603,1737,2.603,1738,2.603,1739,4.056,1740,2.603,1741,2.603,1742,2.603,1743,4.056,1744,4.982,1745,2.603,1746,2.603,1747,4.056,1748,2.603,1749,5.625,1750,4.056,1751,4.056,1752,3.232,1753,3.232,1754,3.559,1755,4.982,1756,2.603,1757,2.603,1758,4.056,1759,4.982,1760,3.232,1761,2.603,1762,2.603,1763,2.603,1764,2.603,1765,6.096,1766,2.603,1767,2.603,1768,2.603,1769,2.603,1770,2.603,1771,2.603,1772,2.603,1773,6.096,1774,2.603,1775,4.056,1776,2.603,1777,4.056,1778,4.056,1779,2.603,1780,2.603,1781,2.603,1782,2.603,1783,2.603,1784,2.603,1785,2.603,1786,2.603,1787,2.603,1788,2.603,1789,2.603,1790,2.603,1791,2.603,1792,2.603,1793,2.603,1794,2.603,1795,2.603,1796,2.603,1797,2.603,1798,2.603,1799,2.603,1800,2.603,1801,2.603,1802,2.603,1803,2.284,1804,2.603,1805,5.625,1806,2.603,1807,2.284,1808,2.603,1809,4.056,1810,4.982,1811,2.603,1812,2.603,1813,2.603,1814,4.982,1815,2.603,1816,2.603,1817,2.603,1818,4.056,1819,2.603,1820,2.603,1821,4.056,1822,2.603,1823,2.603,1824,2.603,1825,2.603,1826,4.056,1827,2.284,1828,2.603,1829,2.603,1830,2.603,1831,2.074,1832,2.603,1833,2.603,1834,2.603,1835,2.603,1836,2.603,1837,2.603,1838,2.603,1839,2.603,1840,2.603,1841,2.284,1842,2.603,1843,2.603,1844,2.603,1845,2.603,1846,2.603,1847,2.603,1848,2.603,1849,2.603,1850,2.603,1851,2.603,1852,2.603,1853,2.603,1854,2.603,1855,2.603,1856,1.792]],["title/components/MetadataSettingsComponent.html",[84,0.966,392,1.733]],["body/components/MetadataSettingsComponent.html",[3,0.179,4,0.179,5,0.208,7,0.179,8,0.446,11,0.485,12,0.011,13,0.192,16,1.926,21,0.941,75,0.007,76,0.007,80,1.564,83,0.674,84,1.423,86,0.75,89,0.537,90,2.464,91,2.641,92,3.75,93,3.732,113,1.83,123,2.015,125,4.054,126,2.763,135,2.082,139,2.082,140,0.503,141,1.544,143,1.137,144,2.602,145,2.602,147,3.844,212,2.641,231,2.119,235,1.45,334,1.595,335,1.789,336,1.648,337,1.648,338,1.648,342,3.213,343,3.281,345,1.595,348,1.538,373,1.648,374,2.219,375,1.957,376,1.407,377,2.851,378,1.648,379,1.648,380,1.595,381,1.249,382,1.648,383,1.595,384,1.648,385,1.595,386,1.496,387,1.648,388,1.407,389,1.45,390,1.45,391,2.293,392,2.759,393,2.851,394,1.595,395,1.648,396,1.595,397,1.45,398,1.648,399,1.595,400,1.648,401,1.496,402,1.595,403,1.595,404,1.648,405,1.595,406,1.544,407,1.648,408,1.595,409,1.648,410,1.595,411,1.496,412,1.595,413,1.595,414,1.595,415,1.544,416,1.595,417,1.648,432,1.273,450,1.617,454,2.16,455,1.374,470,1.023,517,3.261,518,2.14,523,2.344,580,3.868,601,3.55,793,3.261,839,3.738,969,4.449,1269,3.844,1374,3.284,1494,3.62,1857,7.749,1858,6.8,1859,3.198,1860,5.116,1861,6.421,1862,4.112,1863,6.942,1864,5.584,1865,5.584,1866,5.584,1867,5.584,1868,4.013,1869,5.584,1870,8.347,1871,4.013,1872,5.584,1873,4.013,1874,5.584,1875,4.013,1876,5.584,1877,4.013,1878,4.013,1879,4.013,1880,3.522,1881,3.522,1882,3.198,1883,4.013,1884,4.013,1885,6.942,1886,4.013,1887,4.013,1888,4.013,1889,4.013,1890,4.013,1891,4.013,1892,4.013,1893,5.584,1894,6.091,1895,5.584]],["title/interfaces/MusicbrainzReleaseGroup.html",[0,0.096,767,2.827]],["body/interfaces/MusicbrainzReleaseGroup.html",[0,0.156,2,0.853,3,0.187,4,0.187,5,0.115,7,0.187,8,0.46,10,0.783,11,0.459,12,0.011,13,0.2,19,1.143,22,1.383,39,1.163,75,0.007,76,0.007,77,1.343,82,1.425,83,0.682,86,0.783,89,0.561,101,1.78,102,1.425,140,0.525,143,1.509,149,1.509,153,1.673,157,1.734,200,2.234,201,2.404,205,3.951,212,2.721,215,2.977,226,2.447,227,2.234,231,2.168,233,2.636,235,2.555,241,2.528,242,2.314,246,1.343,283,2.572,344,1.163,381,2.044,418,1.014,455,1.138,496,2.143,522,1.231,544,2.234,723,2.622,732,1.562,749,3.729,750,1.514,751,2.884,752,4.522,753,3.228,754,3.96,756,2.234,757,2.143,758,2.884,759,2.716,760,2.716,761,3.359,762,2.144,763,1.665,764,2.059,765,2.143,766,2.234,767,4.258,768,3.378,769,4.963,770,4.341,771,2.716,772,3.96,773,2.884,774,3.729,775,2.572,776,2.716,777,2.234,778,2.572,779,2.143,780,2.234,781,2.234,782,2.884,783,2.884,784,2.884,785,2.234,786,2.374,787,2.143,788,2.942,789,3.96,790,2.884,791,2.884,792,3.067,793,2.447,794,2.884,795,2.884,796,2.884,797,2.884,798,2.884,799,2.884,800,3.067,801,3.96,802,2.884,803,2.884,804,2.716,805,2.884,806,2.884,807,2.884,808,2.884,809,2.884,810,2.234,811,4.867,812,2.884,813,2.884,814,2.884,815,2.884,816,2.572,817,2.884,818,2.444,819,2.884,820,2.884,821,2.884,822,3.96,823,2.884,824,2.716,825,2.363,826,2.884,827,2.884]],["title/interfaces/MusicbrainzResponse.html",[0,0.096,771,2.827]],["body/interfaces/MusicbrainzResponse.html",[0,0.156,2,0.866,3,0.19,4,0.19,5,0.117,7,0.19,8,0.464,10,1.237,11,0.406,12,0.011,13,0.203,19,1.101,22,1.403,39,1.179,75,0.007,76,0.007,77,1.362,82,1.445,83,0.684,86,0.794,89,0.569,101,1.806,102,1.445,140,0.533,143,1.517,149,1.523,153,1.679,157,1.738,200,2.267,201,1.445,205,3.098,212,2.748,215,2.987,226,2.482,227,2.267,231,2.184,233,2.652,235,2.57,241,2.546,242,2.325,246,1.362,283,2.61,344,1.179,381,2.06,418,1.024,496,2.174,522,1.249,544,2.267,723,2.648,732,1.585,749,3.766,750,1.536,751,2.926,752,4.555,753,3.252,754,3.999,756,2.267,757,2.174,758,2.926,759,2.755,760,2.755,761,3.385,762,2.166,763,1.689,764,2.089,765,2.174,766,2.267,767,4.611,768,2.648,769,4.984,770,2.61,771,3.766,772,5.127,773,4.896,774,3.766,775,2.61,776,2.755,777,2.267,778,2.61,779,2.174,780,2.267,781,2.267,782,2.926,783,2.926,784,2.926,785,2.267,786,2.391,787,2.174,788,2.971,789,3.999,790,2.926,791,2.926,792,3.098,793,2.482,794,2.926,795,2.926,796,2.926,797,2.926,798,2.926,799,2.926,800,3.098,801,3.999,802,2.926,803,2.926,804,2.755,805,2.926,806,2.926,807,2.926,808,2.926,809,2.926,810,2.267,811,4.896,812,2.926,813,2.926,814,2.926,815,2.926,816,2.61,817,2.926,818,2.468,819,2.926,820,2.926,821,2.926,822,3.999,823,2.926,824,2.755,825,2.386,826,2.926,827,2.926]],["title/injectables/MusicbrainzService.html",[418,0.769,778,2.677]],["body/injectables/MusicbrainzService.html",[0,0.156,3,0.19,4,0.19,5,0.117,7,0.19,10,0.792,11,0.296,12,0.011,13,0.202,19,1.1,22,1.399,39,1.177,75,0.007,76,0.007,77,1.359,80,0.839,82,1.442,83,0.684,86,0.792,89,0.568,101,1.801,102,1.442,140,0.532,143,1.515,149,1.521,153,1.678,157,1.738,200,2.261,201,1.442,205,3.093,212,2.743,215,2.985,226,2.476,227,2.261,231,2.456,233,2.649,235,2.568,241,2.543,242,2.323,246,1.359,283,2.603,344,1.177,348,0.863,381,2.057,418,1.023,420,1.685,432,1.322,450,0.94,454,1.32,455,0.839,496,2.169,522,1.246,544,2.261,723,2.644,732,1.581,749,3.76,750,2.096,751,2.919,752,4.55,753,3.248,754,3.992,756,2.261,757,2.169,758,2.919,759,2.749,760,2.749,761,3.38,762,2.649,763,1.685,764,2.084,765,2.169,766,2.261,767,3.76,768,2.644,769,4.285,770,2.603,771,2.749,772,3.992,773,2.919,774,3.76,775,2.603,776,2.749,777,2.261,778,3.561,779,2.169,780,2.261,781,2.261,782,2.919,783,2.919,784,2.919,785,3.093,786,2.568,787,2.169,788,2.966,789,3.992,790,2.919,791,2.919,792,3.093,793,2.476,794,2.919,795,2.919,796,2.919,797,2.919,798,2.919,799,2.919,800,3.093,801,3.992,802,2.919,803,2.919,804,2.749,805,2.919,806,2.919,807,2.919,808,2.919,809,2.919,810,2.261,811,4.891,812,2.919,813,2.919,814,2.919,815,2.919,816,2.603,817,2.919,818,2.464,819,2.919,820,2.919,821,2.919,822,3.992,823,2.919,824,2.749,825,2.382,826,2.919,827,2.919,839,2.006,1526,5.089,1896,4.24]],["title/injectables/NativeBrowserFileLoaderService.html",[418,0.769,888,3.474]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.099,3,0.201,4,0.201,5,0.23,7,0.201,8,0.482,10,0.839,12,0.011,13,0.214,21,1.052,41,1.844,75,0.007,76,0.007,83,0.66,86,0.839,88,1.907,89,0.601,90,2.756,91,2.123,92,2.621,93,2.296,101,1.907,102,1.526,140,0.563,142,1.844,143,0.914,144,2.91,145,2.91,149,1.785,153,1.637,157,1.672,164,3.907,231,2.678,233,1.673,235,2.824,241,1.727,242,1.822,279,2.206,344,1.246,347,2.891,348,1.481,354,3.729,418,1.063,420,1.784,432,1.374,450,1.336,470,1.145,472,3.083,522,1.319,557,2.621,660,2.247,706,2.621,768,2.748,786,2.742,876,3.576,877,4.659,878,3.589,879,6.046,880,3.306,881,5.065,882,5.422,883,2.756,884,3.879,885,2.756,886,3.359,887,2.91,888,4.802,889,5.012,890,3.938,891,3.938,892,5.422,893,3.938,894,5.289,895,3.938,896,5.358,897,3.938,898,3.938,899,3.938,900,3.938,901,3.938,902,5.358,903,3.938,904,3.938,905,3.52,906,3.576,907,3.938,908,3.938,909,3.938,910,3.576,911,3.306,912,3.938,913,3.938,914,3.938,915,3.576,916,3.938,917,3.306,918,3.576,919,3.938,920,3.938,921,3.938,922,3.576,923,3.09,924,5.971,925,4.802,926,3.576,927,3.938,928,3.938,929,3.938,1897,6.027,1898,4.488,1899,4.488]],["title/interfaces/OscVisualizerOptions.html",[0,0.096,332,2.23]],["body/interfaces/OscVisualizerOptions.html",[0,0.183,2,1.034,3,0.227,4,0.227,5,0.139,7,0.227,8,0.523,10,1.648,11,0.551,12,0.011,13,0.408,18,3.213,19,1.022,22,1.675,25,3.071,75,0.008,76,0.008,288,2.829,289,2.829,290,3.751,291,2.964,292,2.964,293,2.964,294,2.707,295,2.596,296,2.707,297,2.707,298,2.707,299,2.596,300,2.707,301,2.707,302,2.707,303,2.829,304,2.829,305,2.596,306,3.485,307,3.342,308,3.342,309,3.342,310,2.596,311,4.039,312,2.707,313,2.875,314,2.875,315,3.342,316,2.707,317,2.495,318,2.596,319,2.829,320,2.964,321,2.596,322,3.552,323,2.707,324,2.495,325,4.253,326,3.091,327,2.707,328,3.342,329,3.61,330,3.824,331,2.495,332,3.697,333,4.095]],["title/interfaces/OsciloscopeConfig.html",[0,0.096,310,2.23]],["body/interfaces/OsciloscopeConfig.html",[0,0.184,2,1.056,3,0.232,4,0.232,5,0.143,7,0.232,8,0.53,10,1.651,11,0.537,12,0.011,13,0.409,18,2.902,19,1.03,22,1.712,25,2.816,75,0.008,76,0.008,288,2.891,289,2.891,290,3.782,291,3.029,292,3.029,293,3.029,294,2.767,295,2.653,296,2.767,297,2.767,298,2.767,299,2.653,300,2.767,301,2.767,302,2.767,303,2.891,304,2.891,305,2.653,306,3.534,307,3.39,308,3.39,309,3.39,310,3.39,311,4.067,312,2.767,313,2.915,314,2.915,315,3.39,316,2.767,317,2.55,318,2.653,319,2.891,320,3.029,321,2.653,322,3.589,323,2.767,324,2.55,325,4.07,326,3.135,327,2.767,328,3.39,329,3.64,330,3.64,331,2.55,332,3.39,333,3.782]],["title/components/PlayerComponent.html",[84,0.966,394,1.733]],["body/components/PlayerComponent.html",[3,0.203,4,0.203,5,0.188,7,0.203,8,0.485,12,0.011,13,0.216,21,1.604,75,0.008,76,0.008,80,1.446,83,0.739,84,1.516,86,0.847,87,4.709,89,0.607,107,3.121,108,3.895,109,2.784,111,2.319,113,2.067,123,1.505,135,2.262,137,2.766,139,2.262,140,0.569,141,1.745,142,2.493,143,1.236,148,3.544,232,3.121,334,1.802,335,1.945,336,1.862,337,1.862,338,1.862,340,3.726,341,3.726,342,3.253,343,3.329,345,1.802,348,1.236,350,2.784,373,1.862,374,2.412,375,2.127,376,1.589,377,3,378,1.862,379,1.862,380,2.903,381,1.889,382,1.862,383,1.802,384,1.862,385,1.802,386,1.69,387,1.862,388,1.589,389,1.639,390,1.639,391,2.493,392,1.802,393,3,394,2.903,395,1.862,396,1.802,397,2.472,398,1.862,399,2.903,400,1.862,401,1.69,402,1.802,403,1.802,404,1.862,405,1.802,406,1.745,407,1.862,408,1.802,409,1.862,410,1.802,411,1.69,412,1.802,413,1.802,414,1.802,415,1.745,416,1.802,417,1.862,419,3.736,470,1.548,840,3.979,878,2.145,886,3.382,887,2.94,932,5.45,943,3.544,951,2.784,952,3.34,1025,2.527,1373,4.2,1374,3.498,1900,4.534,1901,6.002,1902,5.45,1903,5.45,1904,6.069,1905,6.069,1906,4.534,1907,4.534,1908,4.47,1909,3.979,1910,3.34,1911,3.613,1912,4.534,1913,4.534,1914,3.979,1915,3.613,1916,4.534]],["title/injectables/PlayerService.html",[108,2.325,418,0.769]],["body/injectables/PlayerService.html",[3,0.1,4,0.1,5,0.174,7,0.1,8,0.287,10,1.336,11,0.489,12,0.011,13,0.106,16,1.941,19,0.603,21,1.598,39,1.762,41,2.119,43,1.017,75,0.004,76,0.004,77,0.715,80,1.349,83,0.622,85,3.539,86,0.417,88,1.913,89,0.299,91,1.055,95,3.45,96,1.303,108,1.914,123,0.553,125,2.096,126,1.536,140,0.28,143,1.483,147,1.536,149,2.13,153,1.683,157,1.651,164,3.345,166,4.505,173,0.887,201,0.759,205,1.914,215,2.252,231,2.692,233,0.832,235,2.387,241,0.859,242,1.361,243,1.643,250,1.778,255,1.778,256,1.778,279,1.764,313,2.657,314,2.657,321,2.639,344,0.619,347,1.913,348,1.675,355,2.204,356,1.536,365,1.536,418,0.633,419,1.836,420,0.887,423,3.588,432,0.818,437,1.778,450,1.733,454,2.121,455,1.415,463,2.509,468,3.951,470,1.887,472,2.639,517,2.096,518,1.19,522,0.655,523,1.303,557,1.303,564,1.778,603,1.447,660,1.679,680,4.528,728,2.875,738,2.204,742,2.327,747,1.447,748,1.303,786,1.627,878,1.698,883,1.37,884,3.221,885,1.37,886,2,887,1.447,905,1.303,910,1.778,943,1.303,948,2.327,951,1.37,1025,2,1130,1.958,1396,1.958,1449,1.958,1500,1.447,1556,3.15,1586,3.552,1603,4.528,1627,2.471,1629,1.778,1639,1.958,1657,3.15,1686,3.15,1915,1.778,1917,1.958,1918,4.503,1919,4.503,1920,4.503,1921,4.503,1922,4.503,1923,3.589,1924,4.503,1925,3.589,1926,3.589,1927,4.503,1928,3.589,1929,3.15,1930,3.15,1931,5.16,1932,4.503,1933,3.589,1934,3.589,1935,4.528,1936,4.528,1937,2.231,1938,2.231,1939,2.231,1940,3.589,1941,2.231,1942,3.588,1943,2.231,1944,2.231,1945,2.231,1946,2.231,1947,2.231,1948,3.589,1949,2.231,1950,2.231,1951,3.589,1952,2.231,1953,3.589,1954,2.231,1955,5.16,1956,3.589,1957,2.231,1958,2.231,1959,2.231,1960,2.231,1961,2.231,1962,3.589,1963,2.231,1964,2.231,1965,2.231,1966,2.231,1967,3.589,1968,3.589,1969,3.589,1970,2.231,1971,2.231,1972,2.231,1973,6.041,1974,5.16,1975,3.589,1976,3.589,1977,2.231,1978,3.589,1979,2.231,1980,3.589,1981,2.231,1982,2.231,1983,3.589,1984,2.231,1985,1.643,1986,2.471,1987,2.231,1988,2.231,1989,2.231,1990,1.778,1991,1.643,1992,1.643,1993,2.231,1994,2.231,1995,1.778,1996,1.778,1997,3.589,1998,2.231,1999,3.589,2000,2.231,2001,2.231,2002,3.589,2003,2.231,2004,3.589,2005,2.231,2006,2.231,2007,2.231,2008,2.231,2009,2.231,2010,2.231,2011,2.231,2012,2.231,2013,2.231,2014,3.589,2015,2.231,2016,3.15,2017,2.231,2018,1.958,2019,2.231,2020,3.589,2021,2.231,2022,1.958,2023,1.958,2024,3.589,2025,1.958,2026,2.231,2027,2.231,2028,2.231,2029,2.231,2030,2.231,2031,2.231,2032,2.231,2033,1.958,2034,2.231,2035,1.958,2036,4.503,2037,2.231,2038,2.231,2039,2.231,2040,2.231,2041,2.231,2042,2.231,2043,2.231,2044,2.231,2045,2.231,2046,2.231,2047,2.231,2048,2.231,2049,2.231,2050,2.231,2051,2.231,2052,2.231,2053,2.231,2054,2.231,2055,2.231,2056,2.231,2057,2.231,2058,2.231,2059,2.231,2060,2.231,2061,2.231,2062,2.231,2063,2.231,2064,2.231,2065,2.231,2066,2.231,2067,2.231,2068,2.231,2069,2.231,2070,1.958,2071,3.589,2072,3.15,2073,3.15,2074,1.958,2075,1.958,2076,2.231,2077,4.503,2078,1.958,2079,2.231,2080,2.231,2081,2.231,2082,2.231,2083,2.231,2084,3.589,2085,2.231,2086,3.589,2087,2.231,2088,2.231,2089,2.231,2090,1.958,2091,2.231,2092,5.16,2093,2.231,2094,2.231,2095,2.231,2096,2.231,2097,2.231,2098,2.231,2099,2.231,2100,2.231,2101,3.589,2102,2.231,2103,2.231,2104,2.231,2105,3.589,2106,1.303,2107,2.231,2108,2.63,2109,2.231,2110,3.1,2111,2.231,2112,2.231,2113,2.231,2114,2.231,2115,2.231,2116,1.958,2117,3.588,2118,3.588,2119,2.231,2120,2.231,2121,1.778,2122,1.958,2123,2.231,2124,2.231,2125,2.231,2126,2.231]],["title/components/PlayerToolbarComponent.html",[84,0.966,396,1.733]],["body/components/PlayerToolbarComponent.html",[3,0.123,4,0.123,5,0.142,7,0.123,8,0.339,10,1.508,11,0.48,12,0.011,13,0.131,16,2.064,19,0.567,21,1.359,34,1.691,35,4.056,37,1.608,39,1.432,70,1.691,75,0.005,76,0.005,80,1.498,83,0.696,84,1.144,85,2.877,86,0.515,87,3.553,89,0.369,103,4.113,106,3.802,107,1.896,108,3.091,109,1.691,110,4.113,111,1.408,112,4.113,113,1.255,123,1.05,135,1.579,137,1.931,139,1.579,140,0.345,141,1.06,142,1.74,143,1.051,148,2.474,149,1.354,157,0.577,231,1.913,232,1.896,295,1.408,334,1.094,335,1.357,336,1.131,337,1.131,338,1.131,340,2.601,341,2.601,342,3.063,343,3.055,345,1.094,348,1.63,350,1.691,373,1.131,374,1.683,375,1.485,376,0.965,377,2.38,378,1.131,379,1.131,380,1.094,381,0.857,382,1.131,383,1.094,384,1.131,385,1.094,386,1.027,387,1.131,388,0.965,389,0.995,390,0.995,391,1.74,392,1.094,393,2.38,394,1.094,395,1.131,396,2.303,397,2.487,398,1.131,399,1.094,400,1.131,401,1.027,402,1.094,403,1.094,404,1.131,405,1.094,406,1.06,407,1.131,408,1.094,409,1.131,410,1.094,411,1.027,412,1.094,413,1.094,414,1.094,415,1.06,416,1.094,417,1.131,419,2.964,431,2.416,432,0.966,450,1.702,454,2.142,455,1.442,463,2.361,470,2.071,660,1.579,748,2.474,843,3.802,858,2.416,860,3.375,868,3.757,878,1.303,886,3.23,887,1.785,943,2.474,951,1.691,952,2.028,977,2.416,1025,1.535,1052,3.346,1098,1.785,1174,2.746,1241,1.691,1293,2.028,1294,1.785,1295,2.028,1297,1.691,1306,2.601,1831,3.375,1903,4.113,1910,2.028,1911,2.194,1915,3.375,1929,3.717,1930,3.717,1935,4.53,1936,4.53,2106,2.474,2108,3.858,2127,8.066,2128,7.078,2129,2.754,2130,3.717,2131,5.162,2132,5.162,2133,5.162,2134,5.162,2135,5.162,2136,4.236,2137,4.236,2138,5.162,2139,4.236,2140,4.236,2141,4.236,2142,5.162,2143,4.236,2144,4.236,2145,5.162,2146,5.162,2147,2.754,2148,2.754,2149,2.754,2150,2.754,2151,2.754,2152,2.754,2153,2.754,2154,4.236,2155,2.754,2156,4.236,2157,2.754,2158,2.754,2159,2.754,2160,2.754,2161,2.754,2162,2.754,2163,2.754,2164,2.754,2165,2.754,2166,2.754,2167,2.754,2168,2.754,2169,4.236,2170,2.754,2171,2.194,2172,2.416,2173,2.416,2174,2.416,2175,2.754,2176,2.416,2177,2.754,2178,2.754,2179,2.754,2180,2.754,2181,2.754,2182,2.754,2183,4.236,2184,4.236,2185,2.754,2186,2.754,2187,2.754,2188,2.754,2189,2.754,2190,2.754,2191,2.754,2192,2.754,2193,4.236,2194,2.754,2195,4.236,2196,5.162,2197,2.754,2198,2.754,2199,2.754,2200,2.754,2201,2.754,2202,2.754,2203,2.754,2204,4.236,2205,2.754,2206,4.236,2207,2.754,2208,2.754,2209,2.754,2210,2.754,2211,2.754,2212,2.754,2213,2.754,2214,2.754,2215,2.754,2216,2.754,2217,2.754,2218,2.754,2219,2.754,2220,2.754,2221,2.754,2222,2.754,2223,2.754,2224,2.754,2225,2.754,2226,2.754,2227,2.754,2228,2.754,2229,2.754,2230,2.754,2231,2.754,2232,5.795,2233,2.754,2234,3.717,2235,5.085,2236,4.236,2237,4.236,2238,3.717,2239,4.236,2240,4.236,2241,4.236]],["title/components/PlaylistComponent.html",[84,0.966,399,1.733]],["body/components/PlaylistComponent.html",[3,0.115,4,0.115,5,0.11,7,0.179,8,0.32,10,0.922,11,0.422,12,0.011,13,0.122,16,1.368,19,0.536,21,1.307,39,1.111,41,1.645,43,2.248,45,1.366,75,0.005,76,0.005,80,1.411,83,0.687,84,1.093,85,2.748,86,0.479,88,2.725,89,0.343,95,3.431,96,1.496,99,3.197,100,1.661,106,1.887,107,1.764,108,2.973,109,1.573,111,1.31,113,1.168,114,3.929,115,3.929,116,3.929,117,2.041,118,3.929,119,1.887,120,1.31,123,0.993,127,3.929,128,1.887,135,1.493,137,1.826,139,1.493,140,0.321,141,0.986,143,1.135,148,2.339,149,1.758,153,1.711,157,1.453,212,1.212,231,1.627,286,3.191,334,1.018,335,1.283,336,1.052,337,1.052,338,1.052,340,2.459,341,2.459,342,3.029,343,3.064,345,1.018,347,2.095,348,1.485,350,1.573,373,1.052,374,1.592,375,1.404,376,0.898,377,2.29,378,1.052,379,1.052,380,1.018,381,0.797,382,1.052,383,1.018,384,1.052,385,1.018,386,0.955,387,1.052,388,0.898,389,0.926,390,0.926,391,1.645,392,1.018,393,2.29,394,1.018,395,1.052,396,1.018,397,0.926,398,1.052,399,2.216,400,1.052,401,0.955,402,1.018,403,1.018,404,1.052,405,1.018,406,0.986,407,1.052,408,1.018,409,1.052,410,1.018,411,0.955,412,1.018,413,1.018,414,1.018,415,2.145,416,1.018,417,1.052,419,2.852,429,4.892,432,0.913,450,1.341,454,1.883,455,1.197,470,1.422,471,3.197,503,2.041,539,1.887,556,2.041,601,3.094,715,2.248,775,1.573,786,1.447,859,4.443,911,2.95,925,3.191,943,2.339,948,3.615,950,2.041,951,1.573,954,3.191,967,1.887,997,1.887,1024,1.764,1053,1.661,1099,2.248,1100,2.248,1106,3.514,1115,3.632,1159,3.514,1160,3.514,1297,1.573,1373,3.028,1374,2.522,1381,2.041,1444,4.327,1563,3.514,1586,5.019,1649,2.041,1650,4.327,1652,2.248,1731,2.248,1807,2.248,1903,3.929,1942,6.236,1985,1.887,1990,2.041,1991,1.887,1992,1.887,1995,2.041,1996,2.041,2025,2.248,2070,3.514,2090,3.514,2242,2.562,2243,4.327,2244,4.327,2245,4.931,2246,4.005,2247,4.005,2248,4.931,2249,4.931,2250,4.005,2251,4.005,2252,4.005,2253,2.562,2254,5.576,2255,2.562,2256,5.576,2257,2.562,2258,4.005,2259,4.931,2260,2.562,2261,4.005,2262,2.562,2263,2.562,2264,2.562,2265,4.005,2266,2.562,2267,2.562,2268,4.005,2269,2.562,2270,2.562,2271,2.248,2272,2.248,2273,2.562,2274,2.248,2275,2.562,2276,2.562,2277,5.628,2278,2.562,2279,4.327,2280,7.129,2281,4.931,2282,2.562,2283,2.562,2284,2.562,2285,4.005,2286,2.562,2287,4.005,2288,2.248,2289,2.562,2290,4.005,2291,2.562,2292,2.562,2293,2.041,2294,4.931,2295,2.562,2296,2.248,2297,2.248,2298,2.248,2299,2.562,2300,2.041,2301,4.005,2302,2.562,2303,1.496,2304,2.248,2305,2.562,2306,2.562,2307,2.562,2308,4.931,2309,2.562,2310,5.576,2311,2.562,2312,2.562,2313,2.562,2314,3.514,2315,2.562,2316,2.562,2317,2.562,2318,4.005,2319,4.005,2320,4.931,2321,2.562,2322,2.562,2323,4.005,2324,2.562,2325,2.562,2326,3.514,2327,2.562,2328,4.931,2329,2.562,2330,2.562,2331,4.005,2332,4.005,2333,2.562,2334,4.931,2335,2.562,2336,2.041,2337,4.005,2338,2.562,2339,2.562,2340,4.005,2341,2.562,2342,2.562,2343,4.005,2344,2.562,2345,2.562,2346,2.041,2347,2.562,2348,2.562,2349,2.562,2350,2.562,2351,2.248,2352,2.562,2353,4.005,2354,2.562,2355,2.562,2356,2.562,2357,2.562,2358,2.562,2359,2.562,2360,2.562,2361,2.562,2362,2.562,2363,4.005,2364,4.005,2365,5.576,2366,4.005,2367,4.005,2368,4.005]],["title/components/PromptDialogComponent.html",[84,0.966,401,1.625]],["body/components/PromptDialogComponent.html",[0,0.103,3,0.208,4,0.208,5,0.17,7,0.208,8,0.494,12,0.011,13,0.295,16,1.715,19,0.929,21,1.449,75,0.008,76,0.008,80,1.462,83,0.603,84,1.537,86,0.871,89,0.624,113,2.124,123,1.532,135,2.304,139,2.304,140,0.585,141,1.793,201,1.585,246,2.222,334,1.852,335,1.98,336,1.914,337,1.914,338,1.914,342,3.262,343,3.339,345,1.852,348,1.504,373,1.914,374,2.456,375,2.166,376,1.633,377,3.033,378,1.914,379,1.914,380,1.852,381,1.45,382,1.914,383,1.852,384,1.914,385,1.852,386,1.737,387,1.914,388,1.633,389,1.684,390,1.684,391,2.539,392,1.852,393,3.033,394,1.852,395,1.914,396,1.852,397,1.684,398,1.914,399,1.852,400,1.914,401,2.753,402,3.054,403,1.852,404,1.914,405,1.852,406,1.793,407,1.914,408,1.852,409,1.914,410,1.852,411,1.737,412,1.852,413,1.852,414,1.852,415,1.793,416,1.852,417,1.914,432,1.409,450,1.37,470,1.576,603,5.12,1046,5.659,1299,2.861,1300,2.721,1309,3.609,1315,4.257,1369,3.432,1370,3.432,1371,5.107,1374,3.547,1376,4.552,1377,4.552,1378,4.552,1384,4.089,1482,2.721,2369,6.743,2370,6.743,2371,6.48,2372,4.66,2373,4.66,2374,4.66,2375,3.432,2376,3.713,2377,4.089,2378,4.089,2379,6.18,2380,6.18,2381,6.18]],["title/interfaces/PromptDialogData.html",[0,0.096,2375,3.211]],["body/interfaces/PromptDialogData.html",[0,0.13,2,1.199,3,0.263,4,0.263,5,0.162,7,0.263,8,0.574,11,0.54,12,0.011,13,0.342,19,1.157,75,0.009,76,0.009,83,0.673,84,1.59,86,1.101,89,0.789,113,2.685,135,2.196,139,2.196,140,0.739,201,2.737,246,1.887,342,2.196,343,2.266,401,2.196,402,2.851,603,3.818,1046,4.338,1299,3.616,1300,3.439,1309,3.439,1315,3.616,1369,4.338,1370,4.338,1371,5.283,1374,3.669,1376,4.338,1377,4.338,1378,4.338,1482,4.701,2369,5.168,2370,5.168,2371,5.168,2375,5.283,2376,6.414,2377,5.168,2378,5.168]],["title/interfaces/RemoteCoverPicture.html",[0,0.096,82,1.483]],["body/interfaces/RemoteCoverPicture.html",[0,0.182,2,1.216,3,0.267,4,0.267,5,0.214,7,0.267,8,0.578,11,0.505,12,0.011,13,0.395,19,1.171,75,0.009,76,0.009,82,2.459,83,0.519,242,1.805,727,3.486,732,2.225,733,3.053,750,2.157,762,2.696,763,2.372,768,3.297,818,3.436,825,3.322,828,5.523,829,4.109,830,3.87,831,3.183,832,3.87,833,3.87,834,3.87,835,3.87,836,3.87,837,3.665,838,3.665,839,2.823]],["title/components/SettingsComponent.html",[84,0.966,403,1.733]],["body/components/SettingsComponent.html",[3,0.234,4,0.234,5,0.183,12,0.011,13,0.249,21,1.225,75,0.008,76,0.008,80,1.527,83,0.671,84,1.624,89,0.7,123,1.817,135,2.482,137,3.035,139,2.482,140,0.656,141,2.011,334,2.077,335,2.134,336,2.147,337,2.147,338,2.147,342,3.295,343,3.379,345,2.077,373,2.147,374,2.646,375,2.334,376,1.832,377,3.169,378,2.147,379,2.147,380,2.077,381,1.627,382,2.147,383,2.077,384,2.147,385,2.077,386,1.948,387,2.147,388,1.832,389,1.889,390,1.889,391,2.735,392,3.066,393,3.169,394,2.077,395,2.147,396,2.077,397,1.889,398,2.147,399,2.077,400,2.147,401,1.948,402,2.077,403,3.066,404,2.147,405,2.077,406,2.011,407,2.147,408,3.066,409,2.735,410,3.066,411,2.482,412,2.077,413,2.077,414,2.077,415,2.011,416,2.077,417,2.147,580,3.711,1858,4.586,1862,4.904,2382,5.226,2383,6.659,2384,4.586,2385,7.328,2386,4.586]],["title/components/ShellComponent.html",[84,0.966,345,1.733]],["body/components/ShellComponent.html",[3,0.145,4,0.145,5,0.205,7,0.145,8,0.384,11,0.399,12,0.011,13,0.155,16,0.902,19,0.764,21,1.752,75,0.006,76,0.006,80,1.441,83,0.731,84,1.265,86,0.608,89,0.435,99,3.7,100,2.108,102,1.106,108,3.361,111,1.663,113,1.482,120,1.663,121,3.536,122,2.395,123,1.19,125,3.681,126,2.238,135,1.79,137,2.189,139,1.79,140,0.408,141,1.251,143,1.162,146,2.591,147,3.305,148,2.804,149,2.001,153,1.196,157,1.006,183,1.812,231,2.322,235,1.175,245,2.675,279,2.359,334,1.292,335,1.538,336,1.335,337,1.335,338,1.335,342,3.134,343,3.188,345,2.505,348,1.58,373,1.335,374,1.908,375,1.683,376,1.14,377,2.589,378,1.335,379,1.335,380,1.292,381,1.012,382,1.335,383,1.292,384,1.335,385,2.505,386,1.79,387,1.335,388,1.14,389,1.175,390,1.175,391,1.972,392,1.292,393,2.589,394,1.292,395,1.335,396,2.505,397,2.063,398,1.335,399,1.292,400,1.335,401,1.212,402,1.292,403,1.292,404,1.335,405,1.292,406,1.251,407,1.335,408,1.292,409,1.335,410,1.292,411,1.212,412,1.292,413,1.292,414,1.292,415,1.251,416,1.292,417,1.335,432,1.094,450,1.265,454,1.776,455,1.13,463,2.675,470,1.905,472,3.224,580,2.675,706,3.333,736,3.504,859,3.825,860,3.825,861,4.213,862,4.213,863,5.531,878,1.538,883,3.504,884,3.044,885,1.996,918,2.591,931,3.536,950,2.591,1025,1.812,1047,2.853,1053,2.108,1302,3.305,1373,3.504,1374,2.919,1609,2.853,1610,4.642,1612,4.213,1881,2.853,1901,5.008,1908,4.642,1909,2.853,1911,2.591,1914,4.213,1991,2.395,1992,2.395,2033,2.853,2128,2.853,2244,5.008,2271,4.213,2272,2.853,2387,3.251,2388,4.213,2389,5.708,2390,5.708,2391,5.708,2392,4.801,2393,4.801,2394,5.708,2395,7.037,2396,5.008,2397,4.801,2398,4.801,2399,4.801,2400,4.801,2401,6.724,2402,3.251,2403,2.853,2404,4.801,2405,3.251,2406,4.801,2407,3.251,2408,3.251,2409,4.801,2410,4.801,2411,3.251,2412,3.251,2413,3.251,2414,3.251,2415,4.801,2416,3.251,2417,3.251,2418,4.801,2419,3.251,2420,3.251,2421,3.251,2422,3.251,2423,4.801,2424,3.251,2425,3.251,2426,2.591,2427,3.251,2428,3.251,2429,3.251,2430,3.251,2431,2.853,2432,3.251,2433,3.251,2434,3.251,2435,3.251,2436,3.251,2437,3.251,2438,3.251,2439,3.251,2440,3.251,2441,3.251,2442,3.251,2443,3.251,2444,3.251,2445,6.303,2446,4.801,2447,4.801]],["title/components/SlidePanelComponent.html",[84,0.966,405,1.733]],["body/components/SlidePanelComponent.html",[3,0.141,4,0.141,5,0.129,7,0.141,8,0.376,11,0.529,12,0.011,13,0.151,16,1.558,19,0.992,21,1.775,22,1.853,75,0.006,76,0.006,80,1.23,83,0.578,84,1.244,89,0.423,111,1.617,113,1.441,123,1.166,135,1.753,137,2.143,139,1.753,140,0.396,141,1.216,142,1.931,149,1.472,334,1.256,335,1.507,336,1.298,337,1.298,338,1.298,342,3.123,343,3.174,345,1.256,348,1.644,373,1.298,374,1.869,375,1.648,376,1.108,377,2.554,378,1.298,379,1.298,380,1.256,381,0.984,382,1.298,383,1.256,384,1.298,385,1.256,386,1.178,387,1.298,388,1.108,389,1.142,390,1.142,391,1.931,392,1.256,393,2.554,394,1.256,395,1.298,396,1.256,397,1.142,398,1.298,399,1.256,400,1.298,401,1.178,402,1.256,403,1.256,404,1.298,405,2.471,406,3.132,407,1.298,408,1.256,409,1.298,410,1.256,411,1.178,412,1.256,413,1.256,414,1.256,415,1.216,416,1.256,417,1.298,432,1.072,450,1.042,470,1.931,472,3.79,557,4.212,660,2.873,662,2.328,965,3.864,967,4.135,1021,4.579,1046,5.995,1069,5.378,1297,1.941,1373,3.447,1374,2.871,1902,4.473,1910,2.328,2073,2.774,2106,2.746,2108,3.63,2110,4.794,2243,4.926,2279,4.926,2346,4.473,2448,7.143,2449,8.14,2450,3.161,2451,5.614,2452,5.676,2453,4.702,2454,4.702,2455,5.614,2456,5.614,2457,6.217,2458,6.217,2459,3.746,2460,5.614,2461,5.831,2462,7.213,2463,5.614,2464,4.702,2465,4.702,2466,4.702,2467,3.161,2468,6.217,2469,3.161,2470,3.161,2471,6.965,2472,3.161,2473,3.161,2474,3.161,2475,3.161,2476,4.702,2477,4.702,2478,3.161,2479,3.161,2480,3.161,2481,4.702,2482,4.702,2483,4.702,2484,4.702,2485,6.965,2486,7.213,2487,6.503,2488,2.774,2489,2.774,2490,3.161,2491,3.161,2492,6.965,2493,6.645,2494,6.965,2495,3.161,2496,3.161,2497,3.161,2498,3.161,2499,3.161,2500,2.774,2501,2.774,2502,3.161,2503,3.161,2504,3.161,2505,3.161,2506,3.161,2507,5.614,2508,6.217,2509,6.217]],["title/components/StorageSettingsComponent.html",[84,0.966,408,1.733]],["body/components/StorageSettingsComponent.html",[3,0.224,4,0.224,5,0.178,7,0.224,12,0.011,13,0.239,16,1.389,75,0.008,76,0.008,80,1.503,83,0.66,84,1.591,86,0.935,89,0.67,91,2.367,113,2.281,123,1.606,135,2.414,139,2.414,140,0.628,141,1.925,143,1.019,334,1.989,335,2.075,336,2.055,337,2.055,338,2.055,342,3.283,343,3.365,345,1.989,348,1.019,373,2.055,374,2.573,375,2.269,376,1.754,377,3.118,378,2.055,379,2.055,380,1.989,381,1.557,382,2.055,383,1.989,384,2.055,385,1.989,386,1.865,387,2.055,388,1.754,389,1.808,390,1.808,391,2.66,392,1.989,393,3.118,394,1.989,395,2.055,396,1.989,397,1.808,398,2.055,399,1.989,400,2.055,401,1.865,402,1.989,403,1.989,404,2.055,405,1.989,406,1.925,407,2.055,408,3.017,409,3.367,410,1.989,411,1.865,412,1.989,413,1.989,414,1.989,415,1.925,416,1.989,417,2.055,432,1.476,450,1.109,517,2.922,518,2.668,523,2.922,580,4.488,581,3.987,969,5.159,1269,4.457,1374,3.672,1752,5.159,1859,3.987,1860,5.72,1862,4.769,1882,3.987,2384,5.682,2510,6.475,2511,7.591,2512,4.391,2513,5.004]],["title/interfaces/TagsWorkerRequest.html",[0,0.096,837,2.677]],["body/interfaces/TagsWorkerRequest.html",[0,0.182,2,1.216,3,0.267,4,0.267,5,0.236,7,0.267,8,0.578,11,0.505,12,0.011,13,0.395,19,1.159,75,0.009,76,0.009,82,2.03,83,0.519,242,1.805,727,3.486,732,2.225,733,3.053,750,2.157,762,2.696,763,2.372,768,3.776,818,2.536,825,2.452,828,5.523,829,4.109,830,3.87,831,3.183,832,3.87,833,3.87,834,3.87,835,3.87,836,3.87,837,4.44,838,3.665,839,2.823]],["title/interfaces/TagsWorkerResponse.html",[0,0.096,838,2.677]],["body/interfaces/TagsWorkerResponse.html",[0,0.181,2,1.193,3,0.262,4,0.262,5,0.212,7,0.262,8,0.572,11,0.539,12,0.011,13,0.393,19,1.168,75,0.009,76,0.009,82,1.993,83,0.51,242,2.43,455,1.591,727,3.422,732,2.185,733,2.997,750,2.118,762,2.996,763,2.329,768,3.757,818,2.49,825,2.407,828,5.502,829,4.034,830,3.799,831,3.125,832,3.799,833,3.799,834,3.799,835,3.799,836,3.799,837,3.598,838,4.391,839,3.801]],["title/injectables/ThemeService.html",[355,2.677,418,0.769]],["body/injectables/ThemeService.html",[3,0.178,4,0.178,5,0.11,7,0.178,8,0.445,11,0.484,12,0.011,13,0.19,16,1.776,19,0.927,21,1.768,22,2.113,39,1.107,59,2.224,75,0.007,76,0.007,80,1.531,83,0.673,86,0.746,88,1.695,89,0.534,91,1.888,140,0.501,143,1.576,149,1.679,153,1.451,157,1.165,174,1.536,344,1.107,348,1.607,353,2.45,354,1.961,355,3.415,411,2.581,418,0.981,420,1.586,432,1.268,450,1.419,454,1.731,455,1.101,470,1.857,517,3.248,518,2.128,522,1.172,523,2.33,628,3.828,660,1.488,724,5.5,726,4.88,727,2.33,728,3.859,1024,2.747,1153,3.502,1154,3.502,1162,4.431,1690,4.431,1697,3.502,1856,3.828,2514,3.991,2515,6.402,2516,6.402,2517,7.281,2518,6.402,2519,6.402,2520,6.925,2521,5.562,2522,5.562,2523,3.991,2524,5.562,2525,3.991,2526,5.562,2527,3.991,2528,5.517,2529,3.991,2530,3.991,2531,5.562,2532,5.562,2533,6.925,2534,5.562,2535,3.991,2536,5.517,2537,3.991,2538,3.991,2539,5.617,2540,3.502,2541,3.991,2542,3.991,2543,3.991,2544,5.562,2545,3.991,2546,3.991,2547,3.991,2548,3.991,2549,3.991,2550,3.991,2551,3.991,2552,6.402,2553,5.562,2554,3.991,2555,5.562,2556,6.925,2557,3.991,2558,5.562,2559,5.562,2560,3.991,2561,3.991,2562,3.991,2563,3.991,2564,5.562,2565,3.991,2566,3.991,2567,5.562,2568,3.18,2569,3.991,2570,3.991,2571,8.484,2572,3.991,2573,3.991,2574,3.991,2575,3.991,2576,3.502,2577,3.991,2578,3.502,2579,3.991,2580,3.991,2581,3.991,2582,3.502,2583,3.991,2584,3.991,2585,3.991,2586,3.991,2587,3.991,2588,3.991,2589,3.991,2590,3.991,2591,3.991,2592,3.991,2593,3.991,2594,3.991,2595,3.991,2596,3.991,2597,3.991,2598,3.991,2599,3.991,2600,3.991,2601,5.562,2602,3.502,2603,3.502,2604,3.991,2605,3.991,2606,3.991]],["title/components/ThemeSettingsComponent.html",[84,0.966,410,1.733]],["body/components/ThemeSettingsComponent.html",[3,0.219,4,0.219,5,0.175,7,0.219,8,0.51,11,0.342,12,0.011,13,0.233,16,1.358,18,2.536,21,1.147,75,0.008,76,0.008,80,1.545,83,0.655,84,1.574,86,0.914,89,0.655,123,1.582,135,2.379,139,2.379,140,0.614,141,1.883,334,1.945,335,2.045,336,2.01,337,2.01,338,2.01,342,3.276,343,3.357,345,1.945,348,1.3,355,4.621,356,3.368,365,4.393,373,2.01,374,2.536,375,2.237,376,1.715,377,3.092,378,2.01,379,2.01,380,1.945,381,1.523,382,2.01,383,1.945,384,2.01,385,1.945,386,1.824,387,2.01,388,1.715,389,1.768,390,1.768,391,2.621,392,1.945,393,3.092,394,1.945,395,2.01,396,1.945,397,1.768,398,2.01,399,1.945,400,2.01,401,1.824,402,1.945,403,1.945,404,2.01,405,1.945,406,1.883,407,2.01,408,1.945,409,2.01,410,2.991,411,3.04,412,1.945,413,1.945,414,1.945,415,1.883,416,1.945,417,2.01,432,1.455,450,1.084,454,1.523,455,0.968,470,1.248,580,3.556,601,2.502,1856,4.393,1859,3.899,1860,5.659,1862,4.7,1882,3.899,2386,6.232,2512,4.293,2568,5.085,2607,7.102,2608,7.102,2609,6.382,2610,6.382,2611,7.527,2612,4.893,2613,4.893,2614,4.893]],["title/pipes/TimePipe.html",[120,2.23,843,3.211]],["body/pipes/TimePipe.html",[3,0.272,4,0.272,5,0.167,10,1.466,11,0.425,12,0.011,13,0.29,19,0.98,75,0.009,76,0.009,80,1.553,83,0.636,89,0.815,98,3.734,120,3.741,123,1.508,140,0.763,142,2.498,157,1.274,215,2.924,348,1.239,432,1.386,450,1.348,454,1.893,455,1.204,463,3.39,470,1.551,659,6.418,660,3.034,661,5.035,662,4.48,663,5.828,664,6.883,666,5.828,843,5.387,868,4.742,2171,4.846,2172,5.337,2615,6.082,2616,6.082,2617,5.337]],["title/injectables/TitleService.html",[418,0.769,1908,3.211]],["body/injectables/TitleService.html",[3,0.272,4,0.272,5,0.167,7,0.272,8,0.585,11,0.425,12,0.011,13,0.291,16,1.691,19,1.051,21,1.428,75,0.009,76,0.009,80,1.206,83,0.637,86,1.139,88,3.335,89,0.816,140,0.764,143,1.241,149,2.059,201,2.833,344,1.691,348,1.491,353,3.741,354,2.994,418,1.291,420,2.421,432,1.669,450,1.35,454,1.896,455,1.206,470,1.554,522,1.79,1908,5.393,2618,6.093,2619,7.322,2620,7.322,2621,6.093,2622,6.093,2623,6.093,2624,6.093,2625,6.093,2626,6.093]],["title/interfaces/Track.html",[0,0.096,95,1.852]],["body/interfaces/Track.html",[0,0.172,2,1.107,3,0.243,4,0.243,5,0.232,7,0.243,8,0.546,11,0.575,12,0.011,13,0.399,19,1.141,25,2.309,75,0.008,76,0.008,77,1.742,79,3.174,81,2.78,82,2.321,83,0.649,94,3.174,95,3.17,123,2.071,124,3.524,153,1.43,173,2.16,201,1.848,279,3.963,313,2.391,314,2.391,455,1.351,458,4.191,492,3.337,493,3.524,494,3.524,495,3.337,496,2.78,497,3.029,498,3.524,499,3.524,500,3.524,501,3.524,519,3.337,579,3.524,728,3.029,729,3.524,730,4.191,731,3.337,732,2.026,733,3.491,734,4.425,735,2.899,736,4.806,737,5.228,738,3.337,739,3.524,740,2.571,741,3.742,742,3.524,743,4.003,744,4.003,745,4.003,746,4.003,747,3.524,748,3.174]],["title/interfaces/TrackMetadata.html",[0,0.096,737,2.827]],["body/interfaces/TrackMetadata.html",[0,0.166,2,1.005,3,0.221,4,0.221,5,0.196,7,0.221,8,0.513,11,0.603,12,0.011,13,0.39,19,1.184,25,2.096,75,0.008,76,0.008,77,2.42,79,4.409,81,3.862,82,2.568,83,0.62,94,2.881,95,3.326,123,1.872,124,3.199,153,1.344,173,3.001,201,2.568,279,3.153,313,2.17,314,2.17,455,1.694,458,3.94,492,3.029,493,3.199,494,3.199,495,3.029,496,2.523,497,2.75,498,3.199,499,3.199,500,3.199,501,3.199,519,3.029,579,3.199,728,2.75,729,3.199,730,4.636,731,3.029,732,1.839,733,3.862,734,4.895,735,2.631,736,3.94,737,4.895,738,4.636,739,4.895,740,3.571,741,5.198,742,4.895,743,3.634,744,3.634,745,3.634,746,3.634,747,3.199,748,2.881]],["title/injectables/UpdateService.html",[357,3.474,418,0.769]],["body/injectables/UpdateService.html",[3,0.223,4,0.223,5,0.137,7,0.223,12,0.011,13,0.237,75,0.008,76,0.008,83,0.699,86,0.93,89,0.666,101,2.114,102,1.692,140,0.624,143,1.458,153,1.5,157,1.5,174,1.915,201,1.692,212,2.353,231,2.654,246,2.294,344,1.381,347,3.042,348,1.458,357,5.14,401,1.855,418,1.138,420,1.977,432,1.471,450,1.43,472,2.545,522,1.462,603,4.911,628,5.214,660,1.855,786,2.737,1218,4.366,1298,3.665,1300,2.906,1309,2.906,1310,3.665,1424,3.425,1482,2.906,1732,4.366,1985,3.665,1990,3.965,1991,3.665,1992,3.665,1995,3.965,1996,3.965,2106,2.906,2108,4.181,2110,4.928,2375,4.752,2376,3.965,2426,3.965,2627,4.976,2628,7.575,2629,6.647,2630,4.976,2631,4.976,2632,4.976,2633,6.452,2634,6.282,2635,4.366,2636,4.976,2637,4.976,2638,4.976,2639,4.976,2640,4.976,2641,4.976,2642,4.976,2643,4.976,2644,5.214,2645,6.452,2646,4.976,2647,4.976,2648,4.976,2649,4.976,2650,4.976,2651,4.976,2652,4.976,2653,4.976,2654,4.976,2655,4.976,2656,4.976,2657,4.976,2658,4.976,2659,4.976,2660,4.976,2661,4.976,2662,4.976,2663,4.976,2664,4.366,2665,4.976,2666,4.976,2667,4.976,2668,4.976]],["title/components/VisualizerComponent.html",[84,0.966,412,1.733]],["body/components/VisualizerComponent.html",[3,0.095,4,0.095,5,0.095,7,0.095,8,0.276,10,1.506,11,0.502,12,0.011,13,0.101,16,1.955,21,1.83,37,1.239,43,1.571,47,2.116,55,2.012,75,0.004,76,0.004,80,1.446,83,0.66,84,0.964,85,3.733,86,0.396,87,2.995,88,0.901,89,0.284,91,1.003,93,1.762,95,1.464,108,2.671,109,1.302,111,1.085,113,0.967,123,0.854,135,1.285,137,1.571,139,1.285,140,0.266,141,0.816,142,1.415,143,0.432,148,2.012,149,2.229,157,1.357,232,1.46,290,3.292,294,1.837,295,1.762,296,1.837,297,1.837,298,1.837,299,1.762,300,2.671,301,1.837,302,1.837,303,1.92,304,1.92,305,1.085,306,2.938,307,2.818,308,3.181,309,2.818,310,1.085,311,2.562,315,2.818,326,3.506,329,3.256,330,3.065,333,3.185,334,0.843,335,1.104,336,0.871,337,0.871,338,0.871,340,2.116,341,2.116,342,2.932,343,2.952,345,0.843,347,1.849,348,1.676,350,1.302,373,0.871,374,1.369,375,1.208,376,0.743,377,2.058,378,0.871,379,0.871,380,0.843,381,0.66,382,0.871,383,0.843,384,0.871,385,0.843,386,0.791,387,0.871,388,0.743,389,0.767,390,0.767,391,1.415,392,0.843,393,2.058,394,0.843,395,0.871,396,0.843,397,0.767,398,0.871,399,0.843,400,0.871,401,0.791,402,0.843,403,0.843,404,0.871,405,1.991,406,0.816,407,0.871,408,0.843,409,0.871,410,0.843,411,0.791,412,1.991,413,2.19,414,0.843,415,1.928,416,0.843,417,0.871,419,2.562,432,0.785,450,1.485,452,2.745,454,2.085,455,1.363,456,3.205,470,2.187,513,2.745,517,2.925,518,1.131,523,2.012,660,0.791,728,2.425,932,3.467,943,2.012,951,1.302,952,1.562,967,2.538,995,2.538,1052,2.821,1098,1.375,1174,2.234,1241,5.102,1373,2.672,1374,2.225,1483,2.012,1827,3.024,1902,3.467,1910,1.562,2106,2.012,2108,4.02,2118,2.745,2173,1.861,2174,1.861,2176,1.861,2234,3.024,2426,1.69,2448,1.861,2452,1.562,2669,2.121,2670,4.351,2671,4.351,2672,3.446,2673,3.446,2674,3.818,2675,5.51,2676,4.351,2677,3.818,2678,3.818,2679,5.51,2680,5.51,2681,3.991,2682,3.446,2683,3.446,2684,3.446,2685,3.446,2686,3.446,2687,3.446,2688,3.446,2689,3.446,2690,3.446,2691,3.446,2692,3.446,2693,2.121,2694,3.446,2695,2.121,2696,3.446,2697,2.121,2698,3.446,2699,2.121,2700,3.446,2701,2.121,2702,3.446,2703,2.121,2704,3.446,2705,2.121,2706,3.446,2707,2.121,2708,3.446,2709,2.121,2710,3.446,2711,2.121,2712,3.024,2713,2.121,2714,3.446,2715,2.121,2716,3.446,2717,3.446,2718,3.446,2719,3.446,2720,2.121,2721,3.446,2722,2.121,2723,3.446,2724,2.121,2725,3.446,2726,3.446,2727,2.121,2728,2.121,2729,3.446,2730,2.121,2731,3.446,2732,2.121,2733,3.446,2734,2.121,2735,2.121,2736,3.446,2737,3.446,2738,2.121,2739,3.446,2740,2.121,2741,2.121,2742,3.446,2743,2.121,2744,3.446,2745,3.446,2746,2.121,2747,3.446,2748,2.121,2749,2.121,2750,2.121,2751,2.121,2752,2.121,2753,2.121,2754,3.446,2755,2.121,2756,3.446,2757,2.121,2758,3.446,2759,2.121,2760,2.121,2761,1.861,2762,2.121,2763,2.121,2764,2.121,2765,2.121,2766,2.121,2767,2.121,2768,2.121,2769,2.121,2770,2.121,2771,2.121,2772,2.121,2773,2.121,2774,2.121,2775,2.121,2776,2.121,2777,2.121,2778,2.121,2779,2.121,2780,2.121,2781,2.121,2782,2.121,2783,2.121,2784,3.446,2785,3.446,2786,5.179,2787,3.024,2788,5.009,2789,3.446]],["title/interfaces/VisualsColorConfig.html",[0,0.096,312,2.325]],["body/interfaces/VisualsColorConfig.html",[0,0.183,2,1.026,3,0.225,4,0.225,5,0.138,7,0.225,8,0.52,10,1.647,11,0.563,12,0.011,13,0.407,18,2.863,19,1.114,22,1.663,25,2.764,75,0.008,76,0.008,288,2.808,289,2.808,290,3.741,291,2.943,292,2.943,293,2.943,294,2.688,295,2.578,296,2.688,297,2.688,298,2.688,299,2.578,300,2.688,301,2.688,302,2.688,303,2.808,304,2.808,305,2.578,306,3.469,307,3.327,308,3.327,309,3.327,310,2.578,311,3.327,312,3.469,313,3.466,314,3.466,315,4.03,316,2.688,317,2.477,318,2.578,319,2.808,320,2.943,321,2.578,322,3.54,323,2.688,324,2.477,325,4.014,326,3.077,327,2.688,328,3.327,329,3.6,330,3.6,331,2.477,332,3.327,333,3.741,455,1.597]],["title/directives/VisualsDirective.html",[376,1.528,415,1.678]],["body/directives/VisualsDirective.html",[3,0.139,4,0.139,5,0.085,7,0.139,8,0.37,10,0.579,11,0.43,12,0.011,13,0.148,16,1.539,18,2.618,21,1.443,22,2.281,39,1.708,41,2.528,43,2.111,75,0.006,76,0.006,80,0.917,83,0.482,86,0.579,89,0.415,123,0.768,140,0.388,142,1.902,143,1.534,149,2.127,153,1.757,157,1.162,174,1.782,200,2.958,215,1.726,227,1.652,246,1.777,290,1.522,305,1.584,306,2.958,307,2.837,308,2.837,309,2.837,310,1.584,311,2.837,312,1.652,313,2.037,314,2.037,315,2.368,316,3.821,317,2.726,318,3.148,319,2.581,321,1.584,322,2.276,323,1.652,324,1.522,326,1.465,327,2.469,329,2.911,330,3.484,331,1.522,333,3.025,342,1.726,347,2.356,348,1.585,376,1.623,414,1.231,415,1.782,416,1.84,419,2.368,432,1.056,446,3.69,450,1.229,452,5.249,454,1.441,455,0.917,456,4.852,470,1.569,513,3.69,541,2.468,544,1.652,600,2.132,660,2.068,661,3.188,693,2.468,728,3.671,868,2.008,943,1.809,948,3.002,949,2.468,951,1.902,971,4.063,995,3.411,1052,3.596,1069,4.776,1098,2.008,1134,2.718,1274,2.718,1424,3.818,1429,2.718,1431,2.718,1432,2.468,1483,1.809,1486,2.008,2106,1.809,2108,3.594,2110,4.236,2459,3.69,2528,4.419,2536,4.419,2674,4.867,2678,4.867,2712,2.718,2790,2.718,2791,6.154,2792,4.631,2793,4.631,2794,3.097,2795,4.631,2796,3.097,2797,4.631,2798,3.097,2799,4.631,2800,3.097,2801,3.097,2802,3.097,2803,4.631,2804,3.097,2805,3.097,2806,3.097,2807,3.097,2808,2.718,2809,2.718,2810,2.718,2811,2.718,2812,3.097,2813,3.097,2814,3.097,2815,3.097,2816,3.097,2817,4.631,2818,3.097,2819,3.097,2820,3.097,2821,3.097,2822,3.097,2823,3.097,2824,3.097,2825,3.097,2826,3.097,2827,7.165,2828,3.097,2829,3.097,2830,3.097,2831,2.132,2832,4.631,2833,3.097,2834,3.097,2835,3.097,2836,3.097,2837,3.097,2838,3.097,2839,5.546,2840,3.097,2841,4.631,2842,4.631,2843,3.097,2844,2.718,2845,3.097,2846,6.154,2847,3.097,2848,3.097,2849,3.097,2850,3.097,2851,3.097,2852,3.097,2853,4.631,2854,3.097,2855,3.097,2856,3.097,2857,5.546,2858,6.154,2859,3.097,2860,3.097,2861,3.097,2862,3.097,2863,4.631,2864,4.631,2865,4.631,2866,5.546,2867,3.097,2868,3.097,2869,3.097,2870,3.097,2871,3.097,2872,3.097,2873,3.097,2874,3.097,2875,3.097,2876,6.287,2877,4.631,2878,4.631,2879,2.718,2880,2.718,2881,3.097,2882,3.097,2883,3.097,2884,3.097,2885,3.097,2886,4.867,2887,4.631,2888,4.631,2889,3.097,2890,3.097,2891,3.097,2892,3.097,2893,3.097,2894,3.097,2895,3.097,2896,3.097,2897,3.097,2898,3.097,2899,3.097,2900,3.097,2901,4.631,2902,3.097,2903,3.097,2904,3.097,2905,2.718,2906,3.097,2907,2.718,2908,2.718,2909,3.097,2910,3.097]],["title/injectables/VisualsService.html",[418,0.769,2681,3.474]],["body/injectables/VisualsService.html",[3,0.252,4,0.252,5,0.155,7,0.252,8,0.558,11,0.393,12,0.011,13,0.268,16,1.561,21,1.319,75,0.009,76,0.009,83,0.659,86,1.052,88,2.39,89,0.753,91,2.661,140,0.706,143,1.146,149,1.988,326,3.299,329,3.748,330,3.748,333,3.894,344,1.561,348,1.42,418,1.23,420,2.236,432,1.59,450,1.247,470,1.435,517,4.073,518,3,522,1.653,523,3.286,2106,3.286,2108,4.757,2110,5.607,2681,5.557,2808,4.937,2911,5.626,2912,7.58,2913,7.924,2914,5.626,2915,6.975,2916,5.626,2917,8.415,2918,5.626,2919,5.626,2920,5.626]],["title/interfaces/VisualsWorkerMessage.html",[0,0.096,316,2.325]],["body/interfaces/VisualsWorkerMessage.html",[0,0.182,2,1.003,3,0.22,4,0.22,5,0.135,7,0.22,8,0.513,10,1.636,11,0.578,12,0.011,13,0.406,18,2.832,19,1.011,22,2.352,25,2.724,75,0.008,76,0.008,288,2.746,289,2.746,290,3.709,291,2.877,292,2.877,293,2.877,294,2.627,295,2.52,296,2.627,297,2.627,298,2.627,299,2.52,300,2.627,301,2.627,302,2.627,303,2.746,304,2.746,305,2.52,306,3.419,307,3.279,308,3.279,309,3.279,310,2.52,311,3.279,312,2.627,313,2.82,314,2.82,315,3.279,316,3.419,317,3.709,318,3.644,319,4.206,320,4.161,321,3.86,322,4.069,323,4.024,324,3.502,325,3.971,326,3.032,327,2.627,328,3.279,329,3.57,330,3.57,331,2.421,332,3.279,333,3.709,455,1.639]],["title/injectables/WakelockService.html",[418,0.769,1986,3.001]],["body/injectables/WakelockService.html",[3,0.258,4,0.258,5,0.159,7,0.258,8,0.567,11,0.403,12,0.011,13,0.276,75,0.009,76,0.009,83,0.502,89,0.773,140,0.724,143,1.176,157,1.485,231,2.792,233,2.152,235,2.087,241,2.222,242,1.746,344,1.602,347,3.258,348,1.628,418,1.25,420,2.295,432,1.615,450,1.571,455,1.403,463,3.949,522,1.696,1986,4.878,2921,5.774,2922,6.11,2923,7.996,2924,7.996,2925,7.087,2926,5.774,2927,5.774,2928,7.087,2929,7.668,2930,5.774,2931,5.774,2932,5.774,2933,5.774,2934,5.774,2935,5.774,2936,5.774,2937,5.774]],["title/changelog.html",[2938,2.52,2939,2.696,2940,3.212]],["body/changelog.html",[0,0.012,5,0.14,10,0.101,11,0.101,12,0.003,18,0.574,21,0.238,29,4.412,41,1.025,43,2.319,45,1.877,47,3.052,49,3.374,51,3.143,53,3.563,55,2.291,57,3.676,59,2.629,61,3.124,63,2.023,65,1.618,67,3.37,69,4.147,75,0.001,76,0.001,77,0.326,80,0.201,81,0.275,83,0.088,84,0.553,86,0.101,88,0.613,92,0.314,93,0.52,95,1.584,121,0.396,123,1.017,125,0.314,137,0.245,139,0.812,140,0.127,173,0.404,174,0.556,185,0.396,186,0.809,188,0.37,197,1.15,199,0.428,201,0.345,204,1.15,205,0.287,212,2.231,227,0.287,233,0.379,242,0.163,244,1.988,245,1.836,246,0.172,267,0.396,317,0.264,318,0.275,322,0.264,329,0.254,330,0.481,331,0.499,335,0.8,344,0.149,347,0.228,354,1.07,374,0.727,376,0.188,381,0.949,386,0.379,397,0.787,411,0.379,413,0.404,419,0.275,437,0.809,455,0.106,456,0.748,471,0.936,492,0.33,495,0.33,518,0.542,525,1.412,530,0.472,539,0.748,541,0.809,544,0.287,545,0.472,550,0.396,556,0.428,557,1.068,558,1.988,559,1.186,561,0.37,562,0.809,564,0.428,568,0.396,579,1.186,580,1.39,600,3.422,603,5.288,625,1.267,626,2.189,628,1.499,661,1.499,674,0.428,689,1.605,692,0.809,693,0.428,706,0.314,723,0.245,724,1.618,735,1.485,739,0.349,748,0.314,753,0.499,762,0.2,763,0.214,769,5.757,779,0.275,793,0.314,804,0.936,831,0.77,839,0.865,842,1.412,868,0.659,878,0.481,881,1.412,884,0.287,892,0.809,905,0.314,911,2.426,917,0.748,923,0.37,931,0.396,935,0.472,954,1.458,972,0.472,973,0.472,983,0.891,991,0.472,995,4.047,1021,0.396,1024,2.567,1053,0.659,1069,1.186,1105,0.472,1109,0.472,1115,0.396,1131,3.272,1133,0.809,1146,0.891,1147,5.566,1164,0.472,1216,0.809,1229,3.442,1252,1.911,1269,0.699,1294,0.349,1296,0.37,1311,0.748,1329,0.396,1334,1.499,1355,0.396,1397,0.472,1424,1.259,1432,1.15,1447,1.347,1467,0.472,1483,0.314,1504,0.349,1507,0.349,1586,2.941,1618,1.267,1626,0.428,1649,0.809,1661,0.809,1662,0.472,1666,0.472,1680,0.472,1711,1.499,1713,0.472,1753,0.428,1754,0.472,1760,0.428,1831,0.809,1856,0.37,1880,0.472,1894,0.472,1942,0.428,1985,0.396,2016,1.267,2018,2.189,2022,1.911,2023,0.472,2035,0.472,2072,4.254,2074,0.891,2075,0.472,2078,0.472,2106,0.314,2117,0.428,2121,4.054,2122,1.605,2130,1.911,2235,0.891,2238,0.891,2274,0.472,2277,0.472,2288,0.472,2293,0.428,2296,1.267,2297,0.472,2298,0.472,2300,0.809,2303,0.843,2304,4.017,2314,0.472,2326,0.472,2336,0.428,2346,0.428,2351,1.267,2388,0.472,2396,0.472,2431,1.267,2459,0.428,2461,0.472,2487,2.189,2488,0.891,2500,0.891,2501,0.472,2568,0.428,2576,3.601,2578,4.139,2602,0.472,2603,0.472,2629,1.267,2634,0.891,2644,0.994,2664,4.362,2677,0.472,2761,0.472,2786,0.472,2787,0.472,2811,0.472,2831,2.567,2844,0.891,2876,0.472,2879,3.089,2905,0.472,2907,0.472,2908,0.472,2922,1.15,2940,1.267,2941,0.538,2942,2.785,2943,0.538,2944,0.538,2945,0.538,2946,0.538,2947,0.349,2948,0.538,2949,6.591,2950,0.538,2951,6.591,2952,0.538,2953,0.538,2954,0.538,2955,3.05,2956,6.564,2957,7.1,2958,5.829,2959,6.288,2960,0.538,2961,0.538,2962,3.295,2963,0.538,2964,0.538,2965,0.538,2966,0.538,2967,4.848,2968,3.52,2969,0.472,2970,3.52,2971,0.538,2972,0.538,2973,0.538,2974,4.848,2975,0.538,2976,0.538,2977,0.538,2978,0.538,2979,0.538,2980,6.396,2981,1.267,2982,0.538,2983,0.538,2984,0.538,2985,0.538,2986,2.444,2987,0.538,2988,0.538,2989,0.538,2990,5.904,2991,1.016,2992,0.538,2993,0.538,2994,0.538,2995,3.295,2996,1.016,2997,1.444,2998,0.472,2999,0.538,3000,0.538,3001,0.538,3002,0.538,3003,0.538,3004,0.538,3005,0.538,3006,0.538,3007,1.016,3008,0.538,3009,0.538,3010,0.538,3011,2.189,3012,0.538,3013,0.538,3014,0.538,3015,0.538,3016,0.538,3017,1.444,3018,0.472,3019,0.538,3020,0.538,3021,0.538,3022,0.472,3023,0.538,3024,1.15,3025,1.444,3026,0.538,3027,0.538,3028,0.538,3029,0.538,3030,1.016,3031,0.538,3032,0.538,3033,0.891,3034,2.178,3035,0.538,3036,0.538,3037,0.538,3038,0.538,3039,0.538,3040,0.538,3041,0.538,3042,0.538,3043,0.538,3044,0.538,3045,0.472,3046,0.538,3047,1.444,3048,0.538,3049,0.538,3050,0.538,3051,0.538,3052,1.444,3053,1.444,3054,0.538,3055,0.538,3056,0.538,3057,4.104,3058,0.538,3059,0.538,3060,0.538,3061,0.538,3062,0.538,3063,0.538,3064,0.538,3065,0.538,3066,0.538,3067,1.444,3068,0.538,3069,0.538,3070,0.538,3071,0.538,3072,0.538,3073,0.538,3074,0.538,3075,1.444,3076,0.538,3077,0.538,3078,0.538,3079,0.538,3080,5.904,3081,1.016,3082,0.538,3083,1.016,3084,0.538,3085,1.016,3086,0.538,3087,0.538,3088,0.538,3089,0.538,3090,0.538,3091,0.538,3092,1.911,3093,2.891,3094,2.178,3095,0.538,3096,0.538,3097,4.464,3098,0.538,3099,0.538,3100,0.809,3101,0.538,3102,0.538,3103,0.472,3104,2.178,3105,0.538,3106,1.444,3107,0.538,3108,1.016,3109,0.538,3110,1.016,3111,0.538,3112,0.538,3113,0.538,3114,0.538,3115,0.538,3116,1.016,3117,0.538,3118,0.538,3119,0.538,3120,0.538,3121,0.538,3122,0.538,3123,0.538,3124,0.538,3125,0.538,3126,0.538,3127,0.538,3128,0.538,3129,0.538,3130,0.538,3131,0.538,3132,0.538,3133,0.538,3134,0.538,3135,0.538,3136,0.538,3137,0.538,3138,1.016,3139,1.911,3140,1.444,3141,0.538,3142,1.016,3143,0.538,3144,0.538,3145,3.52,3146,0.538,3147,0.538,3148,0.538,3149,0.538,3150,0.538,3151,0.538,3152,0.538,3153,0.538,3154,0.538,3155,1.444,3156,0.538,3157,0.538,3158,2.495,3159,4.272,3160,0.538,3161,0.538,3162,0.538,3163,0.538,3164,0.538,3165,0.538,3166,1.016,3167,0.538,3168,1.829,3169,0.538,3170,0.538,3171,0.538,3172,0.538,3173,0.538,3174,0.538,3175,0.538,3176,0.538,3177,0.538,3178,0.538,3179,0.538,3180,0.538,3181,0.538,3182,0.538,3183,0.538,3184,0.538,3185,0.538,3186,0.538,3187,0.538,3188,0.538,3189,0.538,3190,0.538,3191,0.538,3192,2.178,3193,0.538,3194,0.538,3195,0.538,3196,0.538,3197,0.538,3198,0.538,3199,1.016,3200,0.538,3201,0.538,3202,1.911,3203,0.538,3204,1.444,3205,1.15,3206,1.444,3207,0.538,3208,0.538,3209,1.267,3210,0.538,3211,0.538,3212,1.267,3213,1.016,3214,1.016,3215,0.538,3216,0.538,3217,0.472,3218,0.538,3219,0.538,3220,0.538,3221,0.538,3222,0.538,3223,0.538,3224,0.538,3225,0.538,3226,1.016,3227,0.538,3228,0.538,3229,0.538,3230,0.538,3231,0.538,3232,0.538,3233,0.538,3234,1.016,3235,0.538,3236,0.538,3237,1.829,3238,1.444,3239,0.538,3240,0.538,3241,0.538,3242,0.538,3243,0.538,3244,1.444,3245,1.016,3246,0.538,3247,0.538,3248,0.538,3249,0.538,3250,0.538,3251,0.538,3252,1.016,3253,0.472,3254,0.538,3255,0.538,3256,0.538,3257,0.538,3258,0.538,3259,0.538,3260,0.538,3261,0.538,3262,0.538,3263,1.016,3264,0.538,3265,0.538,3266,0.538,3267,0.538,3268,0.538,3269,0.538,3270,0.538,3271,0.538,3272,0.538,3273,0.538,3274,0.538,3275,1.829,3276,5.198,3277,0.538,3278,0.538,3279,0.538,3280,0.538,3281,0.538,3282,0.538,3283,0.538,3284,2.178,3285,0.538,3286,0.538,3287,0.538,3288,0.538,3289,0.538,3290,0.538,3291,0.538,3292,0.538,3293,0.538,3294,0.538,3295,0.538,3296,0.538,3297,0.538,3298,0.538,3299,0.538,3300,2.785,3301,0.538,3302,0.538,3303,0.538,3304,0.538,3305,0.428,3306,0.538,3307,0.538,3308,0.538,3309,0.538,3310,0.538,3311,0.538,3312,0.538,3313,0.538,3314,0.538,3315,0.809,3316,0.538,3317,0.538,3318,0.538,3319,0.538,3320,6.66,3321,0.538,3322,0.538,3323,0.538,3324,0.538,3325,0.538,3326,0.538,3327,0.538,3328,0.538,3329,0.538,3330,0.538,3331,0.538,3332,0.538,3333,0.538,3334,0.538,3335,0.538,3336,0.538,3337,0.538,3338,0.538,3339,0.538,3340,1.444,3341,0.538,3342,0.538,3343,0.538,3344,0.538,3345,0.538,3346,0.538,3347,0.538,3348,0.538,3349,6.23,3350,0.538,3351,0.472,3352,0.538,3353,0.538,3354,0.538,3355,0.538,3356,0.538,3357,0.538,3358,6.76,3359,0.538,3360,0.538,3361,0.538,3362,1.016,3363,0.538,3364,0.538,3365,0.538,3366,0.538,3367,0.538,3368,1.829,3369,0.538,3370,0.538,3371,0.538,3372,0.538,3373,0.538,3374,0.538,3375,0.538,3376,0.538,3377,0.538,3378,0.538,3379,0.538,3380,0.538,3381,0.538,3382,0.538,3383,7.822,3384,7.42,3385,0.538,3386,0.538,3387,0.538,3388,0.472,3389,0.538,3390,0.538,3391,0.538,3392,3.783,3393,0.538,3394,0.538,3395,0.538,3396,0.538,3397,0.538,3398,1.829,3399,1.016,3400,1.444,3401,0.538,3402,0.538,3403,0.538,3404,0.538,3405,0.538,3406,0.538,3407,0.472,3408,0.538,3409,0.538,3410,5.975,3411,0.538,3412,0.538,3413,1.829,3414,1.829,3415,0.538,3416,0.538,3417,2.178,3418,2.785,3419,0.538,3420,0.538,3421,0.538,3422,0.538,3423,0.538,3424,0.538,3425,1.267,3426,0.538,3427,0.538,3428,0.538,3429,0.538,3430,0.538,3431,0.538,3432,0.538,3433,0.538,3434,0.538,3435,0.538,3436,1.016,3437,0.538,3438,0.538,3439,0.538,3440,2.495,3441,0.538,3442,0.538,3443,0.538,3444,0.538,3445,2.785,3446,1.016,3447,0.538,3448,1.016,3449,1.016,3450,0.538,3451,0.538,3452,0.538,3453,0.538,3454,0.538,3455,0.538,3456,3.52,3457,0.538,3458,0.538,3459,0.538,3460,0.538,3461,0.538,3462,0.538,3463,0.538,3464,2.677,3465,0.538,3466,0.538,3467,0.538,3468,0.538,3469,0.538,3470,3.729,3471,0.538,3472,0.538,3473,0.538,3474,0.538,3475,7.07,3476,0.538,3477,0.538,3478,1.829,3479,2.189,3480,0.538,3481,0.538,3482,0.538,3483,0.538,3484,1.829,3485,0.538,3486,0.538,3487,0.538,3488,0.538,3489,0.538,3490,0.538,3491,0.538,3492,0.538,3493,0.538,3494,0.538,3495,0.538,3496,0.538,3497,0.538,3498,0.538,3499,0.538,3500,0.538,3501,0.538,3502,0.538,3503,0.538,3504,0.538,3505,0.538,3506,0.538,3507,0.538,3508,0.538,3509,0.538,3510,0.538,3511,0.538,3512,0.538,3513,0.472,3514,0.538,3515,0.538,3516,0.538,3517,0.538,3518,0.538,3519,0.538,3520,0.538,3521,0.538,3522,0.538,3523,0.538,3524,3.295,3525,7.309,3526,0.538,3527,0.538,3528,0.538,3529,0.538,3530,0.538,3531,0.538,3532,0.538,3533,0.538,3534,0.538,3535,0.538,3536,0.538,3537,0.538,3538,0.538,3539,0.538,3540,0.538,3541,0.538,3542,0.538,3543,0.538,3544,1.016,3545,1.444,3546,1.444,3547,0.538,3548,0.538,3549,0.538,3550,0.538,3551,0.538,3552,1.016,3553,0.538,3554,0.538,3555,0.538,3556,0.538,3557,0.538,3558,0.538,3559,0.538,3560,0.538,3561,0.538,3562,0.538,3563,0.538,3564,0.538,3565,0.538,3566,0.538,3567,1.444,3568,1.016,3569,1.016,3570,0.538,3571,0.538,3572,0.538,3573,0.538,3574,0.538,3575,0.538,3576,0.538,3577,0.538,3578,0.538,3579,0.538,3580,0.538,3581,0.538,3582,0.538,3583,0.538,3584,0.538,3585,0.538,3586,0.538,3587,1.016,3588,0.538,3589,0.538,3590,0.538,3591,0.538,3592,0.538,3593,0.538,3594,0.538,3595,0.538,3596,0.538,3597,6.043,3598,0.538,3599,0.538,3600,0.538,3601,0.538,3602,0.538,3603,0.538,3604,0.538,3605,0.538,3606,0.538,3607,0.538,3608,0.538,3609,0.538,3610,0.538,3611,0.538,3612,0.538,3613,1.016,3614,0.538,3615,0.538,3616,0.538,3617,0.538,3618,0.538,3619,0.538,3620,0.538,3621,0.538,3622,0.538,3623,0.538,3624,0.538,3625,0.538,3626,0.538,3627,4.848,3628,0.538,3629,0.538,3630,0.538,3631,0.538,3632,0.538,3633,0.538,3634,0.538,3635,0.538,3636,0.538,3637,0.538,3638,0.538,3639,0.538,3640,0.538,3641,0.538,3642,0.538,3643,0.538,3644,0.538,3645,0.538,3646,0.538,3647,0.538,3648,0.538,3649,0.538,3650,0.538,3651,0.538,3652,0.538,3653,0.538,3654,0.538,3655,0.538,3656,0.538,3657,1.016,3658,0.538,3659,1.016,3660,0.538,3661,0.538,3662,0.538,3663,0.538,3664,0.538,3665,0.538,3666,0.538,3667,0.538,3668,0.538,3669,0.538,3670,0.538,3671,0.538,3672,0.538,3673,0.538,3674,0.538,3675,0.538,3676,0.538,3677,0.538,3678,0.538,3679,0.538,3680,0.538,3681,0.538,3682,2.178,3683,0.538,3684,0.538,3685,0.538,3686,0.538,3687,5.088,3688,0.538,3689,0.538,3690,0.538,3691,0.538,3692,0.538,3693,0.538,3694,0.538,3695,0.538,3696,0.538,3697,0.538,3698,0.538,3699,0.538,3700,0.538,3701,0.538,3702,0.538,3703,0.538,3704,0.538,3705,0.538,3706,0.538,3707,0.472,3708,0.538,3709,0.538,3710,0.538,3711,0.538,3712,0.538,3713,1.829,3714,1.444,3715,0.538,3716,0.538,3717,0.538,3718,0.538,3719,0.538,3720,0.538,3721,0.538,3722,0.538,3723,1.016,3724,0.538,3725,0.538,3726,0.538,3727,0.538,3728,0.538,3729,0.538,3730,0.538,3731,0.538,3732,0.538,3733,0.538,3734,0.538,3735,0.538,3736,0.538,3737,0.538,3738,1.016,3739,0.538,3740,0.538,3741,0.538,3742,1.016,3743,0.538,3744,0.538,3745,0.538,3746,0.538,3747,0.538,3748,0.538,3749,0.538,3750,0.538,3751,0.538,3752,0.538,3753,0.538,3754,0.538,3755,1.444,3756,0.538,3757,0.538,3758,0.538,3759,0.538,3760,0.538,3761,0.538,3762,0.538,3763,0.538,3764,0.538,3765,0.538,3766,0.538,3767,0.538,3768,0.538,3769,0.538,3770,0.538,3771,0.538,3772,0.472,3773,0.538,3774,0.538,3775,0.538,3776,0.538,3777,0.538,3778,0.538,3779,7.572,3780,1.016,3781,0.538,3782,0.538,3783,0.538,3784,0.538,3785,0.538,3786,0.538,3787,0.538,3788,0.538,3789,0.538,3790,0.538,3791,0.538,3792,0.538,3793,0.538,3794,0.538,3795,0.538,3796,0.538,3797,0.538,3798,1.444,3799,1.444,3800,0.538,3801,0.538,3802,0.538,3803,0.538,3804,0.538,3805,0.538,3806,0.538,3807,0.538,3808,0.538,3809,0.538,3810,0.538,3811,1.016,3812,0.538,3813,0.538,3814,0.538,3815,1.016,3816,0.538,3817,0.538,3818,0.538,3819,0.538,3820,1.016,3821,0.538,3822,0.538,3823,0.538,3824,0.538,3825,0.538,3826,0.538,3827,0.538,3828,0.538,3829,0.538,3830,0.538,3831,0.538,3832,0.538,3833,0.538,3834,0.538,3835,0.538,3836,0.538,3837,0.538,3838,2.785,3839,0.538,3840,0.538,3841,0.538,3842,1.016,3843,0.538,3844,0.538,3845,0.538,3846,0.538,3847,0.538,3848,0.538,3849,0.538,3850,0.538,3851,0.538,3852,0.538,3853,0.538,3854,0.538,3855,0.538,3856,0.538,3857,0.538,3858,0.538,3859,1.444,3860,0.538,3861,0.538,3862,0.538,3863,0.538,3864,0.538,3865,0.538,3866,0.538,3867,0.538,3868,0.538,3869,1.016,3870,0.538,3871,0.538,3872,0.538,3873,0.538,3874,0.538,3875,0.538,3876,0.538,3877,0.538,3878,0.538,3879,0.538,3880,0.538,3881,0.538,3882,0.538,3883,0.538,3884,0.538,3885,0.538,3886,1.016,3887,0.538,3888,0.538,3889,0.538,3890,0.538,3891,0.538,3892,0.538,3893,0.538,3894,0.538,3895,0.538,3896,0.538,3897,0.538,3898,0.538,3899,0.538,3900,0.538,3901,0.538,3902,0.538,3903,0.538,3904,0.538,3905,0.538,3906,0.538,3907,0.538,3908,0.538,3909,0.538,3910,0.538,3911,0.538,3912,0.538,3913,0.538,3914,0.538,3915,4.104,3916,0.538,3917,0.538,3918,1.016,3919,1.016,3920,0.538,3921,0.538,3922,0.538,3923,0.538,3924,0.538,3925,0.538,3926,0.538,3927,0.538,3928,0.538,3929,0.538,3930,0.538,3931,0.538,3932,0.538,3933,0.538,3934,0.538,3935,0.538,3936,0.538,3937,2.785,3938,0.538,3939,1.016,3940,1.016,3941,0.538,3942,0.538,3943,0.538,3944,0.538,3945,0.538,3946,0.538,3947,0.538,3948,0.538,3949,0.538,3950,0.538,3951,0.538,3952,0.538,3953,0.538,3954,0.538,3955,0.538,3956,0.538,3957,0.538,3958,0.538,3959,0.538,3960,0.538,3961,0.538,3962,0.538,3963,0.538,3964,0.538,3965,1.016,3966,0.538,3967,0.538,3968,0.538,3969,0.538,3970,0.538,3971,0.538,3972,0.538,3973,0.538,3974,0.538,3975,0.538,3976,0.538,3977,0.538,3978,0.538,3979,0.538,3980,0.538,3981,0.538,3982,0.538,3983,0.538,3984,0.538,3985,0.538,3986,0.538,3987,0.538,3988,0.538,3989,0.538,3990,0.538,3991,0.538,3992,0.538,3993,0.538,3994,0.538,3995,0.538,3996,0.538,3997,0.538,3998,1.016,3999,0.538,4000,0.538,4001,0.538,4002,0.538,4003,0.538,4004,0.538,4005,0.538,4006,0.699,4007,1.259,4008,0.538,4009,0.538,4010,0.538,4011,0.538,4012,0.538,4013,0.538,4014,0.538,4015,0.538,4016,0.538,4017,0.538,4018,0.538,4019,0.538,4020,0.538,4021,0.538,4022,0.538,4023,0.538,4024,0.538,4025,0.538,4026,0.538,4027,0.538,4028,0.538,4029,1.829,4030,0.538,4031,0.538,4032,0.538,4033,0.538,4034,0.538,4035,1.016,4036,0.538,4037,0.538,4038,0.538,4039,0.538,4040,0.538,4041,0.538,4042,0.538,4043,0.538,4044,0.538,4045,0.538,4046,0.538,4047,0.538,4048,0.538,4049,0.538,4050,0.538,4051,0.538,4052,0.538,4053,0.538,4054,0.538,4055,0.538,4056,0.538,4057,0.538,4058,0.538,4059,0.538,4060,0.538,4061,0.538,4062,0.538,4063,0.538,4064,0.538,4065,0.538,4066,0.538,4067,0.538,4068,0.538,4069,0.538,4070,0.538,4071,0.538,4072,0.538,4073,0.538,4074,0.538,4075,0.538,4076,0.538,4077,0.538,4078,0.538,4079,0.538,4080,0.472,4081,0.538,4082,0.538,4083,0.538,4084,0.538,4085,0.538,4086,0.538,4087,0.538,4088,0.538,4089,0.538,4090,0.538,4091,0.538,4092,0.538,4093,0.538,4094,0.538,4095,0.538,4096,0.538,4097,0.538,4098,0.538,4099,0.538,4100,0.538,4101,0.538,4102,0.538,4103,0.538,4104,0.538,4105,0.538,4106,0.538,4107,1.016,4108,0.538,4109,0.538,4110,0.538,4111,0.538,4112,0.538,4113,0.538,4114,0.538,4115,0.538,4116,0.538,4117,0.538,4118,0.538,4119,0.538,4120,0.538,4121,0.538,4122,0.538,4123,0.538,4124,0.538,4125,0.538,4126,0.538,4127,0.538,4128,0.538,4129,0.538,4130,0.538,4131,0.538,4132,0.538,4133,0.538,4134,0.538,4135,0.538,4136,0.538,4137,0.538,4138,0.538,4139,0.538,4140,0.538,4141,0.538,4142,0.538,4143,0.538,4144,0.538,4145,2.495,4146,0.538,4147,0.538,4148,0.538,4149,0.538,4150,0.538,4151,0.538,4152,0.538,4153,0.538,4154,1.016,4155,0.538,4156,0.538,4157,0.538,4158,0.538,4159,0.538,4160,1.829,4161,0.538,4162,0.538,4163,0.538,4164,0.538,4165,0.538,4166,0.538,4167,0.538,4168,0.538,4169,0.538,4170,0.538,4171,0.538,4172,0.472,4173,0.538,4174,0.538,4175,1.911,4176,0.538,4177,0.538,4178,7.655,4179,0.538,4180,0.538,4181,0.538,4182,0.538,4183,0.538,4184,0.538,4185,0.538,4186,0.538,4187,0.538,4188,0.538,4189,0.538,4190,0.538,4191,0.538,4192,0.538,4193,0.538,4194,0.538,4195,1.016,4196,0.538,4197,0.538,4198,0.538,4199,0.538,4200,0.538,4201,0.538,4202,0.538,4203,0.538,4204,0.538,4205,0.538,4206,0.538,4207,0.538,4208,0.538,4209,0.538,4210,0.538,4211,0.538,4212,0.538,4213,0.538,4214,0.538,4215,0.538,4216,0.538,4217,0.538,4218,0.538,4219,0.538,4220,0.538,4221,0.538,4222,0.538,4223,0.538,4224,0.538,4225,0.538,4226,1.016,4227,0.538,4228,0.538,4229,0.538,4230,0.538,4231,2.785,4232,0.538,4233,0.538,4234,0.538,4235,0.538,4236,2.785,4237,0.538,4238,0.538,4239,0.538,4240,0.538,4241,0.538,4242,0.538,4243,0.538,4244,0.538,4245,0.538,4246,0.538,4247,0.538,4248,0.538,4249,0.538,4250,1.016,4251,0.538,4252,0.538,4253,0.538,4254,0.538,4255,0.538,4256,0.538,4257,0.538,4258,0.538,4259,0.538,4260,0.538,4261,0.538,4262,0.538,4263,0.538,4264,2.178,4265,0.538,4266,0.538,4267,0.538,4268,0.538,4269,1.016,4270,0.538,4271,0.538,4272,0.538,4273,0.538,4274,1.016,4275,0.538,4276,0.538,4277,0.538,4278,0.538,4279,0.538,4280,1.016,4281,0.538,4282,0.538,4283,0.538,4284,0.538,4285,0.538,4286,0.538,4287,0.538,4288,0.538,4289,0.538,4290,0.538,4291,0.538,4292,0.538,4293,0.538,4294,1.016,4295,1.911,4296,0.538,4297,0.538,4298,0.538,4299,0.538,4300,0.538,4301,0.538,4302,0.538,4303,0.538,4304,0.538,4305,1.444,4306,0.538,4307,0.538,4308,0.538,4309,0.538,4310,0.538,4311,0.538,4312,0.538,4313,0.538,4314,0.538,4315,0.538,4316,1.444,4317,0.538,4318,0.538,4319,0.538,4320,0.538,4321,0.538,4322,0.538,4323,0.538,4324,0.538,4325,0.538,4326,0.472,4327,0.538,4328,1.016,4329,0.538,4330,0.538,4331,0.538,4332,0.538,4333,0.538,4334,0.538,4335,0.538,4336,0.538,4337,0.538,4338,0.538,4339,0.538,4340,0.538,4341,0.538,4342,0.538,4343,0.538,4344,0.538,4345,0.538,4346,0.538,4347,1.016,4348,1.016,4349,0.538,4350,1.016,4351,0.538,4352,0.538,4353,0.538,4354,0.538,4355,0.538,4356,0.538,4357,0.538,4358,0.538,4359,0.538,4360,0.538,4361,0.538,4362,0.538,4363,0.538,4364,0.538,4365,0.538,4366,0.538,4367,0.538,4368,0.538,4369,0.538,4370,0.538,4371,0.538,4372,0.472,4373,0.538,4374,0.538,4375,1.016,4376,0.538,4377,0.538,4378,0.538,4379,0.538,4380,0.538,4381,0.538,4382,0.538,4383,0.538,4384,0.538,4385,0.538,4386,0.538,4387,0.538,4388,0.538,4389,0.538,4390,0.538,4391,0.538,4392,0.538,4393,0.538,4394,0.428,4395,0.538,4396,0.538,4397,0.538,4398,0.538,4399,0.538,4400,0.538,4401,0.538,4402,0.538,4403,0.538,4404,0.538,4405,0.538,4406,0.538,4407,0.538,4408,0.538,4409,0.538,4410,0.538,4411,0.538,4412,0.538,4413,0.538,4414,0.538,4415,0.538,4416,0.538,4417,0.472,4418,0.538,4419,0.538,4420,0.538,4421,1.444,4422,0.538,4423,0.538,4424,0.538,4425,0.538,4426,0.538,4427,0.538,4428,0.538,4429,0.538,4430,0.538,4431,0.538,4432,0.538,4433,0.538,4434,1.829,4435,0.538,4436,0.538,4437,0.538,4438,0.538,4439,0.538,4440,2.785,4441,2.178,4442,0.538,4443,0.538,4444,0.538,4445,0.538,4446,0.538,4447,0.538,4448,0.538,4449,0.538,4450,0.538,4451,0.538,4452,0.538,4453,0.538,4454,0.538,4455,0.538,4456,1.016,4457,0.538,4458,0.538,4459,0.538,4460,0.538,4461,0.538,4462,0.538,4463,0.538,4464,0.538,4465,0.538,4466,0.538,4467,0.538,4468,0.538,4469,0.538,4470,0.538,4471,0.538,4472,0.538,4473,0.538,4474,0.538,4475,0.538,4476,0.538,4477,0.538,4478,0.538,4479,0.538,4480,0.538,4481,0.538,4482,0.538,4483,0.538,4484,1.016,4485,0.538,4486,0.538,4487,0.538,4488,0.538,4489,0.538,4490,0.538,4491,0.538,4492,0.538,4493,0.538,4494,0.538,4495,0.538,4496,0.538,4497,0.538,4498,0.538,4499,0.538,4500,0.538,4501,0.538,4502,0.538,4503,0.538,4504,0.538,4505,0.538,4506,0.538,4507,0.538,4508,0.538,4509,0.538,4510,0.538,4511,0.538,4512,0.538,4513,1.829,4514,0.538,4515,0.538,4516,0.538,4517,0.538,4518,0.538,4519,0.538,4520,0.538,4521,0.538,4522,0.538,4523,0.538,4524,0.538,4525,0.538,4526,0.538,4527,0.538,4528,0.538,4529,0.538,4530,0.538,4531,0.538,4532,0.538,4533,0.538,4534,0.538,4535,0.538,4536,0.538,4537,0.538,4538,0.538,4539,0.538,4540,0.538,4541,0.538,4542,0.538,4543,0.538,4544,0.538,4545,0.538,4546,0.538,4547,0.538,4548,0.538,4549,0.538,4550,0.538,4551,0.538,4552,2.178,4553,2.178,4554,0.538,4555,0.538,4556,0.538,4557,0.538,4558,0.538,4559,0.538,4560,0.538,4561,0.538,4562,0.538,4563,0.538,4564,0.538,4565,0.538,4566,0.538,4567,0.538,4568,0.538,4569,0.538,4570,0.538,4571,0.538,4572,0.538,4573,0.538,4574,0.538,4575,0.538,4576,0.538,4577,0.538,4578,0.538,4579,0.538,4580,0.538,4581,0.538,4582,0.538,4583,0.538,4584,0.538,4585,0.538,4586,0.538,4587,0.538,4588,0.538,4589,0.538,4590,0.538,4591,0.538,4592,0.538,4593,0.538,4594,0.538,4595,0.538,4596,0.538,4597,0.538,4598,7.537,4599,0.538,4600,0.538,4601,0.538,4602,0.538,4603,0.538,4604,0.538,4605,0.538,4606,0.538,4607,0.538,4608,0.538,4609,0.538,4610,0.472,4611,1.444,4612,0.538,4613,0.538,4614,0.538,4615,0.472,4616,0.538,4617,0.538,4618,0.538,4619,0.538,4620,0.538,4621,0.538,4622,0.538,4623,0.538,4624,0.538,4625,0.538,4626,0.538,4627,0.538,4628,0.538,4629,0.538,4630,0.538,4631,0.538,4632,0.538,4633,0.891,4634,0.538,4635,0.538,4636,0.538,4637,0.538,4638,0.538,4639,0.538,4640,0.538,4641,0.538,4642,0.538,4643,1.016,4644,0.538,4645,0.538,4646,0.538,4647,0.538,4648,0.538,4649,0.538,4650,0.538,4651,0.538,4652,0.538,4653,0.538,4654,0.538,4655,0.538,4656,0.538,4657,0.538,4658,0.538,4659,0.538,4660,0.538,4661,0.538,4662,0.538,4663,0.538,4664,0.538,4665,0.538,4666,0.538,4667,0.538,4668,0.538,4669,0.538,4670,0.538,4671,0.538,4672,0.538,4673,0.538,4674,0.538,4675,0.538,4676,0.538,4677,0.538,4678,0.538,4679,0.538,4680,0.538,4681,0.538,4682,0.538,4683,0.538,4684,0.538,4685,0.538,4686,0.538,4687,0.538,4688,0.538,4689,0.538,4690,0.538,4691,0.538,4692,0.538,4693,0.538,4694,0.538,4695,0.538,4696,0.538,4697,0.538,4698,0.538,4699,0.538,4700,0.538,4701,0.538,4702,0.538,4703,0.538,4704,0.538,4705,0.538,4706,0.538,4707,0.538,4708,0.538,4709,0.538,4710,0.538,4711,0.538,4712,0.538,4713,0.538,4714,0.538,4715,0.538,4716,0.538,4717,0.538,4718,0.538,4719,0.538,4720,0.538,4721,0.538,4722,0.538,4723,0.538,4724,0.538,4725,0.538,4726,0.538,4727,0.538,4728,0.538,4729,0.538,4730,0.538,4731,0.538,4732,0.538,4733,0.538,4734,0.538,4735,0.538,4736,0.538,4737,0.538,4738,0.538,4739,0.538,4740,1.016,4741,0.538,4742,0.538,4743,0.538,4744,0.538,4745,0.538,4746,0.538,4747,0.538,4748,0.538,4749,0.538,4750,0.538,4751,0.538,4752,0.538,4753,0.538,4754,0.538,4755,0.538,4756,0.538,4757,0.538,4758,0.538,4759,0.538,4760,0.538,4761,0.538,4762,0.538,4763,0.538,4764,0.538,4765,0.538,4766,0.538,4767,0.538,4768,0.538,4769,0.538,4770,0.538,4771,0.538,4772,0.538,4773,0.538,4774,0.538,4775,1.016,4776,0.538,4777,0.538,4778,0.538,4779,0.538,4780,0.538,4781,1.016,4782,1.016,4783,1.016,4784,0.538,4785,0.538,4786,0.538,4787,0.538,4788,0.538,4789,0.538,4790,0.538,4791,1.016,4792,1.016,4793,0.538,4794,0.538,4795,0.538,4796,0.538,4797,0.538,4798,0.538,4799,0.538,4800,0.538,4801,0.538,4802,0.538,4803,0.538,4804,0.538,4805,0.538,4806,0.538,4807,0.538,4808,0.538,4809,0.538,4810,0.538,4811,0.538,4812,0.538,4813,0.538,4814,0.538,4815,0.538,4816,0.538,4817,0.538,4818,0.538,4819,0.538,4820,0.538,4821,0.538,4822,0.538,4823,0.538,4824,0.538,4825,0.538,4826,0.538,4827,0.538,4828,0.538,4829,0.538,4830,0.538,4831,0.538,4832,0.538,4833,0.538,4834,0.538,4835,0.538,4836,0.538,4837,0.538,4838,0.538,4839,0.538,4840,0.538,4841,0.538,4842,0.538,4843,0.538,4844,0.538,4845,0.538,4846,0.538,4847,0.538,4848,0.538,4849,0.538,4850,0.538,4851,0.538,4852,0.538,4853,0.538,4854,0.538,4855,0.538,4856,0.538,4857,0.538,4858,0.538,4859,0.538,4860,0.538,4861,0.538,4862,0.538,4863,0.538,4864,0.538,4865,0.538,4866,0.538,4867,0.538,4868,0.538,4869,0.538,4870,0.538,4871,0.538,4872,0.538,4873,0.538,4874,0.538,4875,0.538,4876,0.538,4877,0.538,4878,0.538,4879,0.538,4880,0.538,4881,0.538,4882,0.538,4883,0.538,4884,0.538,4885,0.538,4886,0.538,4887,0.538,4888,0.538,4889,0.538,4890,0.538,4891,1.016,4892,0.538,4893,1.016,4894,0.538,4895,1.016,4896,1.444,4897,0.538,4898,0.538,4899,1.016,4900,0.538,4901,1.016,4902,8.178,4903,0.538,4904,0.538,4905,1.016,4906,0.538,4907,0.538,4908,0.538,4909,1.016,4910,0.538,4911,1.016,4912,0.538,4913,1.016,4914,0.538,4915,1.016,4916,0.538,4917,1.016,4918,0.538,4919,0.538,4920,0.538,4921,0.538,4922,1.016,4923,0.538,4924,1.016,4925,0.538,4926,1.016,4927,0.538,4928,1.016,4929,0.538,4930,1.016,4931,0.538,4932,1.016,4933,0.538,4934,1.016,4935,0.538,4936,1.016,4937,0.538,4938,0.538,4939,1.016,4940,1.016,4941,0.538,4942,0.538,4943,1.016,4944,0.538,4945,1.016,4946,0.538,4947,1.016,4948,0.538,4949,1.016,4950,0.538,4951,0.538,4952,1.016,4953,0.538,4954,0.538,4955,1.016,4956,0.472,4957,0.538,4958,0.538,4959,1.016,4960,0.538,4961,1.016,4962,0.538,4963,0.538,4964,1.016,4965,1.016,4966,0.538,4967,0.538,4968,1.016,4969,1.444,4970,1.829,4971,0.538,4972,0.538,4973,0.538,4974,1.016,4975,0.538,4976,1.016,4977,0.538,4978,0.538,4979,1.016,4980,0.538,4981,1.016,4982,0.538,4983,1.016,4984,0.538,4985,1.016,4986,0.538,4987,1.016,4988,0.538,4989,1.016,4990,0.538,4991,0.538,4992,1.016,4993,0.538,4994,1.016,4995,0.538,4996,1.016,4997,0.538,4998,1.016,4999,0.538,5000,1.016,5001,0.538,5002,1.016,5003,0.538,5004,1.016,5005,0.538,5006,1.016,5007,0.538,5008,0.538,5009,1.016,5010,0.538,5011,0.538,5012,0.538,5013,1.016,5014,0.538,5015,0.538,5016,0.538,5017,1.016,5018,0.37,5019,0.538,5020,0.538,5021,0.538,5022,1.444,5023,0.538,5024,1.016,5025,0.538,5026,1.016,5027,1.016,5028,1.829,5029,1.016,5030,0.538,5031,0.538,5032,0.538,5033,0.538,5034,0.538,5035,0.538,5036,0.538,5037,1.016,5038,1.016,5039,0.538,5040,0.538,5041,1.016,5042,0.538,5043,0.538,5044,1.016,5045,0.538,5046,1.016,5047,0.538,5048,1.016,5049,0.538,5050,1.016,5051,0.538,5052,1.016,5053,1.444,5054,0.538,5055,0.538,5056,0.538,5057,1.016,5058,0.538,5059,1.016,5060,0.538,5061,1.444,5062,0.538,5063,0.538,5064,0.538,5065,1.016,5066,0.538,5067,1.016,5068,0.538,5069,0.538,5070,0.538,5071,0.538,5072,0.538,5073,0.538,5074,0.538,5075,1.016,5076,0.538,5077,1.016,5078,0.538,5079,1.016,5080,0.538,5081,1.016,5082,0.538,5083,1.016,5084,0.538,5085,1.016,5086,0.538,5087,1.016,5088,0.538,5089,1.016,5090,0.538,5091,1.016,5092,0.538,5093,1.016,5094,0.538,5095,1.016,5096,0.538,5097,1.016,5098,0.538,5099,1.016,5100,0.538,5101,1.016,5102,0.538,5103,1.016,5104,0.538,5105,1.016,5106,0.538,5107,1.016,5108,0.538,5109,1.016,5110,0.538,5111,1.016,5112,0.538,5113,0.538,5114,0.538,5115,0.538,5116,1.016,5117,0.538,5118,0.538,5119,0.538,5120,0.538,5121,1.016,5122,1.829,5123,1.016,5124,0.538,5125,1.444,5126,0.538,5127,0.538,5128,0.538,5129,1.016,5130,0.538,5131,0.748,5132,0.538,5133,0.538,5134,0.538,5135,0.538,5136,1.016,5137,0.538,5138,0.538,5139,0.538,5140,1.016,5141,0.538,5142,1.016,5143,0.538,5144,1.016,5145,0.538,5146,1.016,5147,0.538,5148,1.016,5149,0.538,5150,1.016,5151,0.538,5152,1.016,5153,1.016,5154,0.538,5155,0.538,5156,1.016,5157,0.538,5158,0.538,5159,1.016,5160,0.538,5161,0.538,5162,1.016,5163,0.538,5164,0.538,5165,1.016,5166,0.538,5167,0.538,5168,0.538,5169,0.538,5170,0.538,5171,0.538,5172,0.538,5173,0.538,5174,0.538,5175,0.538,5176,0.538,5177,1.016,5178,0.538,5179,0.538,5180,1.016,5181,0.538,5182,0.538,5183,1.016,5184,0.538,5185,0.538,5186,1.016,5187,0.538,5188,0.538,5189,0.538,5190,1.016,5191,0.538,5192,0.538,5193,0.538,5194,1.016,5195,0.538,5196,1.016,5197,0.538,5198,0.538,5199,0.538,5200,0.538,5201,1.016,5202,0.538,5203,1.016,5204,0.538,5205,1.016,5206,0.538,5207,1.016,5208,0.538,5209,0.538,5210,0.538,5211,0.538,5212,0.538,5213,1.016,5214,0.538,5215,1.016,5216,0.538,5217,0.538,5218,1.016,5219,0.538,5220,1.016,5221,0.538,5222,0.538,5223,0.538,5224,0.538,5225,0.538,5226,0.538,5227,1.016,5228,0.538,5229,0.538,5230,0.538,5231,1.016,5232,0.538,5233,0.538,5234,0.538,5235,0.538,5236,0.472,5237,0.538,5238,1.016,5239,0.538,5240,1.016,5241,0.538,5242,0.472,5243,0.538,5244,0.538,5245,0.538,5246,0.538,5247,1.016,5248,0.538,5249,1.016,5250,0.538,5251,1.016,5252,0.538,5253,0.538,5254,1.016,5255,0.538,5256,0.538,5257,1.016,5258,0.538,5259,0.538,5260,0.538,5261,1.016,5262,0.538,5263,1.016,5264,0.538,5265,1.016,5266,0.538,5267,1.016,5268,0.538,5269,1.016,5270,0.538,5271,1.016,5272,0.538,5273,1.016,5274,0.538,5275,1.016,5276,0.538,5277,1.016,5278,0.538,5279,1.016,5280,0.538,5281,1.016,5282,0.538,5283,0.538,5284,0.538,5285,0.538,5286,0.538]],["title/dependencies.html",[2831,3.602,3205,2.917]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,89,0.795,91,3.819,92,3.468,93,3.038,98,3.646,102,2.02,119,4.374,120,3.038,122,4.374,123,1.473,128,4.374,353,4.427,354,3.543,518,3.167,735,3.167,759,3.85,760,3.85,761,3.038,770,4.427,831,3.167,1297,3.646,1424,4.088,1711,4.088,1714,5.211,1715,5.211,2539,5.211,2540,5.211,2635,5.211,2831,4.088,3351,5.211,3388,6.326,3407,7.536,3464,5.211,3513,5.211,4080,5.211,4372,5.211,4610,5.211,4615,5.211,5287,5.939,5288,5.939,5289,5.939,5290,7.21,5291,5.939,5292,5.939,5293,5.939,5294,5.939,5295,5.939,5296,5.939,5297,5.939,5298,5.939]],["title/miscellaneous/enumerations.html",[5299,2.138,5300,4.592]],["body/miscellaneous/enumerations.html",[6,3.876,7,0.267,12,0.011,37,4.227,38,4.116,40,4.116,41,2.974,42,4.116,43,3.3,44,4.116,45,3.861,46,4.116,47,3.671,48,4.116,49,3.671,50,4.116,51,3.876,52,4.116,53,3.876,54,4.116,55,3.492,56,4.116,57,3.876,58,4.116,59,3.332,60,4.116,61,3.671,62,4.116,63,3.671,64,4.116,65,3.876,66,4.116,67,3.876,68,4.116,69,3.876,70,4.445,71,4.116,72,4.116,73,4.116,74,4.116,75,0.009,76,0.009,470,2.272,5299,3.492,5300,5.247,5301,6.352]],["title/miscellaneous/functions.html",[3100,4.17,5299,2.138]],["body/miscellaneous/functions.html",[5,0.225,7,0.197,10,1.348,11,0.578,12,0.011,19,1.04,21,1.031,22,2.381,75,0.007,76,0.007,80,1.652,322,3.817,328,2.25,332,2.25,354,3.31,450,1.911,454,2.598,455,1.652,470,1.516,660,1.64,718,4.367,723,2.71,750,2.434,765,3.041,786,2.607,877,3.651,878,2.812,879,3.505,880,4.961,881,2.852,882,5.749,906,3.505,922,3.505,1025,2.451,1174,2.852,1241,4.43,1306,2.701,1418,5.217,1420,3.86,1627,3.028,1628,3.86,1629,3.505,1674,3.86,1803,3.86,1841,3.86,1917,3.86,1986,3.028,2116,3.86,2117,4.738,2118,3.505,2171,4.738,2617,3.86,2998,3.86,3100,3.505,5299,2.569,5302,6.736,5303,7.182,5304,6.736,5305,6.736,5306,6.736,5307,6.736,5308,4.399,5309,5.946,5310,5.946,5311,4.399,5312,5.91,5313,3.86,5314,5.946,5315,4.399,5316,5.946,5317,5.91,5318,5.946,5319,5.946,5320,5.946,5321,5.946,5322,5.946,5323,4.399,5324,5.91,5325,5.946,5326,6.736,5327,5.946,5328,6.736,5329,6.736,5330,6.736,5331,5.946,5332,6.736,5333,5.946,5334,6.736,5335,5.946,5336,5.91,5337,5.946,5338,5.946,5339,5.91,5340,3.86,5341,3.86,5342,4.399,5343,4.399,5344,4.399,5345,4.399,5346,4.399,5347,4.399,5348,4.399,5349,5.946,5350,4.399,5351,4.399,5352,4.399]],["title/index.html",[7,0.164,2938,2.52,2939,2.696]],["body/index.html",[5,0.194,12,0.011,59,3.197,75,0.009,76,0.009,77,1.838,123,1.978,173,2.28,188,3.949,201,1.951,354,2.819,381,2.197,397,2.073,411,2.138,521,5.198,525,4.576,580,3.197,581,4.57,628,3.949,724,3.719,735,3.059,793,3.35,831,3.059,839,2.713,931,4.225,1069,4.576,1216,4.57,1269,3.949,1415,4.57,1447,4.225,1661,4.57,1708,5.033,1711,3.949,1752,4.57,1760,5.624,1856,4.859,2831,3.949,2922,4.57,2938,3.949,2947,3.719,2981,5.033,2986,5.033,3011,6.194,3022,5.033,3024,5.624,3093,5.033,3103,5.033,3209,6.709,3212,5.033,3217,5.033,3253,5.033,4175,6.194,4295,5.033,4956,5.033,5242,5.033,5353,5.033,5354,5.033,5355,5.736,5356,5.736,5357,5.736,5358,5.736,5359,5.736,5360,7.058,5361,7.058,5362,5.736,5363,5.736,5364,5.736,5365,5.736,5366,5.736,5367,5.736,5368,5.736,5369,5.736,5370,5.736,5371,5.736,5372,5.736,5373,5.736,5374,5.736,5375,5.736,5376,5.736,5377,5.736,5378,5.736]],["title/license.html",[2938,2.52,2939,2.696,5131,2.696]],["body/license.html",[10,0.869,12,0.006,29,3.605,61,1.913,75,0.006,76,0.006,176,2.483,200,1.662,201,1.06,212,3.396,225,3.707,246,0.999,348,0.635,376,1.63,424,3.426,463,1.737,520,3.707,544,1.662,568,2.295,685,2.735,692,2.483,753,1.532,770,1.913,774,2.02,816,1.913,825,1.911,842,2.02,868,3.016,915,5.263,926,2.483,948,2.02,986,2.735,997,4.547,1001,4.082,1007,2.483,1021,2.295,1296,4.547,1312,2.295,1447,2.295,1626,5.72,2108,2.717,2300,3.707,2489,2.735,2644,2.145,2886,2.735,2956,2.735,2969,4.082,3018,6.3,3033,2.735,3045,2.735,3092,6.84,3139,2.735,3305,2.483,3479,2.735,3707,2.735,4326,4.885,4394,2.483,5131,5.103,5236,4.082,5379,7.179,5380,7.38,5381,6.605,5382,7.179,5383,3.116,5384,3.116,5385,3.116,5386,7.38,5387,3.116,5388,4.652,5389,3.116,5390,3.116,5391,3.116,5392,5.567,5393,3.116,5394,5.567,5395,5.567,5396,3.116,5397,6.173,5398,3.116,5399,5.567,5400,3.116,5401,3.116,5402,3.116,5403,3.116,5404,7.38,5405,3.116,5406,3.116,5407,4.652,5408,4.652,5409,3.116,5410,3.116,5411,4.652,5412,7.795,5413,8.428,5414,4.652,5415,4.652,5416,3.116,5417,3.116,5418,3.116,5419,4.652,5420,8.534,5421,3.116,5422,5.567,5423,3.116,5424,4.652,5425,3.116,5426,4.652,5427,3.116,5428,5.567,5429,3.116,5430,4.652,5431,4.652,5432,6.173,5433,3.116,5434,3.116,5435,3.116,5436,6.173,5437,4.652,5438,3.116,5439,3.116,5440,4.652,5441,3.116,5442,3.116,5443,3.116,5444,5.567,5445,6.605,5446,7.544,5447,6.605,5448,5.567,5449,3.116,5450,3.116,5451,3.116,5452,4.652,5453,3.116,5454,4.652,5455,3.116,5456,3.116,5457,3.116,5458,3.116,5459,3.116,5460,3.116,5461,2.145,5462,3.116,5463,3.116,5464,4.652,5465,3.116,5466,7.795,5467,6.605,5468,3.116,5469,3.116,5470,3.116,5471,4.652,5472,3.116,5473,3.116,5474,3.116,5475,3.116,5476,3.116,5477,3.116,5478,3.116,5479,3.116,5480,3.116,5481,3.116,5482,3.116,5483,3.116,5484,3.116,5485,3.116,5486,6.173,5487,3.116,5488,3.116,5489,3.116,5490,3.116,5491,5.567,5492,3.116,5493,3.116,5494,3.116,5495,4.652,5496,3.116,5497,3.116,5498,5.567,5499,4.652,5500,3.116,5501,3.116,5502,3.116,5503,3.116,5504,4.652,5505,3.116,5506,3.116,5507,3.116,5508,3.116,5509,3.116,5510,6.605,5511,3.116,5512,3.116,5513,3.116,5514,3.116,5515,3.116,5516,3.116,5517,3.116,5518,3.116,5519,4.652,5520,3.116,5521,5.567,5522,3.116,5523,3.116,5524,3.116,5525,3.116,5526,3.116,5527,3.116,5528,3.116,5529,7.179,5530,5.567,5531,3.116,5532,7.179,5533,4.652,5534,4.652,5535,3.116,5536,5.567,5537,3.116,5538,4.652,5539,3.116,5540,3.116,5541,3.116,5542,3.116,5543,3.116,5544,6.928,5545,4.652,5546,5.567,5547,4.652,5548,3.116,5549,3.116,5550,6.605,5551,4.652,5552,4.652,5553,5.567,5554,4.652,5555,4.652,5556,4.652,5557,4.652,5558,3.116,5559,3.116,5560,3.116,5561,3.116,5562,3.116,5563,3.116,5564,6.173,5565,3.116,5566,3.116,5567,3.116,5568,3.116,5569,3.116,5570,3.116,5571,3.116,5572,3.116,5573,3.116,5574,6.173,5575,5.567,5576,4.652,5577,5.567,5578,4.652,5579,4.652,5580,4.652,5581,3.116,5582,3.116,5583,3.116,5584,3.116,5585,4.652,5586,3.116,5587,6.173,5588,3.116,5589,3.116,5590,3.116,5591,3.116,5592,4.652,5593,3.116,5594,3.116,5595,3.116,5596,3.116,5597,3.116,5598,3.116,5599,3.116,5600,3.116,5601,3.116,5602,4.652,5603,3.116,5604,3.116,5605,3.116,5606,3.116,5607,3.116,5608,3.116,5609,3.116,5610,3.116,5611,3.116,5612,3.116,5613,3.116,5614,3.116,5615,3.116,5616,3.116,5617,3.116,5618,3.116,5619,3.116,5620,3.116,5621,4.652,5622,3.116,5623,3.116,5624,3.116,5625,3.116,5626,3.116,5627,3.116,5628,3.116,5629,3.116,5630,4.652,5631,3.116,5632,3.116,5633,3.116,5634,3.116,5635,3.116,5636,3.116,5637,3.116,5638,3.116,5639,3.116,5640,3.116,5641,3.116,5642,3.116,5643,3.116]],["title/modules.html",[3315,4.709]],["body/modules.html",[12,0.01,75,0.01,76,0.01,3315,5.544]],["title/overview.html",[5644,5.186]],["body/overview.html",[2,1.384,12,0.01,41,3.207,45,3.625,75,0.01,76,0.01,98,4.173,140,0.853,335,2.178,376,2.382,420,2.701,2582,5.965,3097,6.852,5644,5.965]],["title/properties.html",[8,0.418,3205,2.917]],["body/properties.html",[8,0.536,12,0.011,75,0.01,76,0.01,397,2.424,525,4.348,1294,4.348,2644,4.617,3024,5.344,4417,5.885,5131,4.94,5354,5.885,5645,6.707,5646,6.707,5647,6.707,5648,6.707,5649,6.707,5650,6.707]],["title/todo.html",[557,2.138,2938,2.52,2939,2.696]],["body/todo.html",[5,0.182,12,0.01,18,2.63,75,0.01,76,0.01,212,3.131,525,4.291,831,3.53,839,3.131,1133,5.274,1586,4.556,1690,5.274,1711,4.556,3202,5.808,4633,5.808,5651,6.619,5652,6.619,5653,6.619,5654,6.619,5655,6.619,5656,6.619,5657,5.808,5658,6.619,5659,6.619,5660,6.619,5661,6.619,5662,6.619,5663,6.619,5664,6.619]],["title/miscellaneous/typealiases.html",[5299,2.138,5665,5.233]],["body/miscellaneous/typealiases.html",[6,3.831,7,0.264,11,0.413,12,0.011,14,4.66,23,4.66,30,4.068,31,3.831,32,4.66,33,3.831,34,3.628,35,3.628,75,0.009,76,0.009,289,3.293,290,3.532,294,3.151,295,3.022,296,3.151,297,3.151,298,3.151,299,3.022,300,3.151,301,3.151,302,3.151,322,3.532,326,3.4,328,3.022,329,3.4,330,3.4,332,3.022,333,3.532,421,5.185,425,6.307,458,4.413,729,3.831,747,4.66,748,3.451,750,2.135,905,3.451,1479,3.831,1480,4.66,1484,3.628,1485,3.628,1487,4.66,5299,3.451,5301,6.797,5666,5.909,5667,5.909,5668,7.746,5669,6.307,5670,5.909,5671,5.909,5672,5.909]],["title/miscellaneous/variables.html",[5299,2.138,5673,4.592]],["body/miscellaneous/variables.html",[7,0.136,10,1.512,11,0.607,12,0.011,18,1.819,19,0.954,21,1.978,39,0.846,45,1.626,75,0.006,76,0.006,77,1.467,80,1.36,90,1.872,93,2.341,153,0.639,173,1.819,184,3.647,185,4.82,201,1.868,245,1.699,290,2.249,307,2.341,308,2.341,309,2.341,311,2.341,313,2.013,314,2.013,315,2.341,317,2.249,318,1.559,323,2.441,324,1.498,326,1.442,327,2.441,331,2.249,381,0.949,397,1.654,470,2.151,471,1.977,472,3.515,492,1.872,493,1.977,494,1.977,495,1.872,496,1.559,497,1.699,498,1.977,499,1.977,500,1.977,501,1.977,519,2.81,562,3.647,580,1.699,660,2.562,683,4.016,718,4.242,729,1.977,738,3.373,768,1.39,824,1.977,842,1.977,877,1.872,878,1.442,881,2.967,883,2.81,886,1.699,1025,1.699,1026,4.821,1027,2.675,1028,2.675,1029,2.675,1030,4.016,1031,2.675,1032,2.675,1033,2.675,1034,2.675,1035,2.675,1036,2.675,1037,2.675,1038,4.016,1039,2.675,1040,2.675,1041,2.675,1042,2.675,1043,2.675,1044,2.675,1115,2.246,1174,1.977,1241,1.872,1306,1.872,1597,2.429,1627,2.099,1753,3.647,1986,2.099,2293,2.429,2336,3.647,2403,2.675,2528,4.865,2536,4.865,2644,2.099,2790,2.675,2809,4.016,2810,4.016,2880,4.016,3305,3.647,3320,2.675,4172,2.675,4394,5.679,5299,1.78,5303,7.45,5312,2.675,5313,4.016,5317,2.675,5324,2.675,5336,2.675,5339,2.675,5340,2.675,5341,4.821,5353,2.675,5669,2.675,5673,2.675,5674,4.577,5675,3.049,5676,4.577,5677,4.577,5678,4.577,5679,4.577,5680,4.577,5681,4.577,5682,3.049,5683,4.577,5684,6.106,5685,3.049,5686,3.049,5687,4.577,5688,5.494,5689,4.577,5690,4.577,5691,4.577,5692,3.049,5693,4.577,5694,6.544,5695,4.577,5696,4.577,5697,5.494,5698,4.577,5699,4.577,5700,4.577,5701,4.577,5702,4.577,5703,4.577,5704,4.577,5705,4.577,5706,3.049,5707,4.577,5708,3.049,5709,3.049,5710,3.049,5711,3.049,5712,3.049,5713,3.049,5714,3.049,5715,3.049,5716,3.049,5717,3.049,5718,3.049,5719,3.049,5720,3.049,5721,3.049,5722,3.049,5723,3.049,5724,3.049,5725,3.049,5726,3.049,5727,3.049,5728,3.049,5729,3.049,5730,3.049,5731,6.544,5732,3.049,5733,3.049,5734,3.049,5735,3.049,5736,3.049,5737,3.049,5738,3.049,5739,3.049,5740,3.049,5741,3.049,5742,3.049,5743,3.049,5744,3.049,5745,4.577,5746,7.127,5747,4.577,5748,4.577,5749,3.049,5750,3.049,5751,3.049,5752,3.049,5753,3.049,5754,3.049,5755,3.049,5756,3.049,5757,3.049,5758,3.049,5759,3.049,5760,3.049,5761,3.049,5762,3.049,5763,3.049,5764,3.049,5765,3.049,5766,3.049,5767,3.049,5768,3.049,5769,3.049,5770,3.049,5771,3.049,5772,6.872,5773,4.577,5774,3.049,5775,6.106,5776,3.049,5777,3.049,5778,3.049,5779,3.049,5780,3.049,5781,3.049]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.061,335,0.715,386,0.831,1053,1.446,2303,1.302,5018,1.535,5461,1.535]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.212,12,0.01,75,0.01,76,0.01,245,3.723,335,2.477,386,2.882,559,4.332,1053,5.012,2303,4.515,2947,4.332,3392,5.322,4006,4.599,4007,5.322,5782,4.921,5783,5.694,5784,4.921]],["title/additional-documentation/ui-components-slide-panel.html",[335,0.792,406,0.951,2303,1.443,2452,1.82,5018,1.701,5461,1.701]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,245,3.738,335,2.483,406,2.981,559,4.348,2303,4.525,2452,5.707,2947,4.348,3392,5.334,4006,4.617,4007,5.334,5782,4.94,5783,5.707,5784,4.94]],["title/additional-documentation/ui-components-dialogs.html",[335,0.888,2303,1.619,5018,1.908,5461,1.908,5785,2.432]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,245,3.752,335,2.488,559,4.365,2303,4.535,2947,4.365,3392,5.345,4006,4.634,4007,5.345,5782,4.958,5783,5.719,5784,4.958,5785,6.814]],["title/additional-documentation/helpers.html",[5018,2.52,5461,2.52,5786,3.212]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,245,3.695,559,4.299,2121,5.284,2947,4.299,3392,5.599,3425,5.819,3772,7.137,4006,5.299,4007,5.299,5657,6.754,5782,5.669,5783,5.669,5784,5.669,5786,7.137]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":1200,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.2",{"_index":977,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["0.25",{"_index":1822,"title":{},"body":{"injectables/MetadataService.html":{}}}],["0.5",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.7",{"_index":2745,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":1827,"title":{},"body":{"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{}}}],["0038838",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["00399df",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["006b52c",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["009b48d",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["00b47ed",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["00d5b5e",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["0107dc5",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["0129566",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["013e987",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["0174ddf",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["019de24",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["025a430",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["027ad79",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["02bde5d",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["02c06cb",{"_index":5274,"title":{},"body":{"changelog.html":{}}}],["02d4bfb",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["02e548c",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["03062a3",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["0325a08",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["0338bd7",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["03a0491",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["045b043",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["0486e25",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["04b4812",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["04dca08",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["0581767",{"_index":5219,"title":{},"body":{"changelog.html":{}}}],["05a441e",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["05b4ddd",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["05ddceb",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["0629b20",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["063950a",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["063d395",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["0674adf",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["067bbea",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["072caca",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["07d6959",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["07de52a",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["07ec810",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["0843a41",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["0858a77",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["0885ef3",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["08b1238",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["0903cd2",{"_index":5226,"title":{},"body":{"changelog.html":{}}}],["092dc60",{"_index":5258,"title":{},"body":{"changelog.html":{}}}],["0960760",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["097fe6b",{"_index":5250,"title":{},"body":{"changelog.html":{}}}],["09ae300",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["09eba6b",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["0a9aedc",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["0b2a071",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["0b30a9f",{"_index":5185,"title":{},"body":{"changelog.html":{}}}],["0ba1f5d",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["0bde446",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["0c889a3",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["0c91659",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["0cabcad",{"_index":5260,"title":{},"body":{"changelog.html":{}}}],["0cec276",{"_index":5036,"title":{},"body":{"changelog.html":{}}}],["0d0dfcb",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["0d76c85",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["0dc096d",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["0e060af",{"_index":5212,"title":{},"body":{"changelog.html":{}}}],["0e3c35d",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["0e6195d",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["0f45127",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["0f6c72b",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["0f8326e",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["0f8e394",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)).then((entry",{"_index":891,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["1.0",{"_index":5383,"title":{},"body":{"license.html":{}}}],["1.0.1",{"_index":5291,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["1.2.4",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["10.0.1",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["10.0.2",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["10.0.3",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["10.0.4",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["10.1",{"_index":5034,"title":{},"body":{"changelog.html":{}}}],["10.1.0",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["10.2.5",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["10.2.7",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["10.3.1",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["10.3.2",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1697,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["1000}k",{"_index":1012,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["101bbd0",{"_index":5141,"title":{},"body":{"changelog.html":{}}}],["1024",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"injectables/MetadataService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["108",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["1081f8e",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["1098d6a",{"_index":5286,"title":{},"body":{"changelog.html":{}}}],["10_000",{"_index":667,"title":{},"body":{"pipes/BandPipe.html":{}}}],["10bf971",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.0.0",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["11.0.2",{"_index":5292,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["11.1.2",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["11.3.0",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["11.3.1",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["11.4.0",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["11.4.1",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["11.4.10",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["11.4.11",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["11.4.2",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["11.4.3",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["11.4.5",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["11.4.6",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["11.4.8",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["11.4.9",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["11.5.0",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["11.5.1",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["11.5.10",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["11.5.11",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["11.5.12",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["11.5.13",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["11.5.14",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["11.5.4",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["11.5.5",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["11.5.6",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["11.5.7",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["11.5.8",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["11.5.9",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["112db1a",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["11ae344",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.0",{"_index":4372,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["12.0.1",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["12.0.10",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["12.0.11",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["12.0.12",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["12.0.13",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["12.0.15",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["12.0.16",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["12.0.3",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["12.0.4",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["12.0.5",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["12.0.6",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["12.0.7",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["12.0.8",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["12.0.9",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["120476b",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["120f02a",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["122856c",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["123835c",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["125",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["128",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["128a3c3",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["12a71dd",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":1018,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["13.0.0",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["13.0.1",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["13.0.10",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["13.0.11",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["13.0.12",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["13.0.13",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["13.0.16",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["13.0.18",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["13.0.19",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["13.0.2",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["13.0.20",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["13.0.3",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["13.0.5",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["13.0.6",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["13.0.7",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["13.0.8",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["13.0.9",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["13.1.0",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["13.1.1",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["13.1.10",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["13.1.11",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["13.1.12",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["13.1.2",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["13.1.3",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["13.1.4",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["13.1.5",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["13.1.6",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["13.1.7",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["13.1.8",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["13.1.9",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["13.2",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["13.2.0",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["13.2.1",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["13.2.2",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["13.2.3",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["13.2.4",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["13.2.5",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["13.2.6",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["13.3.0",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["13.3.1",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["13.3.2",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["13.3.3",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["13.3.4",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["13.3.5",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["131",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["133059f",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["1333d05",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["135",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["1385586",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["139",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["13bf8e2",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["14.0.0",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["14.0.10",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["14.0.11",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["14.0.12",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["14.0.13",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["14.0.2",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["14.0.3",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["14.0.4",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["14.0.5",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["14.0.6",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["14.0.7",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["14.0.8",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["14.0.9",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["14.1.0",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["14.1.1",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["14.1.10",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["14.1.11",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["14.1.12",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["14.1.13",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["14.1.14",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["14.1.15",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["14.1.16",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["14.1.17",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["14.1.18",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["14.1.19",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["14.1.2",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["14.1.20",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["14.1.23",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["14.1.3",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["14.1.4",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["14.1.5",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["14.1.6",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["14.1.7",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["14.1.8",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["14.1.9",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["140",{"_index":2288,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["141",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["14148e0",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["142",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["144",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["1455d32",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["146",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["147",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["14768e6",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["14a5bd3",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["15.0.0",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["15.0.1",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["15.0.2",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["15.0.3",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["15.0.4",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["15.0.5",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["15.0.6",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["15.0.7",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["15.0.8",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["15.0.9",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["15.1.1",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["15.1.10",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["15.1.11",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["15.1.12",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["15.1.13",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["15.1.14",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["15.1.16",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["15.1.17",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["15.1.2",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["15.1.3",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["15.1.4",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["15.1.5",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["15.1.6",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["15.1.7",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["15.1.8",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["15.1.9",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":2602,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["155e1fd",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["15dded8",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1229,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["16.0.1",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["16.0.2",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["16.0.3",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["16.0.4",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["16.0.5",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["16.0.6",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["1604161",{"_index":5195,"title":{},"body":{"changelog.html":{}}}],["162acda",{"_index":5264,"title":{},"body":{"changelog.html":{}}}],["16384",{"_index":5671,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["164",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["166c79d",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["16925cf",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["16_000",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":303,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["16d8b1b",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3097,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["17.0.10",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["17.0.11",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["17.0.12",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["17.0.13",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["17.0.14",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["17.0.15",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["17.0.16",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["17.0.17",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["17.0.18",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["17.0.2",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["17.0.3",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["17.0.4",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["17.0.5",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["17.0.6",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["17.0.7",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["17.0.8",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["17.0.9",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["170",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["170ea47",{"_index":5187,"title":{},"body":{"changelog.html":{}}}],["171",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["172",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["17266a3",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["1730f16",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["1745489",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["17a1677",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["17e4083",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["17ed8a6",{"_index":5149,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["18.0.1",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["18.1.0",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["18.1.1",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["18.2.0",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["18.2.2",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["18.2.3",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["18.2.4",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["18.2.5",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["18.2.6",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["18.2.7",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["181",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["184a834",{"_index":5278,"title":{},"body":{"changelog.html":{}}}],["1857720",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["18a45bd",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["18cab80",{"_index":5210,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["19.0.1",{"_index":3513,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.0.10",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["19.0.2",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["19.0.3",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["19.0.4",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["19.0.5",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["19.0.6",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["19.0.7",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["19.0.8",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["19.0.9",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["19.1.0",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["19.1.1",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["19.2.0",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["19.2.1",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["19.2.10",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["19.2.2",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["19.2.3",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["19.2.4",{"_index":3407,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.5",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["19.2.7",{"_index":3388,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.8",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["19.2.9",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["19.2.x",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["19.3.0",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["19.4.0",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["19.4.1",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["19.4.10",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["19.4.11",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["19.4.12",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["19.4.13",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["19.4.14",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["19.4.15",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["19.4.2",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["19.4.3",{"_index":3351,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.4.4",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["19.4.5",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["19.4.6",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["19.4.7",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["19.4.8",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["19.4.9",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["19.5.0",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["19.5.1",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["19.5.3",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["19.5.4",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["194199c",{"_index":5206,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["1989419",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["199",{"_index":1157,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":5516,"title":{},"body":{"license.html":{}}}],["19bf065",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["1]?.['#text",{"_index":1523,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["1a30a33",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["1a33b93",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["1a65661",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["1a92061",{"_index":5045,"title":{},"body":{"changelog.html":{}}}],["1c4c67e",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["1c7fa4e",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["1c876b6",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["1c9fedf",{"_index":5193,"title":{},"body":{"changelog.html":{}}}],["1d0b823",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["1de2a3c",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["1e340e1",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["1e4fd87",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["1e660c9",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["1e96bc3",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["1ebb626",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["1ffd91e",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["2.8.1",{"_index":5298,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1024,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["20.0.0",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["20.1.0",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["20.1.1",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["20.1.2",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["20.1.3",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["20.1.4",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["20.2.1",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["20.2.10",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["20.2.11",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["20.2.12",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["20.2.13",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["20.2.14",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["20.2.15",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["20.2.16",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["20.2.17",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["20.2.18",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["20.2.19",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["20.2.2",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["20.2.20",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["20.2.21",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["20.2.23",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["20.2.24",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["20.2.25",{"_index":5645,"title":{},"body":{"properties.html":{}}}],["20.2.3",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["20.2.4",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["20.2.5",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["20.2.6",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["20.2.7",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["20.2.9",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["200",{"_index":2603,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["2000",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["20050dc",{"_index":5035,"title":{},"body":{"changelog.html":{}}}],["20110c3",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["2011e46",{"_index":5272,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["206",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["20cf16a",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["20d1b8b",{"_index":5051,"title":{},"body":{"changelog.html":{}}}],["20rem",{"_index":2468,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["2119d47",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["220",{"_index":2761,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["220c7f4",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["221781e",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["223",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["228ee85",{"_index":5157,"title":{},"body":{"changelog.html":{}}}],["22afab3",{"_index":5209,"title":{},"body":{"changelog.html":{}}}],["22da5c7",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["22ec300",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["23061dd",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["2346f13",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["235",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["2389739",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":995,"title":{},"body":{"components/EqualizerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["240",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["241",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["242",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["2427749",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["2434ec6",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["24e4c9a",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2576,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["250",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["2500235",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["250d7f9",{"_index":5170,"title":{},"body":{"changelog.html":{}}}],["251",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":1166,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["26",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["261",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["2708806",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["272",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["275e54d",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["27acba5",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["27fdc57",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["28465d6",{"_index":5143,"title":{},"body":{"changelog.html":{}}}],["28548eb",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["286",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["287",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["287138c",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["288",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["289",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["289ec3d",{"_index":5118,"title":{},"body":{"changelog.html":{}}}],["28cff25",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["292ed5a",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["29878bc",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["29f1cbe",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["29f2b37",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["2a4184c",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["2a427ed",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["2a99961",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["2ab7cc1",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["2aee517",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["2b942c4",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["2bb0e78",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["2bb5430",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["2bcfefb",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["2bdc500",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["2bfabd0",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["2c0f612",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["2ce3664",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["2d68f3b",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["2db5dc7",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["2e2cf66",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["2e5b003",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["2eb6cae",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["2f0d555",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["2f592f3",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["2f67e34",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":5297,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":5296,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":5289,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":5293,"title":{},"body":{"dependencies.html":{}}}],["3.9.17",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["3.9.19",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":2578,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["300",{"_index":1198,"title":{},"body":{"injectables/GamepadService.html":{}}}],["301",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["305aec6",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["308b3e5",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["308bd9f",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["30_000",{"_index":1423,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["30fec73",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["30fps",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["310",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["312",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["314f02a",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":294,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3233ed1",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["32570e0",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["32768",{"_index":5672,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":304,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["32c3f4d",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["32e3ad6",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["331bb8f",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["337a109",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["338",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["339af30",{"_index":5084,"title":{},"body":{"changelog.html":{}}}],["339bd87",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["339d07b",{"_index":5058,"title":{},"body":{"changelog.html":{}}}],["33bb6c8",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["33d73d9",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["34663be",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":2580,"title":{},"body":{"injectables/ThemeService.html":{}}}],["358",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["3597f8b",{"_index":5033,"title":{},"body":{"changelog.html":{}}}],["35a78e4",{"_index":5270,"title":{},"body":{"changelog.html":{}}}],["360px",{"_index":1361,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["362",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["362d9db",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["368",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["36e8709",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["372",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["3773370",{"_index":5135,"title":{},"body":{"changelog.html":{}}}],["3797092",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["37f76dc",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["37fa04d",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["381",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["389407a",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["38d27f1",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["392b41d",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["395",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["397399b",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1490,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3a9067b",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["3acc7bf",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["3bccffb",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["3ccea4c",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["3ce805f",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["3d1f63c",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["3db",{"_index":979,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["3e58c71",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["3e7b9a4",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["3e8e5d0",{"_index":5117,"title":{},"body":{"changelog.html":{}}}],["3f1a89d",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["3f2c562",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["3f449ec",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["3f668a5",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["3f73f6e",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["3fbfb97",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["3ff6d19",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":5506,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":5294,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":4080,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.1.1",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["4.4",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":2582,"title":{},"body":{"injectables/ThemeService.html":{},"overview.html":{}}}],["4000",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["401",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["402",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["4035819",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["403737f",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["4040b59",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["4096",{"_index":301,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["40cc765",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["411",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["4164d59",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["418b524",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["419",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["41e632f",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["422fc8e",{"_index":5120,"title":{},"body":{"changelog.html":{}}}],["423",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["424242",{"_index":2809,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["42a58d9",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["42f56c1",{"_index":5282,"title":{},"body":{"changelog.html":{}}}],["431",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["431a9ad",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["43463ab",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["438",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["43a40a4",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["43d9b1f",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["440hz",{"_index":713,"title":{},"body":{"interfaces/Chainable.html":{}}}],["4452ab9",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["448",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["450",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["452f074",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["455",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["457",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["460",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["465",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["466",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["467",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["468",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["4695772",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["469a890",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["46c60ce",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["46e627b",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["473",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["4781958",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["47842e1",{"_index":5138,"title":{},"body":{"changelog.html":{}}}],["478c88a",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["47b6776",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["47e3527",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["483",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["49a76e8",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["49b1735",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["49d8293",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["4a42a18",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["4a4b1c4",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["4a66bde",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["4aa52ed",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["4bdbceb",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["4c16c1e",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["4c272db",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["4c8c0ad",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["4c8f851",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["4d47689",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["4d9ca69",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["4dbf4b8",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["4df45ed",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["4e27dea",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["4e72fcd",{"_index":5172,"title":{},"body":{"changelog.html":{}}}],["4e9a327",{"_index":5253,"title":{},"body":{"changelog.html":{}}}],["4eac2a7",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["4ec2e90",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["4ef0700",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["4f1794f",{"_index":5161,"title":{},"body":{"changelog.html":{}}}],["4f70846",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["4f91524",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["4feefcd",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":1154,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["5059439",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["505e77f",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["5061051",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["50b7005",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["50dbff9",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["5101ea6",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["511",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["51154fe",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":298,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":2062,"title":{},"body":{"injectables/PlayerService.html":{}}}],["51304c2",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["51a51dd",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["51dfdf7",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["51e219a",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["521e049",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["522",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["5273759",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["529",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["52afb10",{"_index":5096,"title":{},"body":{"changelog.html":{}}}],["52bf10d",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["52d642b",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["5302fb4",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["532",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["5321e86",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["53749c8",{"_index":5237,"title":{},"body":{"changelog.html":{}}}],["53818e8",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["539",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["53a8631",{"_index":5230,"title":{},"body":{"changelog.html":{}}}],["540",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["540fdd8",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["541",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["5467c6f",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["547",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["549",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["549bfa1",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["550",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["55e56b8",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["55f3319",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["569161e",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["56a3899",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["572a9f8",{"_index":5239,"title":{},"body":{"changelog.html":{}}}],["5742e12",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["57f591d",{"_index":5060,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["580c58d",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["5824006",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["586ef29",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["58fb13b",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["592ac3b",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["592cb7a",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["597ee4f",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["59f1df2",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["59f4ac4",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["5a61397",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["5a7054c",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["5a92c07",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["5aecee8",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["5aed853",{"_index":5076,"title":{},"body":{"changelog.html":{}}}],["5af2ad7",{"_index":5080,"title":{},"body":{"changelog.html":{}}}],["5bab2a7",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["5c1346d",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["5cbeb5b",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["5cec62d",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["5d555b4",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["5e77b33",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["5ed4032",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["5effed4",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["5f1d097",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["5fe0756",{"_index":5256,"title":{},"body":{"changelog.html":{}}}],["5ffbd62",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["5sec.mp3",{"_index":714,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["6.3.0",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["6.3.1",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["6.4.1",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["6.5.0",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["6.5.1",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["6.5.2",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["6.5.3",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["6.5.5",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["6.5.6",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["6.5.7",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["6.5.8",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["6.5.9",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["6.6.1",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["6.6.2",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["6.6.4",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["6.6.5",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["6.6.6",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["6.6.7",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["6.7.0",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["6.7.1",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["6.7.2",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["6.7.3",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["6.7.4",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":2585,"title":{},"body":{"injectables/ThemeService.html":{}}}],["600f7e6",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["60d5b05",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["60dbedc",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["61721ca",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["61eb69b",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["620afb8",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["62c64c5",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["62cfee7",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["62f7474",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["63",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["635e855",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["63600c3",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["63f69d0",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":295,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["646c494",{"_index":5147,"title":{},"body":{"changelog.html":{}}}],["64a34dc",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["64d30e1",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["654bac2",{"_index":5169,"title":{},"body":{"changelog.html":{}}}],["6655a9c",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["667c54e",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["667f875",{"_index":5151,"title":{},"body":{"changelog.html":{}}}],["669facb",{"_index":5214,"title":{},"body":{"changelog.html":{}}}],["670b3af",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["6756668",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["6782ecd",{"_index":5259,"title":{},"body":{"changelog.html":{}}}],["678aef6",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["67a17ee",{"_index":5088,"title":{},"body":{"changelog.html":{}}}],["681d4cd",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["6841a21",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["6878f22",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["68d9939",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["68e8dc6",{"_index":5127,"title":{},"body":{"changelog.html":{}}}],["6926167",{"_index":5204,"title":{},"body":{"changelog.html":{}}}],["6966d17",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["69ed6f4",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["6a6ec18",{"_index":5062,"title":{},"body":{"changelog.html":{}}}],["6a8d3be",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["6aed158",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["6b0ec83",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["6b2d8b8",{"_index":5126,"title":{},"body":{"changelog.html":{}}}],["6b5e613",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["6b9ff38",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["6bc0773",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["6bd60c5",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["6bf609d",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["6bfb6ba",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["6c219df",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["6c27523",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["6c63788",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["6c6f88c",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["6cab435",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["6cd086c",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["6cee32d",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["6d26668",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["6d2a8fe",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["6d52ad4",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["6d67484",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["6d6f310",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["6ee2324",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["6f12a37",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["6f1cdb4",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["6f6ac17",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["6fc1434",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["6fdfa5a",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1151,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["7.0.3",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["7.0.4",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["7.0.5",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["7.0.6",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["7.1.0",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["7.1.1",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["7.8.2",{"_index":5295,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2587,"title":{},"body":{"injectables/ThemeService.html":{}}}],["707a0cb",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["70990de",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["713322f",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["71bd586",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["71e1d6c",{"_index":5110,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":2335,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["72075fe",{"_index":5241,"title":{},"body":{"changelog.html":{}}}],["722901c",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["72575f6",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["726da93",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["72be3d3",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["72dafd7",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["72fa061",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":2737,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["73050ff",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["7353f84",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["7362da7",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["73b9b59",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["73bd100",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["73ed2ca",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["7440340",{"_index":5031,"title":{},"body":{"changelog.html":{}}}],["7445539",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["7445cc4",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["7484f35",{"_index":5130,"title":{},"body":{"changelog.html":{}}}],["748a302",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["7493e98",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["74e7c83",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["7522583",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["7528cd4",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["752aa76",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["7553170",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["7560dfa",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["756dc90",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["7579ea9",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["7593825",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["75fc12c",{"_index":5276,"title":{},"body":{"changelog.html":{}}}],["764711a",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["7667c50",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["76ace70",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["77091b9",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["774ffed",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["7762874",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["77707fb",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["7785053",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["77c544b",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["78fcf7a",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["79c83aa",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["79d861d",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["79fee74",{"_index":5266,"title":{},"body":{"changelog.html":{}}}],["7a1bbe5",{"_index":5043,"title":{},"body":{"changelog.html":{}}}],["7a66d5a",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["7a6f294",{"_index":5163,"title":{},"body":{"changelog.html":{}}}],["7a838a9",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["7a8645a",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["7b38580",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["7b491de",{"_index":5066,"title":{},"body":{"changelog.html":{}}}],["7b8cdeb",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["7bebf2d",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["7c00473",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["7c5bbe5",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["7ccbc95",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["7cf10f9",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["7d3846a",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["7d9d809",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["7def043",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["7defe9b",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["7e11361",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["7e45969",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["7f1e3c1",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["7f8ad27",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["7f90220",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["7fa33e8",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["7fb56e0",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["7fbbb95",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["7fcd244",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["8.0.0",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["8.0.1",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["8.1.0",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["8.1.1",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["8.1.10",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["8.1.2",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["8.1.3",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["8.1.4",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["8.1.5",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["8.1.6",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["8.1.7",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["8.1.8",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["8.1.9",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["80",{"_index":2589,"title":{},"body":{"injectables/ThemeService.html":{}}}],["800",{"_index":5735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8000",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["800fdae",{"_index":5030,"title":{},"body":{"changelog.html":{}}}],["801cd46",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["80553e8",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["80b42ce",{"_index":5252,"title":{},"body":{"changelog.html":{}}}],["80d5e14",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["8192",{"_index":302,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["81bb449",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["822ff08",{"_index":5104,"title":{},"body":{"changelog.html":{}}}],["8264f64",{"_index":5189,"title":{},"body":{"changelog.html":{}}}],["8268a8b",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["826cbe5",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["828148a",{"_index":5268,"title":{},"body":{"changelog.html":{}}}],["8337321",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["834f706",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["8377116",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["839a546",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["8448134",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["845189d",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["84a2466",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["84ac04c",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["84e91e3",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["8515368",{"_index":5176,"title":{},"body":{"changelog.html":{}}}],["858ff56",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["8596088",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["85d2a14",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["85eb0ba",{"_index":5155,"title":{},"body":{"changelog.html":{}}}],["8626722",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["862a41d",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["864d7e1",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["866de3e",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["869dddb",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["86a18bb",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["86a63af",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["86bda79",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["86be7eb",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["870e50b",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["8738efc",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["875f9d3",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["87adc2c",{"_index":5181,"title":{},"body":{"changelog.html":{}}}],["892689d",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["8a371a0",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["8aabc76",{"_index":5108,"title":{},"body":{"changelog.html":{}}}],["8b184a4",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["8b6bfeb",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["8b9fdf5",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["8c297a1",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["8c47814",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["8c56320",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["8c75c5f",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["8c90a58",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["8c9c5c3",{"_index":5106,"title":{},"body":{"changelog.html":{}}}],["8cab1e2",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["8d072f1",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["8d3ed72",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["8d47dd4",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["8d5f783",{"_index":5039,"title":{},"body":{"changelog.html":{}}}],["8d61f2e",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["8da74bb",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["8df3910",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["8dfc611",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["8e2ff5a",{"_index":5200,"title":{},"body":{"changelog.html":{}}}],["8e36da3",{"_index":5202,"title":{},"body":{"changelog.html":{}}}],["8e7ecec",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["8ebff84",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["8ec046f",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["8ee0628",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["8f60273",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["8mb",{"_index":1817,"title":{},"body":{"injectables/MetadataService.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["9.0.0",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["9.0.1",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["9.0.10",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["9.0.11",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["9.0.2",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["9.0.3",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["9.0.4",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["9.0.5",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["9.0.6",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["9.0.7",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["9.0.8",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["9.0.9",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["9.1.1",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["9.1.2",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["9.1.3",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["9.2.3",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["9.2.4",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":2591,"title":{},"body":{"injectables/ThemeService.html":{}}}],["901f502",{"_index":5078,"title":{},"body":{"changelog.html":{}}}],["908f395",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["90df676",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["90e9f96",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["91d4a54",{"_index":5102,"title":{},"body":{"changelog.html":{}}}],["9280e3a",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["92d89c3",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["930dc28",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["934d323",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["939f6b8",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["93f4474",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["9458a12",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["949055a",{"_index":5158,"title":{},"body":{"changelog.html":{}}}],["94b7001",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2593,"title":{},"body":{"injectables/ThemeService.html":{}}}],["953bf76",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["95902bb",{"_index":5229,"title":{},"body":{"changelog.html":{}}}],["96/9/ec",{"_index":5512,"title":{},"body":{"license.html":{}}}],["9644dde",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["965f5d8",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["96bcdfc",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["96dbdf6",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["972b1ee",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["9767a1a",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["9767ad0",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["97ccbb6",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["97d68d0",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["98",{"_index":2595,"title":{},"body":{"injectables/ThemeService.html":{}}}],["986dd30",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["98a793b",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2597,"title":{},"body":{"injectables/ThemeService.html":{}}}],["99126c0",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["9934470",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["998ad7c",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["9b0ad09",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["9b11a20",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["9bb71cc",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["9c56a21",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["9ce5e31",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["9d2ef7e",{"_index":5216,"title":{},"body":{"changelog.html":{}}}],["9d81efd",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["9dfd762",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["9e95c2d",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["9ea103a",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["9eb089c",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["9fa1a37",{"_index":5160,"title":{},"body":{"changelog.html":{}}}],["9fb4192",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["9fb859e",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["_audiocontext",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audioelement",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audiosourcenode",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{}}}],["_connectedanalyzers",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{}}}],["_eqgainnode",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{}}}],["_frequencyfilters",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{}}}],["_gainnode",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{}}}],["_hasended",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{}}}],["_internalanalyzer",{"_index":2813,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1316,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.localecompare(b",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a00ccd1",{"_index":5137,"title":{},"body":{"changelog.html":{}}}],["a04aa39",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["a0517fe",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["a0aa269",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["a0c15a4",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["a0e7ce7",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["a10893b",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["a11eb42",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["a12f9c3",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["a19a09f",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["a1a074f",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["a1da736",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["a280f97",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["a2a4811",{"_index":5191,"title":{},"body":{"changelog.html":{}}}],["a2b1db1",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["a358906",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["a3ae7df",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["a409033",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["a40c9e8",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["a457b9c",{"_index":5221,"title":{},"body":{"changelog.html":{}}}],["a4b6dab",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["a4de6d4",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["a552ea9",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["a555517",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["a5849e4",{"_index":5246,"title":{},"body":{"changelog.html":{}}}],["a6386d2",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["a7cf166",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["a7f82ab",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["a8073a9",{"_index":5178,"title":{},"body":{"changelog.html":{}}}],["a84cb97",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["a867afe",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["a8bb04b",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["a90639a",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["a948ad5",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["a9a8e68",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["a9a9c0b",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ab311db",{"_index":5280,"title":{},"body":{"changelog.html":{}}}],["ab5a0f8",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["ab89f63",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["ab98677",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["abandoned",{"_index":5609,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":5542,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2381,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["abc0b07",{"_index":5182,"title":{},"body":{"changelog.html":{}}}],["abccf03",{"_index":5082,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":5736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":5621,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2358,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["abstacted",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":1169,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1272,"title":{},"body":{"injectables/GamepadService.html":{}}}],["ac02523",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["ac62dde",{"_index":5123,"title":{},"body":{"changelog.html":{}}}],["accent",{"_index":1153,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":2515,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":2516,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accepts",{"_index":914,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":1134,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["accessors",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":5583,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":5624,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1236,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":5640,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"license.html":{}}}],["action(details",{"_index":1665,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["actions/cache",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["actions/checkout",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["actions/setup",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["actions/upload",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["activated",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["activatewakelock",{"_index":2923,"title":{},"body":{"injectables/WakelockService.html":{}}}],["active",{"_index":2026,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeaxescaches",{"_index":1203,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad57b9c",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["ad6497d",{"_index":5115,"title":{},"body":{"changelog.html":{}}}],["ad7e0f1",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["ada5e83",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["ada6807",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["adapt",{"_index":5482,"title":{},"body":{"license.html":{}}}],["add",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["addalbumtoplaylist",{"_index":1553,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1554,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["added",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1208,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1211,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1680,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1723,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1684,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":1923,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":2082,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":1938,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":5584,"title":{},"body":{"license.html":{}}}],["additional",{"_index":5461,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["adds",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["addtrackstoplaylist",{"_index":1555,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":275,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1556,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":1940,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":273,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":3022,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["advertising",{"_index":5556,"title":{},"body":{"license.html":{}}}],["ae202ad",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["ae93b7a",{"_index":5244,"title":{},"body":{"changelog.html":{}}}],["aefd739",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["af0ef42",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["af2926f",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["af8a6b4",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["af96dfb",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["aff4dea",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["affected",{"_index":5585,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":5466,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":5544,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5599,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":2048,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":2046,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":1051,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["again",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":5500,"title":{},"body":{"license.html":{}}}],["agents",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["aiff",{"_index":1030,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1588,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":266,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1589,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["albumtracks",{"_index":270,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["aliases",{"_index":5666,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1158,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allowed_extensions",{"_index":1038,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":883,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":910,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1543,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":2394,"title":{},"body":{"components/ShellComponent.html":{}}}],["allowedcommonjsdeps",{"_index":5168,"title":{},"body":{"changelog.html":{}}}],["allowedtypes",{"_index":1057,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":315,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["alpha.40",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["alphabetically",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["amended",{"_index":5522,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["analyserconfig",{"_index":288,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":323,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analysers",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["analyservalue",{"_index":2857,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyze",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["analyzer",{"_index":2907,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["and/or",{"_index":5422,"title":{},"body":{"license.html":{}}}],["android",{"_index":5152,"title":{},"body":{"changelog.html":{}}}],["angular",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["angular.json",{"_index":5166,"title":{},"body":{"changelog.html":{}}}],["angular/cdk",{"_index":4610,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2420,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":1297,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":757,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["angular/compiler",{"_index":5287,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":1991,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":128,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4615,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":113,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1882,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2613,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2751,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1300,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2273,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["angular/material/list",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/material/progress",{"_index":2271,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2752,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2422,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1879,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":952,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":1911,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":1910,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2635,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angularmaterial",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["angulartitleservice",{"_index":2623,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2815,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["animations",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["any).getasfilesystemhandle().then((handle",{"_index":1117,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["api",{"_index":917,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["api_key",{"_index":1505,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":781,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["apis",{"_index":5355,"title":{},"body":{"index.html":{}}}],["app",{"_index":628,"title":{},"body":{"injectables/AudioService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":334,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":5674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["applicable",{"_index":5529,"title":{},"body":{"license.html":{}}}],["application",{"_index":2488,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["applicationconfig",{"_index":5712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":986,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["apply",{"_index":1001,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["apps",{"_index":5363,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":5675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":5697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":5706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":5667,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../default",{"_index":5687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":5685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":5686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":5313,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":5318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":5301,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":5325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../idexed",{"_index":5682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../lastfm",{"_index":5670,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":5331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":5308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":5310,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":5311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":5321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":5694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":5323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":5669,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../settings.po.ts",{"_index":5692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":5689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":5668,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":5303,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":5335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":5764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":5757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":5753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":5711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":5771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/idexed",{"_index":5741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:135",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:142",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:150",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:157",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:163",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:171",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:177",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:185",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:190",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:198",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:202",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:212",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:216",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:224",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:24",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:25",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:42",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:44",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":672,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":658,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:10",{"_index":665,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":930,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15",{"_index":944,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":947,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17",{"_index":946,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19",{"_index":939,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30",{"_index":941,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35",{"_index":942,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":877,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:111",{"_index":1582,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:163",{"_index":1570,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:169",{"_index":1569,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:174",{"_index":1571,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:180",{"_index":1568,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:188",{"_index":1565,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:197",{"_index":1564,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:214",{"_index":1567,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:223",{"_index":1566,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:240",{"_index":1573,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:244",{"_index":1572,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:248",{"_index":1574,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:52",{"_index":1576,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:53",{"_index":1577,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:55",{"_index":1578,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:59",{"_index":1575,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:72",{"_index":1580,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:73",{"_index":1579,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:74",{"_index":1581,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:76",{"_index":1584,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:84",{"_index":1583,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":750,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player",{"_index":2127,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":1900,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:25",{"_index":1907,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:26",{"_index":1906,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":1917,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:137",{"_index":1943,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:142",{"_index":1941,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:148",{"_index":1952,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:162",{"_index":1939,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:168",{"_index":1963,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:174",{"_index":1961,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:178",{"_index":1947,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:190",{"_index":1945,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:206",{"_index":1964,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:215",{"_index":1944,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:236",{"_index":1950,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:25",{"_index":1972,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:254",{"_index":1949,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:263",{"_index":1958,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":1982,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:281",{"_index":1959,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":1971,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:298",{"_index":1954,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:302",{"_index":1957,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":1981,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:316",{"_index":1965,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:32",{"_index":1984,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:335",{"_index":1966,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":1970,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:41",{"_index":1979,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:45",{"_index":1977,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:51",{"_index":1937,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":729,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2242,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:142",{"_index":2255,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:150",{"_index":2257,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:156",{"_index":2262,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:161",{"_index":2263,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:165",{"_index":2260,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:40",{"_index":2267,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:41",{"_index":2264,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:44",{"_index":2266,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:46",{"_index":2269,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:48",{"_index":2253,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2615,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:10",{"_index":2616,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2669,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2701,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2695,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2699,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2697,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2705,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2703,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2728,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2713,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2741,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2748,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2735,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2746,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2738,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2711,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2715,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2730,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2724,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2732,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2722,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2734,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2691,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2743,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2727,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2720,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2740,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2709,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2707,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2693,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2790,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105",{"_index":2798,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126",{"_index":2800,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2804,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2801,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188",{"_index":2796,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2805,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2802,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23",{"_index":2795,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33",{"_index":2794,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93",{"_index":2807,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2911,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2916,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2914,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":289,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":5340,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":5350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1175,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1194,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1187,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1191,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1184,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":1195,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1182,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1368,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":5351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1292,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100",{"_index":1406,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104",{"_index":1407,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26",{"_index":1410,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30",{"_index":1413,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32",{"_index":1412,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34",{"_index":1411,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36",{"_index":1409,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38",{"_index":1403,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48",{"_index":1405,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85",{"_index":1408,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96",{"_index":1404,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1599,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1605,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1616,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1620,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1619,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1621,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1628,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2618,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2622,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2621,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":5352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2921,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2926,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2927,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2925,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1857,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2382,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2510,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2607,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2387,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:42",{"_index":2417,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:43",{"_index":2412,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:44",{"_index":2414,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:45",{"_index":2413,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:47",{"_index":2408,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:56",{"_index":2411,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:58",{"_index":2416,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:60",{"_index":2402,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:65",{"_index":2407,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:69",{"_index":2405,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":5752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":2514,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:16",{"_index":2537,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:18",{"_index":2529,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:20",{"_index":2535,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:22",{"_index":2538,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:23",{"_index":2530,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:25",{"_index":2523,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:31",{"_index":2527,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:37",{"_index":2525,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":725,"title":{},"body":{"interfaces/Color.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2627,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2630,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2632,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2631,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":5750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":5751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["april",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["arguments_",{"_index":664,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["arial",{"_index":1019,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["arising",{"_index":5511,"title":{},"body":{"license.html":{}}}],["array",{"_index":744,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["array.from(droppedfiles",{"_index":1140,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["array.from(event.datatransfer.items",{"_index":1116,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["arrays",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["art",{"_index":1760,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["artifact",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["artist",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist/album",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["artist:${luceneescapequery.escape(artist",{"_index":796,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["artwork",{"_index":2057,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2628,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":5601,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1720,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":5545,"title":{},"body":{"license.html":{}}}],["associating",{"_index":5465,"title":{},"body":{"license.html":{}}}],["async",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1687,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":5389,"title":{},"body":{"license.html":{}}}],["audio",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["audio.service",{"_index":951,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":1034,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":1027,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":1036,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":1028,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":1031,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":1037,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":1033,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":1032,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":1035,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":1029,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{}}}],["audiocontext.creategain",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{}}}],["audioelement.autoplay",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.controls",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.id",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.loop",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.preload",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.style.display",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.volume",{"_index":553,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioservice",{"_index":419,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["audioservice.isplaying",{"_index":2234,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiosource.connect(eqgain",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{}}}],["audit",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["auf",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":5649,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":5489,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":5421,"title":{},"body":{"license.html":{}}}],["auto",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["autofix",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["autofixes",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["autoincrement",{"_index":5747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":5409,"title":{},"body":{"license.html":{}}}],["autoscroll",{"_index":2292,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2893,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2885,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2894,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avatar",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1441,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2330,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["axis.valueof",{"_index":1279,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1284,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1283,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1176,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1282,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1285,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1185,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b04ce8b",{"_index":5224,"title":{},"body":{"changelog.html":{}}}],["b0d0fe4",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["b20fd36",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["b241b46",{"_index":5179,"title":{},"body":{"changelog.html":{}}}],["b286be9",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["b2b5088",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["b2dcbb8",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["b2ed530",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["b3905a0",{"_index":4279,"title":{},"body":{"changelog.html":{}}}],["b416bff",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["b4d909a",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["b599685",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["b5dfb18",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["b5f68a1",{"_index":5145,"title":{},"body":{"changelog.html":{}}}],["b63676f",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["b65204b",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["b6729e6",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["b6a809a",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["b6bd950",{"_index":5173,"title":{},"body":{"changelog.html":{}}}],["b708169",{"_index":5042,"title":{},"body":{"changelog.html":{}}}],["b7303ed",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["b73ce66",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["b7bb801",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["b7be438",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["b7e8f76",{"_index":5094,"title":{},"body":{"changelog.html":{}}}],["b80e2ea",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["b820bf4",{"_index":5068,"title":{},"body":{"changelog.html":{}}}],["b8a2ac7",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["b8ad144",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["b925747",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["b9445d4",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["b99bf0c",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ba13cfe",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["ba2a28a",{"_index":5092,"title":{},"body":{"changelog.html":{}}}],["ba634aa",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["babdb9f",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["background",{"_index":1164,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["backgroundcolor",{"_index":846,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["badges",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["band",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"index.html":{}}}],["bandfrequency",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":651,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains[bandfrequency",{"_index":653,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandpipe",{"_index":657,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{}}}],["bands",{"_index":935,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["bar",{"_index":2431,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["barcount",{"_index":306,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["bark",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["barkscalebandenergy",{"_index":5676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":329,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2674,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":328,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":5677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":712,"title":{},"body":{"interfaces/Chainable.html":{}}}],["based",{"_index":5528,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{}}}],["basesubscribingclass",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["basevisualizeroptions",{"_index":325,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":5393,"title":{},"body":{"license.html":{}}}],["bb34f11",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["bb4a1a8",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["bb4ded8",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["bb4e0ce",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["bb8466d",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["bba9cb0",{"_index":5090,"title":{},"body":{"changelog.html":{}}}],["bbda480",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["bc4e4dc",{"_index":5056,"title":{},"body":{"changelog.html":{}}}],["bcbcbc",{"_index":2810,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["bd0ddc3",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["bd67275",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["bda90a4",{"_index":4993,"title":{},"body":{"changelog.html":{}}}],["be025cd",{"_index":5184,"title":{},"body":{"changelog.html":{}}}],["be57fa9",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["be7f8fc",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["be90110",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["bef3e3e",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":2322,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["below",{"_index":5414,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":5558,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":2013,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1254,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["better",{"_index":2879,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["bf7b3a9",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["bfccd74",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["bfd28ec",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["bfd4685",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["bffc736",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["bigger",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["biquadfilternode",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{}}}],["bitrate",{"_index":674,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"changelog.html":{}}}],["bitrate.pipe",{"_index":856,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":671,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1801,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1756,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1779,"title":{},"body":{"injectables/MetadataService.html":{}}}],["bold",{"_index":1017,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2484,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["bootstrap",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["border",{"_index":1150,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2279,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":1148,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["branch",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":2110,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2418,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2419,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2437,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2436,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2435,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2438,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browserlist",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["btrack",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2876,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["buffer.buffer",{"_index":2900,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":327,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2881,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2878,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2875,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bugs",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3479,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["buildapiurl(method",{"_index":1499,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["builds",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1252,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["button.pressed",{"_index":1265,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1267,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1177,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1270,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1275,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1188,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2376,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2455,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":5629,"title":{},"body":{"license.html":{}}}],["c.islight",{"_index":2606,"title":{},"body":{"injectables/ThemeService.html":{}}}],["c042ae8",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["c08196a",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["c0c9413",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["c0d5ae4",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["c20efb2",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["c2c0b8f",{"_index":5100,"title":{},"body":{"changelog.html":{}}}],["c3062ed",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["c31aaa6",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["c3208e7",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["c339811",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["c35bc38",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["c363f4e",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["c398655",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["c3bb2d1",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["c3d7490",{"_index":5074,"title":{},"body":{"changelog.html":{}}}],["c4668f1",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["c51af5f",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["c550911",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["c64cd79",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["c6dff5e",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["c73a2ce",{"_index":4995,"title":{},"body":{"changelog.html":{}}}],["c78b2bf",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["c82e02b",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["c86decf",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["c9dcf09",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["ca80a43",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["ca87d69",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["cace929",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":1269,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1277,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1271,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1276,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cacheable",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["calculate",{"_index":2319,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["calculating",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1293,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["called",{"_index":1625,"title":{},"body":{"injectables/LoaderService.html":{}}}],["cancel",{"_index":2371,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2903,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":5567,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":317,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["canvas.getcontext('2d",{"_index":964,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.height",{"_index":968,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.width",{"_index":966,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvasgradient",{"_index":5709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":5678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasref",{"_index":936,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvaswidth",{"_index":5679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2788,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":309,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":307,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":5680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":5755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2108,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":5723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1468,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":5546,"title":{},"body":{"license.html":{}}}],["cb01a92",{"_index":5188,"title":{},"body":{"changelog.html":{}}}],["cb19d50",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["cb797bc",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["cbab637",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["cbc6e41",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["cbef1c8",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["cc0",{"_index":5382,"title":{},"body":{"license.html":{}}}],["cc5aab7",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["ccbf388",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["cd2a934",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["cd5831f",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["cd620b6",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["cdb5380",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["cdf04e9",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":116,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["ce588f9",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["ce621ee",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["cea2824",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["cefa1f1",{"_index":5283,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":1160,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":5423,"title":{},"body":{"license.html":{}}}],["cf00688",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["cf13446",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["chain",{"_index":817,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["chainable",{"_index":678,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2296,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changed",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["changedarkmode",{"_index":2609,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2610,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changelog",{"_index":2940,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":954,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changing",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":913,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1262,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1201,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":715,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlaylistComponent.html":{}}}],["child(${link",{"_index":5767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chore",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["chore(config",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["chromaprint",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":5359,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":1832,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize",{"_index":1837,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize).arraybuffer",{"_index":1814,"title":{},"body":{"injectables/MetadataService.html":{}}}],["ci",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":330,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":5436,"title":{},"body":{"license.html":{}}}],["class",{"_index":140,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"overview.html":{}}}],["class.closed",{"_index":2465,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2466,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1167,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{}}}],["clear",{"_index":969,"title":{},"body":{"components/EqualizerComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":5631,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1290,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1242,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1863,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2511,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1452,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["cli",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":3033,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["close",{"_index":1381,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2456,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2666,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2457,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closing",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["clr",{"_index":2555,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.hex",{"_index":2559,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.name",{"_index":2558,"title":{},"body":{"injectables/ThemeService.html":{}}}],["code",{"_index":2489,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":724,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"index.html":{}}}],["color.getbrightness",{"_index":2605,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.tohexstring(false",{"_index":2604,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":728,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2865,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2863,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2864,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorful",{"_index":5646,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":1856,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["colors.ts",{"_index":5688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":2493,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["command",{"_index":703,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":5448,"title":{},"body":{"license.html":{}}}],["committen",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":5113,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":2131,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["commons",{"_index":5380,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":5484,"title":{},"body":{"license.html":{}}}],["compare",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compatibility",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["compensation",{"_index":5463,"title":{},"body":{"license.html":{}}}],["competition",{"_index":5502,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2298,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["compodoc",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["component_template",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":335,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2636,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2369,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":1047,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{}}}],["components/slide",{"_index":2448,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{}}}],["compressed",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["computecolors(hex",{"_index":2570,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":5615,"title":{},"body":{"license.html":{}}}],["confer",{"_index":5410,"title":{},"body":{"license.html":{}}}],["config",{"_index":2664,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["config).afterclosed",{"_index":2668,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config.ts",{"_index":5683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{}}}],["connected",{"_index":1220,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1213,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connections",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["consents",{"_index":5635,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":5462,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["console.error('error",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["console.error('file",{"_index":282,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1465,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{}}}],["console.log('button",{"_index":1231,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":2021,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1237,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":901,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1235,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1248,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1244,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2647,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2643,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2654,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1239,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1218,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2825,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1221,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1735,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('hash",{"_index":1740,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('id3tags",{"_index":1762,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('vibrant",{"_index":1775,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('webcover",{"_index":1767,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1737,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('hash",{"_index":1742,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('id3tags",{"_index":1764,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('vibrant",{"_index":1777,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('webcover",{"_index":1770,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1251,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1259,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":792,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('file",{"_index":1132,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["console.warn('loaderservice",{"_index":1624,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('missing",{"_index":1771,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('no",{"_index":827,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2935,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1326,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1660,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["contains",{"_index":1833,"title":{},"body":{"injectables/MetadataService.html":{}}}],["contemplated",{"_index":5573,"title":{},"body":{"license.html":{}}}],["content",{"_index":1162,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["contents",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":5603,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":5535,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":5449,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":5429,"title":{},"body":{"license.html":{}}}],["control",{"_index":2500,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["controls",{"_index":5366,"title":{},"body":{"index.html":{}}}],["converter",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["converttobarkscale",{"_index":5302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":5555,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1103,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":5412,"title":{},"body":{"license.html":{}}}],["core",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{}}}],["corporation",{"_index":5385,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2844,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["corresponding",{"_index":5527,"title":{},"body":{"license.html":{}}}],["council",{"_index":5515,"title":{},"body":{"license.html":{}}}],["count",{"_index":773,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["counts",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["cover",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cover_api_url",{"_index":783,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverart",{"_index":1894,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["coverartimage",{"_index":749,"title":{"interfaces/CoverArtImage.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverartresponse",{"_index":776,"title":{"interfaces/CoverArtResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":847,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":828,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":733,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":742,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":1968,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":1969,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":808,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":812,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.length",{"_index":814,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images?.length",{"_index":809,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images[0",{"_index":815,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdisplay",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["coverdisplaycomponent",{"_index":380,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":811,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.image",{"_index":822,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.large",{"_index":820,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":821,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["covers",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1765,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.original",{"_index":1774,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1234,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1230,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1681,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1688,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1682,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1691,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":5379,"title":{},"body":{"license.html":{}}}],["creator",{"_index":5416,"title":{},"body":{"license.html":{}}}],["crossing",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["css",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":963,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.beginpath",{"_index":1008,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.clearrect(0",{"_index":970,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.fillstyle",{"_index":1014,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(`gain",{"_index":1022,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(label",{"_index":1013,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.font",{"_index":1016,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.linewidth",{"_index":976,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.moveto(freqpoints[0].x",{"_index":1009,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.strokestyle",{"_index":974,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.textalign",{"_index":1020,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["cultural",{"_index":5430,"title":{},"body":{"license.html":{}}}],["culture",{"_index":5453,"title":{},"body":{"license.html":{}}}],["current",{"_index":2300,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"license.html":{}}}],["currentalbum",{"_index":269,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentalbum.name",{"_index":271,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentanalyser",{"_index":2840,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2834,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2838,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":889,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2323,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2073,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":1918,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2832,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2836,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":1919,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":2092,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":859,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack.metadata?.hash",{"_index":2313,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":862,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":864,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":863,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":871,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":870,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":869,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":867,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":872,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":861,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":865,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["curve",{"_index":985,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["custom",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":708,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":5759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":5769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":5762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":5763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":5760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":5770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":5754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":5758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":5766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":705,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"changelog.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":720,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":716,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":704,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":721,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":5638,"title":{},"body":{"license.html":{}}}],["d0b8d34",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["d0cd94f",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["d1b4f51",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["d200e57",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["d254989",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["d2765b8",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["d29b113",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["d2e1df8",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["d2f46f8",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["d3",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["d38c534",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["d3bca3a",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["d489b64",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["d4abfdc",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["d505863",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["d50fcd7",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["d516e97",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["d562368",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["d597302",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["d5cd7ea",{"_index":5128,"title":{},"body":{"changelog.html":{}}}],["d612735",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["d6210df",{"_index":5064,"title":{},"body":{"changelog.html":{}}}],["d629a20",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["d641392",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["d64a3c3",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["d690072",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["d78443f",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["d7b3ea2",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["d895f0f",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["d8a2bf9",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["d8bf0e7",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["d933c1e",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["d954540",{"_index":5228,"title":{},"body":{"changelog.html":{}}}],["d9677d0",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["da978b1",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":5401,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2568,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{}}}],["dark)').matches",{"_index":2534,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":726,"title":{},"body":{"interfaces/Color.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":2517,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":834,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":833,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2661,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1152,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["data.album.image",{"_index":1510,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2380,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2379,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":801,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["database",{"_index":2969,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["databaseconfig",{"_index":5681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":5518,"title":{},"body":{"license.html":{}}}],["date",{"_index":770,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"license.html":{}}}],["dateien",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["dates",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["db",{"_index":93,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["db2122c",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["db48fe2",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["dbb788d",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["dbc354f",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["dbconfig",{"_index":5742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":276,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":280,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":278,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":277,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dc41223",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["dc45fe1",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["dc55360",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["dd93cb1",{"_index":5262,"title":{},"body":{"changelog.html":{}}}],["ddab2f3",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["dddddd",{"_index":975,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["de5bda9",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["de61df5",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["december",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["declare",{"_index":700,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorator",{"_index":5175,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":2481,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":2139,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["decreasevolume(value",{"_index":2147,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["deemed",{"_index":5593,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1199,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1197,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1311,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["defects",{"_index":5623,"title":{},"body":{"license.html":{}}}],["defined",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1400,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2302,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dep",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":2831,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["depicted",{"_index":5497,"title":{},"body":{"license.html":{}}}],["deploy",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":3320,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1178,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1183,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1179,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1186,"title":{},"body":{"injectables/GamepadService.html":{}}}],["derive",{"_index":743,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["description",{"_index":1294,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"changelog.html":{},"properties.html":{}}}],["deselect",{"_index":2076,"title":{},"body":{"injectables/PlayerService.html":{}}}],["desktop",{"_index":5370,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":1995,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1476,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":1985,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["details",{"_index":1638,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":2104,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":2103,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2297,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["determine",{"_index":2321,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":5560,"title":{},"body":{"license.html":{}}}],["dev",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["devcontainer.json",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["dfa400c",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":1309,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1304,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1376,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1375,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1369,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2373,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2374,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1385,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1384,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1387,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2372,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1383,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2370,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1315,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1359,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1365,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":5785,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":928,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1320,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dir",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":376,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":916,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":2238,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["directoryhandles",{"_index":5749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirhandle",{"_index":2998,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["dirhandle.values",{"_index":907,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":876,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":900,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":2122,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["disableclose",{"_index":2665,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabled",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["disabletooltipinteractivity",{"_index":5737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":5604,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":5399,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2905,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["disconnectallanalyzers",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnected",{"_index":1240,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1238,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":5627,"title":{},"body":{"license.html":{}}}],["display",{"_index":842,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":1912,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":844,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":845,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":841,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":855,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":854,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":852,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":673,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":675,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":840,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayed",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["displayfunction",{"_index":937,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":940,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1341,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":5570,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":5508,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2320,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":5471,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":5388,"title":{},"body":{"license.html":{}}}],["document",{"_index":1296,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{}}}],["document.body.append(this.fileinput",{"_index":1545,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1537,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.setproperty",{"_index":2556,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2652,"title":{},"body":{"injectables/UpdateService.html":{}}}],["document.queryselector('.cdk",{"_index":2354,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["documented",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":320,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["dotenv",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["double",{"_index":912,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["doubleclick",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["download",{"_index":1893,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2845,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drag",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["dragend",{"_index":1095,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":1082,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":1087,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":1079,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":1063,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":1092,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":1081,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":1090,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":1080,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":971,"title":{},"body":{"components/EqualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":5304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":5305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":5306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawequalizerresponse",{"_index":938,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["drawosc",{"_index":5307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":386,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":1062,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":1083,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dropped",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["du",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["dual",{"_index":719,"title":{},"body":{"interfaces/Chainable.html":{}}}],["dummy",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["duplicates",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["duration",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":1920,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2662,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":5642,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":5288,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1335,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2503,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1337,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1338,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e102482",{"_index":5073,"title":{},"body":{"changelog.html":{}}}],["e11e3bd",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["e218808",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["e252172",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["e2a0794",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["e2e1eb4",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["e336db1",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["e34b732",{"_index":5234,"title":{},"body":{"changelog.html":{}}}],["e36192c",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["e42b61f",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["e486f52",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["e4b565b",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["e4d8e7c",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["e4ec6c1",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["e5de213",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["e615145",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["e6660e2",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["e6d7fd2",{"_index":5098,"title":{},"body":{"changelog.html":{}}}],["e6fc6eb",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["e7032e1",{"_index":5235,"title":{},"body":{"changelog.html":{}}}],["e727ac0",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["e7aa58d",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["e7c9ada",{"_index":5049,"title":{},"body":{"changelog.html":{}}}],["e831ba8",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["e844d5d",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["e933c61",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["e96ef56",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["e992cb4",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["e99d4f2",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["ea0dd16",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["ea1fc76",{"_index":5054,"title":{},"body":{"changelog.html":{}}}],["ea63800",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["ea688e0",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["ea932ef",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["eaa27a6",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["eab1d35",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["eac8dd6",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":997,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["eaeb47a",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["eaf46cf",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["eaf70a8",{"_index":5217,"title":{},"body":{"changelog.html":{}}}],["early",{"_index":1129,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["eb5338b",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["ebab8da",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["ec067ee",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["ec1f94a",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["eccaa4a",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["ecf45e6",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["ed57248",{"_index":5112,"title":{},"body":{"changelog.html":{}}}],["ee83304",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["ee8b31b",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["ef11066",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["ef22e4a",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["ef650c5",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["efc9aad",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["eff95d0",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":948,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":5594,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":5457,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1255,"title":{},"body":{"injectables/GamepadService.html":{}}}],["electron",{"_index":5208,"title":{},"body":{"changelog.html":{}}}],["elects",{"_index":5469,"title":{},"body":{"license.html":{}}}],["element",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":949,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{}}}],["elementscrolled",{"_index":2282,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2818,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2821,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embedded",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["embeddedpicture",{"_index":741,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["emit",{"_index":1122,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["empty",{"_index":1396,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2276,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2293,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1498,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1497,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":711,"title":{},"body":{"interfaces/Chainable.html":{}}}],["end",{"_index":1004,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["endchunk",{"_index":1835,"title":{},"body":{"injectables/MetadataService.html":{}}}],["endings",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["enhance",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["enjoyment",{"_index":5572,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2890,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2025,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":765,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(coverimage.thumbnails.large",{"_index":826,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails['500",{"_index":819,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(largeimage",{"_index":1525,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(smallimage",{"_index":1524,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(url",{"_index":5346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entfernt",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["entire",{"_index":1808,"title":{},"body":{"injectables/MetadataService.html":{}}}],["entries",{"_index":1595,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries[0].contentrect",{"_index":2855,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":892,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["entry.getfile",{"_index":909,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":908,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":5300,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":5684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":5718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["eqgain",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.connect(eqinput",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.gain.value",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqinput",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput.connect(gain",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{}}}],["equalizer",{"_index":931,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":933,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":934,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":383,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["equitable",{"_index":5569,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":5526,"title":{},"body":{"license.html":{}}}],["eqvalues[freq",{"_index":1003,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands.at",{"_index":1006,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands[0",{"_index":994,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["error",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["error('metadata",{"_index":1438,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1475,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1461,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1470,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2936,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1464,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":5626,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1797,"title":{},"body":{"injectables/MetadataService.html":{}}}],["erweitert",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["es",{"_index":1397,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"changelog.html":{}}}],["esbuild",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["escape",{"_index":760,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["eslint",{"_index":2121,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"additional-documentation/helpers.html":{}}}],["eslint/utils",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["eslintrc",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":5243,"title":{},"body":{"changelog.html":{}}}],["establish",{"_index":2830,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["etag",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["european",{"_index":5513,"title":{},"body":{"license.html":{}}}],["event",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.checked",{"_index":1885,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.clientx}px",{"_index":2360,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.clienty}px",{"_index":2362,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.currentversion.hash",{"_index":2648,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1458,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2882,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2883,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":1102,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer.items[0",{"_index":1112,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":1101,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.items",{"_index":1110,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2656,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1219,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2649,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":1099,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.stoppropagation",{"_index":1100,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2641,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2645,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventcoalescing",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["eventmanager",{"_index":1301,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":695,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusions",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["exclusive",{"_index":5411,"title":{},"body":{"license.html":{}}}],["execute",{"_index":5784,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["executor",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["exercise",{"_index":5592,"title":{},"body":{"license.html":{}}}],["existing",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{},"license.html":{}}}],["exists",{"_index":2908,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["exit",{"_index":629,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["expect",{"_index":2017,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":5460,"title":{},"body":{"license.html":{}}}],["expected",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":5652,"title":{},"body":{"todo.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":5574,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2502,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":5236,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["extent",{"_index":5467,"title":{},"body":{"license.html":{}}}],["extract",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["extractcolorswithnodevibrant",{"_index":5309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.original",{"_index":1776,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1781,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1841,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1509,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extracting",{"_index":1855,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extraction",{"_index":1447,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":5362,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1418,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1420,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extralarge')?.['#text",{"_index":1520,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["f038069",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["f0442a7",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["f06b116",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["f076ced",{"_index":5164,"title":{},"body":{"changelog.html":{}}}],["f0ae911",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["f0f7618",{"_index":5232,"title":{},"body":{"changelog.html":{}}}],["f12cad8",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["f154aed",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["f1580e8",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["f18fa1f",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["f1b02b7",{"_index":5255,"title":{},"body":{"changelog.html":{}}}],["f1cad4d",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["f1f709b",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["f201082",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["f209ddb",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["f24dcc7",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["f278040",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["f2cfbcc",{"_index":5154,"title":{},"body":{"changelog.html":{}}}],["f306ca1",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["f31886e",{"_index":5047,"title":{},"body":{"changelog.html":{}}}],["f3351c2",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["f34b7cf",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["f36895a",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["f37d715",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["f386a36",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["f3a09c7",{"_index":5040,"title":{},"body":{"changelog.html":{}}}],["f3a3520",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["f3f4ae7",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["f3f93f6",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["f401a49",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["f4324a4",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["f44b305",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["f4928f5",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["f4f50ef",{"_index":5055,"title":{},"body":{"changelog.html":{}}}],["f52095f",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["f54702d",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["f591692",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["f5c6154",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["f5ee0e6",{"_index":5139,"title":{},"body":{"changelog.html":{}}}],["f69d368",{"_index":5132,"title":{},"body":{"changelog.html":{}}}],["f78467f",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["f7913c1",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["f8b7451",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["f8cbc65",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["f908dd2",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["f954f07",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["f9c114e",{"_index":5124,"title":{},"body":{"changelog.html":{}}}],["f9c93ce",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["faec05d",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["failed",{"_index":1135,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fall",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["fallback",{"_index":816,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["fallback_accent_color",{"_index":2528,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":2536,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2789,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["falling",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2329,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["fb05c12",{"_index":5086,"title":{},"body":{"changelog.html":{}}}],["fc633d2",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["fc998b4",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["fd18536",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["fd45c70",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["fdad632",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["fe15d24",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["fe4ebfa",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["fear",{"_index":5434,"title":{},"body":{"license.html":{}}}],["feat",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5356,"title":{},"body":{"index.html":{}}}],["february",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["fee270f",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["fee5161",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["fefaba0",{"_index":5248,"title":{},"body":{"changelog.html":{}}}],["fetchalbuminfo(artist",{"_index":1495,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":805,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ff39494",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["ff778a5",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["ff7cdad",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["ffa9bb5",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["ffc8723",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["ffe5da9",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["ffnet",{"_index":1319,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2785,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2675,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2274,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.size",{"_index":1806,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(math.max(0",{"_index":1836,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(middlepos",{"_index":1813,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(quarterpos",{"_index":1824,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(threequarterpos",{"_index":1829,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":884,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["filedata.file",{"_index":1738,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1783,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1739,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":918,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["filedata.push(...subfiles",{"_index":921,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1686,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1727,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1724,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":385,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":279,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":2033,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filehandles",{"_index":1113,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.length",{"_index":1124,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.push(handle",{"_index":1119,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandlesdropped",{"_index":1058,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileinput",{"_index":1534,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":1139,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":886,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice.currentfolderhandle",{"_index":2237,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["fileloaderservicefactory",{"_index":5312,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":739,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["filepath",{"_index":709,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":706,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["files.push(file",{"_index":1142,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesdroped",{"_index":1059,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesize",{"_index":1805,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesize).arraybuffer",{"_index":1838,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filestoprocess",{"_index":1722,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":882,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":736,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filesystemfilehandles",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":2895,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":267,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["filter((artist",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter.gain.value",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{}}}],["filtered",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredbyserchterm",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtering",{"_index":2078,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["finalize",{"_index":1608,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["find",{"_index":810,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["findreleasegroupid(artist",{"_index":794,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":2884,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1247,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebase",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["firebuttonaction(index",{"_index":1243,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":5387,"title":{},"body":{"license.html":{}}}],["first",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["firstvaluefrom",{"_index":101,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2667,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":800,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('library",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('directoryhandles",{"_index":890,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('library",{"_index":1745,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":5619,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["fix(deps",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["fix(eslint",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":1147,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["flac",{"_index":1040,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flat",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1146,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["float32array",{"_index":5341,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2501,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["fns",{"_index":5290,"title":{},"body":{"dependencies.html":{}}}],["focus",{"_index":2023,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["folder/files",{"_index":2236,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["folders",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":5480,"title":{},"body":{"license.html":{}}}],["font",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["forcefully",{"_index":2349,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["form",{"_index":5443,"title":{},"body":{"license.html":{}}}],["format",{"_index":740,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formating",{"_index":5223,"title":{},"body":{"changelog.html":{}}}],["formatlabel",{"_index":2140,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formatlabel(value",{"_index":2149,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formats",{"_index":5358,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":2171,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":2617,"title":{},"body":{"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatting",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["found",{"_index":283,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":5452,"title":{},"body":{"license.html":{}}}],["freely",{"_index":5442,"title":{},"body":{"license.html":{}}}],["freq",{"_index":998,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints",{"_index":988,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints.push",{"_index":993,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints[0].y",{"_index":1010,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency",{"_index":983,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["frequency_bands",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["frequency_bands)[number",{"_index":746,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["frequencyband",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["frequencybarsconfig",{"_index":305,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":5690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":752,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["full",{"_index":824,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":5663,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":5538,"title":{},"body":{"license.html":{}}}],["function",{"_index":905,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":3100,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["funkt",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["further",{"_index":5454,"title":{},"body":{"license.html":{}}}],["future",{"_index":5550,"title":{},"body":{"license.html":{}}}],["für",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["gain",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"changelog.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{}}}],["gain.gain.value",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainnode",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainvalue",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{}}}],["gainvalue.tofixed(1)}x",{"_index":1023,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["gamepad",{"_index":1216,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1263,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1196,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":2197,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":2207,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":2198,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1209,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1214,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1217,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1174,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":5317,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":308,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gax",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["gblaster",{"_index":5353,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["gblasterdb",{"_index":5743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1800,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":2947,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":5319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1803,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1741,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["generator.bitdroid.de/#section",{"_index":5375,"title":{},"body":{"index.html":{}}}],["generierte",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["getanalysernode",{"_index":2806,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getasfilesystemhandle",{"_index":1111,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["getaudiofilesfromdirhandle",{"_index":5320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":906,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":920,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":904,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2873,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2874,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":5691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcolorobject(value",{"_index":2599,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getcoverdisplay",{"_index":5693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1526,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":785,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1547,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethasended",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1386,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":707,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1683,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1693,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":5695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":5322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":2089,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":2116,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":5696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":5698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2938,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettoolbartitle",{"_index":5699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":5700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":2231,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["getvolumeslider",{"_index":5701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getxpos(freq",{"_index":1000,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["gh",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2843,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":2015,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":2019,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":2532,"title":{},"body":{"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":1223,"title":{},"body":{"injectables/GamepadService.html":{}}}],["google",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["gp",{"_index":1225,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1224,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1226,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":5702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":929,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":894,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":926,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["greater",{"_index":5456,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5533,"title":{},"body":{"license.html":{}}}],["grid",{"_index":972,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["group/${releasegroupid",{"_index":807,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["group?query=${query}&limit=5&fmt=json",{"_index":799,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":772,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":802,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":803,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["grpc/grpc",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["hack",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":881,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.kind",{"_index":1118,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handle.requestpermission",{"_index":927,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":1138,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1463,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlefilefallback(event",{"_index":1136,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handlemessage",{"_index":1456,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1334,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["handles",{"_index":1109,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["handling",{"_index":1131,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["hanging",{"_index":1442,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1362,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{}}}],["hash",{"_index":738,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["hasing",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":967,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":5561,"title":{},"body":{"license.html":{}}}],["held",{"_index":5607,"title":{},"body":{"license.html":{}}}],["help",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":5786,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1314,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":698,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":5536,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":5398,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":5403,"title":{},"body":{"license.html":{}}}],["hex",{"_index":727,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":1107,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1540,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1617,"title":{},"body":{"injectables/LoaderService.html":{}}}],["highest",{"_index":1005,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["hilfe",{"_index":1321,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["history",{"_index":5249,"title":{},"body":{"changelog.html":{}}}],["hk",{"_index":1352,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1354,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hooks",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["hopefully",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":978,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["host",{"_index":1144,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2485,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2499,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2482,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2483,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2495,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2498,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2496,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2497,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2464,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":1075,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hosting",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["hotkey",{"_index":1291,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1389,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1392,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1395,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1305,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1379,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1372,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1367,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":388,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1306,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":5324,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["htmlaudioelement",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{}}}],["htmlcanvaselement",{"_index":2814,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlelement",{"_index":2356,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["htmlinputelement",{"_index":1535,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":779,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["http_interceptors",{"_index":5738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":756,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["httpevent",{"_index":1606,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1604,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1607,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1602,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":5374,"title":{},"body":{"index.html":{}}}],["https://coverartarchive.org",{"_index":784,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://github.com/motabass/gblaster",{"_index":5648,"title":{},"body":{"properties.html":{}}}],["https://musicbrainz.org/ws/2",{"_index":782,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://on.cypress.io/custom",{"_index":699,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":5376,"title":{},"body":{"index.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1491,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["husky",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":3011,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["iconregistry",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":4175,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["id",{"_index":768,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":763,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3coverpicture",{"_index":730,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":762,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3tagsservice",{"_index":1416,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":5451,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":734,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ignore",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["ignores",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["ii",{"_index":5486,"title":{},"body":{"license.html":{}}}],["iii",{"_index":5491,"title":{},"body":{"license.html":{}}}],["image",{"_index":753,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"license.html":{}}}],["image.front",{"_index":813,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images",{"_index":777,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images.find((img",{"_index":1513,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.length",{"_index":1511,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images[0]?.['#text",{"_index":1517,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images[images.length",{"_index":1522,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["img.size",{"_index":1514,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["iml",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":2039,"title":{},"body":{"injectables/PlayerService.html":{}}}],["implement",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":5520,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":5531,"title":{},"body":{"license.html":{}}}],["implements",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":5616,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":5778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":5780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":5776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":5781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1431,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["important",{"_index":1834,"title":{},"body":{"injectables/MetadataService.html":{}}}],["imports",{"_index":139,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["improve",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3707,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["including",{"_index":5446,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":5439,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":2141,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["increasevolume(value",{"_index":2151,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":92,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":4956,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["indexeddbservice",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":94,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ineffective",{"_index":5580,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":5596,"title":{},"body":{"license.html":{}}}],["inferred",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["influence",{"_index":1002,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":5392,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5437,"title":{},"body":{"license.html":{}}}],["init",{"_index":2629,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["initbarkscale",{"_index":5326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["initializetheme",{"_index":2520,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2410,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["inject(audioservice",{"_index":943,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2432,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":1996,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1308,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":1076,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1307,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":1915,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["inject(gamepadservice",{"_index":2176,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":2177,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["inject(httpclient",{"_index":780,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["inject(id3tagsservice",{"_index":1716,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1717,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(loaderservice",{"_index":1612,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1378,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1310,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":1994,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":2543,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1718,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(ngzone",{"_index":2812,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject(playerservice",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":1078,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2637,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2624,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":1914,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2747,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":1993,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2819,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1377,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":418,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":1069,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('bars",{"_index":2803,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2459,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["inset",{"_index":1155,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2655,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":5372,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2328,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["instead",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["integriert",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["intended",{"_index":5475,"title":{},"body":{"license.html":{}}}],["intending",{"_index":5563,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["intercept",{"_index":1600,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1601,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1596,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1598,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["intergrated",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["internal",{"_index":2906,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":1992,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":1288,"title":{},"body":{"injectables/GamepadService.html":{}}}],["introducing",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":5579,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":5597,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":5595,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":5590,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":5539,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2250,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2254,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2275,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1278,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":5327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":5342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":5328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2395,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":5329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{}}}],["ismediasessionsupported",{"_index":5330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions",{"_index":5333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":5343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{}}}],["isplaying",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2256,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isstopped",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{}}}],["ist",{"_index":1327,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":5334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1731,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["item",{"_index":1115,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":5768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1159,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2334,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":5498,"title":{},"body":{"license.html":{}}}],["january",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["jb",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":3425,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["js",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1507,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["judged",{"_index":5577,"title":{},"body":{"license.html":{}}}],["july",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["jurisdictions",{"_index":5406,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1161,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["k",{"_index":669,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kb/s",{"_index":677,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["keine",{"_index":1399,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":5364,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1336,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1332,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":5746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1295,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["keys.replaceall",{"_index":1351,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":5614,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5473,"title":{},"body":{"license.html":{}}}],["known",{"_index":5548,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1798,"title":{},"body":{"injectables/MetadataService.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":774,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["large')?.['#text",{"_index":1521,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["largeimage",{"_index":1518,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["larger",{"_index":1816,"title":{},"body":{"injectables/MetadataService.html":{}}}],["last",{"_index":1831,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["last.fm",{"_index":1494,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1708,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1489,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1478,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1485,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1481,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1488,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1487,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1484,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2888,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["late",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["latencyhint",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{}}}],["latent",{"_index":5622,"title":{},"body":{"license.html":{}}}],["later",{"_index":5435,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3093,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["launch",{"_index":2022,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["launchparameters",{"_index":2020,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":2032,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":2030,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":2014,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":5386,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5405,"title":{},"body":{"license.html":{}}}],["layout",{"_index":2986,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layouts",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["lazy",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["leadingminutezero",{"_index":5349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":1060,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":1065,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2471,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1528,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":5381,"title":{},"body":{"license.html":{}}}],["legally",{"_index":5578,"title":{},"body":{"license.html":{}}}],["legend",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":5400,"title":{},"body":{"license.html":{}}}],["lib",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":136,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":138,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":141,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libs",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["libs/.../helpers",{"_index":5315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/helpers",{"_index":5348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":1046,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":5131,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["license.md",{"_index":5134,"title":{},"body":{"changelog.html":{}}}],["licensed",{"_index":5611,"title":{},"body":{"license.html":{}}}],["light",{"_index":2569,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":836,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":2601,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":835,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":5496,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":5447,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":5504,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5479,"title":{},"body":{"license.html":{}}}],["line",{"_index":2123,"title":{},"body":{"injectables/PlayerService.html":{}}}],["lines",{"_index":973,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["linethickness",{"_index":2676,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":5765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3772,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["linting",{"_index":5222,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":2336,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{}}}],["lite",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":755,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/Id3Tags.html":{}}}],["load",{"_index":2235,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["loadcomponent",{"_index":5775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":2074,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["loadedtrack",{"_index":2084,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":878,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":885,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loader.helpers.ts",{"_index":1026,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1611,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":887,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loader.service.abstract.ts",{"_index":1168,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1171,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1172,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1173,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":5314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":880,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:11",{"_index":1530,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:18",{"_index":1897,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:24",{"_index":1533,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:26",{"_index":1531,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:32",{"_index":1899,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:42",{"_index":1898,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:43",{"_index":1532,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1597,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1610,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2446,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["loadingcounter",{"_index":1622,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadlastdirectory",{"_index":2142,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["local",{"_index":1752,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localization",{"_index":5664,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["lock.json",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["locking",{"_index":5367,"title":{},"body":{"index.html":{}}}],["logic",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["lookup",{"_index":1772,"title":{},"body":{"injectables/MetadataService.html":{}}}],["loop",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{}}}],["lowersearchterm",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["lowest",{"_index":992,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["lucene",{"_index":759,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":758,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["made",{"_index":5476,"title":{},"body":{"license.html":{}}}],["main",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["main_audio",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{}}}],["maincolor",{"_index":313,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{}}}],["make",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":5394,"title":{},"body":{"license.html":{}}}],["management",{"_index":5654,"title":{},"body":{"todo.html":{}}}],["manifest",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["manifest.json",{"_index":5071,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2439,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mapping",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["march",{"_index":2956,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["maskable",{"_index":5028,"title":{},"body":{"changelog.html":{}}}],["mat",{"_index":5761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1370,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":5732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1374,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1860,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2611,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2608,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1298,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2633,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1371,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1299,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":3209,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["matformfield",{"_index":129,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matformfieldmodule",{"_index":2245,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2325,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":2119,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2324,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(chunksize",{"_index":1811,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(filesize",{"_index":1810,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(math.random",{"_index":2126,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":2120,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":1976,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.log10(freq",{"_index":980,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(maxfreq",{"_index":982,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(minfreq",{"_index":981,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.max(0",{"_index":2338,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":1978,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.round(value",{"_index":676,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["mathint",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticon",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonbutton",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonmodule",{"_index":1373,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":131,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matlistmodule",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matmenucontent",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":1903,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matmenutrigger",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matoptionmodule",{"_index":2671,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprefix",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressbar",{"_index":2391,"title":{},"body":{"components/ShellComponent.html":{}}}],["matprogressspinnermodule",{"_index":2244,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2670,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2421,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2389,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslider",{"_index":2132,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidermodule",{"_index":932,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matsliderthumb",{"_index":2133,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidetogglechange",{"_index":1870,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1861,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matsuffix",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mattoolbar",{"_index":2134,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattoolbarmodule",{"_index":1901,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltip",{"_index":2135,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattooltipmodule",{"_index":1902,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":2117,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":5553,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1715,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["mdc",{"_index":4172,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":5474,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2287,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["meatadata",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1661,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{}}}],["mediametadata(metadata",{"_index":1670,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1642,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasession",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["mediasessionaction",{"_index":1637,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1639,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1672,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1627,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":5336,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":5554,"title":{},"body":{"license.html":{}}}],["medium')?.['#text",{"_index":1516,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["mega')?.['#text",{"_index":1519,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["member",{"_index":5559,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2351,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["menus",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["menutrigger",{"_index":2248,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["merchantability",{"_index":5618,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1329,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["merged.description",{"_index":1347,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1348,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1486,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1457,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":1690,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl.original",{"_index":1792,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.original.startswith('blob",{"_index":1793,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.thumb.startswith('blob",{"_index":1795,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1791,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1802,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1789,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":766,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1709,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1480,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1527,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":764,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1744,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.coverurl.thumb",{"_index":1748,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1746,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1757,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":125,"title":{"injectables/MetadataService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["metadataservice.processionpercent",{"_index":2447,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadatasettingscomponent",{"_index":392,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["meter",{"_index":5368,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":5703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1504,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["methods",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":5659,"title":{},"body":{"todo.html":{}}}],["middlechunk",{"_index":1812,"title":{},"body":{"injectables/MetadataService.html":{}}}],["middlepos",{"_index":1809,"title":{},"body":{"injectables/MetadataService.html":{}}}],["migrate",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["migrated",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["migrating",{"_index":2494,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2487,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["min",{"_index":2118,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2677,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["mindecibels",{"_index":292,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["minfreq",{"_index":1011,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["miscellaneous",{"_index":5299,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":5174,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":4417,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["mobile",{"_index":4295,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mobx",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modes",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":5438,"title":{},"body":{"license.html":{}}}],["module",{"_index":1432,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["modules",{"_index":3315,"title":{"modules.html":{}},"body":{"changelog.html":{},"modules.html":{}}}],["monochrome",{"_index":5029,"title":{},"body":{"changelog.html":{}}}],["monochrome.svg",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["monorepo",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["moral",{"_index":5487,"title":{},"body":{"license.html":{}}}],["more",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["motabass",{"_index":5650,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":2172,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":2426,"title":{},"body":{"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":5459,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2259,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["move",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["moved",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["mp3",{"_index":1039,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":1044,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":5740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":735,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":793,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1710,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzreleasegroup",{"_index":767,"title":{"interfaces/MusicbrainzReleaseGroup.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzresponse",{"_index":771,"title":{"interfaces/MusicbrainzResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":778,"title":{"injectables/MusicbrainzService.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":832,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Color.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":701,"title":{},"body":{"interfaces/Chainable.html":{}}}],["narrowing",{"_index":2505,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":5519,"title":{},"body":{"license.html":{}}}],["native",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["nativebrowserfileloaderservice",{"_index":888,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigates",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["navigateto",{"_index":2397,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2400,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigation",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["navigator.getgamepads",{"_index":1215,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1669,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1673,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1664,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1659,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1668,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1667,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2932,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2933,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":866,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nearby",{"_index":2327,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["nearly",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":5634,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":5478,"title":{},"body":{"license.html":{}}}],["neu",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["newsize",{"_index":319,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["newtrack",{"_index":2041,"title":{},"body":{"injectables/PlayerService.html":{}}}],["next",{"_index":1603,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1614,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1425,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2917,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ng",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["ng11",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["ng15",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["ngafterviewinit",{"_index":1084,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngarraypipesmodule",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ngclass",{"_index":2243,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2504,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2506,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":1098,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngoptimizedimage",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["ngx",{"_index":91,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":90,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1232,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1711,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["node_modules",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["nodes",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{}}}],["non",{"_index":5587,"title":{},"body":{"license.html":{}}}],["none",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"changelog.html":{}}}],["notable",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["notes.md",{"_index":5225,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":2028,"title":{},"body":{"injectables/PlayerService.html":{}}}],["notification",{"_index":5153,"title":{},"body":{"changelog.html":{}}}],["november",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["now",{"_index":2886,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["npm",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["npmrc",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["nrwl",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["nrwl/nx",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":1241,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1206,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1204,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(atrack",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(btrack",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(duration",{"_index":1656,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number.nan",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbers",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbervalue",{"_index":959,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["nx",{"_index":3392,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["obeservable",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1753,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":5744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1759,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":5643,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1302,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1333,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1345,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2434,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2853,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1340,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2856,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtained",{"_index":1127,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["obtaining",{"_index":5633,"title":{},"body":{"license.html":{}}}],["october",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["offers",{"_index":5612,"title":{},"body":{"license.html":{}}}],["offline",{"_index":5371,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":318,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":5708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":2337,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ogg",{"_index":1041,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["ohne",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["oldsource",{"_index":632,"title":{},"body":{"injectables/AudioService.html":{}}}],["onchanges",{"_index":2451,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["oncontextmenu",{"_index":2251,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["oncontextmenu(event",{"_index":2258,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ondestroy",{"_index":1052,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":748,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["onfilehandlesdropped",{"_index":2398,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilehandlesdropped(files",{"_index":2404,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped",{"_index":2399,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped(files",{"_index":2406,"title":{},"body":{"components/ShellComponent.html":{}}}],["oninit",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1864,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1869,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onsliderpositionchanged",{"_index":2143,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":2154,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1865,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1872,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1866,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1874,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1867,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1876,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":2144,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onvolumechange(value",{"_index":2156,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["open",{"_index":2346,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["opened",{"_index":2352,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["openedstate",{"_index":2460,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":902,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2458,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["optimizations",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["optimize",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":2786,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["optional",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":718,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1324,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1331,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":1043,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["origin",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["original",{"_index":825,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"license.html":{}}}],["originalfn",{"_index":722,"title":{},"body":{"interfaces/Chainable.html":{}}}],["os",{"_index":5365,"title":{},"body":{"index.html":{}}}],["osc",{"_index":333,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2678,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":3253,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["oscilloscopepath",{"_index":5704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":310,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":332,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":5373,"title":{},"body":{"index.html":{}}}],["others",{"_index":5458,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1449,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["output",{"_index":1071,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2317,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":1061,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":1067,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":1053,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":1056,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":1055,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":1050,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":1070,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":1073,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:15",{"_index":1072,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:39",{"_index":1068,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:49",{"_index":1066,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:55",{"_index":1064,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":1049,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":1048,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlayref",{"_index":2353,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.left",{"_index":2359,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.position",{"_index":2357,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.top",{"_index":2361,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overrides",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["overtly",{"_index":5537,"title":{},"body":{"license.html":{}}}],["overview",{"_index":5644,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["overwritten",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["owner",{"_index":5419,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":5418,"title":{},"body":{"license.html":{}}}],["owners",{"_index":5424,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2899,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":3205,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["packgr",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":5018,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["palette",{"_index":1773,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1851,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1852,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1845,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1846,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1853,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1854,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1847,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1848,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1849,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1850,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1843,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1844,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pane:last",{"_index":2355,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["panel",{"_index":2452,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2453,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2454,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2450,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2470,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2467,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2474,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2475,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2469,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2472,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2473,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2480,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2476,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2477,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2479,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2478,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2449,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":5505,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1500,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":702,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":5514,"title":{},"body":{"license.html":{}}}],["part",{"_index":4326,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["partial",{"_index":1312,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":5620,"title":{},"body":{"license.html":{}}}],["party",{"_index":5641,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["passed",{"_index":2891,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":5606,"title":{},"body":{"license.html":{}}}],["path",{"_index":5772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":5710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":5774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":314,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1466,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1426,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["per",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["perform",{"_index":5483,"title":{},"body":{"license.html":{}}}],["performance",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["performance.now",{"_index":1274,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":5490,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5426,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":5628,"title":{},"body":{"license.html":{}}}],["permission",{"_index":924,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":5636,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5534,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":3103,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["person",{"_index":5464,"title":{},"body":{"license.html":{}}}],["person's",{"_index":5495,"title":{},"body":{"license.html":{}}}],["persons",{"_index":5632,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":5494,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1415,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["pin",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":120,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2283,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{},"overview.html":{}}}],["pipetransform",{"_index":666,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1719,"title":{},"body":{"injectables/MetadataService.html":{}}}],["placement",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["play",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["play/pause",{"_index":2182,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playback",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["player",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":1904,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":1905,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1648,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":5777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/file",{"_index":2428,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/library",{"_index":5779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1881,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{}}}],["player/player",{"_index":2429,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.service",{"_index":2427,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.types",{"_index":2542,"title":{},"body":{"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":394,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":108,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":860,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["playerservice.currentlyloadedtrack();@let",{"_index":875,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["playerservice.currenttime",{"_index":2239,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.repeat",{"_index":2241,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playertoolbarcomponent",{"_index":396,"title":{"components/PlayerToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playing",{"_index":1649,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["playlist",{"_index":1586,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2246,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2247,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.filter((t",{"_index":2080,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.find((playlisttrack",{"_index":2095,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.findindex((track",{"_index":2311,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":2093,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":2090,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":1913,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":399,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.hash",{"_index":2069,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlisttrack.metadata?.hash",{"_index":2096,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":1924,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2252,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2261,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":1925,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":1946,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":5357,"title":{},"body":{"index.html":{}}}],["playstate",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["playtrack",{"_index":1557,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["playtrackbyhash",{"_index":1926,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playtrackbyhash(hash",{"_index":1948,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":696,"title":{},"body":{"interfaces/Chainable.html":{}}}],["plug",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["pluginnewanalysernode",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{}}}],["plugins",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":1145,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["points",{"_index":996,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["polfills",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["polyfills",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["pool",{"_index":2877,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":1975,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":3045,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["postcss",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["prdefinded",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["pre",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["precommit",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["prefertagembeddedpicture",{"_index":1675,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefetch",{"_index":5070,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":5724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preparations",{"_index":5285,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":5625,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":5581,"title":{},"body":{"license.html":{}}}],["preset",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["pressedbuttonscaches",{"_index":1202,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prettier",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":2491,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":1927,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":717,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":2557,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":2518,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":2519,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":797,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1895,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":5493,"title":{},"body":{"license.html":{}}}],["private",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["prive",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["problems",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["process",{"_index":2889,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["processing",{"_index":2035,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["processionpercent",{"_index":1676,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":3305,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":786,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1440,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.all(promises",{"_index":1123,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promise.reject(new",{"_index":1437,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1114,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{}}}],["promises.push(promise",{"_index":1120,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promote",{"_index":5450,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":5557,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":401,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2375,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["props",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":5477,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":5499,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5517,"title":{},"body":{"license.html":{}}}],["protobufjs",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":4394,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":5397,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["provideexperimentalzonelesschangedetection",{"_index":5714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":5726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":5715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":5721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":5728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":5713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":5391,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":5716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":5432,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":5492,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5470,"title":{},"body":{"license.html":{}}}],["pure",{"_index":659,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":5404,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":5445,"title":{},"body":{"license.html":{}}}],["put",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["pwa",{"_index":5354,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quality",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["quarter",{"_index":1818,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterchunk",{"_index":1823,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterpos",{"_index":1821,"title":{},"body":{"injectables/MetadataService.html":{}}}],["query",{"_index":761,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["queryparams",{"_index":1502,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["queue",{"_index":2029,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":5571,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":2125,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":2088,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2314,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["rate",{"_index":874,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["react",{"_index":953,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["read",{"_index":697,"title":{},"body":{"interfaces/Chainable.html":{}}}],["readded",{"_index":5069,"title":{},"body":{"changelog.html":{}}}],["reader",{"_index":5378,"title":{},"body":{"index.html":{}}}],["readme",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":5211,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1732,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["real",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["realkeys",{"_index":1350,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":5576,"title":{},"body":{"license.html":{}}}],["record",{"_index":1501,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2846,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["recursive",{"_index":5192,"title":{},"body":{"changelog.html":{}}}],["redirectto",{"_index":5773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":5441,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":5198,"title":{},"body":{"changelog.html":{}}}],["reenabled",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":5396,"title":{},"body":{"license.html":{}}}],["regards",{"_index":5503,"title":{},"body":{"license.html":{}}}],["register",{"_index":1401,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1323,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1180,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1189,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1181,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1193,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1363,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":5720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":5719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1328,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registry",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["regular",{"_index":1126,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["reinstall",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["reject",{"_index":1427,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1454,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1446,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":3092,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["relationship",{"_index":5390,"title":{},"body":{"license.html":{}}}],["release",{"_index":769,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["release:${luceneescapequery.escape(album",{"_index":795,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":789,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2924,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":5433,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":5427,"title":{},"body":{"license.html":{}}}],["reload",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["remainder",{"_index":5598,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":5600,"title":{},"body":{"license.html":{}}}],["remember",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":1758,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverpicture",{"_index":82,"title":{"interfaces/RemoteCoverPicture.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":911,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["removed",{"_index":2072,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["removetrackfromplaylist",{"_index":1928,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist(track",{"_index":1951,"title":{},"body":{"injectables/PlayerService.html":{}}}],["rename",{"_index":5133,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["renderer",{"_index":1077,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":1074,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rendering",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["renew",{"_index":1751,"title":{},"body":{"injectables/MetadataService.html":{}}}],["renovate",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["renovate.json",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":1921,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":747,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["report",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["reposition",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":5647,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":5613,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":5481,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":5455,"title":{},"body":{"license.html":{}}}],["request",{"_index":923,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["request.reject(new",{"_index":1460,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1462,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe",{"_index":5119,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe(draw",{"_index":2902,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1467,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["requestwakelock",{"_index":2931,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":5637,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":5566,"title":{},"body":{"license.html":{}}}],["reset",{"_index":2350,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["resetfrequencybandgain",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{}}}],["resetfrequencybandgain(bandfrequency",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{}}}],["resizeobserver",{"_index":2817,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2854,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1451,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1453,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1551,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resolved",{"_index":1121,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["respect",{"_index":5602,"title":{},"body":{"license.html":{}}}],["response",{"_index":984,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["responsibility",{"_index":5630,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":5369,"title":{},"body":{"index.html":{}}}],["restore",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.map((tag",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.matches",{"_index":2440,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":5402,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1355,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["retained",{"_index":5488,"title":{},"body":{"license.html":{}}}],["return",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":5440,"title":{},"body":{"license.html":{}}}],["revert",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["revocation",{"_index":5565,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":5284,"title":{},"body":{"changelog.html":{}}}],["rgb(255",{"_index":1165,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":851,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["rid",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1021,"title":{},"body":{"components/EqualizerComponent.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{},"license.html":{}}}],["rights",{"_index":5413,"title":{},"body":{"license.html":{}}}],["root",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2880,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["rounding",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":2403,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["routeroutlet",{"_index":2390,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":5705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":5586,"title":{},"body":{"license.html":{}}}],["rule",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":4006,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":5782,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1609,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":873,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":331,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["samples",{"_index":1820,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sandbox",{"_index":5377,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["saving",{"_index":5656,"title":{},"body":{"todo.html":{}}}],["scale",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":5167,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":2533,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scientific",{"_index":5431,"title":{},"body":{"license.html":{}}}],["screen",{"_index":5242,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scroll",{"_index":2277,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollbehavior",{"_index":2331,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2289,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2326,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollposition",{"_index":2285,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2278,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2306,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2309,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2249,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scss",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":804,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["searchterm",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["searchterm.tolowercase",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["seconds",{"_index":1955,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seeking",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["seekleft",{"_index":1929,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekleft(seconds",{"_index":1953,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":2158,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekright",{"_index":1930,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekright(seconds",{"_index":1956,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":2160,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekto",{"_index":1666,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["seektohandler(details",{"_index":2102,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektto",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1558,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1559,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":2075,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["selectedalbum",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selection",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["selectnext",{"_index":1931,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":1932,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":1933,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":1960,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1560,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["self",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["semantics",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":2897,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1245,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separate",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":5722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seperated",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["september",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["service/file",{"_index":1025,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":731,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1479,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1529,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":5345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["service/metadata.service.ts",{"_index":1674,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:148",{"_index":1689,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:24",{"_index":1706,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:25",{"_index":1704,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1702,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1696,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:31",{"_index":1700,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:35",{"_index":1685,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:50",{"_index":1692,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:65",{"_index":1694,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":829,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":5347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":751,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:40",{"_index":1896,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":879,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":3139,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":2174,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":2173,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":2175,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["services/loader/loader.service",{"_index":2424,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":1988,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":1909,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":1987,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1662,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["session.service",{"_index":1989,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":5332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1630,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1640,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1645,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1647,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1643,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1635,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1629,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["set(filtered.tosorted((a",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor(color",{"_index":2562,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1631,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1636,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2682,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2692,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2683,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2694,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1632,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1641,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2684,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2696,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2685,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2698,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2521,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":2524,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2522,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":2526,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2686,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2700,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{}}}],["setgap",{"_index":2687,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2702,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2688,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2704,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{}}}],["setmindb",{"_index":2689,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2706,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setoverlayclass",{"_index":2566,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setplaybackstate(state",{"_index":1671,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor(color",{"_index":2551,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":1934,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":1962,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1633,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1644,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2690,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2708,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1444,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["setting",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["settings",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2385,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1862,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2383,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1859,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2612,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2512,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":1878,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1877,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":1875,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1873,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":1871,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":1868,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1858,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2384,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2386,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":403,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2619,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2620,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2852,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":5337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":5344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{}}}],["several",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":5564,"title":{},"body":{"license.html":{}}}],["share",{"_index":5660,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2423,"title":{},"body":{"components/ShellComponent.html":{}}}],["shas",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["shell",{"_index":2388,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["shell'},{'name",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2392,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2393,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":345,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1318,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":2181,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["show",{"_index":1618,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{}}}],["showdelay",{"_index":5734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":897,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showfilepickerandloadfiles",{"_index":2145,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["showpicker",{"_index":896,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["shows",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2679,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":1922,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2461,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["sidenav",{"_index":2396,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["signal",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["signal(0",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(false",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2710,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2714,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('basegain",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2721,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2723,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":2531,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2729,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2731,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2733,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2736,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1695,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":1980,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":1983,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2744,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1701,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1703,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1705,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2915,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.localstorageservice.retrieve('volume",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(true",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(undefined",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["signalös",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":5525,"title":{},"body":{"license.html":{}}}],["simpler",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["simplified",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["sind",{"_index":1398,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1483,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["sizes",{"_index":2061,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":1149,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2401,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2486,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":5707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":406,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":405,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["slider",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["sliders",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":775,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{}}}],["small')?.['#text",{"_index":1515,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smaller",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["smallimage",{"_index":1512,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smooth",{"_index":2308,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2680,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["snyk",{"_index":5197,"title":{},"body":{"changelog.html":{}}}],["soll",{"_index":2660,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["sonarjs/pseudo",{"_index":2124,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":1942,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["song.file.name",{"_index":2367,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2363,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2364,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.hash",{"_index":2342,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.hash",{"_index":2070,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2368,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2366,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2365,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1730,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["sortable",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":5655,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["spark",{"_index":1714,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["spark.append(endchunk",{"_index":1839,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.append(middlechunk",{"_index":1815,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.append(quarterchunk",{"_index":1825,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.append(threequarterchunk",{"_index":1830,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.end",{"_index":1840,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5",{"_index":1713,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["sparkmd5.arraybuffer",{"_index":1804,"title":{},"body":{"injectables/MetadataService.html":{}}}],["specified",{"_index":2079,"title":{},"body":{"injectables/PlayerService.html":{}}}],["spectrogram",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":2272,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["splashscreen",{"_index":5072,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":2059,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stable",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":661,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["standard",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["standing",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":991,"title":{},"body":{"components/EqualizerComponent.html":{},"changelog.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2939,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starts",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["startvisualization(getdatamethod",{"_index":2872,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":5575,"title":{},"body":{"license.html":{}}}],["statt",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["statutory",{"_index":5617,"title":{},"body":{"license.html":{}}}],["steps",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":321,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2791,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storagesettingscomponent",{"_index":408,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":5745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":5748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(this.equalizergainvalues",{"_index":652,"title":{},"body":{"injectables/AudioService.html":{}}}],["structures",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["stuff",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["stylelint",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1045,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":137,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":1054,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styling",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1344,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":919,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"license.html":{}}}],["sublicensable",{"_index":5589,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2284,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1303,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":5417,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1391,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1394,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":5523,"title":{},"body":{"license.html":{}}}],["successors",{"_index":5562,"title":{},"body":{"license.html":{}}}],["such",{"_index":5510,"title":{},"body":{"license.html":{}}}],["suche",{"_index":5653,"title":{},"body":{"todo.html":{}}}],["support",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":1663,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":5360,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":5610,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":5543,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":637,"title":{},"body":{"injectables/AudioService.html":{}}}],["svg",{"_index":5038,"title":{},"body":{"changelog.html":{}}}],["svgo",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["swc/core",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["switch",{"_index":2106,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["switched",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["swupdate",{"_index":2634,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["swupdate.activateupdate().then",{"_index":2651,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2639,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2640,"title":{},"body":{"injectables/UpdateService.html":{}}}],["syntax",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":1133,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{},"todo.html":{}}}],["t",{"_index":2081,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tag",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["tag.album",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.album?.tolowercase().includes(lowersearchterm",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist?.tolowercase().includes(lowersearchterm",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.filename?.tolowercase().includes(lowersearchterm",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.title?.tolowercase().includes(lowersearchterm",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":839,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":788,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":787,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1787,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1778,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1780,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1707,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1417,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1422,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1419,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1784,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1785,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":732,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1414,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1786,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagswithoptionalbloburls",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tagsworkerrequest",{"_index":837,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":838,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":1990,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":5582,"title":{},"body":{"license.html":{}}}],["target",{"_index":5661,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":2310,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1388,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":710,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templates",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["templateurl",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["temporarily",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["termination",{"_index":5568,"title":{},"body":{"license.html":{}}}],["terms",{"_index":5472,"title":{},"body":{"license.html":{}}}],["territories",{"_index":5551,"title":{},"body":{"license.html":{}}}],["test",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":4007,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1482,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":830,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thebespokepixel/es",{"_index":2540,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["theme",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{}}}],["theme.types",{"_index":2541,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice",{"_index":355,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":410,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":5521,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":311,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["this._audiocontext",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.createanalyser",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.resume",{"_index":638,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.state",{"_index":636,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.currenttime",{"_index":648,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.fastseek(position",{"_index":647,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.loop",{"_index":645,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.pause",{"_index":641,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.play",{"_index":639,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.src",{"_index":633,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiosourcenode",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.clear",{"_index":631,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.foreach((analyser",{"_index":630,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.connect(analyser",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.disconnect(analyser",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[band",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":650,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._gainnode",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.asobservable",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.next(true",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._internalanalyzer",{"_index":2858,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1339,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":2563,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":2564,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1287,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":2067,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(...validfiles",{"_index":2037,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.filteredbyserchterm",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":274,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":2065,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.allowedtypes().includes(file.type",{"_index":1141,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.alpha",{"_index":2726,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2770,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2841,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2754,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2760,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2758,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2756,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2867,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2866,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2896,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2625,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2901,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}/release",{"_index":798,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1508,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2650,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.basegain",{"_index":957,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.currenttime",{"_index":1657,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2909,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2765,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1655,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.equalizergainvalues",{"_index":956,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":2044,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":2085,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1652,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1650,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":1974,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":2063,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2712,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2868,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":2051,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":2113,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":2111,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(value",{"_index":2230,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1207,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1260,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1258,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1249,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.bands",{"_index":999,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.barcount",{"_index":2716,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2774,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2835,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2859,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2862,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2861,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2860,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.breakpointobserver",{"_index":2433,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1496,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1205,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1256,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1250,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1264,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1273,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1246,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2820,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2847,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2826,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvasref",{"_index":961,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.canvasref()!.nativeelement",{"_index":962,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.capfalldown",{"_index":2719,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2778,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2717,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2776,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1228,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1227,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1289,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1222,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2509,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.colorconfig",{"_index":2839,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":2565,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":2554,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1210,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":806,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1261,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1257,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1790,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1761,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1728,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":903,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(entry.handle",{"_index":895,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(handle",{"_index":898,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":1973,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":1967,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":2064,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":2086,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":2099,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().length",{"_index":2040,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":2068,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist()[this.currentplaylist().length",{"_index":2042,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":2071,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.darkmode",{"_index":2567,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":2547,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1380,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":2199,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.default_deadspace",{"_index":1280,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1192,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1330,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1360,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1366,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1382,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2378,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2377,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1358,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1212,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1313,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":1094,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":1085,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":1091,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":1089,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drawequalizerresponse",{"_index":958,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.drop.bind(this",{"_index":1097,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":1096,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[band",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":649,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":655,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1342,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1493,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1492,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":791,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2755,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2772,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.filehandlesdropped.emit(filehandles",{"_index":1125,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.fileinput",{"_index":1536,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1542,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1550,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1549,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1548,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1539,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1544,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1541,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1538,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.openfiles",{"_index":2066,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.files",{"_index":1552,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1546,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filesdroped.emit(files",{"_index":1143,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.filestoprocess",{"_index":1698,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1726,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1733,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredbyserchterm",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.filteredbyserchterm().filter((track",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":790,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1286,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1266,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":2184,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":2226,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":2228,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":2227,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":2214,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":2215,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":2222,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":2221,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":2224,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":2218,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":2223,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":2219,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":2220,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":2225,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":2216,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":2217,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":2196,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":2185,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":2186,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":2205,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":2203,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":2210,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":2192,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":2208,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":2194,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":2201,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":2212,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":2188,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":2190,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2764,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2762,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2718,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2782,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getcolorobject(new",{"_index":2571,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getmetadata(filedata",{"_index":1736,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":2169,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer.files",{"_index":1137,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1436,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlefilefallback(event",{"_index":1128,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handlemessage",{"_index":1434,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1357,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1364,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1343,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1325,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1353,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1346,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":2178,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":2179,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.register",{"_index":2180,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1763,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":2200,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.indexeddbservice.add('library",{"_index":1788,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('library').topromise",{"_index":1892,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('directoryhandles",{"_index":899,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.indexeddbtracks().filter((tag",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.indexeddbtracks.set(tagswithoptionalbloburls",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.isautoscrollenabled",{"_index":2290,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2291,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1281,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":646,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(false",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(true",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying",{"_index":640,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(false",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(true",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(false",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(true",{"_index":644,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.lastfm_api_key",{"_index":1506,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1768,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":1108,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":1093,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.linethickness",{"_index":2739,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2780,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1615,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1613,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadingcounter",{"_index":1623,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2513,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.retrieve('equalizergainvalues",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2771,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2775,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2779,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2777,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":2548,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('equalizergainvalues",{"_index":654,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2773,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2783,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2781,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2769,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1891,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2767,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1889,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1887,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1884,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2920,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":1997,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":2003,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":2000,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":1998,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":2005,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":2007,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":2009,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":2001,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":2053,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":2011,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.menutrigger",{"_index":2344,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.meta.addtag",{"_index":2560,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.meta.updatetag",{"_index":2561,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":2083,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(tag",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1890,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1888,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1886,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1883,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2759,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2768,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2833,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1769,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":2004,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1439,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2508,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2507,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2837,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2870,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":1088,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":642,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.pendingrequests.clear",{"_index":1477,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1445,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1469,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1459,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1450,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1474,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1749,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...filedata",{"_index":2444,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":2443,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":281,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2725,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2301,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.darkmuted?.hex",{"_index":849,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.lightmuted?.hex",{"_index":850,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.coverurl?.original",{"_index":853,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.hash",{"_index":2340,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2294,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":2240,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.next",{"_index":2209,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpause",{"_index":2183,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2341,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.playtrackbyhash(track.hash",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.previous",{"_index":2211,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectnext",{"_index":2206,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":2204,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":2229,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.stop",{"_index":2187,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playpause",{"_index":1999,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(newtrack",{"_index":2043,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":2091,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":2098,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":2094,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":2097,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1750,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1268,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":2006,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":2552,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":2553,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.register",{"_index":1317,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":1086,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":1104,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":2107,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":2109,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":2114,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":2112,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2930,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2828,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2904,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2442,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.scrolltobottom",{"_index":2299,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2305,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2281,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.seekleft(10",{"_index":2008,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":2193,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seekright(10",{"_index":2010,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":2195,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seektohandler(details",{"_index":2012,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":643,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.selectedalbum",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":2077,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":2100,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":2050,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setaccentcolor(colors.peakcolor",{"_index":2550,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setaccentcolor(this.accentcolor",{"_index":2546,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setfrequencybandgain(bandfrequency",{"_index":656,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.setoverlayclass",{"_index":2544,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setplaybackstate('none",{"_index":1654,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1653,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1651,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setprimarycolor(colors.maincolor",{"_index":2549,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setprimarycolor(this.primarycolor",{"_index":2545,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setseekposition(details.seektime",{"_index":2105,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":2101,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2829,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showfilepickerandloadfiles",{"_index":2213,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.shuffle",{"_index":2087,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":2115,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2441,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2757,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2766,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2869,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2871,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":2002,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2842,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.swupdate",{"_index":2638,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2658,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2657,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.accentcolor",{"_index":1015,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.darkmode",{"_index":848,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.primarycolor",{"_index":987,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":2045,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2614,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2626,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":1916,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1322,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":2202,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.togglerepeat",{"_index":2191,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.toggleshuffle",{"_index":2189,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1699,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1734,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1725,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.uniquealbums",{"_index":268,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1658,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.usetagembeddedpicture",{"_index":1747,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1743,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1766,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2848,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2851,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2849,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2850,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2822,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2827,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2910,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2918,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2919,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2763,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2742,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":554,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.wakelock",{"_index":2929,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2934,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2937,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":2047,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":2049,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1428,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1435,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1433,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2824,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1455,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1472,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1471,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1473,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":5428,"title":{},"body":{"license.html":{}}}],["threads.js",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":1819,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterchunk",{"_index":1828,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterpos",{"_index":1826,"title":{},"body":{"injectables/MetadataService.html":{}}}],["through",{"_index":1007,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{}}}],["throughout",{"_index":5407,"title":{},"body":{"license.html":{}}}],["thum",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["thumb",{"_index":818,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thumbnail",{"_index":823,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["thumbnails",{"_index":754,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["time",{"_index":868,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["time.pipe",{"_index":858,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["time.ts",{"_index":5316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timed",{"_index":1448,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1443,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1421,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":843,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2887,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["tinycolor",{"_index":2539,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["tinycolor(hex",{"_index":2583,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(10",{"_index":2586,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(15",{"_index":2588,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(18",{"_index":2590,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(21",{"_index":2592,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(24",{"_index":2594,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(27",{"_index":2596,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(30",{"_index":2598,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(5",{"_index":2584,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(15",{"_index":2581,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(20",{"_index":2579,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(25",{"_index":2577,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(30",{"_index":2575,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(35",{"_index":2574,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(45",{"_index":2573,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(55",{"_index":2572,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(value",{"_index":2600,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":5756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":1908,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2445,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":557,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["todo.md",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["todos",{"_index":4633,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["toggle",{"_index":1880,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["togglehelpdialog",{"_index":1356,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2462,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":2146,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["togglerepeat",{"_index":1935,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["toggleshuffle",{"_index":1936,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["togglevisualmode",{"_index":2913,"title":{},"body":{"injectables/VisualsService.html":{}}}],["token",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["toolbar",{"_index":2130,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["toolbar'},{'name",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["toolbar.component",{"_index":2430,"title":{},"body":{"components/ShellComponent.html":{}}}],["toolbar.component.html",{"_index":2136,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2137,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":2129,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:104",{"_index":2155,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:110",{"_index":2157,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:121",{"_index":2150,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:125",{"_index":2164,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:129",{"_index":2165,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:133",{"_index":2162,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:138",{"_index":2153,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:142",{"_index":2159,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:146",{"_index":2161,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:150",{"_index":2152,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:154",{"_index":2148,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:158",{"_index":2163,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:28",{"_index":2167,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:29",{"_index":2168,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2166,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":2170,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar/player",{"_index":2128,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["tools",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["tooltips",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":2463,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2425,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2409,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1390,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1721,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1393,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":95,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["track.album",{"_index":265,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1591,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1594,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.hash",{"_index":287,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":2052,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":2056,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":2055,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.original",{"_index":2060,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.original",{"_index":2058,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":2054,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.hash",{"_index":2312,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1593,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1592,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackby",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["trackbyalbum",{"_index":1561,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":285,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1562,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":284,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyhash",{"_index":1563,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbyhash(index",{"_index":286,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["tracking",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["trackmetadata",{"_index":737,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["tracks().length",{"_index":1590,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tracks.push(...albumtracks",{"_index":272,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trademark",{"_index":5605,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":5588,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2898,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":662,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":663,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["transitions",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["translate",{"_index":5485,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2787,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["treaty",{"_index":5530,"title":{},"body":{"license.html":{}}}],["tree",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trial",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["trials",{"_index":5245,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":2343,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menu",{"_index":2348,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menudata",{"_index":2345,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.openmenu",{"_index":2347,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["true",{"_index":660,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["ts",{"_index":2016,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["tsconfig",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":3464,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tslint",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["ttry",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1190,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5665,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":745,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["types",{"_index":2018,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["types/node",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["typing",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["ubuntu",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2303,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":324,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["um",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["unconditional",{"_index":5591,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":5540,"title":{},"body":{"license.html":{}}}],["und",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":3018,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["understands",{"_index":5639,"title":{},"body":{"license.html":{}}}],["uneeded",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["unfair",{"_index":5501,"title":{},"body":{"license.html":{}}}],["unicorn",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniquealbums().length",{"_index":1587,"title":{},"body":{"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists().length",{"_index":1585,"title":{},"body":{"components/LibraryComponent.html":{}}}],["unit",{"_index":5783,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":5384,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1402,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1349,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["unsubscribe",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["update.service",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":2304,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["updateinterval",{"_index":2892,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1634,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1646,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updates",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["updateservice",{"_index":357,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":5415,"title":{},"body":{"license.html":{}}}],["url",{"_index":723,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1430,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2823,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":634,"title":{},"body":{"injectables/AudioService.html":{}}}],["url.createobjecturl(new",{"_index":1755,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.original",{"_index":1794,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumb",{"_index":1796,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1782,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":635,"title":{},"body":{"injectables/AudioService.html":{}}}],["urls",{"_index":1754,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["urlsearchparams",{"_index":1503,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["usage",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["useclass",{"_index":5739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2492,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":5731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":925,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":5658,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":5361,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1677,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1678,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":5733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1679,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":3217,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utc",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":5507,"title":{},"body":{"license.html":{}}}],["v0.10.0",{"_index":5269,"title":{},"body":{"changelog.html":{}}}],["v0.11.0",{"_index":5267,"title":{},"body":{"changelog.html":{}}}],["v0.12.0",{"_index":5265,"title":{},"body":{"changelog.html":{}}}],["v0.13.0",{"_index":5263,"title":{},"body":{"changelog.html":{}}}],["v0.14.0",{"_index":5261,"title":{},"body":{"changelog.html":{}}}],["v0.15.0",{"_index":5257,"title":{},"body":{"changelog.html":{}}}],["v0.16.0",{"_index":5254,"title":{},"body":{"changelog.html":{}}}],["v0.17.0",{"_index":5251,"title":{},"body":{"changelog.html":{}}}],["v0.18.0",{"_index":5247,"title":{},"body":{"changelog.html":{}}}],["v0.19.0",{"_index":5240,"title":{},"body":{"changelog.html":{}}}],["v0.20.0",{"_index":5238,"title":{},"body":{"changelog.html":{}}}],["v0.21.0",{"_index":5233,"title":{},"body":{"changelog.html":{}}}],["v0.22.0",{"_index":5231,"title":{},"body":{"changelog.html":{}}}],["v0.23.0",{"_index":5227,"title":{},"body":{"changelog.html":{}}}],["v0.24.0",{"_index":5220,"title":{},"body":{"changelog.html":{}}}],["v0.25.0",{"_index":5218,"title":{},"body":{"changelog.html":{}}}],["v0.28.0",{"_index":5215,"title":{},"body":{"changelog.html":{}}}],["v0.29.0",{"_index":5213,"title":{},"body":{"changelog.html":{}}}],["v0.4.0",{"_index":5281,"title":{},"body":{"changelog.html":{}}}],["v0.5.0",{"_index":5279,"title":{},"body":{"changelog.html":{}}}],["v0.6.0",{"_index":5277,"title":{},"body":{"changelog.html":{}}}],["v0.7.0",{"_index":5275,"title":{},"body":{"changelog.html":{}}}],["v0.8.0",{"_index":5273,"title":{},"body":{"changelog.html":{}}}],["v0.9.0",{"_index":5271,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":5207,"title":{},"body":{"changelog.html":{}}}],["v1.0.1",{"_index":5205,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":5203,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":5201,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":5196,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":5194,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":5190,"title":{},"body":{"changelog.html":{}}}],["v1.10.0",{"_index":5121,"title":{},"body":{"changelog.html":{}}}],["v1.11.0",{"_index":5116,"title":{},"body":{"changelog.html":{}}}],["v1.11.1",{"_index":5111,"title":{},"body":{"changelog.html":{}}}],["v1.11.10",{"_index":5093,"title":{},"body":{"changelog.html":{}}}],["v1.11.11",{"_index":5091,"title":{},"body":{"changelog.html":{}}}],["v1.11.12",{"_index":5089,"title":{},"body":{"changelog.html":{}}}],["v1.11.2",{"_index":5109,"title":{},"body":{"changelog.html":{}}}],["v1.11.3",{"_index":5107,"title":{},"body":{"changelog.html":{}}}],["v1.11.4",{"_index":5105,"title":{},"body":{"changelog.html":{}}}],["v1.11.5",{"_index":5103,"title":{},"body":{"changelog.html":{}}}],["v1.11.6",{"_index":5101,"title":{},"body":{"changelog.html":{}}}],["v1.11.7",{"_index":5099,"title":{},"body":{"changelog.html":{}}}],["v1.11.8",{"_index":5097,"title":{},"body":{"changelog.html":{}}}],["v1.11.9",{"_index":5095,"title":{},"body":{"changelog.html":{}}}],["v1.12.0",{"_index":5087,"title":{},"body":{"changelog.html":{}}}],["v1.13.0",{"_index":5085,"title":{},"body":{"changelog.html":{}}}],["v1.14.0",{"_index":5083,"title":{},"body":{"changelog.html":{}}}],["v1.15.0",{"_index":5081,"title":{},"body":{"changelog.html":{}}}],["v1.16.0",{"_index":5079,"title":{},"body":{"changelog.html":{}}}],["v1.17.0",{"_index":5077,"title":{},"body":{"changelog.html":{}}}],["v1.18.0",{"_index":5075,"title":{},"body":{"changelog.html":{}}}],["v1.19.0",{"_index":5063,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":5186,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":5183,"title":{},"body":{"changelog.html":{}}}],["v1.2.2",{"_index":5180,"title":{},"body":{"changelog.html":{}}}],["v1.3.0",{"_index":5177,"title":{},"body":{"changelog.html":{}}}],["v1.4.0",{"_index":5171,"title":{},"body":{"changelog.html":{}}}],["v1.4.1",{"_index":5165,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":5162,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":5159,"title":{},"body":{"changelog.html":{}}}],["v1.6.1",{"_index":5156,"title":{},"body":{"changelog.html":{}}}],["v1.6.2",{"_index":5150,"title":{},"body":{"changelog.html":{}}}],["v1.6.3",{"_index":5148,"title":{},"body":{"changelog.html":{}}}],["v1.6.4",{"_index":5146,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":5144,"title":{},"body":{"changelog.html":{}}}],["v1.7.1",{"_index":5142,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":5140,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":5136,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":5129,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":5122,"title":{},"body":{"changelog.html":{}}}],["v1.9.1",{"_index":5125,"title":{},"body":{"changelog.html":{}}}],["v10.0.0",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["v10.0.1",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["v10.0.2",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["v10.0.3",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["v10.0.4",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["v10.1.0",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["v10.2.0",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["v10.3.0",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["v10.3.1",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["v10.3.2",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["v11.0.0",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["v11.0.2",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["v11.1.0",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["v11.1.1",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["v11.1.2",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["v11.18.0",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["v11.2.0",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["v11.20.0",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["v11.22.0",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["v11.24.1",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["v11.3.0",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["v11.3.1",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["v11.30.1",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["v11.4.0",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["v11.4.1",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["v11.4.10",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["v11.4.11",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["v11.4.2",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["v11.4.3",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["v11.4.5",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["v11.4.6",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["v11.4.7",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["v11.4.8",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["v11.4.9",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["v11.5.0",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["v11.5.1",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["v11.5.10",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["v11.5.11",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["v11.5.12",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["v11.5.13",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["v11.5.14",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["v11.5.2",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["v11.5.3",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["v11.5.4",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["v11.5.5",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["v11.5.6",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["v11.5.7",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["v11.5.8",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["v11.5.9",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["v12.0.0",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["v12.0.1",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["v12.0.10",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["v12.0.11",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["v12.0.12",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["v12.0.13",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["v12.0.14",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["v12.0.15",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["v12.0.16",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["v12.0.2",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["v12.0.3",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["v12.0.4",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["v12.0.5",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["v12.0.6",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["v12.0.7",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["v12.0.8",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["v12.0.9",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["v12.2.13",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["v12.2.5",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["v12.3.0",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["v12.6.2",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["v12.8.0",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["v12.9.0",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["v13.0.0",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["v13.0.1",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["v13.0.10",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["v13.0.11",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["v13.0.12",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["v13.0.13",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["v13.0.16",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["v13.0.18",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["v13.0.19",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["v13.0.2",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["v13.0.20",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["v13.0.3",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["v13.0.5",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["v13.0.6",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["v13.0.7",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["v13.0.8",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["v13.0.9",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["v13.1.1",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["v13.1.10",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["v13.1.11",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["v13.1.12",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["v13.1.2",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["v13.1.3",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["v13.1.4",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["v13.1.5",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["v13.1.6",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["v13.1.7",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["v13.1.8",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["v13.1.9",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["v13.10.1",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["v13.11.2",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["v13.11.4",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["v13.13.0",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["v13.14.2",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["v13.15.1",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["v13.2.0",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["v13.2.1",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["v13.2.2",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["v13.2.3",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["v13.2.4",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["v13.2.5",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["v13.2.6",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["v13.22.0",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["v13.24.2",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["v13.26.0",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["v13.28.0",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["v13.29.1",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["v13.29.3",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["v13.3.0",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["v13.3.1",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["v13.3.2",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["v13.3.3",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["v13.3.4",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["v13.3.5",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["v13.31.2",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["v13.32.0",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["v13.33.0",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["v13.34.0",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["v13.35.0",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["v13.35.1",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["v13.5.1",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["v13.7.2",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["v13.7.5",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["v14",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["v14.0.0",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["v14.0.1",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["v14.0.10",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["v14.0.11",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["v14.0.12",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["v14.0.13",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["v14.0.2",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["v14.0.3",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["v14.0.4",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["v14.0.5",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["v14.0.6",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["v14.0.7",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["v14.0.8",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["v14.0.9",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["v14.1.0",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["v14.1.1",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["v14.1.10",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["v14.1.11",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["v14.1.12",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["v14.1.13",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["v14.1.14",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["v14.1.15",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["v14.1.16",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["v14.1.17",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["v14.1.18",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["v14.1.19",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["v14.1.2",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["v14.1.20",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["v14.1.23",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["v14.1.3",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["v14.1.4",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["v14.1.5",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["v14.1.6",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["v14.1.7",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["v14.1.8",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["v14.1.9",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["v15",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["v15.0.0",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["v15.0.1",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["v15.0.2",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["v15.0.3",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["v15.0.4",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["v15.0.5",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["v15.0.6",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["v15.0.7",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["v15.0.8",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["v15.0.9",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["v15.1.0",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["v15.1.1",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["v15.1.10",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["v15.1.11",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["v15.1.12",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["v15.1.13",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["v15.1.14",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["v15.1.16",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["v15.1.17",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["v15.1.2",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["v15.1.3",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["v15.1.4",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["v15.1.5",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["v15.1.6",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["v15.1.7",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["v15.1.8",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["v15.1.9",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["v15.4.4",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["v16.0.0",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["v16.0.1",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["v16.0.2",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["v16.0.3",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["v16.0.4",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["v16.0.5",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["v16.0.6",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["v17.0.1",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["v17.0.10",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["v17.0.11",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["v17.0.12",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["v17.0.13",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["v17.0.14",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["v17.0.15",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["v17.0.16",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["v17.0.17",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["v17.0.18",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["v17.0.2",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["v17.0.3",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["v17.0.4",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["v17.0.5",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["v17.0.6",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["v17.0.7",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["v17.0.8",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["v17.0.9",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["v18.0.0",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["v18.0.1",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["v18.1.0",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["v18.1.1",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["v18.16.5",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["v18.2.0",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["v18.2.2",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["v18.2.3",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["v18.2.4",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["v18.2.5",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["v18.2.6",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["v18.2.7",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["v19",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["v19.0.0",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["v19.0.1",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["v19.0.10",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["v19.0.2",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["v19.0.3",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["v19.0.4",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["v19.0.5",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["v19.0.6",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["v19.0.7",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["v19.0.8",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["v19.0.9",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["v19.1.0",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["v19.1.1",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["v19.2.0",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["v19.2.1",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["v19.2.10",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["v19.2.2",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["v19.2.3",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["v19.2.4",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["v19.2.5",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["v19.2.6",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["v19.2.7",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["v19.2.8",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["v19.2.9",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["v19.3.0",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["v19.4.0",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["v19.4.1",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["v19.4.10",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["v19.4.11",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["v19.4.12",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["v19.4.13",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["v19.4.14",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["v19.4.15",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["v19.4.2",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["v19.4.3",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["v19.4.4",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["v19.4.5",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["v19.4.6",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["v19.4.7",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["v19.4.8",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["v19.4.9",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["v19.5.0",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["v19.5.1",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["v19.5.3",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["v19.5.4",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":5061,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":5067,"title":{},"body":{"changelog.html":{}}}],["v2.0.2",{"_index":5065,"title":{},"body":{"changelog.html":{}}}],["v2.5.0",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["v2.5.3",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["v2.6.0",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["v2.6.1",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["v2.6.2",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["v2.6.3",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["v2.7.0",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["v2.8.1",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["v20.0.0",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["v20.0.1",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["v20.1.0",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["v20.1.1",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["v20.1.2",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["v20.1.3",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["v20.1.4",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["v20.2.0",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["v20.2.1",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["v20.2.10",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["v20.2.11",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["v20.2.12",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["v20.2.13",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["v20.2.14",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["v20.2.15",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["v20.2.16",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["v20.2.17",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["v20.2.18",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["v20.2.19",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["v20.2.2",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["v20.2.20",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["v20.2.21",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["v20.2.22",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["v20.2.23",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["v20.2.24",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["v20.2.25",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["v20.2.3",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["v20.2.4",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["v20.2.5",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["v20.2.6",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["v20.2.7",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["v20.2.8",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["v20.2.9",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["v20.8.6",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["v24",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":5059,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":5057,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":5053,"title":{},"body":{"changelog.html":{}}}],["v3.0.3",{"_index":5052,"title":{},"body":{"changelog.html":{}}}],["v3.0.4",{"_index":5050,"title":{},"body":{"changelog.html":{}}}],["v3.0.5",{"_index":5048,"title":{},"body":{"changelog.html":{}}}],["v3.0.6",{"_index":5046,"title":{},"body":{"changelog.html":{}}}],["v3.0.7",{"_index":5044,"title":{},"body":{"changelog.html":{}}}],["v3.0.8",{"_index":5041,"title":{},"body":{"changelog.html":{}}}],["v3.0.9",{"_index":5037,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":5032,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":5026,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":5024,"title":{},"body":{"changelog.html":{}}}],["v3.10.0",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["v3.11.0",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["v3.4.0",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["v3.4.1",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["v3.5.0",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["v3.5.1",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["v3.6.0",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["v3.7.0",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["v3.8.0",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["v3.8.1",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["v3.9.0",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["v4.2.0",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["v4.3.1",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["v4.4.0",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["v4.5.0",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["v4.6.0",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["v4.7.0",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["v5.1.0",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["v5.2.0",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["v5.2.1",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["v5.2.10",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["v5.2.11",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["v5.2.12",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["v5.2.2",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["v5.2.3",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["v5.2.4",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["v5.2.5",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["v5.2.6",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["v5.2.7",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["v5.2.8",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["v5.2.9",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["v5.48.0",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["v6.0.0",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["v6.0.1",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["v6.1.0",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["v6.1.1",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["v6.2.0",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["v6.2.1",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["v6.2.2",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["v6.2.3",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["v6.2.4",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["v6.2.5",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["v6.2.6",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["v6.3.0",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["v6.3.1",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["v6.4.0",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["v6.4.1",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["v6.5.0",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["v6.5.1",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["v6.5.2",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["v6.5.3",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["v6.5.4",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["v6.5.5",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["v6.5.6",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["v6.5.7",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["v6.5.8",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["v6.5.9",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["v6.6.0",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["v6.6.1",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["v6.6.2",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["v6.6.3",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["v6.6.4",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["v6.6.5",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["v6.6.6",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["v6.6.7",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["v6.7.0",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["v6.7.1",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["v6.7.2",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["v6.7.3",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["v6.7.4",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["v7.0.0",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["v7.0.1",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["v7.0.2",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["v7.0.3",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["v7.0.4",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["v7.0.5",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["v7.0.6",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["v7.1.1",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["v7.13.1",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["v7.13.3",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["v7.13.4",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["v8.0.0",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["v8.0.1",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["v8.0.3",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["v8.1.0",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["v8.1.1",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["v8.1.10",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["v8.1.3",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["v8.1.4",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["v8.1.5",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["v8.1.6",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["v8.1.7",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["v8.1.8",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["v8.1.9",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["v8.26.1",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["v8.31.0",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["v8.4.21",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["v8.6.0",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["v9.0.10",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["v9.0.11",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["v9.0.2",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["v9.0.3",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["v9.0.4",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["v9.0.5",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["v9.0.6",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["v9.0.7",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["v9.0.8",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["v9.0.9",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["v9.1.0",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["v9.1.1",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["v9.1.2",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["v9.1.3",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["v9.2.0",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["v9.2.1",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["v9.2.2",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["v9.2.3",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["v9.2.4",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["validfiles",{"_index":2031,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.length",{"_index":2036,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.push",{"_index":2034,"title":{},"body":{"injectables/PlayerService.html":{}}}],["value",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":960,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":670,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value.tostring().slice(0",{"_index":668,"title":{},"body":{"pipes/BandPipe.html":{}}}],["values",{"_index":955,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["var",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":5673,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.scss",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["variant",{"_index":2233,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["various",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verfügbar",{"_index":2659,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":5338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle).then((granted",{"_index":893,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":922,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2644,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2642,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2653,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2646,"title":{},"body":{"injectables/UpdateService.html":{}}}],["versions",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["very",{"_index":1807,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["vi",{"_index":5509,"title":{},"body":{"license.html":{}}}],["via",{"_index":5657,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":831,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["vibrant.from(url).getpalette",{"_index":1842,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1712,"title":{},"body":{"injectables/MetadataService.html":{}}}],["view",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":950,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2415,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('menutrigger",{"_index":2265,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2268,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild>('eqcanvas",{"_index":945,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["viewport",{"_index":2280,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2316,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2333,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2286,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2307,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2339,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2332,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":5524,"title":{},"body":{"license.html":{}}}],["virtual",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1105,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["visible",{"_index":1106,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2315,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2318,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":3212,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["visualizefrequencybars",{"_index":2792,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2797,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2793,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2799,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["visualizer.component.html",{"_index":2672,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2673,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":857,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2270,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":412,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":326,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":322,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizers",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["visualizerworker",{"_index":2816,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2912,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":3202,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["visuals.types",{"_index":2808,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2753,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2750,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2749,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":312,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":415,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2681,"title":{"injectables/VisualsService.html":{}},"body":{"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2784,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":316,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["vm2",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":2232,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["volume",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"components/PlayerToolbarComponent.html":{}}}],["volumeicon",{"_index":2138,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["voluntarily",{"_index":5468,"title":{},"body":{"license.html":{}}}],["vulnerabilities",{"_index":5199,"title":{},"body":{"changelog.html":{}}}],["w9jds/firebase",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":2295,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":5608,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5532,"title":{},"body":{"license.html":{}}}],["waives",{"_index":5541,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2922,"title":{},"body":{"injectables/WakelockService.html":{},"changelog.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2928,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":1986,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":5339,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2038,"title":{},"body":{"injectables/PlayerService.html":{}}}],["warns",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":5395,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["wav",{"_index":1042,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["waveform",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["we're",{"_index":1130,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/PlayerService.html":{}}}],["web",{"_index":3024,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["webmanifest",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["webpack",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["webstorage",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"dependencies.html":{}}}],["webworker",{"_index":5651,"title":{},"body":{"todo.html":{}}}],["well",{"_index":5549,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1799,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2663,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":5444,"title":{},"body":{"license.html":{}}}],["whether",{"_index":5547,"title":{},"body":{"license.html":{}}}],["white",{"_index":1163,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["whitelist",{"_index":5114,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":965,"title":{},"body":{"components/EqualizerComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window",{"_index":2024,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.focus",{"_index":2027,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.showopenfilepicker",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":5425,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":5729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":5727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":5725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1626,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{},"license.html":{}}}],["withviewtransitions",{"_index":5730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":5420,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1424,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1429,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":5717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2981,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":915,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":5408,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":5552,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["writablesignal",{"_index":1170,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["writes",{"_index":2490,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":5662,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":1253,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x",{"_index":989,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y",{"_index":990,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["yield",{"_index":1729,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1156,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zone",{"_index":2811,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["zoneless",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["zu",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["zugewiesen",{"_index":1233,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private router = inject(Router);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  readonly searchTerm = signal('');\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : Number.NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : Number.NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('library'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  templateUrl: './app.component.html',\n  imports: [ShellComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                resetFrequencyBandGain\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nresetFrequencyBandGain(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FREQUENCY_BANDS, FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport type EqualizerGainValues = {\n  [Band in FrequencyBand]: number;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private localStorageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.localStorageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.localStorageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._eqGainNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      this._eqGainNode.disconnect(analyser);\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      this._eqGainNode.disconnect(analyser);\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = structuredClone(this.equalizerGainValues());\n    bandGains[bandFrequency] = gainValue;\n\n    this.localStorageService.store('equalizerGainValues', bandGains);\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  resetFrequencyBandGain(bandFrequency: FrequencyBand) {\n    this.setFrequencyBandGain(bandFrequency, 0);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true,\n  standalone: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand, ...arguments_: unknown[]): string {\n    if (!value) {\n      return '';\n    }\n\n    if (value = 1000 && value = 10_000) {\n      return value.toString().slice(0, 2) + 'K';\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  standalone: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | undefined): string {\n    if (!value) {\n      return '0';\n    }\n    const bitrate = Math.round(value / 1000);\n    return `${bitrate} kb/s`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtImage.html":{"url":"interfaces/CoverArtImage.html","title":"interface - CoverArtImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            thumbnails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnails:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtResponse.html":{"url":"interfaces/CoverArtResponse.html","title":"interface - CoverArtResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            images\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         CoverArtImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverArtImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                                VisualizerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.original)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BitratePipe } from './bitrate.pipe';\nimport { VisualizerComponent } from '../visualizer/visualizer.component';\nimport { PlayerService } from '../player.service';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [TimePipe, BitratePipe, VisualizerComponent]\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n  playerService = inject(PlayerService);\n\n  readonly coverUrl = computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.original);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = playerService.currentlyLoadedTrack();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = playerService.currentlyLoadedTrack();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                            \n                                    Readonly\n                                canvasRef\n                            \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                            \n                                drawEqualizerResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawEqualizerResponse\n                        \n                    \n                \n            \n            \n                \ndrawEqualizerResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild>('eqCanvas')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, effect, ElementRef, inject, viewChild } from '@angular/core';\nimport { AudioService } from '../audio.service';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FREQUENCY_BANDS } from '../player.types';\nimport { ThemeService } from '../../theme/theme.service';\n\n@Component({\n  selector: 'mtb-equalizer',\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  imports: [MatSliderModule],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n  themeService = inject(ThemeService);\n  readonly canvasRef = viewChild>('eqCanvas');\n\n  BANDS = FREQUENCY_BANDS;\n\n  constructor() {\n    // React to changes in equalizer values\n    effect(() => {\n      this.audioService.equalizerGainValues(); // Track the signal\n      this.audioService.baseGain(); // Track gain changes\n      this.drawEqualizerResponse();\n    });\n  }\n\n  displayFunction(value: number): string {\n    const numberValue = value.toFixed(1);\n    return numberValue + ' dB';\n  }\n\n  drawEqualizerResponse(): void {\n    if (!this.canvasRef()) return;\n\n    const canvas = this.canvasRef()!.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw grid lines\n    ctx.strokeStyle = '#dddddd';\n    ctx.lineWidth = 0.2;\n\n    // Horizontal grid lines (every 3dB)\n    for (let db = -12; db  {\n      return ((Math.log10(freq) - Math.log10(minFreq)) / (Math.log10(maxFreq) - Math.log10(minFreq))) * width;\n    };\n\n    // Draw frequency response curve with gain applied\n    ctx.strokeStyle = this.themeService.primaryColor;\n    ctx.lineWidth = 3;\n\n    const freqPoints: { x: number; y: number }[] = [];\n\n    // Start with the lowest frequency\n    freqPoints.push({\n      x: 0,\n      y: height / 2 - ((eqValues[this.BANDS[0]] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw points for each frequency band with gain applied\n    for (const freq of this.BANDS) {\n      const x = getXPos(freq);\n      // Apply gain influence to the curve\n      const y = height / 2 - ((eqValues[freq] + (gainValue - 1) * 12) * height) / 24;\n      freqPoints.push({ x, y });\n    }\n\n    // End with the highest frequency\n    freqPoints.push({\n      x: width,\n      y: height / 2 - ((eqValues[this.BANDS.at(-1)!] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw curve through points\n    ctx.beginPath();\n    ctx.moveTo(freqPoints[0].x, freqPoints[0].y);\n\n    for (let i = 0; i  freq >= minFreq && freq = 1000 ? `${freq / 1000}k` : `${freq}`;\n      ctx.fillText(label, x, height - 5);\n    }\n\n    // Display gain value\n    ctx.fillStyle = this.themeService.accentColor;\n    ctx.font = 'bold 12px Arial';\n    ctx.textAlign = 'right';\n    ctx.fillText(`Gain: ${gainValue.toFixed(1)}x`, width - 10, 20);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  @for (band of BANDS; track band; let i = $index) {\n    \n      \n        {{ band | band }}-->\n        \n      \n    \n  }\n\n  \n    \n      GAIN-->\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          @for (band of BANDS; track band; let i = $index) {                  {{ band | band }}-->                    }            GAIN-->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                fileHandlesDropped\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileHandlesDropped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n  readonly fileHandlesDropped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n\n    // Try to get file handles first\n    if (event.dataTransfer?.items && 'getAsFileSystemHandle' in event.dataTransfer.items[0]) {\n      try {\n        const fileHandles: FileSystemFileHandle[] = [];\n        const promises: Promise[] = [];\n\n        for (const item of Array.from(event.dataTransfer.items)) {\n          const promise = (item as any).getAsFileSystemHandle().then((handle: any) => {\n            if (handle && handle.kind === 'file') {\n              fileHandles.push(handle);\n            }\n          });\n          promises.push(promise);\n        }\n\n        // When all promises are resolved, emit the file handles\n        Promise.all(promises)\n          .then(() => {\n            if (fileHandles.length > 0) {\n              this.fileHandlesDropped.emit(fileHandles);\n            } else {\n              // Fall back to regular files if no file handles were obtained\n              this.handleFileFallback(event);\n            }\n          })\n          .catch(() => {\n            // Fall back to regular files on error\n            this.handleFileFallback(event);\n          });\n\n        return; // Exit early - we're handling with file handles\n      } catch (error) {\n        // Fall through to file fallback\n        console.warn('File System Access API failed:', error);\n      }\n    }\n\n    // Fallback to regular files\n    this.handleFileFallback(event);\n  }\n\n  private handleFileFallback(event: DragEvent) {\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (const file of Array.from(droppedFiles)) {\n      if (file && this.allowedTypes().includes(file.type)) {\n        files.push(file);\n      }\n    }\n    this.filesDroped.emit(files);\n  }\n}\n\n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\nimport { WritableSignal } from '@angular/core';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle: WritableSignal;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images[images.length - 1]?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(smallImage),\n      original: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService implements FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  private files: File[] = [];\n\n  constructor() {\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  readonly currentFolderHandle = signal(undefined);\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            NgArrayPipesModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatHint\n                            FormsModule\n                            MatFormField\n                            MatInput\n                            MatPrefix\n                            MatSuffix\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                filteredBySerchterm\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Readonly\n                                selectedArtist\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:223\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:244\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:240\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:248\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredBySerchterm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedArtist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : Number.NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : Number.NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private router = inject(Router);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  readonly searchTerm = signal('');\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : Number.NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : Number.NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('library'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        ALL ({{ uniqueArtists().length }})\n        \n          \n            \n           \n      \n        {{ artist }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        ALL ({{ uniqueAlbums().length }})\n        \n          \n            \n           \n      \n        \n          @if (album && album.coverUrl) {\n            \n          }\n        \n        {{ album.name }}{{ album.year ? ' | ' + album.year : '' }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        ALL ({{ tracks().length }})\n        \n          \n            \n          \n        \n      \n      \n        \n          @if (track && track.coverUrl) {\n            \n          }\n        \n        @if (selectedAlbum()) {\n          {{ track.track ? track.track + '. ' : '' }}{{ track.title || track.fileName }}\n        } @else {\n          {{ track.title || track.fileName }}\n        }\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ tracks().length }} entries\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ALL ({{ uniqueArtists().length }})                                                       {{ artist }}                                                                          Add to Playlist                          ALL ({{ uniqueAlbums().length }})                                                                 @if (album && album.coverUrl) {                      }                {{ album.name }}{{ album.year ? \\' | \\' + album.year : \\'\\' }}                                                                          Add to Playlist                          ALL ({{ tracks().length }})                                                                              @if (track && track.coverUrl) {                      }                @if (selectedAlbum()) {          {{ track.track ? track.track + \\'. \\' : \\'\\' }}{{ track.title || track.fileName }}        } @else {          {{ track.title || track.fileName }}        }                                                                          Add to Playlist            @if (searchTerm()) {                }  {{ tracks().length }} entries'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\nimport SparkMD5 from 'spark-md5';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    // console.time('hash');\n    const hash = await generateFileHash(fileData.file);\n    // console.timeEnd('hash');\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('library', hash));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumb === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    // console.time('id3tags');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n    // console.timeEnd('id3tags');\n    if (!tags) {\n      // if no tags\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverPicture | undefined;\n\n    if (this.useWebMetainfos()) {\n      if (tags.artist && tags.album) {\n        // console.time('webcover');\n        coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n        if (!coverUrls) {\n          coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n        }\n        // console.timeEnd('webcover');\n      } else {\n        // console.warn('Missing tags for lookup');\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n\n    if (coverUrls?.original) {\n      // console.time('vibrant');\n      palette = await extractColorsWithNodeVibrant(coverUrls.original);\n      // console.timeEnd('vibrant');\n    } else if (tags.picture) {\n      // console.time('vibrant');\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithNodeVibrant(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n      // console.timeEnd('vibrant');\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      hash: hash,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumb: this.PLACEHOLDER_URL, original: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('library', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.original === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl.original.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.original);\n      }\n      if (meta.coverUrl.thumb.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumb);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nasync function generateFileHash(file: File): Promise {\n  const spark = new SparkMD5.ArrayBuffer();\n  const fileSize = file.size;\n\n  // For very small files, hash the entire content\n  if (fileSize  1 * 1024 * 1024) {\n    const middlePos = Math.floor(fileSize / 2) - Math.floor(chunkSize / 2);\n    const middleChunk = await file.slice(middlePos, middlePos + chunkSize).arrayBuffer();\n    spark.append(middleChunk);\n  }\n\n  // For files larger than 8MB, add quarter and three-quarter samples\n  if (fileSize > 8 * 1024 * 1024) {\n    const quarterPos = Math.floor(fileSize * 0.25);\n    const quarterChunk = await file.slice(quarterPos, quarterPos + chunkSize).arrayBuffer();\n    spark.append(quarterChunk);\n\n    const threeQuarterPos = Math.floor(fileSize * 0.75);\n    const threeQuarterChunk = await file.slice(threeQuarterPos, threeQuarterPos + chunkSize).arrayBuffer();\n    spark.append(threeQuarterChunk);\n  }\n\n  // Last chunk - often contains important metadata in audio files\n  const endChunk = await file.slice(Math.max(0, fileSize - chunkSize), fileSize).arrayBuffer();\n  spark.append(endChunk);\n\n  return spark.end();\n}\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  try {\n    const palette = await Vibrant.from(url).getPalette();\n    return {\n      vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n      darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n      lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n      muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n      darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n      lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n    };\n  } catch (error) {\n    console.error('Error extracting colors with Vibrant:', error);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  templateUrl: './metadata-settings.component.html',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule]\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('library').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzReleaseGroup.html":{"url":"interfaces/MusicbrainzReleaseGroup.html","title":"interface - MusicbrainzReleaseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzReleaseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            first-release-date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first-release-date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first-release-date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzResponse.html":{"url":"interfaces/MusicbrainzResponse.html","title":"interface - MusicbrainzResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            release-groups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release-groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release-groups:         MusicbrainzReleaseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MusicbrainzReleaseGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image);\n\n      // Use large thumbnail or fall back to the full image\n      const original = ensureHttps(coverImage.thumbnails.large || coverImage.image);\n\n      return { thumb, original };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [PlaylistComponent, MatButtonModule, MatIconModule, CoverDisplayComponent, MatToolbarModule, MatTooltipModule, MatSliderModule, MatMenuModule]\n})\nexport default class PlayerComponent implements OnInit {\n  private titleService = inject(TitleService);\n  private fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                playTrackByHash\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                removeTrackFromPlaylist\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrackByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrackByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:254\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:236\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTrackFromPlaylist\n                        \n                    \n                \n            \n            \n                \nremoveTrackFromPlaylist(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:298\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:302\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:281\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:335\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  readonly durationSeconds = computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Focus the window first to ensure we're the active window\n        window.focus();\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n\n        const validFiles: FileData[] = [];\n\n        for (const fileHandle of launchParameters.files) {\n          try {\n            const file = await fileHandle.getFile();\n            if (ALLOWED_MIMETYPES.includes(file.type)) {\n              validFiles.push({ file, fileHandle });\n            }\n          } catch (error) {\n            console.error('Error processing file:', error);\n          }\n        }\n\n        if (validFiles.length) {\n          await this.addFilesToPlaylist(...validFiles);\n          // If you want to play the first file immediately\n          // if (validFiles.length && this.currentPlaylist().length) {\n          //   const newTrack = this.currentPlaylist()[this.currentPlaylist().length - validFiles.length];\n          //   await this.playTrack(newTrack);\n          // }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.original ? [{ src: track.metadata.coverUrl.original, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.hash === song.metadata?.hash)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  removeTrackFromPlaylist(track: Track) {\n    // If the removed track is currently loaded, stop playback\n    if (this.currentlyLoadedTrack() === track) {\n      void this.stop();\n    }\n\n    // If the removed track is currently selected, deselect it\n    if (this.selectedTrack() === track) {\n      this.selectedTrack.set(undefined);\n    }\n    // Update the playlist by filtering out the specified track\n    this.currentPlaylist.update((playlist) => playlist.filter((t) => t !== track));\n  }\n\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async playTrackByHash(hash: string) {\n    const playlist = this.currentPlaylist();\n\n    const track = playlist.find((playlistTrack) => playlistTrack.metadata?.hash === hash);\n    if (track) {\n      await this.playTrack(track);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerToolbarComponent.html":{"url":"components/PlayerToolbarComponent.html","title":"component - PlayerToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-toolbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            MatIcon\n                            MatIconButton\n                            MatMenu\n                            MatSlider\n                            MatSliderThumb\n                            MatToolbar\n                            MatTooltip\n                            TimePipe\n                            MatMenuTrigger\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player-toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                fileLoaderService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadLastDirectory\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showFilePickerAndLoadFiles\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLastDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLastDirectory()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showFilePickerAndLoadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    showFilePickerAndLoadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileLoaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileLoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatMenu, MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { TimePipe } from '../time.pipe';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { PlayerService } from '../player.service';\nimport { AudioService } from '../audio.service';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { GamepadAxes, GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { HotkeysService } from '../../services/hotkeys/hotkeys.service';\nimport { FileLoaderService } from '../file-loader-service/file-loader.service.abstract';\n\n@Component({\n  selector: 'player-toolbar',\n  imports: [CommonModule, MatIcon, MatIconButton, MatMenu, MatSlider, MatSliderThumb, MatToolbar, MatTooltip, TimePipe, MatMenuTrigger, MatMenuModule],\n  templateUrl: './player-toolbar.component.html',\n  styleUrl: './player-toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayerToolbarComponent implements OnInit, OnDestroy {\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  readonly volumeIcon = computed(() => this.getVolumeIconForLevel(this.audioService.volume()));\n\n  ngOnInit() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showFilePickerAndLoadFiles());\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol \n    \n\n    \n        \n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n    \n      \n      Load folder/files...\n    \n    @if (fileLoaderService.currentFolderHandle()) {\n      \n        \n        Load last directory\n      \n    }\n  \n\n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (audioService.isPlaying()) {          } @else {          }                                                    Load folder/files...        @if (fileLoaderService.currentFolderHandle()) {                      Load last directory          }      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                menuTrigger\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                onContextMenu\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContextMenu\n                        \n                    \n                \n            \n            \n                \nonContextMenu(event: MouseEvent, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        menuTrigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('menuTrigger')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'mtb-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    FormsModule,\n    MatMenuModule\n  ]\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  private destroRef = inject(DestroyRef);\n\n  readonly menuTrigger = viewChild('menuTrigger');\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.playerService.currentPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.playerService.currentPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.playerService.currentPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.hash === currentTrack.metadata?.hash);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (\n        (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash\n      );\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByHash(index: number, song: Track): string {\n    return song.metadata.hash;\n  }\n\n  onContextMenu(event: MouseEvent, song: Track): void {\n    event.preventDefault();\n    const trigger = this.menuTrigger();\n    if (!trigger) return;\n    trigger.menuData = { song: song };\n\n    // Open with position\n    trigger.openMenu();\n\n    // set position\n    if (trigger.menu) {\n      // Forcefully reset the menu position after it's opened\n      setTimeout(() => {\n        const overlayRef = document.querySelector('.cdk-overlay-pane:last-child') as HTMLElement;\n        if (overlayRef) {\n          overlayRef.style.position = 'absolute';\n          overlayRef.style.left = `${event.clientX}px`;\n          overlayRef.style.top = `${event.clientY}px`;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying) {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n\n\n  \n\n\n\n\n  \n    \n      \n      Remove from playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying) {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }                          Remove from playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverPicture.html":{"url":"interfaces/RemoteCoverPicture.html","title":"interface - RemoteCoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            original\n                                        \n                                \n                                \n                                        \n                                            thumb\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        original\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumb:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent]\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                                FileDropOverlayComponent\n                                PlayerToolbarComponent\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                    Async\n                                onFileHandlesDropped\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFileHandlesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFileHandlesDropped(files: FileSystemFileHandle[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileSystemFileHandle[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { PlayerService } from '../player/player.service';\nimport { ALLOWED_MIMETYPES, FileData } from '../player/file-loader-service/file-loader.helpers';\nimport { PlayerToolbarComponent } from '../player/player-toolbar/player-toolbar.component';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../player/metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-shell',\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss',\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterOutlet,\n    FileDropOverlayComponent,\n    PlayerToolbarComponent,\n    MatProgressBar\n  ]\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  private router = inject(Router);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  playerService = inject(PlayerService);\n  metadataService = inject(MetadataService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  async onFileHandlesDropped(files: FileSystemFileHandle[]) {\n    const fileData: FileData[] = [];\n    for (const fileHandle of files) {\n      const file = await fileHandle.getFile();\n      fileData.push({ file, fileHandle });\n    }\n\n    return this.playerService.addFilesToPlaylist(...fileData);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n\n      @if (loaderService.isLoading()) {\n        \n      }\n\n      \n\n      @let currentTrack = playerService.currentlyLoadedTrack();\n      {{ currentTrack?.metadata?.artist ? currentTrack?.metadata?.artist + ' - ' : '' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n    \n\n    @if (metadataService.processionPercent() \n    }\n    \n\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }            @let currentTrack = playerService.currentlyLoadedTrack();      {{ currentTrack?.metadata?.artist ? currentTrack?.metadata?.artist + \\' - \\' : \\'\\' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}        @if (metadataService.processionPercent()     }              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  templateUrl: './storage-settings.component.html',\n  imports: [MatCardModule, MatButtonModule]\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accentColor\n                            \n                            \n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                primaryColor\n                            \n                            \n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FALLBACK_ACCENT_COLOR\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FALLBACK_PRIMARY_COLOR\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { TinyColor } from '@thebespokepixel/es-tinycolor';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Color } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  primaryColor = FALLBACK_PRIMARY_COLOR;\n\n  accentColor = FALLBACK_ACCENT_COLOR;\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  primaryColorPalette: Color[] = [];\n  accentColorPalette: Color[] = [];\n\n  initializeTheme() {\n    this.setOverlayClass();\n    this.setPrimaryColor(this.primaryColor);\n    this.setAccentColor(this.accentColor);\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n    this.localStorageService.store('darkMode', darkMode);\n    this.setOverlayClass();\n  }\n\n  setColors(colors: ColorConfig) {\n    this.setPrimaryColor(colors.mainColor);\n    this.setAccentColor(colors.peakColor);\n  }\n\n  private setPrimaryColor(color?: string) {\n    this.primaryColor = color || FALLBACK_PRIMARY_COLOR;\n    this.primaryColorPalette = this.computeColors(this.primaryColor);\n\n    for (const clr of this.primaryColorPalette) {\n      document.documentElement.style.setProperty(`--theme-primary-${clr.name}`, clr.hex);\n    }\n\n    this.meta.addTag({ name: 'theme-color', content: this.primaryColor }, true);\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor });\n  }\n\n  private setAccentColor(color?: string) {\n    this.accentColor = color || FALLBACK_ACCENT_COLOR;\n    this.accentColorPalette = this.computeColors(this.accentColor);\n\n    for (const clr of this.accentColorPalette) {\n      document.documentElement.style.setProperty(`--theme-accent-${clr.name}`, clr.hex);\n    }\n  }\n\n  private setOverlayClass() {\n    if (this.darkMode()) {\n      document.documentElement.style.setProperty('--app-color-scheme', 'dark');\n    } else {\n      document.documentElement.style.setProperty('--app-color-scheme', 'light');\n    }\n  }\n\n  private computeColors(hex: string): Color[] {\n    return [\n      this.getColorObject(new TinyColor(hex).lighten(55), '0'),\n      this.getColorObject(new TinyColor(hex).lighten(45), '10'),\n      this.getColorObject(new TinyColor(hex).lighten(35), '20'),\n      this.getColorObject(new TinyColor(hex).lighten(30), '25'),\n      this.getColorObject(new TinyColor(hex).lighten(25), '30'),\n      this.getColorObject(new TinyColor(hex).lighten(20), '35'),\n      this.getColorObject(new TinyColor(hex).lighten(15), '40'),\n      this.getColorObject(new TinyColor(hex), '50'),\n      this.getColorObject(new TinyColor(hex).darken(5), '60'),\n      this.getColorObject(new TinyColor(hex).darken(10), '70'),\n      this.getColorObject(new TinyColor(hex).darken(15), '80'),\n      this.getColorObject(new TinyColor(hex).darken(18), '90'),\n      this.getColorObject(new TinyColor(hex).darken(21), '95'),\n      this.getColorObject(new TinyColor(hex).darken(24), '98'),\n      this.getColorObject(new TinyColor(hex).darken(27), '99'),\n      this.getColorObject(new TinyColor(hex).darken(30), '100')\n    ];\n  }\n\n  private getColorObject(value: TinyColor, name: string): Color {\n    const color = new TinyColor(value);\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name: name,\n      hex: color.toHexString(false),\n      darkContrast: color.getBrightness() > lightnessLimit\n      // darkContrast: c.isLight()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  templateUrl: './theme-settings.component.html',\n  imports: [MatCardModule, MatCheckboxModule]\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true,\n  standalone: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule]\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]',\n  standalone: true\n})\nexport class VisualsDirective implements OnDestroy {\n  // private zone = inject(NgZone);\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\nv20.2.25\n\nfeat: update library component to display counts of unique artists, albums, and tracks; fix directory handle update in file loader, sort artists alphabetically e831ba8\n\nv20.2.24\n\n29 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v14 #555\nfeat: enhance color extraction function with error handling 5d555b4\nRelease 20.2.24 3f1a89d\n\nv20.2.23\n\n28 March 2025\n\n\nfeat: refactor track metadata handling and update database configuration, du real file hasing with sparkmd5, remove angular animations de61df5\nRelease 20.2.23 7fbbb95\n\nv20.2.22\n\n23 March 2025\n\n\nfeat: eq canvas working 875f9d3\nfeat: update equalizer frequency bands and enhance UI interactions cc5aab7\nfeat: reposition search input in layout and restore its visibility f44b305\n\nv20.2.21\n\n23 March 2025\n\n\nchore(deps): update dependency angular-eslint to v19.3.0 #550\nRelease 20.2.21 03062a3\nfeat: remove init from file loader service. use signal for current dir handle, only show reload entry when dirHandle exists 0e3c35d\nfeat: refactor cover display to use player service for current track and cover URL, show artist and title on toolbar on the right side 9bb71cc\n\nv20.2.20\n\n23 March 2025\n\n\nfeat: add context menu to remove track from playlist 713322f\nRelease 20.2.20 bfccd74\n\nv20.2.19\n\n23 March 2025\n\n\nfix: update audio service connections to add analyser after eq, get rid of component contents 123835c\nfix: move reload button to menu of load icon button 6655a9c\nRelease 20.2.19 af96dfb\n\nv20.2.18\n\n23 March 2025\n\n\nfix: put metadata progress bar under toolbar 51dfdf7\nRelease 20.2.18 b63676f\nfix: adjust launch handler placement in web manifest faec05d\n\nv20.2.17\n\n23 March 2025\n\n\nRelease 20.2.17 9644dde\nfix: correct formatting of launch handler in web manifest aff4dea\n\nv20.2.16\n\n23 March 2025\n\n\nfix: update launch handler to focus existing client mode and improve file handling 2aee517\nRelease 20.2.16 b6a809a\n\nv20.2.15\n\n23 March 2025\n\n\nRelease 20.2.15 4452ab9\nfeat: add launch handler for existing client mode in web manifest 7579ea9\n\nv20.2.14\n\n23 March 2025\n\n\nfeat: get FileSystemFileHandles for dropped files if possible falling back to File usage, fix launch with app by changing object 93f4474\nRelease 20.2.14 ff39494\nfeat: update font styling in player toolbar and add standard font class 36e8709\n\nv20.2.13\n\n22 March 2025\n\n\nfeat: fix grid lines in library 4aa52ed\nRelease 20.2.13 da978b1\n\nv20.2.12\n\n22 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.35.1 #549\nRelease 20.2.12 0885ef3\nfeat: refactor player component and extract toolbar into a separate component 7e11361\nfeat: enhance layout and styling of player and library components, player toolbar in shell, fixed layouts 9fb859e\n\nv20.2.11\n\n22 March 2025\n\n\nRelease 20.2.11 be7f8fc\nfeat: update track playback method to play by CRC instead of last track in playlist 862a41d\n\nv20.2.10\n\n22 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.35.0 #547\nchore: remove search functionality from playlist and add it to library 99126c0\nfeat: enhance library and playlist components with improved track selection and rendering 7667c50\nRelease 20.2.10 b8a2ac7\n\nv20.2.9\n\n22 March 2025\n\n\nRelease 20.2.9 d933c1e\nchore: update Angular and related dependencies to latest versions 9ea103a\n\nv20.2.8\n\n17 March 2025\n\n\nfeat: refactor progress tracking to use MetadataService and improve track rendering with trackBy functions, use generator for addFilesToLibrary ea0dd16\nfix: fix settings persistence, support etag embedded cover pictures again 5effed4\nfeat: update cover display to use background image for album covers and improve styling 7fa33e8\n\nv20.2.7\n\n16 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.34.0 #541\nfeat: add progress bar for file processing and enhance artist/album display in library, add an add all artist button, show track number and year in library, remove console warns, remember filename in metadata 7353f84\nRelease 20.2.7 dfa400c\n\nv20.2.6\n\n15 March 2025\n\n\nRelease 20.2.6 34663be\nfix: correct formatting in .npmrc for registry configuration f37d715\n\nv20.2.5\n\n15 March 2025\n\n\nRelease 20.2.5 452f074\n\nv20.2.4\n\n15 March 2025\n\n\nRelease 20.2.4 7d3846a\n\nv20.2.3\n\n15 March 2025\n\n\nRelease 20.2.3 0107dc5\nfeat: enhance file handling by introducing FileData interface and updating related services, save file handles in indexed db, fix library and add context menu to tracks c3bb2d1\nfeat: implement virtual scrolling for artists, albums, and tracks; add menus for album and track actions, add (All) option, doubleclick adds and navigates eb5338b\n\nv20.2.2\n\n15 March 2025\n\n\nchore(deps): update Angular and related dependencies to latest versions f0442a7\nRelease 20.2.2 f3f93f6\n\nv20.2.1\n\n11 March 2025\n\n\nfix(deps): update dependency music-metadata to v11.0.2 #540\nchore(deps): update typescript-eslint monorepo to v8.26.1 #529\nRelease 20.2.1 c6dff5e\n\nv20.2.0\n\n11 March 2025\n\n\nfeat: scroll to track when playing starts and its not in view b9445d4\nfeat: remove polyfills from project configuration a0517fe\nfeat: add search functionality to playlist with input field and filtering logic b925747\n\nv20.1.4\n\n11 March 2025\n\n\nrefactor: replace BaseSubscribingClass with DestroyRef 72be3d3\nRelease 20.1.4 5e77b33\nfeat: add view transitions to router configuration b2dcbb8\n\nv20.1.3\n\n9 March 2025\n\n\nfeat: enhance ID3 tags extraction and improve metadata handling, refactorings a11eb42\nRelease 20.1.3 305aec6\n\nv20.1.2\n\n9 March 2025\n\n\nRelease 20.1.2 ba13cfe\nrefactor: change to zoneless change detection 3f668a5\n\nv20.1.1\n\n9 March 2025\n\n\nfeat: update typography settings and optimize font loading in HTML 722901c\nRelease 20.1.1 858ff56\n\nv20.1.0\n\n9 March 2025\n\n\nRelease 20.1.0 d78443f\nfeat: refactor cover and playlist components for improved performance, performance hack für visuals f1580e8\nchore: update dependencies in package.json and package-lock.json 9e95c2d\n\nv20.0.1\n\n9 March 2025\n\n\nfeat: updated to material 3 theme, fixed dark mode handling 9b0ad09\nfeat: implement circular waveform visualization and initialize bark scale mapping 46e627b\nfeat: optimize image loading in cover and playlist components using NgOptimizedImage 79c83aa\n\nv20.0.0\n\n8 March 2025\n\n\nfeat: enhance ESLint configuration with Angular rules and TypeScript support 2b942c4\nRelease 20.0.0 d641392\nfeat: update ESLint configuration with TypeScript and SonarJS support, add custom rule overrides ef11066\n\nv19.5.4\n\n8 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.33.0 #539\nRelease 19.5.4 86a63af\nchore: update dependencies and add eslint packages c9dcf09\nfeat:  nearly complete signal refactoring also fixing long standing bugs f3a3520\n\nv19.5.3\n\n2 March 2025\n\n\nfeat: use @let syntax in templates, better VisualizerOptions types b7bb801\nRelease 19.5.3 eac8dd6\n\nv19.5.1\n\n2 March 2025\n\n\nRelease 19.5.1 8ebff84\nfeat: add circular visualization modes for frequency bars and oscilloscope 4e27dea\nfix: make gamepad and wakelock services optional to improve compatibility bb8466d\n\nv19.5.0\n\n2 March 2025\n\n\nRelease 19.5.0 3f2c562\nfix: fix file drop overlay not working as expected 94b7001\nfix: add postcss-html dependency to package.json and package-lock.json 85d2a14\n\nv19.4.15\n\n2 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.32.0 #532\nchore: update dependencies to latest versions b0d0fe4\nRelease 19.4.15 a2b1db1\nfix: update HTML components to self-closing tags 7785053\n\nv19.4.14\n\n27 February 2025\n\n\nchore: update Angular and related dependencies to version 19.2.x d8a2bf9\nRelease 19.4.14 0c889a3\n\nv19.4.13\n\n24 February 2025\n\n\nchore(deps): update actions/upload-artifact action to v4 #527\nRelease 19.4.13 9fb4192\nfix: eslint unicorn autofixes f154aed\nfeat: enhance visuals worker by optimizing data structures and pre-calculating arrays fee270f\n\nv19.4.12\n\n24 February 2025\n\n\nRelease 19.4.12 6c63788\nrefactor: remove unused dependencies 12a71dd\n\nv19.4.11\n\n23 February 2025\n\n\nRelease 19.4.11 d505863\nfix: update ESLint configuration inputs and production exclusions 6bfb6ba\n\nv19.4.10\n\n23 February 2025\n\n\nRelease 19.4.10 17e4083\n\nv19.4.9\n\n23 February 2025\n\n\nRelease 19.4.9 cf13446\nrefactor: us prive functions instead of modules c31aaa6\n\nv19.4.8\n\n23 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.31.2 #522\nrefactor: update ESLint configuration to use ES module syntax and cleanup deps 4dbf4b8\nRelease 19.4.8 0f45127\nchore: update project configuration and add dotenv-cli dependency 063d395\n\nv19.4.7\n\n23 February 2025\n\n\nRelease 19.4.7 4d9ca69\nchore: update HTML templates and ESLint configuration for consistency 33bb6c8\n\nv19.4.6\n\n23 February 2025\n\n\nchore(deps): update Angular and ESLint dependencies to latest versions 00d5b5e\nRelease 19.4.6 ab5a0f8\n\nv19.4.5\n\n4 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.3 #511\nchore(deps): update @swc/core, @types/node, and @typescript-eslint packages to latest versions 4df45ed\nRelease 19.4.5 f52095f\n\nv19.4.4\n\n2 February 2025\n\n\nchore: deps 76ace70\nRelease 19.4.4 072caca\n\nv19.4.3\n\n27 January 2025\n\n\nchore: deps a04aa39\nRelease 19.4.3 e844d5d\n\nv19.4.2\n\n24 January 2025\n\n\nchore: deps d50fcd7\nRelease 19.4.2 2e2cf66\n\nv19.4.1\n\n21 January 2025\n\n\nchore: deps c3062ed\nRelease 19.4.1 e96ef56\nchore: mise 7b8cdeb\n\nv19.4.0\n\n17 January 2025\n\n\nchore: deps 37fa04d\nRelease 19.4.0 155e1fd\nchore: readme, mise, deps 726da93\n\nv19.3.0\n\n14 January 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.1 #483\nchore: update to latest node-vibrant f306ca1\nRelease 19.3.0 ca87d69\n\nv19.2.10\n\n11 January 2025\n\n\nchore: deps a280f97\nRelease 19.2.10 15dded8\n\nv19.2.9\n\n3 January 2025\n\n\nRelease 19.2.9 bd67275\n\nv19.2.8\n\n14 December 2024\n\n\nRelease 19.2.8 af0ef42\n\nv19.2.7\n\n14 December 2024\n\n\nRelease 19.2.7 7d9d809\n\nv19.2.6\n\n11 December 2024\n\n\nchore: deps c042ae8\nchore: updated config to latest nx defaults 0a9aedc\nchore: updated config to latest nx defaults a555517\n\nv19.2.5\n\n7 December 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.28.0 #473\nRevert \"fix: disable npm caching\" f908dd2\nfix: disable npm caching 1a33b93\nRelease 19.2.5 4a42a18\n\nv19.2.4\n\n7 December 2024\n\n\nchore: deps 1a65661\nRelease 19.2.4 a19a09f\n\nv19.2.3\n\n21 November 2024\n\n\nRelease 19.2.3 dc45fe1\nfeat: migrate to application executor 0325a08\n\nv19.2.2\n\n21 November 2024\n\n\nfix: stylelint fixes 2500235\nRelease 19.2.2 b416bff\n\nv19.2.1\n\n21 November 2024\n\n\nRelease 19.2.1 8cab1e2\nfix: migrate jest and eslint to inferred plugins ee8b31b\n\nv19.2.0\n\n21 November 2024\n\n\nchore: input signal migration f8cbc65\nRelease 19.2.0 c363f4e\nfix: pass sampleRate 56a3899\n\nv19.1.1\n\n21 November 2024\n\n\nchore(deps): update angular monorepo to v19 #466\nchore(deps): update w9jds/firebase-action action to v13.26.0 #465\nchore(deps): update angularmaterial monorepo to v19 #467\nchore(config): migrate config renovate.json #468\nchore: use ng-packgr-lite builds, fix jest-preset-angular config b599685\nfix: revert ng-packgr temporarily bb34f11\nRelease 19.1.1 ada6807\n\nv19.1.0\n\n21 November 2024\n\n\nchore: ng 19 0ba1f5d\nRelease 19.1.0 d2765b8\nchore: remove console time 7b38580\n\nv19.0.10\n\n9 November 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.24.2 #460\nfix(deps): update dependency tslib to v2.8.1 #457\nRelease 19.0.10 1333d05\n\nv19.0.9\n\n9 November 2024\n\n\nchore: updates e42b61f\nRelease 19.0.9 fc998b4\n\nv19.0.8\n\n15 October 2024\n\n\nRelease 19.0.8 e4b565b\nfix: do webpack build again 10bf971\n\nv19.0.7\n\n15 October 2024\n\n\nRelease 19.0.7 308bd9f\nfix: use browser-esbuild executor fe4ebfa\n\nv19.0.6\n\n15 October 2024\n\n\nRelease 19.0.6 953bf76\nfix: use browser-esbuild executor a12f9c3\n\nv19.0.5\n\n15 October 2024\n\n\nfix(deps): update dependency tslib to v2.7.0 #450\nchore(deps): update dependency ubuntu to v24 #455\nchore(deps): update w9jds/firebase-action action to v13.22.0 #448\nRelease 19.0.5 592ac3b\n\nv19.0.4\n\n15 October 2024\n\n\nRelease 19.0.4 27acba5\nchore: eslint update (config todo) 97ccbb6\n\nv19.0.3\n\n15 October 2024\n\n\nchore: migrate to inject() 43a40a4\nfix: removed unused angular imports a0e7ce7\nRelease 19.0.3 972b1ee\n\nv19.0.2\n\n15 October 2024\n\n\nRelease 19.0.2 b8ad144\n\nv19.0.1\n\n15 October 2024\n\n\nRelease 19.0.1 7528cd4\n\nv19.0.0\n\n15 October 2024\n\n\nRelease 19.0.0 2bb5430\n\nv18.2.7\n\n15 October 2024\n\n\nchore(deps): updates ad57b9c\nRelease 18.2.7 8448134\nchange to application executor e2e1eb4\n\nv18.2.6\n\n26 August 2024\n\n\ndeps 0174ddf\nRelease 18.2.6 f0ae911\n\nv18.2.5\n\n15 August 2024\n\n\nsignals for coverdisplay, add item to playlist on by one d489b64\nRelease 18.2.5 4a66bde\n\nv18.2.4\n\n15 August 2024\n\n\nRelease 18.2.4 bbda480\nfix: big layout 8d61f2e\n\nv18.2.3\n\n15 August 2024\n\n\nchore: nx update ec1f94a\nRelease 18.2.3 72fa061\n\nv18.2.2\n\n15 August 2024\n\n\nanalyze and report esbuild bundles d597302\nRelease 18.2.2 681d4cd\nanalyze and report esbuild bundles 8626722\n\nv18.2.0\n\n15 August 2024\n\n\nfix test css class, select first in playlist after load when none selected 7a838a9\nRelease 18.2.0 38d27f1\n\nv18.1.1\n\n15 August 2024\n\n\nfeat: better axis handling for gamepad 4d47689\nmore signalös 019de24\nRelease 18.1.1 0f8e394\n\nv18.1.0\n\n15 August 2024\n\n\nRelease 18.1.0 ff778a5\nfeat: removed mobx, use signals for many things 5824006\n\nv18.0.1\n\n15 August 2024\n\n\nchore(deps): update, import types with import type e252172\nchore(deps): update e7aa58d\nRelease 18.0.1 7560dfa\n\nv18.0.0\n\n10 August 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.15.1 #438\nRelease 18.0.0 0858a77\nfix(eslint): older unused imports plugin cdb5380\n\nv17.0.18\n\n10 August 2024\n\n\nchore(deps): update 6878f22\nRelease 17.0.17 027ad79\nRelease 17.0.18 6756668\n\nv17.0.17\n\n10 August 2024\n\n\nUpdate w9jds/firebase-action action to v13.14.2 #431\nchore(deps): update 592cb7a\nRelease 17.0.17 2db5dc7\n\nv17.0.16\n\n29 July 2024\n\n\nmusic-metadata 10 7f90220\nRelease 17.0.16 80d5e14\nremoved webpack 908f395\n\nv17.0.15\n\n29 July 2024\n\n\ndeps ffe5da9\ndeps 469a890\nRelease 17.0.15 80553e8\n\nv17.0.14\n\n11 July 2024\n\n\ndeps 389407a\nRelease 17.0.14 30fec73\n\nv17.0.13\n\n7 July 2024\n\n\nUpdate dependency @typescript-eslint/utils to v8.0.0-alpha.40 #369\nUpdate w9jds/firebase-action action to v13.13.0 #423\ndeps 2389739\nRelease 17.0.13 4040b59\ndeps a0c15a4\n\nv17.0.12\n\n4 July 2024\n\n\ndeps 892689d\nRelease 17.0.12 af8a6b4\n\nv17.0.11\n\n23 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.4 #419\ndeps babdb9f\nRelease 17.0.11 5273759\n\nv17.0.10\n\n23 June 2024\n\n\ndeps 05a441e\nRelease 17.0.10 3e7b9a4\n\nv17.0.9\n\n12 June 2024\n\n\nRelease 17.0.9 a948ad5\ndeps, webstorage update 0e6195d\n\nv17.0.8\n\n12 June 2024\n\n\ndeps, webstorage update 1e660c9\nRelease 17.0.8 64a34dc\n\nv17.0.7\n\n9 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.2 #409\nUpdate dependency tslib to v2.6.3 #411\nRelease 17.0.7 2bb0e78\n\nv17.0.6\n\n9 June 2024\n\n\nnx + deps a1da736\nRelease 17.0.6 41e632f\n\nv17.0.5\n\n25 May 2024\n\n\nUpdate angularmaterial monorepo to v18 #402\nRelease 17.0.4 549bfa1\nRelease 17.0.5 ea932ef\n\nv17.0.4\n\n25 May 2024\n\n\nUpdate angular monorepo to v18 #401\nUpdate w9jds/firebase-action action to v13.10.1 #395\nRelease 17.0.4 f591692\nswitched to node 22 4f70846\n\nv17.0.3\n\n25 May 2024\n\n\nRelease 17.0.3 cb19d50\nenabled eventCoalescing e6fc6eb\n\nv17.0.2\n\n25 May 2024\n\n\nRelease 17.0.2 96bcdfc\nfixed theme 3ce805f\n\nv17.0.1\n\n25 May 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.5 #390\nng 18 7fcd244\nfixed eslint 2346f13\nnx update 4164d59\n\nv16.0.6\n\n28 April 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.2 #381\ndeps 308b3e5\nRelease 16.0.6 3233ed1\naudit fix 2f67e34\n\nv16.0.5\n\n14 April 2024\n\n\ndeps 84ac04c\nRelease 16.0.5 1a30a33\n\nv16.0.4\n\n7 April 2024\n\n\nRelease 16.0.4 5bab2a7\n\nv16.0.3\n\n16 March 2024\n\n\nRelease 16.0.3 0338bd7\nnew browserlist 013e987\nonly include Buffer in Node Polfills d7b3ea2\n\nv16.0.2\n\n16 March 2024\n\n\nRelease 16.0.2 0629b20\nfixed nx cloud token 870e50b\n\nv16.0.1\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.5.1 #372\nRelease 16.0.1 fe15d24\nfixed nx cloud token 6d2a8fe\n\nv16.0.0\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.3.1 #368\ndeps updated 11ae344\nnx update 0b2a071\nangular update c35bc38\n\nv15.1.17\n\n24 February 2024\n\n\nRelease 15.1.17 f18fa1f\n\nv15.1.16\n\n24 February 2024\n\n\nRelease 15.1.16 d2e1df8\n\nv15.1.14\n\n10 February 2024\n\n\nUpdate nrwl/nx-set-shas action to v4 #362\nUpdate w9jds/firebase-action action to v13.2.1 #358\nRelease 15.1.14 09eba6b\nRevert \"try nx agents\" 90e9f96\ntry nx agents 7362da7\n\nv15.1.13\n\n10 February 2024\n\n\ndeps cace929\nRelease 15.1.13 04dca08\nremoved last modules 0486e25\n\nv15.1.12\n\n4 February 2024\n\n\nnx update ccbf388\nRelease 15.1.12 7a8645a\n\nv15.1.11\n\n28 January 2024\n\n\nUpdate w9jds/firebase-action action to v13.1.0 #338\nUpdate actions/cache action to v4 #343\nRelease 15.1.11 1e340e1\n\nv15.1.10\n\n28 January 2024\n\n\ndeps 64d30e1\nRelease 15.1.10 a9a8e68\n\nv15.1.9\n\n20 January 2024\n\n\nRelease 15.1.9 8596088\n\nv15.1.8\n\n10 January 2024\n\n\nstylelint fixes ac02523\nRelease 15.1.8 4c8c0ad\nlint fixes 764711a\n\nv15.1.7\n\n9 January 2024\n\n\ndeps 362d9db\nRelease 15.1.7 92d89c3\n\nv15.1.6\n\n28 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #312\nRelease 15.1.6 339bd87\n\nv15.1.5\n\n28 December 2023\n\n\ndeps 4ef0700\nRelease 15.1.5 8ee0628\n\nv15.1.4\n\n15 December 2023\n\n\ndeps 998ad7c\nRelease 15.1.4 5c1346d\n\nv15.1.3\n\n10 December 2023\n\n\nRelease 15.1.3 d0b8d34\ndeps 6966d17\nnx update 678aef6\n\nv15.1.2\n\n8 December 2023\n\n\nfix seeking with slider, @switch statt @if 9934470\nRelease 15.1.2 1ebb626\n\nv15.1.1\n\n8 December 2023\n\n\nRelease 15.1.1 586ef29\nfix deploy f36895a\n\nv15.1.0\n\n8 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #310\noptimizations and typing f5c6154\noptimizations 05ddceb\noptimized icon set converter 6bd60c5\n\nv15.0.9\n\n8 December 2023\n\n\ndeps 02d4bfb\ntsconfig refactoring 7445539\nRelease 15.0.9 58fb13b\n\nv15.0.8\n\n30 November 2023\n\n\ntsconfig refactoring 275e54d\nRelease 15.0.8 f3351c2\n\nv15.0.7\n\n30 November 2023\n\n\nUpdate w9jds/firebase-action action to v12.9.0 #301\nRelease 15.0.7 7e45969\n\nv15.0.6\n\n30 November 2023\n\n\nRelease 15.0.6 063950a\ndeps 7522583\n\nv15.0.5\n\n13 November 2023\n\n\ndeps, prettier cbc6e41\nRelease 15.0.5 3bccffb\n\nv15.0.4\n\n10 November 2023\n\n\nRelease 15.0.4 1c4c67e\n\nv15.0.3\n\n10 November 2023\n\n\nRelease 15.0.3 90df676\n\nv15.0.2\n\n10 November 2023\n\n\nRelease 15.0.2 29878bc\neslint flat config 8c297a1\n\nv15.0.1\n\n10 November 2023\n\n\nNEW control flow syntax 84e91e3\nRelease 15.0.1 9dfd762\nstyleUrl instead of urls aefd739\n\nv15.0.0\n\n9 November 2023\n\n\nUpdate angular monorepo to v17 (major) #288\nUpdate angularmaterial monorepo to v17 (major) #289\nUpdate w9jds/firebase-action action to v12.8.0 #286\nUpdate actions/setup-node action to v4 #287\nRelease 15.0.0 7f1e3c1\nUpdate angular monorepo to v17 43d9b1f\nnodejs 20 builds 6f6ac17\n\nv14.1.23\n\n9 November 2023\n\n\nnx update a358906\nRelease 14.1.23 55f3319\nnx update dbc354f\n\nv14.1.20\n\n14 October 2023\n\n\nRelease 14.1.20 8d072f1\n\nv14.1.19\n\n14 October 2023\n\n\nUpdate dependency @types/node to v20.8.6 #242\nUpdate w9jds/firebase-action action to v12.6.2 #272\nRelease 14.1.19 314f02a\nRelease 14.1.18 7cf10f9\n\nv14.1.18\n\n14 October 2023\n\n\nRelease 14.1.18 a8bb04b\n\nv14.1.17\n\n14 October 2023\n\n\nRelease 14.1.17 7a66d5a\n\nv14.1.16\n\n14 October 2023\n\n\nRelease 14.1.16 4ec2e90\n\nv14.1.15\n\n7 October 2023\n\n\nRelease 14.1.15 3f73f6e\n\nv14.1.14\n\n7 October 2023\n\n\nRelease 14.1.14 db2122c\n\nv14.1.13\n\n7 October 2023\n\n\nRelease 14.1.13 a3ae7df\n\nv14.1.12\n\n7 October 2023\n\n\nRelease 14.1.12 0d0dfcb\n\nv14.1.11\n\n7 October 2023\n\n\nRelease 14.1.11 5aecee8\n\nv14.1.10\n\n7 October 2023\n\n\nRelease 14.1.10 d200e57\n\nv14.1.9\n\n23 September 2023\n\n\nRelease 14.1.9 29f1cbe\nupdated from deprecated SwUpdate props bef3e3e\n\nv14.1.8\n\n23 September 2023\n\n\nupdated from deprecated SwUpdate props 2f592f3\nRelease 14.1.8 07d6959\n\nv14.1.7\n\n23 September 2023\n\n\ndeps 1ffd91e\nRelease 14.1.7 6fc1434\n\nv14.1.6\n\n23 September 2023\n\n\nRelease 14.1.6 8b184a4\n\nv14.1.5\n\n21 September 2023\n\n\nRelease 14.1.5 4695772\nfix build fc633d2\n\nv14.1.4\n\n7 September 2023\n\n\nBump protobufjs and google-gax #261\nUpdate dependency tslib to v2.6.2 #262\nUpdate actions/checkout action to v4 #264\nRelease 14.1.4 a6386d2\nfix build b7303ed\n\nv14.1.3\n\n7 September 2023\n\n\nBump word-wrap from 1.2.3 to 1.2.4 #250\nUpdate dependency tslib to v2.6.1 #251\nRelease 14.1.3 9ce5e31\n\nv14.1.2\n\n3 August 2023\n\n\nRelease 14.1.2 8f60273\n\nv14.1.1\n\n7 July 2023\n\n\nUpdate dependency tslib to v2.6.0 #241\nBump @grpc/grpc-js and google-gax #240\nUpdate w9jds/firebase-action action to v12 #235\nRelease 14.1.1 f78467f\nprettier 3ff6d19\n\nv14.1.0\n\n7 July 2023\n\n\nprettier 3 + precommit hooks cd5831f\nRelease 14.1.0 d612735\nprettier 08b1238\n\nv14.0.13\n\n17 June 2023\n\n\nRelease 14.0.13 a10893b\nremoved unused type polyfills af2926f\n\nv14.0.12\n\n17 June 2023\n\n\nRelease 14.0.12 ea688e0\n\nv14.0.11\n\n17 June 2023\n\n\nRelease 14.0.11 32c3f4d\n\nv14.0.10\n\n17 June 2023\n\n\ndeps 8c90a58\nRelease 14.0.10 1d0b823\n\nv14.0.9\n\n8 June 2023\n\n\ndeps fdad632\nRelease 14.0.9 331bb8f\n\nv14.0.8\n\n3 June 2023\n\n\nBump vm2 from 3.9.17 to 3.9.19 #220\nUpdate dependency tslib to v2.5.3 #223\nRelease 14.0.8 8b9fdf5\n\nv14.0.7\n\n3 June 2023\n\n\nuse run-many for tests 97d68d0\nRelease 14.0.7 c82e02b\n\nv14.0.6\n\n3 June 2023\n\n\ndeps 752aa76\nRelease 14.0.6 f038069\n\nv14.0.5\n\n13 May 2023\n\n\ndeps 28cff25\nRelease 14.0.5 20cf16a\n\nv14.0.4\n\n6 May 2023\n\n\nremoved unused js file 5ffbd62\nRelease 14.0.4 7fb56e0\n\nv14.0.3\n\n6 May 2023\n\n\nUpdate dependency jest-preset-angular to v13.1.0 #208\nUpdate dependency @types/node to v18.16.5 #206\nRelease 14.0.3 cdf04e9\ne2e fixed 2708806\n\nv14.0.2\n\n6 May 2023\n\n\nUpdate w9jds/firebase-action action to v11.30.1 #207\ne2e fixed and removed separate project 74e7c83\nRelease 14.0.1 f386a36\nRelease 14.0.2 1081f8e\n\nv14.0.1\n\n6 May 2023\n\n\ne2e fixed and removed separate project d0cd94f\nRelease 14.0.1 bb4e0ce\n\nv14.0.0\n\n6 May 2023\n\n\nnx 16, angular 16, deps 826cbe5\nRelease 14.0.0 ec067ee\nmusic metadata removed 2eb6cae\n\nv13.3.5\n\n13 April 2023\n\n\nBump vm2 #200\nUpdate dependency music-metadata to v7.13.4 #195\nRelease 13.3.5 845189d\n\nv13.3.4\n\n13 April 2023\n\n\nRelease 13.3.4 eab1d35\n\nv13.3.3\n\n10 April 2023\n\n\nRelease 13.3.3 0129566\n\nv13.3.2\n\n25 March 2023\n\n\nRelease 13.3.2 5a92c07\n\nv13.3.1\n\n25 March 2023\n\n\nRelease 13.3.1 42a58d9\n\nv13.3.0\n\n18 March 2023\n\n\nUpdate w9jds/firebase-action action to v11.24.1 #181\ndeps + sidenav fixes e11e3bd\nRelease 13.3.0 3acc7bf\n\nv13.2.6\n\n15 March 2023\n\n\ndeps 0dc096d\nRelease 13.2.6 6d67484\n\nv13.2.5\n\n5 March 2023\n\n\nstandalone bootstrap 6aed158\nRelease 13.2.5 4c272db\n\nv13.2.4\n\n5 March 2023\n\n\nBump http-cache-semantics from 4.1.0 to 4.1.1 #170\nBump cacheable-request from 10.2.5 to 10.2.7 #171\nUpdate dependency tslib to v2.5.0 #164\nRelease 13.2.4 392b41d\ndeps a4b6dab\n\nv13.2.3\n\n5 March 2023\n\n\nRelease 13.2.3 f54702d\n\nv13.2.2\n\n5 March 2023\n\n\nRelease 13.2.2 d9677d0\n\nv13.2.1\n\n22 February 2023\n\n\ndeps 1730f16\nRelease 13.2.1 ba634aa\nuse nx for all 51a51dd\n\nv13.2.0\n\n22 February 2023\n\n\nUpdate w9jds/firebase-action action to v11.22.0 #172\nRelease 13.2.0 4035819\nstandalone migration steps 1 and 2 32e3ad6\nstandalone migration steps 1 and 2 a40c9e8\n\nv13.1.12\n\n22 February 2023\n\n\nRelease 13.1.12 53818e8\n\nv13.1.11\n\n28 January 2023\n\n\ndeps b4d909a\nRelease 13.1.11 d8bf0e7\n\nv13.1.10\n\n22 January 2023\n\n\nRelease 13.1.10 1c7fa4e\n\nv13.1.9\n\n20 January 2023\n\n\ndeps 4781958\nRelease 13.1.9 505e77f\n\nv13.1.8\n\n15 January 2023\n\n\nRelease 13.1.8 580c58d\n\nv13.1.7\n\n15 January 2023\n\n\nUpdate dependency music-metadata to v7.13.3 #150\ndeps 8b6bfeb\nRelease 13.1.7 d516e97\n\nv13.1.6\n\n13 January 2023\n\n\nRelease 13.1.6 166c79d\ndeps 8ec046f\n\nv13.1.5\n\n7 January 2023\n\n\nlayout fixes f3f4ae7\nRelease 13.1.5 eaa27a6\n\nv13.1.4\n\n7 January 2023\n\n\nRelease 13.1.4 49d8293\nfixed e2e 33d73d9\n\nv13.1.3\n\n7 January 2023\n\n\nUpdate dependency firebase-tools to v11.20.0 #147\nUpdate dependency postcss to v8.4.21 #146\nUpdate dependency eslint-config-prettier to v8.6.0 #139\nUpdate angularmaterial monorepo to v15.0.4 #144\nUpdate dependency husky to v8.0.3 #140\nUpdate w9jds/firebase-action action to v11.18.0 #131\nUpdate dependency cypress to v12.3.0 #141\nUpdate nrwl monorepo to v15.4.4 #135\nUpdate dependency eslint to v8.31.0 #138\nUpdate typescript-eslint monorepo to v5.48.0 #58\nUpdate dependency music-metadata to v7.13.1 #142\nRelease 13.1.3 5302fb4\ndeps 801cd46\nmdc migration, vertical sliders, icons size directive removed ffa9bb5\n\nv13.1.2\n\n30 December 2022\n\n\nRelease 13.1.2 c339811\n\nv13.1.1\n\n23 December 2022\n\n\nvisualizers plug their own analyser cea2824\nunsubscribe and disconnect analysers 6a8d3be\nRelease 13.1.1 72575f6\n\nv13.1.0\n\n23 December 2022\n\n\nRelease 13.1.0 1989419\nrenamed song to track, us playState obeservable for better input and CD handling 47b6776\n\nv13.0.20\n\n23 December 2022\n\n\ntransparency control for visuals 7445cc4\nRelease 13.0.20 62cfee7\n\nv13.0.19\n\n23 December 2022\n\n\nstandalone components 620afb8\nno max db slider, mindb range changed, better default f7913c1\nRelease 13.0.19 9280e3a\n\nv13.0.18\n\n22 December 2022\n\n\nRelease 13.0.18 4c16c1e\n\nv13.0.16\n\n22 December 2022\n\n\nRelease 13.0.16 77707fb\n\nv13.0.13\n\n22 December 2022\n\n\nRelease 13.0.13 6f12a37\n\nv13.0.12\n\n19 December 2022\n\n\nremoved d3, use bark scale for bar spectrogram 2bcfefb\nRelease 13.0.12 e336db1\n\nv13.0.11\n\n18 December 2022\n\n\nmerged readme 3f449ec\nRelease 13.0.11 47e3527\nbadges 5f1d097\n\nv13.0.10\n\n17 December 2022\n\n\nRelease 13.0.10 62c64c5\nmoved style to component 006b52c\ntodo 28548eb\n\nv13.0.9\n\n17 December 2022\n\n\nfixed audioContext resume, added gain to eq cb797bc\nRelease 13.0.9 8c56320\n\nv13.0.8\n\n17 December 2022\n\n\nRelease 13.0.8 6f1cdb4\n\nv13.0.7\n\n17 December 2022\n\n\nRelease 13.0.7 d895f0f\n\nv13.0.6\n\n17 December 2022\n\n\nRelease 13.0.6 17266a3\n\nv13.0.5\n\n17 December 2022\n\n\nUpdate angularmaterial monorepo to v15 (major) #108\nRelease 13.0.5 ddab2f3\nremoved uneeded ts-ignores a1a074f\nUpdate angularmaterial monorepo to v15 a4de6d4\n\nv13.0.3\n\n17 December 2022\n\n\nRelease 13.0.3 7f8ad27\nuse config file without .json endings bfd4685\n\nv13.0.2\n\n17 December 2022\n\n\nrefactored type imports and fixed offscreencanvas types 067bbea\nRelease 13.0.2 292ed5a\ncustom typings moved to folders c3208e7\n\nv13.0.1\n\n17 December 2022\n\n\nRelease 13.0.1 667c54e\nfixed debug version bf7b3a9\nfixed debug version 6cee32d\n\nv13.0.0\n\n16 December 2022\n\n\nRelease 13.0.0 b3905a0\nfixed playlist bulk loading 834f706\n\nv12.0.16\n\n16 December 2022\n\n\nRelease 12.0.16 1de2a3c\nfixed playlist bulk loading 8e7ecec\n\nv12.0.15\n\n16 December 2022\n\n\nRelease 12.0.15 5a7054c\nfixed test 9eb089c\n\nv12.0.14\n\n16 December 2022\n\n\nabstacted all audio stuff in audio service 403737f\neq auf mobile funkt auf mobile, flex layout refactoring eccaa4a\nreplaced angular-flex-layout with css 03a0491\n\nv12.0.13\n\n15 December 2022\n\n\nmaterial 15 migration dc55360\nRelease 12.0.13 37f76dc\nsimpler lib 86be7eb\n\nv12.0.12\n\n15 December 2022\n\n\nlibrary ohne filter 8dfc611\nRelease 12.0.12 6d26668\n\nv12.0.11\n\n14 December 2022\n\n\nRelease 12.0.11 635e855\ndeps, eslintrc, vibrant-wasm entfernt 431a9ad\n\nv12.0.10\n\n12 December 2022\n\n\nRelease 12.0.10 f954f07\nappend audioElement to document ce588f9\n\nv12.0.9\n\n12 December 2022\n\n\nseperated audio part into AudioService 0f8326e\nsimplified init of audio 869dddb\nRelease 12.0.9 17a1677\n\nv12.0.8\n\n11 December 2022\n\n\nfixed smaller things, no prdefinded samplerate 986dd30\nRelease 12.0.8 6b9ff38\ntodo 2bdc500\n\nv12.0.7\n\n11 December 2022\n\n\nRelease 12.0.7 a0aa269\nmoved init of seekto handler to constructor 2434ec6\n\nv12.0.6\n\n11 December 2022\n\n\nRelease 12.0.6 14768e6\n\nv12.0.5\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 8738efc\nRelease 12.0.4 fee5161\nRelease 12.0.5 23061dd\n\nv12.0.4\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 81bb449\nRelease 12.0.4 025a430\nUpdate TODO.md 009b48d\n\nv12.0.3\n\n11 December 2022\n\n\nRelease 12.0.3 c398655\n\nv12.0.2\n\n11 December 2022\n\n\nRelease 12.0.2 2bfabd0\n\nv12.0.1\n\n11 December 2022\n\n\nmoved id3tags extraction to worker 9b11a20\nRelease 12.0.1 6c27523\nUpdate devcontainer.json b286be9\n\nv12.0.0\n\n10 December 2022\n\n\nRelease 12.0.0 6ee2324\nadded deps vibrant-wasm and custom webpack config to ttry threads.js 8337321\ncustom webpack config for threads.js workers (still not working, disabled) 55e56b8\n\nv11.5.14\n\n7 December 2022\n\n\nstylelint fixes and config 52d642b\nRelease 11.5.14 b5dfb18\n\nv11.5.13\n\n7 December 2022\n\n\nRelease 11.5.13 a867afe\nstylelint fixes and config 122856c\n\nv11.5.12\n\n7 December 2022\n\n\nRelease 11.5.12 c4668f1\nmusic meatadata, file-drop-overlay as standalone component 2e5b003\nprovide all services in root ca80a43\n\nv11.5.11\n\n7 December 2022\n\n\nRelease 11.5.11 930dc28\n\nv11.5.10\n\n7 December 2022\n\n\ndeps a552ea9\nRelease 11.5.10 d29b113\n\nv11.5.9\n\n6 December 2022\n\n\nRelease 11.5.9 18a45bd\ntags + eslint rule 864d7e1\n\nv11.5.8\n\n6 December 2022\n\n\ndep graph in gh pages, release-it config erweitert um neu generierte dateien mit zu committen 73bd100\nlibs cleanup 59f4ac4\nRelease 11.5.8 24e4c9a\n\nv11.5.7\n\n6 December 2022\n\n\nlibs cleanup 60dbedc\nRelease 11.5.7 2d68f3b\n\nv11.5.6\n\n6 December 2022\n\n\nremoved all dummy tests 7defe9b\nRelease 11.5.6 d1b4f51\nrun tests in github actions 14148e0\n\nv11.5.5\n\n6 December 2022\n\n\nRelease 11.5.5 73b9b59\n\nv11.5.4\n\n6 December 2022\n\n\ncompodoc reenabled 7c00473\nsvgo updated 19bf065\nRelease 11.5.4 8df3910\n\nv11.5.3\n\n6 December 2022\n\n\ncompodoc reenabled 540fdd8\nRelease 11.5.3 7c5bbe5\n\nv11.5.2\n\n5 December 2022\n\n\ncompodoc reenabled 2ce3664\ncompodoc reenabled b7be438\ncompodoc reenabled 29f2b37\n\nv11.5.1\n\n5 December 2022\n\n\nautofix unused imports, removed tslint 71bd586\nautofix unused imports 6d6f310\nRelease 11.5.1 77091b9\n\nv11.5.0\n\n5 December 2022\n\n\nbetter thum quality, bigger coverart in playlist, tooltips, better button color handling bffc736\nRelease 11.5.0 670b3af\n\nv11.4.11\n\n5 December 2022\n\n\nRelease 11.4.11 e615145\n\nv11.4.10\n\n5 December 2022\n\n\nreinstall 418b524\nRelease 11.4.10 eaf46cf\n\nv11.4.9\n\n5 December 2022\n\n\nRelease 11.4.9 3e58c71\n\nv11.4.8\n\n5 December 2022\n\n\nRelease 11.4.8 a409033\nservices in app integriert 1857720\n\nv11.4.7\n\n5 December 2022\n\n\nremoved storybook 9d81efd\nservices in app integriert ce621ee\nmoved visuals lib to app e992cb4\n\nv11.4.6\n\n5 December 2022\n\n\nRelease 11.4.6 f9c93ce\n\nv11.4.5\n\n5 December 2022\n\n\nRelease 11.4.5 839a546\n\nv11.4.3\n\n5 December 2022\n\n\nRelease 11.4.3 50b7005\n\nv11.4.2\n\n5 December 2022\n\n\nRelease 11.4.2 0674adf\n\nv11.4.1\n\n5 December 2022\n\n\nRelease 11.4.1 7ccbc95\n\nv11.4.0\n\n5 December 2022\n\n\nrefactored libs to app, fixed time slider 133059f\nRelease 11.4.0 68d9939\n\nv11.3.1\n\n4 December 2022\n\n\nRelease 11.3.1 7493e98\nprevent lib crossing 3fbfb97\n\nv11.3.0\n\n4 December 2022\n\n\nRelease 11.3.0 ecf45e6\nbetter color usage 965f5d8\nbetter color usage f209ddb\n\nv11.2.0\n\n4 December 2022\n\n\ndeps, better default colors 569161e\nRelease 11.2.0 efc9aad\n\nv11.1.2\n\n4 December 2022\n\n\nRelease 11.1.2 8d47dd4\nfixed visualizer color updating too late e99d4f2\n\nv11.1.1\n\n4 December 2022\n\n\nRelease 11.1.1 287138c\n\nv11.1.0\n\n4 December 2022\n\n\noptimized musicbrainz requests, fixed embedded cover handling 7bebf2d\nRelease 11.1.0 707a0cb\n\nv11.0.0\n\n4 December 2022\n\n\nfixed several metadata related problems, setting for use of embedded tag covers 1745489\nRelease 11.0.0 6c219df\ntodo chromaprint-wasm 2c0f612\n\nv10.3.2\n\n1 December 2022\n\n\nRelease 10.3.2 6fdfa5a\n\nv10.3.1\n\n1 December 2022\n\n\nRelease 10.3.1 05b4ddd\nupdated firebase hosting config and actions for deployment f201082\nupdated firebase hosting config and actions for deployment 0c91659\n\nv10.3.0\n\n1 December 2022\n\n\nRelease 10.3.0 50dbff9\nupdated firebase hosting config and actions for deployment 1455d32\n\nv10.2.0\n\n30 November 2022\n\n\nRelease 10.2.0 7593825\nupdated firebase hosting config and actions for deployment b80e2ea\n\nv10.1.0\n\n30 November 2022\n\n\nupdated firebase hosting config and actions for deployment 02bde5d\nRelease 10.1.0 ffc8723\nupdated github actions 86bda79\n\nv10.0.4\n\n30 November 2022\n\n\ncypress migration to 11 16d8b1b\nRelease 10.0.4 6bf609d\nupdate nodejs to 18 for github actions 16925cf\n\nv10.0.3\n\n30 November 2022\n\n\ngot rid of variables.scss ad7e0f1\nRelease 10.0.3 63f69d0\n\nv10.0.2\n\n30 November 2022\n\n\nRelease 10.0.2 2a99961\n\nv10.0.1\n\n30 November 2022\n\n\nRelease 10.0.1 a9a9c0b\n\nv10.0.0\n\n30 November 2022\n\n\nng15 521e049\nng 15 cleanup, mobx update 0f6c72b\nmaterial 14 1e96bc3\n\nv9.2.4\n\n19 March 2022\n\n\nupdated deps eaeb47a\nRelease 9.2.4 61721ca\njb env 4bdbceb\n\nv9.2.3\n\n19 December 2021\n\n\nupdates 5061051\nRelease 9.2.3 a7f82ab\n\nv9.2.2\n\n9 December 2021\n\n\nupdates 2427749\nRelease 9.2.2 934d323\n\nv9.2.1\n\n20 November 2021\n\n\nRelease 9.2.1 60d5b05\n\nv9.2.0\n\n20 November 2021\n\n\nUpdate dependency @angular/cdk to v12.2.13 #21\nPin dependencies #20\nUpdate dependency ng-packagr to v12.2.5 #17\nUpdate dependency @angular/material to v12.2.13 #15\nUpdate angular monorepo to v12.2.13 #13\nConfigure Renovate #11\nnx 13.2 02e548c\nRelease 9.2.0 22ec300\nmain branch 63600c3\n\nv9.1.3\n\n16 November 2021\n\n\nnx update, nx-stylelint, nx-compodoc f06b116\nRelease 9.1.3 de5bda9\n\nv9.1.2\n\n20 October 2021\n\n\nupdates 8268a8b\nRelease 9.1.2 ab89f63\ntodos e486f52\n\nv9.1.1\n\n4 October 2021\n\n\nprevent duplicates in playlist, drag handle on avatar b6729e6\nRelease 9.1.1 eff95d0\n\nv9.1.0\n\n4 October 2021\n\n\nfile handling api with origin trial d3bca3a\nRelease 9.1.0 6cab435\n\nv9.0.11\n\n2 October 2021\n\n\nupdates 397399b\nRelease 9.0.11 96dbdf6\n\nv9.0.10\n\n5 September 2021\n\n\nRelease 9.0.10 112db1a\n\nv9.0.9\n\n5 September 2021\n\n\nRelease 9.0.9 9458a12\n\nv9.0.8\n\n19 August 2021\n\n\nRelease 9.0.8 cd620b6\n\nv9.0.7\n\n19 August 2021\n\n\nRelease 9.0.7 600f7e6\n\nv9.0.6\n\n19 August 2021\n\n\nRelease 9.0.6 c08196a\ndeps 6b5e613\n\nv9.0.5\n\n19 August 2021\n\n\nRelease 9.0.5 c51af5f\n\nv9.0.4\n\n19 August 2021\n\n\ndeps 43463ab\nRelease 9.0.4 cf00688\n\nv9.0.3\n\n24 July 2021\n\n\ndeps, nx-cloud ada5e83\nRelease 9.0.3 bb4a1a8\n\nv9.0.2\n\n24 July 2021\n\n\ndeps, nx-cloud 5cbeb5b\nRelease 9.0.2 49a76e8\n\nv9.0.1\n\n24 July 2021\n\n\ndeps b99bf0c\nRelease 9.0.1 cbab637\n\nv9.0.0\n\n9 July 2021\n\n\nfixed release-it 8d3ed72\nRelease 9.0.0 5467c6f\n\nv8.1.10\n\n9 July 2021\n\n\nRelease 8.1.10 be90110\n\nv8.1.9\n\n9 July 2021\n\n\nfixed release-it a90639a\nRelease 8.1.9 6d52ad4\n\nv8.1.8\n\n9 July 2021\n\n\nts 4.4, media session types intergrated in ts, deps fd45c70\nRelease 8.1.8 ff7cdad\n\nv8.1.7\n\n8 July 2021\n\n\nRelease 8.1.7 0bde446\n\nv8.1.6\n\n8 July 2021\n\n\ndeps 128a3c3\nRelease 8.1.6 d64a3c3\n\nv8.1.5\n\n2 July 2021\n\n\nRelease 8.1.5 ef22e4a\nlayout fixed dbb788d\n\nv8.1.4\n\n2 July 2021\n\n\nrefactored scss to @use, fixed build 6b0ec83\nRelease 8.1.4 ebab8da\n\nv8.1.3\n\n2 July 2021\n\n\nRelease 8.1.3 0843a41\n\nv8.1.2\n\n2 July 2021\n\n\nfixed types 07de52a\nRelease 8.1.2 00b47ed\n\nv8.1.1\n\n2 July 2021\n\n\nmigrated to eslint and per project config 4feefcd\nRelease 8.1.1 7762874\n\nv8.1.0\n\n26 June 2021\n\n\nupdates e2a0794\nRelease 8.1.0 86a18bb\n\nv8.0.1\n\n26 May 2021\n\n\nRelease 8.0.1 52bf10d\n\nv8.0.0\n\n26 May 2021\n\n\nRelease 7.1.1 c78b2bf\nRelease 8.0.0 2f0d555\n\nv7.2.0\n\n26 May 2021\n\n\nRelease 7.2.0 73ed2ca\nupdates 774ffed\n\nv7.1.1\n\n26 May 2021\n\n\nupdates 2a427ed\nRelease 7.1.1 b73ce66\n\nv7.1.0\n\n9 May 2021\n\n\n30fps visualizer, sortable playlist cd2a934\nRelease 7.1.0 8377116\n\nv7.0.6\n\n9 May 2021\n\n\nRelease 7.0.6 84a2466\nbitrate rounding cbef1c8\n\nv7.0.5\n\n9 May 2021\n\n\nRelease 7.0.5 9c56a21\n\nv7.0.4\n\n9 May 2021\n\n\nbetter title display 51154fe\nRelease 7.0.4 72dafd7\n\nv7.0.3\n\n9 May 2021\n\n\ndeps e36192c\nRelease 7.0.3 7553170\ntodos 51e219a\n\nv7.0.2\n\n9 May 2021\n\n\nfixed navigation 9767ad0\nRelease 7.0.2 59f1df2\n\nv7.0.1\n\n9 May 2021\n\n\nmetadata settings and ui cleanup 3797092\nRelease 6.7.3 6841a21\nRelease 7.0.0 0d76c85\n\nv7.0.0\n\n9 May 2021\n\n\nmetadata settings and ui cleanup b2b5088\nRelease 7.0.0 8c47814\n\nv6.7.4\n\n7 May 2021\n\n\nRelease 6.7.4 2ab7cc1\ncypress studio activated 4eac2a7\ncypress studio activated 6bc0773\n\nv6.7.3\n\n7 May 2021\n\n\nRelease 6.7.3 6841a21\nignore iml e5de213\n\nv6.7.2\n\n5 May 2021\n\n\ngithub actions with node_modules cache 4f91524\nRelease 6.7.2 07ec810\n\nv6.7.1\n\n5 May 2021\n\n\ncypress updated and window.showOpenFilePicker overwritten 32570e0\nRelease 6.7.1 fd18536\n\nv6.7.0\n\n4 May 2021\n\n\ndev deps dc41223\nRelease 6.7.0 f34b7cf\n\nv6.6.7\n\n25 April 2021\n\n\nfixed cypress tests and mobx 00399df\nRelease 6.6.7 bd0ddc3\n\nv6.6.6\n\n25 April 2021\n\n\nRelease 6.6.6 d690072\n\nv6.6.5\n\n25 April 2021\n\n\nRelease 6.6.5 ea63800\n\nv6.6.4\n\n25 April 2021\n\n\ndeps and husky updated 120476b\nRelease 6.6.4 20110c3\n\nv6.6.3\n\n20 April 2021\n\n\nRelease 6.6.3 ee83304\nreadme badges 09ae300\n\nv6.6.2\n\n15 April 2021\n\n\nRelease 6.6.2 e933c61\n\nv6.6.1\n\n15 April 2021\n\n\nRelease 6.6.1 221781e\n\nv6.6.0\n\n14 April 2021\n\n\nRelease 6.6.0 d254989\n\nv6.5.9\n\n11 March 2021\n\n\ndependencies 2119d47\nRelease 6.5.9 c64cd79\n\nv6.5.8\n\n4 March 2021\n\n\nRelease 6.5.8 f401a49\n\nv6.5.7\n\n4 March 2021\n\n\nRelease 6.5.7 49b1735\n\nv6.5.6\n\n4 February 2021\n\n\nRelease 6.5.6 045b043\n\nv6.5.5\n\n1 February 2021\n\n\nRelease 6.5.5 f4324a4\n\nv6.5.4\n\n29 January 2021\n\n\nfixed test 0038838\nRelease 6.5.4 8c75c5f\n\nv6.5.3\n\n28 January 2021\n\n\nRelease 6.5.3 13bf8e2\n\nv6.5.2\n\n21 January 2021\n\n\nRelease 6.5.2 1c876b6\nfixed build d2f46f8\n\nv6.5.1\n\n21 January 2021\n\n\nupdates 120f02a\nRelease 6.5.1 46c60ce\n\nv6.5.0\n\n14 January 2021\n\n\nRelease 6.5.0 e4ec6c1\n\nv6.4.1\n\n14 January 2021\n\n\nchangelog d629a20\nRelease 6.4.1 3d1f63c\n\nv6.4.0\n\n14 January 2021\n\n\nremoved token 51304c2\nRelease 6.4.0 756dc90\n\nv6.3.1\n\n14 January 2021\n\n\nRelease 6.3.1 e727ac0\n\nv6.3.0\n\n14 January 2021\n\n\nrelease-it 5321e86\nRelease 6.3.0 db48fe2\n\nv6.2.6\n\n14 January 2021\n\n\nrelease v6.2.6 ae202ad\n\nv6.2.5\n\n14 January 2021\n\n\nrelease v6.2.5 c20efb2\n\nv6.2.4\n\n14 January 2021\n\n\nci cd 8da74bb\nrelease v6.2.4 f12cad8\n\nv6.2.3\n\n12 January 2021\n\n\nrelease v6.2.3 78fcf7a\n\nv6.2.2\n\n20 December 2020\n\n\nnrwl 11 b2ed530\nrelease v6.2.2 73050ff\n\nv6.2.1\n\n15 December 2020\n\n\nnrwl 11 f1f709b\nrelease v6.2.1 5101ea6\nnrwl 11 8a371a0\n\nv6.2.0\n\n12 December 2020\n\n\nrelease v6.2.0 ef650c5\n\nv6.1.1\n\n8 December 2020\n\n\nrelease v6.1.1 e6660e2\n\nv6.1.0\n\n3 December 2020\n\n\nrelease v6.1.0 f8b7451\n\nv6.0.1\n\n21 November 2020\n\n\nrelease v6.0.1 c0d5ae4\n\nv6.0.0\n\n21 November 2020\n\n\nng11 0960760\nprettier ab98677\nrelease v6.0.0 79d861d\n\nv5.2.12\n\n28 October 2020\n\n\nrelease v5.2.12 40cc765\n\nv5.2.11\n\n28 October 2020\n\n\nrelease v5.2.11 c0c9413\n\nv5.2.10\n\n28 October 2020\n\n\nrelease v5.2.10 f4928f5\n\nv5.2.9\n\n28 October 2020\n\n\nrelease v5.2.9 04b4812\n\nv5.2.8\n\n28 October 2020\n\n\nrelease v5.2.8 4c8f851\n\nv5.2.7\n\n28 October 2020\n\n\nrelease v5.2.7 b65204b\n\nv5.2.6\n\n28 October 2020\n\n\nrelease v5.2.6 f24dcc7\n\nv5.2.5\n\n28 October 2020\n\n\nrelease v5.2.5 6c6f88c\nprettier b20fd36\n\nv5.2.4\n\n28 October 2020\n\n\nMediaSession service 5742e12\nrelease v5.2.4 5059439\n\nv5.2.3\n\n27 October 2020\n\n\nrelease v5.2.3 d4abfdc\n\nv5.2.2\n\n27 October 2020\n\n\nrelease v5.2.2 478c88a\n\nv5.2.1\n\n26 October 2020\n\n\nrelease v5.2.1 e218808\n\nv5.2.0\n\n23 October 2020\n\n\nrelease v5.2.0 62f7474\nreload button be57fa9\n\nv5.1.0\n\n23 October 2020\n\n\nsimplified dir handle save, fixed test f278040\nrelease v5.1.0 9767a1a\n\nv5.0.0\n\n23 October 2020\n\n\nsave latest directory handle to indexeddb 597ee4f\nrelease v5.0.0 5a61397\n\nv4.7.0\n\n23 October 2020\n\n\nrelease v4.7.0 c86decf\n\nv4.6.0\n\n23 October 2020\n\n\ntypes added for mediasession and file-system bfd28ec\nrelease v4.6.0 e4d8e7c\n\nv4.5.0\n\n23 October 2020\n\n\nfix media reporting 220c7f4\nrelease v4.5.0 337a109\n\nv4.4.0\n\n23 October 2020\n\n\nupdates und native file stable changes 939f6b8\nrelease v4.4.0 77c544b\n\nv4.3.1\n\n12 October 2020\n\n\nrelease v4.3.1 3a9067b\n\nv4.3.0\n\n12 October 2020\n\n\nrelease v4.3.0 7def043\nanalyzer report 4a4b1c4\n\nv4.2.0\n\n12 October 2020\n\n\nrelease v4.2.0 866de3e\n\nv4.1.0\n\n6 October 2020\n\n\nrelease v4.1.0 98a793b\n\nv4.0.0\n\n6 October 2020\n\n\nrelease v4.0.0 d38c534\n\nv3.11.0\n\n6 October 2020\n\n\nrelease v3.11.0 2a4184c\n\nv3.10.0\n\n6 October 2020\n\n\nrelease v3.10.0 d562368\n\nv3.9.0\n\n6 October 2020\n\n\ntoggle to disable extraction of color from cover art a84cb97\nrelease v3.9.0 748a302\n\nv3.8.1\n\n6 October 2020\n\n\nrelease v3.8.1 bda90a4\n\nv3.8.0\n\n5 October 2020\n\n\nrelease v3.8.0 c73a2ce\n\nv3.7.0\n\n20 September 2020\n\n\nrelease v3.7.0 61eb69b\n\nv3.6.0\n\n9 September 2020\n\n\nrelease v3.6.0 22da5c7\n\nv3.5.1\n\n2 September 2020\n\n\nrelease v3.5.1 70990de\n\nv3.5.0\n\n2 September 2020\n\n\nrelease v3.5.0 3ccea4c\n\nv3.4.1\n\n30 August 2020\n\n\nrelease v3.4.1 5ed4032\n\nv3.4.0\n\n30 August 2020\n\n\noptimize loading of service worker and caching 5cec62d\nrelease v3.4.0 1385586\n\nv3.3.0\n\n30 August 2020\n\n\noptimize bundles 6cd086c\nrelease v3.3.0 27fdc57\noptimize loading of service worker f1cad4d\n\nv3.2.1\n\n23 August 2020\n\n\nrelease v3.2.1 bb4ded8\nicons compressed c550911\n\nv3.2.0\n\n23 August 2020\n\n\nstart page a7cf166\nrelease v3.2.0 14a5bd3\nlang and description in webmanifest 1e4fd87\n\nv3.1.2\n\n23 August 2020\n\n\nrelease v3.1.2 69ed6f4\n\nv3.1.1\n\n23 August 2020\n\n\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 800fdae\nrelease v3.1.1 7440340\n\nv3.1.0\n\n23 August 2020\n\n\ndeps 3597f8b\nnx 10.1 20050dc\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 0cec276\n\nv3.0.9\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest 8d5f783\nrelease v3.0.9 f3a09c7\n\nv3.0.8\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest b708169\nrelease v3.0.8 7a1bbe5\n\nv3.0.7\n\n21 August 2020\n\n\nrelease v3.0.7 1a92061\n\nv3.0.6\n\n21 August 2020\n\n\nrelease v3.0.6 f31886e\n\nv3.0.5\n\n21 August 2020\n\n\nrelease v3.0.5 e7c9ada\n\nv3.0.4\n\n21 August 2020\n\n\nrelease v3.0.4 20d1b8b\n\nv3.0.3\n\n21 August 2020\n\n\nrelease v3.0.2 ea1fc76\nrelease v3.0.3 f4f50ef\n\nv3.0.2\n\n21 August 2020\n\n\nrelease v3.0.2 bc4e4dc\n\nv3.0.1\n\n21 August 2020\n\n\nrelease v3.0.1 339d07b\n\nv3.0.0\n\n21 August 2020\n\n\nrelease v3.0.0 57f591d\nrelease v2.0.0 6a6ec18\nrelease v1.19.0 d6210df\n\nv2.0.2\n\n21 August 2020\n\n\nrelease v2.0.2 7b491de\n\nv2.0.1\n\n21 August 2020\n\n\nrelease v2.0.1 b820bf4\n\nv2.0.0\n\n21 August 2020\n\n\nreadded polyfills, prefetch, manifest.json, splashscreen e102482\nrelease v2.0.0 c3d7490\n\nv1.18.0\n\n21 August 2020\n\n\nrelease v1.18.0 5aed853\n\nv1.17.0\n\n21 August 2020\n\n\nrelease v1.17.0 901f502\n\nv1.16.0\n\n21 August 2020\n\n\nrelease v1.16.0 5af2ad7\n\nv1.15.0\n\n21 August 2020\n\n\nrelease v1.15.0 abccf03\n\nv1.14.0\n\n21 August 2020\n\n\nrelease v1.14.0 339af30\n\nv1.13.0\n\n21 August 2020\n\n\nrelease v1.13.0 fb05c12\n\nv1.12.0\n\n21 August 2020\n\n\nrelease v1.12.0 67a17ee\n\nv1.11.12\n\n21 August 2020\n\n\nrelease v1.11.12 bba9cb0\n\nv1.11.11\n\n21 August 2020\n\n\nrelease v1.11.11 ba2a28a\n\nv1.11.10\n\n21 August 2020\n\n\nrelease v1.11.10 b7e8f76\n\nv1.11.9\n\n21 August 2020\n\n\nrelease v1.11.9 52afb10\n\nv1.11.8\n\n21 August 2020\n\n\nrelease v1.11.8 e6d7fd2\n\nv1.11.7\n\n21 August 2020\n\n\nrelease v1.11.7 c2c0b8f\n\nv1.11.6\n\n21 August 2020\n\n\nrelease v1.11.6 91d4a54\n\nv1.11.5\n\n21 August 2020\n\n\nrelease v1.11.5 822ff08\n\nv1.11.4\n\n21 August 2020\n\n\nrelease v1.11.4 8c9c5c3\n\nv1.11.3\n\n21 August 2020\n\n\nrelease v1.11.3 8aabc76\n\nv1.11.2\n\n21 August 2020\n\n\nrelease v1.11.2 71e1d6c\n\nv1.11.1\n\n21 August 2020\n\n\nrelease v1.11.1 ed57248\nremove commonjs whitelist entry ad6497d\n\nv1.11.0\n\n19 August 2020\n\n\ndeps and polyfills removed 3e8e5d0\nrelease v1.11.0 289ec3d\ndisable zone for requestAnimationFrame 422fc8e\n\nv1.10.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\nrelease v1.10.0 f9c114e\nrelease v1.9.1 6b2d8b8\n\nv1.9.1\n\n17 August 2020\n\n\nrelease v1.9.0 68e8dc6\nrelease v1.9.1 d5cd7ea\n\nv1.9.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\n\nv1.8.0\n\n17 August 2020\n\n\nrelease v1.8.0 7484f35\nCreate LICENSE f69d368\nRename LICENSE to LICENSE.md 3773370\n\nv1.7.3\n\n30 July 2020\n\n\ndeps a00ccd1\nrelease v1.7.3 47842e1\nnode 14 build f5ee0e6\n\nv1.7.2\n\n24 July 2020\n\n\nrelease v1.7.2 101bbd0\n\nv1.7.1\n\n24 July 2020\n\n\nrelease v1.7.1 28465d6\n\nv1.7.0\n\n24 July 2020\n\n\nrelease v1.7.0 b5f68a1\n\nv1.6.4\n\n24 July 2020\n\n\nrelease v1.6.4 646c494\n\nv1.6.3\n\n24 July 2020\n\n\nrelease v1.6.3 17ed8a6\n\nv1.6.2\n\n18 July 2020\n\n\ndeps 667f875\nRevert \"support for seeking to position on android notification\" f2cfbcc\nrelease v1.6.2 85eb0ba\n\nv1.6.1\n\n10 July 2020\n\n\ndeps 228ee85\nrelease v1.6.1 949055a\n\nv1.6.0\n\n3 July 2020\n\n\nsupport for seeking to position on android notification 9fa1a37\nrelease v1.6.0 4f1794f\n\nv1.5.0\n\n3 July 2020\n\n\ndeps und position reporting to browser 7a6f294\nrelease v1.5.0 f076ced\n\nv1.4.1\n\n26 June 2020\n\n\nangular.json schema und allowedCommonJsDeps 654bac2\nrelease v1.4.1 250d7f9\n\nv1.4.0\n\n26 June 2020\n\n\ndeps fix 4e72fcd\nng 10 update b6bd950\nadded missing decorator 8515368\n\nv1.3.0\n\n4 June 2020\n\n\nnew icons for visualization modes a8073a9\nrelease v1.3.0 b241b46\n\nv1.2.2\n\n28 May 2020\n\n\ndeps 87adc2c\nrelease v1.2.2 abc0b07\n\nv1.2.1\n\n20 May 2020\n\n\ndeps be025cd\nrelease v1.2.1 0b30a9f\n\nv1.2.0\n\n10 May 2020\n\n\nname changes, native file service refactored 170ea47\nrelease v1.2.0 cb01a92\nname changes, native file service refactored 8264f64\n\nv1.1.0\n\n8 May 2020\n\n\nrelease v1.1.0 a2a4811\nopen folders recursive 1c9fedf\n\nv1.0.5\n\n8 May 2020\n\n\nrelease v1.0.5 1604161\n\nv1.0.4\n\n5 May 2020\n\n\nfix: package.json, package-lock.json & .snyk to reduce vulnerabilities #2\nrelease v1.0.4 8e2ff5a\n\nv1.0.3\n\n2 May 2020\n\n\nrelease v1.0.3 8e36da3\n\nv1.0.2\n\n2 May 2020\n\n\nrelease v1.0.2 6926167\n\nv1.0.1\n\n2 May 2020\n\n\nrelease v1.0.1 194199c\n\nv1.0.0\n\n2 May 2020\n\n\nremoved electron, added compodoc 22afab3\nrelease v1.0.0 18cab80\nUpdate README.md 0e060af\n\nv0.29.0\n\n25 April 2020\n\n\nrelease v0.29.0 669facb\n\nv0.28.0\n\n25 April 2020\n\n\ndeps 9d2ef7e\nrelease v0.28.0 eaf70a8\n\nv0.25.0\n\n15 April 2020\n\n\nrelease v0.25.0 0581767\n\nv0.24.0\n\n15 April 2020\n\n\nrelease v0.24.0 a457b9c\ndeps linting formating b04ce8b\nUpdate NOTES.md 0903cd2\n\nv0.23.0\n\n4 April 2020\n\n\nci d954540\nrelease v0.23.0 95902bb\nci 53a8631\n\nv0.22.0\n\n4 April 2020\n\n\nrelease v0.22.0 f0f7618\n\nv0.21.0\n\n31 March 2020\n\n\ndependencies e34b732\nreadme e7032e1\nfile extensions list 53749c8\n\nv0.20.0\n\n30 March 2020\n\n\nrelease v0.20.0 572a9f8\n\nv0.19.0\n\n30 March 2020\n\n\nrelease v0.19.0 72075fe\nscreen wakelock when playing, navigation fixed especially for mobile ae93b7a\norigin trials for native file system and wakelock api a5849e4\n\nv0.18.0\n\n29 March 2020\n\n\nrelease v0.18.0 fefaba0\nprevent browser history 097fe6b\n\nv0.17.0\n\n29 March 2020\n\n\nprevent browser history 80b42ce\nrelease v0.17.0 4e9a327\n\nv0.16.0\n\n29 March 2020\n\n\ndeps f1b02b7\nrelease v0.16.0 5fe0756\n\nv0.15.0\n\n29 March 2020\n\n\ndeps 092dc60\nnx tags 6782ecd\nrelease v0.15.0 0cabcad\n\nv0.14.0\n\n24 March 2020\n\n\nrelease v0.14.0 dd93cb1\n\nv0.13.0\n\n24 March 2020\n\n\nrelease v0.13.0 162acda\n\nv0.12.0\n\n24 March 2020\n\n\nrelease v0.12.0 79fee74\n\nv0.11.0\n\n24 March 2020\n\n\nrelease v0.11.0 828148a\n\nv0.10.0\n\n24 March 2020\n\n\nrelease v0.10.0 35a78e4\n\nv0.9.0\n\n24 March 2020\n\n\nrelease v0.9.0 2011e46\n\nv0.8.0\n\n24 March 2020\n\n\nrelease v0.8.0 02c06cb\n\nv0.7.0\n\n24 March 2020\n\n\nrelease v0.7.0 75fc12c\n\nv0.6.0\n\n24 March 2020\n\n\nrelease v0.6.0 184a834\n\nv0.5.0\n\n24 March 2020\n\n\nrelease v0.5.0 ab311db\n\nv0.4.0\n\n24 March 2020\n\n\nrelease v0.4.0 42f56c1\nfixed visuals cefa1f1\nplay rewrite and project preparations 1098d6a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 19.2.7\n        \n            @angular/common : 19.2.4\n        \n            @angular/compiler : 19.2.4\n        \n            @angular/core : 19.2.4\n        \n            @angular/forms : 19.2.4\n        \n            @angular/material : 19.2.7\n        \n            @angular/platform-browser : 19.2.4\n        \n            @angular/platform-browser-dynamic : 19.2.4\n        \n            @angular/router : 19.2.4\n        \n            @angular/service-worker : 19.2.4\n        \n            @thebespokepixel/es-tinycolor : ^3.1.0\n        \n            date-fns : ^4.1.0\n        \n            lucene-escape-query : ^1.0.1\n        \n            music-metadata : 11.0.2\n        \n            ngx-date-fns : 12.0.0\n        \n            ngx-indexed-db : 19.4.3\n        \n            ngx-pipes : 3.2.2\n        \n            ngx-webstorage : 19.0.1\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            spark-md5 : ^3.0.2\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../helpers-time.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/helpers-time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    40 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.2.25\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : MIT\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nuse webworker for node-vibrant\nAudio-File explorer + Suche\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            EqualizerGainValues   (apps/.../audio.service.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/audio.service.ts\n    \n    \n        \n            \n                \n                    \n                    EqualizerGainValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../idexed-db-config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../player.types.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideExperimentalZonelessChangeDetection(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/idexed-db-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'gblasterDB',\n  version: 3,\n  objectStoresMeta: [\n    {\n      store: 'library',\n      storeConfig: { keyPath: 'hash', autoIncrement: false },\n      storeSchema: [\n        { name: 'hash', keypath: 'hash', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'directoryHandles',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/player.types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
