var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.072,1,2.836]],["body/interfaces/ActionCache.html",[0,0.127,1,4.338,2,1.049,3,0.231,4,0.231,5,0.142,6,3.407,7,0.385,8,0.549,9,5.334,10,1.558,11,0.524,12,0.011,13,0.399,14,5.024,15,3.868,16,1.466,17,5.066,18,2.093,19,0.714,20,3.407,21,1.311,22,1.69,23,4.772,24,3.407,25,2.581,26,3.616,27,3.616,28,3.407,29,3.07,30,3.616,31,3.407,32,3.407,33,3.407,34,3.227,35,3.227,36,4.926,37,3.07,38,3.616,39,2.425,40,3.616,41,2.754,42,3.616,43,3.169,44,3.616,45,3.909,46,3.616,47,3.227,48,3.616,49,3.407,50,3.616,51,3.407,52,3.616,53,3.407,54,3.616,55,3.227,56,3.616,57,3.407,58,3.616,59,3.07,60,3.616,61,3.227,62,3.616,63,3.407,64,3.616,65,3.407,66,3.616,67,3.407,68,3.616,69,3.407,70,3.227,71,3.616,72,3.616,73,3.616,74,3.616,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.072,77,1.407]],["body/interfaces/Album.html",[0,0.046,2,0.563,3,0.124,4,0.124,5,0.172,7,0.133,8,0.355,10,1.162,11,0.344,12,0.011,13,0.203,16,0.787,19,1.077,21,0.704,39,1.566,75,0.005,76,0.005,77,2.415,78,2.474,79,3.703,80,1.335,81,3.245,82,2.006,83,0.7,84,0.964,85,3.245,86,0.517,87,2.973,88,2.486,89,0.383,90,1.733,91,1.972,92,1.649,93,1.506,94,4.065,95,3.143,96,1.574,97,3.787,98,1.733,99,2.801,100,1.829,101,1.201,102,0.935,103,3.44,104,3.787,105,3.787,106,3.44,107,2.077,108,2.409,109,1.829,110,3.44,111,1.445,112,3.44,113,1.288,114,3.44,115,3.44,116,3.44,117,2.247,118,3.44,119,2.077,120,1.445,121,3.18,122,2.077,123,1.309,124,1.829,125,3.44,126,2.077,127,2.077,128,2.524,129,1.942,130,3.44,131,2.077,132,3.787,133,3.787,134,3.787,135,3.787,136,3.787,137,2.474,138,1.055,139,2.474,140,1.288,141,2.474,142,1.055,143,0.348,144,1.089,145,1.288,146,1.048,147,1.829,148,1.829,149,2.247,150,1.942,151,1.733,152,2.052,153,4.601,154,2.474,155,2.474,156,2.049,157,3.787,158,2.474,159,2.474,160,1.61,161,2.474,162,2.474,163,2.474,164,2.474,165,2.474,166,2.474,167,4.179,168,2.474,169,2.247,170,2.474,171,6.292,172,5.155,173,2.474,174,2.474,175,2.474,176,3.124,177,1.667,178,2.474,179,2.474,180,3.787,181,5.155,182,3.787,183,4.601,184,2.409,185,2.247,186,3.44,187,5.047,188,2.474,189,1.942,190,3.787,191,2.474,192,2.474,193,2.474,194,2.474,195,2.474,196,2.474,197,3.44,198,2.474,199,5.54,200,2.474,201,2.474,202,2.973,203,1.474,204,2.474,205,4.601,206,2.247,207,1.649,208,4.601,209,2.474,210,2.474,211,4.601,212,2.474,213,2.474,214,1.649,215,3.787,216,2.474,217,2.499,218,2.474,219,3.787,220,3.787,221,2.474,222,2.474,223,2.474,224,2.474,225,2.474,226,2.474,227,2.247,228,2.474,229,2.247,230,2.474,231,2.474,232,2.474,233,2.089,234,1.942,235,1.162,236,2.474,237,2.64,238,2.474,239,2.474,240,2.474,241,2.474,242,2.474,243,1.201,244,1.39,245,2.474,246,2.247,247,1.649,248,0.908,249,2.474,250,2.474,251,2.474,252,3.787,253,2.474,254,2.474,255,2.474,256,2.474,257,2.247,258,2.247,259,2.474,260,2.474,261,2.474,262,4.601,263,2.474,264,5.155,265,2.474,266,2.474,267,3.787,268,3.787,269,1.942,270,2.474,271,2.474,272,2.474,273,2.474,274,2.474,275,2.474,276,2.474,277,2.474,278,3.787,279,3.787,280,2.474,281,1.445,282,2.474,283,2.474,284,2.474,285,1.733,286,2.474,287,2.474,288,2.247,289,2.474]],["title/interfaces/AnalyserConfig.html",[0,0.072,290,2.439]],["body/interfaces/AnalyserConfig.html",[0,0.137,2,0.997,3,0.22,4,0.22,5,0.135,7,0.235,8,0.532,10,1.631,11,0.538,12,0.011,13,0.402,18,2.862,19,1.033,22,1.606,25,2.498,75,0.008,76,0.008,290,3.61,291,2.784,292,4.142,293,4.441,294,4.441,295,4.441,296,2.665,297,2.556,298,2.665,299,2.665,300,2.665,301,2.665,302,2.665,303,2.665,304,2.665,305,2.784,306,2.784,307,2.556,308,3.455,309,3.315,310,3.315,311,3.315,312,2.556,313,3.315,314,2.665,315,2.853,316,2.853,317,3.315,318,2.665,319,2.665,320,2.556,321,2.784,322,2.917,323,2.457,324,3.535,325,2.665,326,2.457,327,4.007,328,3.067,329,2.665,330,3.315,331,3.601,332,3.601,333,2.365,334,3.315,335,3.741]],["title/components/AppComponent.html",[84,0.977,336,1.743]],["body/components/AppComponent.html",[3,0.218,4,0.218,5,0.174,12,0.011,13,0.232,75,0.008,76,0.008,80,1.512,83,0.689,84,1.596,86,0.906,89,0.671,111,2.53,123,1.604,138,2.404,142,2.404,143,0.609,144,1.907,156,1.837,336,3.017,337,2.069,338,2.034,339,2.034,340,2.034,341,4.935,342,3.95,343,3.95,344,3.3,345,3.38,346,1.744,347,3.017,348,6.423,349,3.265,350,0.987,351,4.935,352,3.035,353,4.935,354,4.935,355,3.035,356,2.432,357,4.17,358,3.638,359,5.121,360,4.935,361,4.935,362,4.935,363,4.935,364,4.935,365,4.935,366,4.935,367,3.638,368,4.935,369,4.935,370,4.935,371,4.935,372,4.935,373,4.935,374,4.935,375,2.034,376,2.562,377,2.194,378,1.738,379,3.117,380,2.034,381,2.034,382,1.969,383,1.544,384,2.034,385,1.969,386,2.034,387,1.969,388,1.847,389,2.034,390,1.738,391,1.791,392,1.791,393,2.648,394,1.969,395,3.117,396,1.969,397,2.034,398,1.969,399,1.791,400,2.034,401,1.969,402,2.034,403,1.847,404,1.969,405,1.969,406,2.034,407,1.969,408,1.907,409,2.034,410,1.969,411,2.034,412,1.969,413,1.847,414,1.969,415,1.969,416,1.969,417,1.907,418,1.969,419,2.034]],["title/injectables/AudioService.html",[420,0.757,421,2.153]],["body/injectables/AudioService.html",[0,0.042,3,0.113,4,0.113,5,0.164,7,0.12,8,0.329,10,1.423,11,0.455,12,0.011,13,0.232,16,2.11,21,1.888,22,1.586,39,2.969,41,1.647,75,0.005,76,0.005,80,1.387,83,0.477,85,2.049,86,0.469,88,2.336,89,0.347,91,1.167,96,1.426,102,0.847,143,0.315,146,1.426,152,2.385,156,1.836,160,1.146,177,2.152,233,1.541,237,0.899,244,1.287,269,1.76,323,2.745,333,2.336,346,0.693,349,2.252,350,1.671,377,0.872,420,0.693,421,1.969,422,1.019,423,2.036,424,4.323,425,3.63,426,3.394,427,4.442,428,3.926,429,4.323,430,4.323,431,3.926,432,4.323,433,4.442,434,0.893,435,4.891,436,3.997,437,3.997,438,3.84,439,4.442,440,4.891,441,3.997,442,3.997,443,3.997,444,3.997,445,3.997,446,3.997,447,3.187,448,4.323,449,2.553,450,2.553,451,1.666,452,3.508,453,4.459,454,2.553,455,2.171,456,1.274,457,3.394,458,3.508,459,3.874,460,2.553,461,3.997,462,2.553,463,2.553,464,1.365,465,2.553,466,3.508,467,4.822,468,2.553,469,2.069,470,2.595,471,2.98,472,2.553,473,2.553,474,3.508,475,2.553,476,3.508,477,5.309,478,2.553,479,3.508,480,2.553,481,3.508,482,3.508,483,2.553,484,2.553,485,3.508,486,2.553,487,4.442,488,2.553,489,2.553,490,3.508,491,2.75,492,2.75,493,2.75,494,2.881,495,2.632,496,2.881,497,2.881,498,3.028,499,3.028,500,3.028,501,2.553,502,4.728,503,2.553,504,2.553,505,4.891,506,2.553,507,2.553,508,2.553,509,3.508,510,2.553,511,3.508,512,2.946,513,2.553,514,2.553,515,2.553,516,1.426,517,1.309,518,2.946,519,2.946,520,3.394,521,0.733,522,2.241,523,1.426,524,2.241,525,4.164,526,2.241,527,2.241,528,2.241,529,2.241,530,4.442,531,2.241,532,2.241,533,2.241,534,3.508,535,2.241,536,2.241,537,2.241,538,2.241,539,2.946,540,2.036,541,2.946,542,2.241,543,2.241,544,2.595,545,3.187,546,2.241,547,2.241,548,2.241,549,2.241,550,1.76,551,2.241,552,2.241,553,2.241,554,3.508,555,2.241,556,1.882,557,1.426,558,1.882,559,1.57,560,2.241,561,1.658,562,1.882,563,2.241,564,2.036,565,3.508,566,3.508,567,2.241,568,2.754,569,3.508,570,3.508,571,2.241,572,2.241,573,2.241,574,2.241,575,2.241,576,2.241,577,2.241,578,2.241,579,1.57,580,1.365,581,1.882,582,2.241,583,2.241,584,2.241,585,2.241,586,2.241,587,2.241,588,3.508,589,2.241,590,2.241,591,2.241,592,2.241,593,2.241,594,2.241,595,3.187,596,2.241,597,2.241,598,2.036,599,2.241,600,1.76,601,1.258,602,2.241,603,1.658,604,2.241,605,2.241,606,2.241,607,2.241,608,2.241,609,2.241,610,2.241,611,2.241,612,2.241,613,2.241,614,2.241,615,2.241,616,2.241,617,2.241,618,2.241,619,2.241,620,2.241,621,2.241,622,3.508,623,2.241,624,2.036,625,2.036,626,2.036,627,2.036,628,1.658,629,2.241,630,2.241,631,2.241,632,2.241,633,3.508,634,2.241,635,2.241,636,2.241,637,2.241,638,2.241,639,2.241,640,3.508,641,2.241,642,2.241,643,2.241,644,2.241,645,2.241,646,2.241,647,2.241,648,2.241,649,2.241,650,2.241,651,2.241,652,2.241,653,2.241,654,2.241]],["title/interfaces/AxisGamepadAction.html",[0,0.072,24,2.836]],["body/interfaces/AxisGamepadAction.html",[0,0.127,1,3.396,2,1.046,3,0.231,4,0.231,5,0.142,6,3.396,7,0.346,8,0.548,9,3.605,10,1.466,11,0.524,12,0.011,13,0.399,14,5.453,15,3.857,16,1.461,17,5.328,18,2.087,19,0.712,20,3.396,21,1.307,22,1.685,23,4.766,24,4.329,25,2.836,26,5.328,27,5.328,28,3.396,29,3.06,30,3.605,31,3.396,32,3.396,33,3.396,34,3.217,35,3.217,36,4.916,37,3.06,38,3.605,39,2.42,40,3.605,41,2.749,42,3.605,43,3.163,44,3.605,45,3.901,46,3.605,47,3.217,48,3.605,49,3.396,50,3.605,51,3.396,52,3.605,53,3.396,54,3.605,55,3.217,56,3.605,57,3.396,58,3.605,59,3.06,60,3.605,61,3.217,62,3.605,63,3.396,64,3.605,65,3.396,66,3.605,67,3.396,68,3.605,69,3.396,70,3.217,71,3.605,72,3.605,73,3.605,74,3.605,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[120,2.24,655,3.483]],["body/pipes/BandPipe.html",[3,0.261,4,0.261,5,0.161,11,0.389,12,0.011,13,0.279,19,0.98,43,2.81,75,0.009,76,0.009,80,1.552,83,0.618,89,0.806,96,3.309,98,3.644,120,3.695,123,1.48,143,0.731,145,2.709,160,1.597,350,1.184,434,1.325,451,1.288,455,1.854,456,1.088,459,4.512,464,3.167,469,2.134,495,3.167,520,4.966,655,5.746,656,5.925,657,6.326,658,2.603,659,4.966,660,4.368,661,5.746,662,6.817,663,5.925,664,5.746,665,5.925,666,5.925,667,5.925,668,5.925]],["title/interfaces/BarsVisualizerOptions.html",[0,0.072,330,2.24]],["body/interfaces/BarsVisualizerOptions.html",[0,0.135,2,0.956,3,0.211,4,0.211,5,0.13,7,0.225,8,0.517,10,1.638,11,0.552,12,0.011,13,0.399,18,3.179,19,1.016,22,1.54,25,2.717,75,0.008,76,0.008,290,2.67,291,2.67,292,4.003,293,2.798,294,2.798,295,2.798,296,2.556,297,2.452,298,2.556,299,2.556,300,2.556,301,2.556,302,2.556,303,2.556,304,2.556,305,2.67,306,2.67,307,2.452,308,4.148,309,3.979,310,3.979,311,3.979,312,2.452,313,3.226,314,2.556,315,2.776,316,2.776,317,3.226,318,2.556,319,2.556,320,2.452,321,2.67,322,2.798,323,2.356,324,3.465,325,2.556,326,2.356,327,4.172,328,2.984,329,2.556,330,3.605,331,3.91,332,3.78,333,3.544,334,3.226,335,3.681]],["title/interfaces/BaseVisualizerOptions.html",[0,0.072,327,2.439]],["body/interfaces/BaseVisualizerOptions.html",[0,0.136,2,0.987,3,0.218,4,0.218,5,0.134,7,0.232,8,0.528,10,1.624,11,0.544,12,0.011,13,0.401,18,3.207,19,1.129,22,1.59,25,2.481,75,0.008,76,0.008,290,2.756,291,2.756,292,3.726,293,2.887,294,2.887,295,2.887,296,2.637,297,2.53,298,2.637,299,2.637,300,2.637,301,2.637,302,2.637,303,2.637,304,2.637,305,2.756,306,2.756,307,2.53,308,3.433,309,3.293,310,3.293,311,3.293,312,2.53,313,3.293,314,2.637,315,3.46,316,3.46,317,4.02,318,2.637,319,2.637,320,2.53,321,2.756,322,2.887,323,2.432,324,3.518,325,2.637,326,2.432,327,4.223,328,3.587,329,4.042,330,3.293,331,3.587,332,3.587,333,2.341,334,3.293,335,3.726]],["title/pipes/BitratePipe.html",[120,2.24,669,3.483]],["body/pipes/BitratePipe.html",[3,0.268,4,0.268,5,0.165,10,1.441,11,0.398,12,0.011,13,0.286,19,0.995,39,2.204,75,0.009,76,0.009,80,1.569,83,0.52,89,0.826,98,3.735,120,3.75,123,1.517,143,0.75,145,2.777,156,1.476,160,1.504,217,2.939,350,1.214,434,1.358,451,1.321,455,1.901,456,1.115,469,1.932,495,3.246,658,2.356,659,5.041,660,4.477,661,5.832,664,5.832,669,5.832,670,6.421,671,6.074,672,6.496,673,6.074,674,6.074,675,6.074]],["title/interfaces/ButtonGamepadAction.html",[0,0.072,28,2.836]],["body/interfaces/ButtonGamepadAction.html",[0,0.127,1,3.433,2,1.057,3,0.233,4,0.233,5,0.143,6,3.433,7,0.347,8,0.552,9,3.645,10,1.471,11,0.509,12,0.011,13,0.4,14,5.315,15,3.899,16,1.477,17,5.349,18,2.11,19,0.719,20,3.433,21,1.321,22,1.704,23,4.79,24,3.433,25,2.85,26,3.645,27,3.645,28,4.359,29,4.54,30,3.645,31,3.433,32,3.433,33,3.433,34,3.252,35,3.252,36,4.95,37,3.094,38,3.645,39,2.437,40,3.645,41,2.768,42,3.645,43,3.185,44,3.645,45,3.928,46,3.645,47,3.252,48,3.645,49,3.433,50,3.645,51,3.433,52,3.645,53,3.433,54,3.645,55,3.252,56,3.645,57,3.433,58,3.645,59,3.094,60,3.645,61,3.252,62,3.645,63,3.433,64,3.645,65,3.433,66,3.645,67,3.433,68,3.645,69,3.433,70,3.252,71,3.645,72,3.645,73,3.645,74,3.645,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.072,676,3.835]],["body/interfaces/Chainable.html",[0,0.088,2,1.077,3,0.238,4,0.238,5,0.184,7,0.254,12,0.011,16,1.898,75,0.008,76,0.008,83,0.582,350,1.077,377,1.841,434,1.519,451,1.172,456,0.989,518,5.009,544,3.499,558,5.009,676,5.965,677,5.389,678,5.761,679,5.389,680,5.389,681,4.731,682,5.389,683,4.731,684,5.389,685,5.389,686,5.389,687,5.965,688,7.815,689,5.965,690,5.965,691,5.418,692,5.389,693,5.389,694,5.389,695,5.389,696,4.731,697,5.389,698,5.389,699,5.389,700,5.389,701,7.815,702,5.389,703,5.389,704,3.314,705,5.389,706,5.389,707,6.796,708,5.389,709,6.796,710,6.796,711,5.389,712,5.389,713,5.389,714,5.389,715,6.796,716,4.832,717,5.389,718,5.389,719,5.389,720,5.389,721,2.556]],["title/interfaces/Color.html",[0,0.072,722,2.836]],["body/interfaces/Color.html",[0,0.106,2,1.288,3,0.284,4,0.284,5,0.175,7,0.303,8,0.623,11,0.528,12,0.011,13,0.303,19,1.168,22,2.593,75,0.009,76,0.009,80,1.661,722,4.918,723,6.442,724,7.292,725,4.86]],["title/interfaces/ColorConfig.html",[0,0.072,726,2.439]],["body/interfaces/ColorConfig.html",[0,0.129,2,1.093,3,0.241,4,0.241,5,0.203,7,0.257,8,0.564,11,0.515,12,0.011,13,0.389,19,1.189,25,2.112,75,0.008,76,0.008,77,1.761,79,3.198,81,2.803,82,2.343,83,0.642,94,3.198,95,2.827,123,1.962,124,3.549,176,2.181,203,1.868,281,3.515,315,3.466,316,3.466,456,1.442,459,3.053,491,3.053,492,3.053,493,3.053,494,3.198,495,2.922,496,3.198,497,3.198,498,3.362,499,3.362,500,3.362,579,3.362,726,3.829,727,3.768,728,4.217,729,3.362,730,2.047,731,3.515,732,4.452,733,2.922,734,4.726,735,4.864,736,3.198,737,3.549,738,2.593,739,3.768,740,3.549,741,3.549,742,3.198]],["title/interfaces/CoverArtImage.html",[0,0.072,743,2.836]],["body/interfaces/CoverArtImage.html",[0,0.119,2,0.882,3,0.195,4,0.195,5,0.12,7,0.208,8,0.49,10,0.81,11,0.496,12,0.011,13,0.208,19,1.147,22,2.175,75,0.007,76,0.007,77,1.42,82,1.507,83,0.682,86,0.81,89,0.6,101,1.88,102,1.463,143,0.544,146,1.51,152,1.665,156,1.934,160,1.705,203,1.507,207,2.58,217,2.98,233,2.113,235,2.783,237,2.546,243,2.878,244,2.508,248,1.42,285,2.712,346,1.198,383,1.38,420,1.033,521,1.267,658,1.42,721,2.827,730,1.651,743,4.383,744,1.601,745,3.039,746,4.984,747,3.564,748,4.984,749,5.232,750,2.357,751,2.261,752,3.039,753,2.863,754,2.863,755,3.462,756,2.231,757,1.759,758,2.173,759,2.261,760,2.357,761,3.87,762,2.725,763,4.383,764,2.712,765,2.863,766,4.108,767,3.039,768,3.039,769,2.712,770,2.863,771,2.863,772,2.357,773,2.712,774,2.261,775,2.357,776,2.357,777,3.039,778,3.039,779,3.039,780,2.357,781,2.528,782,2.261,783,3.056,784,4.108,785,3.039,786,3.039,787,3.186,788,2.58,789,3.039,790,3.039,791,3.039,792,3.039,793,3.039,794,3.039,795,3.186,796,4.108,797,3.039,798,3.039,799,2.863,800,3.039,801,3.039,802,3.039,803,3.039,804,4.108,805,3.039,806,3.039,807,1.88,808,3.039,809,3.039,810,2.457,811,3.039,812,3.039,813,3.039]],["title/interfaces/CoverArtResponse.html",[0,0.072,771,2.836]],["body/interfaces/CoverArtResponse.html",[0,0.12,2,0.9,3,0.199,4,0.199,5,0.122,7,0.212,8,0.497,10,0.827,11,0.295,12,0.011,13,0.212,19,1.133,22,1.451,75,0.007,76,0.007,77,1.451,82,1.539,83,0.686,86,0.827,89,0.613,101,1.92,102,1.494,143,0.556,146,1.521,152,1.688,156,1.945,160,1.712,203,1.539,207,2.634,217,2.996,233,2.136,235,2.813,237,2.568,243,2.909,244,2.524,248,1.451,285,2.769,346,1.223,383,1.409,420,1.048,521,1.294,658,1.451,721,2.867,730,1.686,743,4.736,744,1.634,745,3.103,746,3.103,747,2.219,748,3.103,750,2.407,751,2.309,752,3.103,753,2.923,754,2.923,755,3.499,756,2.263,757,1.796,758,2.219,759,2.309,760,2.407,761,3.925,762,2.764,763,4.43,764,2.769,765,2.923,766,4.166,767,3.103,768,3.103,769,2.769,770,2.923,771,3.925,772,3.899,773,2.769,774,2.309,775,2.407,776,2.407,777,3.103,778,3.103,779,3.103,780,2.407,781,2.555,782,2.309,783,3.099,784,4.166,785,3.103,786,3.103,787,3.231,788,2.634,789,3.103,790,3.103,791,3.103,792,3.103,793,3.103,794,3.103,795,3.231,796,4.166,797,3.103,798,3.103,799,2.923,800,3.103,801,3.103,802,3.103,803,3.103,804,4.166,805,3.103,806,3.103,807,1.92,808,3.103,809,3.103,810,2.492,811,3.103,812,3.103,813,3.103]],["title/interfaces/CoverColor.html",[0,0.072,814,2.836]],["body/interfaces/CoverColor.html",[0,0.136,2,1.18,3,0.26,4,0.26,5,0.21,7,0.278,8,0.591,11,0.472,12,0.011,13,0.389,19,1.191,75,0.009,76,0.009,82,2.017,83,0.506,244,1.902,456,1.482,725,4.721,730,2.21,731,3.027,744,2.143,756,2.692,757,2.355,762,3.288,807,2.517,810,2.434,814,5.58,815,4.069,816,5.239,817,3.156,818,3.833,819,3.833,820,3.833,821,3.833,822,3.833,823,3.631,824,3.631,825,2.801]],["title/interfaces/CoverColorPalette.html",[0,0.072,731,2.24]],["body/interfaces/CoverColorPalette.html",[0,0.134,2,1.111,3,0.245,4,0.245,5,0.205,7,0.262,8,0.57,11,0.544,12,0.011,13,0.383,19,1.144,75,0.008,76,0.008,82,1.899,83,0.476,244,1.79,456,1.601,725,3.251,730,2.08,731,3.551,744,2.017,756,2.593,757,2.217,762,3.167,807,2.369,810,2.291,814,5.77,815,3.83,816,3.607,817,4.223,818,5.129,819,5.129,820,5.129,821,5.129,822,5.129,823,3.417,824,3.417,825,2.636]],["title/components/CoverDisplayComponent.html",[84,0.977,382,1.743]],["body/components/CoverDisplayComponent.html",[3,0.167,4,0.167,5,0.145,7,0.178,8,0.44,12,0.011,13,0.178,21,1.554,75,0.007,76,0.007,77,1.725,79,4.18,80,1.353,81,2.745,83,0.612,84,1.391,85,3.663,86,0.693,89,0.514,95,2.945,96,2.109,123,1.338,138,2.004,140,2.448,142,2.004,143,0.466,144,1.459,146,0.755,152,2.215,156,1.301,160,1.101,336,1.507,337,1.725,338,1.557,339,1.557,340,1.557,342,3.293,343,3.293,344,3.212,345,3.276,347,1.507,350,1.243,352,2.323,357,3.476,358,2.784,367,2.784,375,1.557,376,2.136,377,1.829,378,1.33,379,2.79,380,1.557,381,1.557,382,2.7,383,2.545,384,1.557,385,1.507,386,1.557,387,1.507,388,1.414,389,1.557,390,1.33,391,1.371,392,1.371,393,2.207,394,1.507,395,2.79,396,1.507,397,1.557,398,1.507,399,1.371,400,1.557,401,1.507,402,1.557,403,1.414,404,1.507,405,1.507,406,1.557,407,1.507,408,1.459,409,1.557,410,1.507,411,1.557,412,1.507,413,1.414,414,1.507,415,1.507,416,1.507,417,1.459,418,1.507,419,1.557,426,3.69,469,1.643,669,4.96,670,5.941,672,5.396,738,2.54,826,5.941,827,3.777,828,3.69,829,4.586,830,5.355,831,5.355,832,6.221,833,6.768,834,5.355,835,5.355,836,5.355,837,5.355,838,3.777,839,5.355,840,3.777,841,5.355,842,3.777,843,2.323,844,3.316,845,3.777,846,5.941,847,5.355,848,5.355,849,5.355,850,6.768,851,6.768,852,3.777,853,6.768,854,3.476,855,6.768,856,6.768,857,6.768,858,6.768,859,5.355,860,5.355,861,3.777]],["title/interfaces/DirHandleEntry.html",[0,0.072,862,3.483]],["body/interfaces/DirHandleEntry.html",[0,0.077,2,0.937,3,0.207,4,0.207,5,0.219,7,0.221,8,0.511,10,1.279,11,0.407,12,0.011,13,0.221,25,1.812,41,2.56,75,0.008,76,0.008,83,0.661,86,0.861,89,0.638,90,2.884,91,2.144,92,2.743,93,2.506,101,1.999,102,1.556,143,0.579,146,0.937,147,3.045,148,3.045,156,1.964,160,1.662,233,2.414,235,1.933,237,2.89,243,1.999,244,2.001,281,2.404,346,1.274,356,2.311,420,1.076,471,3.06,521,1.347,557,2.619,658,2.001,704,2.884,762,3.526,781,2.607,862,4.952,863,2.884,864,2.311,865,3.739,866,3.457,867,5.657,868,5.462,869,2.884,870,4.14,871,2.884,872,3.468,873,3.045,874,3.739,875,3.457,876,3.045,877,5.911,878,4.117,879,6.114,880,4.117,881,6.114,882,4.117,883,3.045,884,4.117,885,4.117,886,4.117,887,4.117,888,3.457,889,4.117,890,3.82,891,3.739,892,4.117,893,4.117,894,4.117,895,3.739,896,3.739,897,4.117,898,4.117,899,4.117,900,3.739,901,4.117,902,3.739,903,4.117,904,4.117,905,4.117,906,4.117,907,3.739,908,3.232,909,6.114,910,4.952,911,3.739,912,4.117,913,4.117,914,4.117]],["title/components/EqualizerComponent.html",[84,0.977,385,1.743]],["body/components/EqualizerComponent.html",[3,0.202,4,0.202,5,0.166,7,0.324,8,0.503,10,1.264,11,0.301,12,0.011,13,0.216,19,0.832,21,1.72,75,0.007,76,0.007,80,1.53,83,0.629,84,1.539,86,0.841,89,0.623,93,2.449,95,2.521,123,1.528,138,2.29,140,2.796,142,2.29,143,0.566,144,1.77,156,1.113,160,0.942,336,1.828,337,1.97,338,1.889,339,1.889,340,1.889,342,3.761,343,3.761,344,3.277,345,3.353,347,1.828,350,1.376,352,2.818,375,1.889,376,2.44,377,2.09,378,1.613,379,3.028,380,1.889,381,1.889,382,1.828,383,1.434,384,1.889,385,2.93,386,1.889,387,1.828,388,1.715,389,1.889,390,1.613,391,1.663,392,1.663,393,2.521,394,1.828,395,3.028,396,1.828,397,1.889,398,1.828,399,1.663,400,1.889,401,1.828,402,1.889,403,1.715,404,1.828,405,1.828,406,1.889,407,1.828,408,1.77,409,1.889,410,1.828,411,1.889,412,1.828,413,1.715,414,1.828,415,1.828,416,1.828,417,1.77,418,1.828,419,1.889,421,3.619,434,1.367,451,0.996,455,1.434,456,0.841,469,1.818,519,5.075,520,5.628,568,4.215,655,5.489,915,4.582,916,4.877,917,5.489,918,6.117,919,6.117,920,7.654,921,6.117,922,6.117,923,4.582,924,3.578,925,4.582,926,4.582,927,2.818,928,4.582,929,3.378,930,6.117,931,4.582]],["title/interfaces/EqualizerGainValues.html",[0,0.072,427,3.483]],["body/interfaces/EqualizerGainValues.html",[0,0.056,2,0.677,3,0.149,4,0.149,5,0.134,10,1.39,12,0.011,13,0.275,16,1.382,22,1.091,39,2.887,41,1.396,75,0.006,76,0.006,83,0.551,85,2.537,86,0.622,88,2.347,89,0.461,91,1.548,96,1.89,102,1.123,143,0.418,146,1.544,152,2.247,156,1.954,160,1.323,177,2.486,233,1.059,237,1.192,244,1.594,269,2.333,323,1.668,333,1.606,346,0.919,349,1.548,350,0.677,377,1.157,420,0.858,421,1.668,423,2.699,424,2.972,425,2.496,426,2.333,427,4.664,428,2.699,429,2.972,430,2.972,431,2.699,432,2.972,433,2.699,435,2.972,438,2.333,439,2.699,440,2.972,448,2.972,452,2.972,453,3.648,457,3.41,458,2.972,459,3.593,466,2.972,467,4.664,469,1.307,470,2.198,471,3.17,474,2.972,476,2.972,477,5.134,479,2.972,481,2.972,482,2.972,485,2.972,487,3.946,490,2.972,491,2.763,492,2.763,493,2.763,494,2.895,495,2.645,496,2.895,497,2.895,498,3.043,499,3.043,500,3.043,502,4.312,505,4.344,509,2.972,511,2.972,512,2.496,516,1.89,517,1.736,518,3.648,519,3.648,520,4.434,521,0.973,522,2.972,523,1.89,524,2.972,525,4.642,526,2.972,527,2.972,528,2.972,529,2.972,530,5.13,531,2.972,532,2.972,533,2.972,534,4.344,535,2.972,536,2.972,537,2.972,538,2.972,539,3.648,540,2.699,541,3.648,542,2.972,543,2.972,544,3.213,545,3.946,546,2.972,547,2.972,548,2.972,549,2.972,550,2.333,551,2.972,552,2.972,553,2.972,554,4.344,555,2.972,556,2.496,557,1.89,558,2.496,559,2.082,560,2.972,561,2.198,562,2.496,563,2.972,564,2.699,565,4.344,566,4.344,567,2.972,568,3.41,569,4.344,570,4.344,571,2.972,572,2.972,573,2.972,574,2.972,575,2.972,576,2.972,577,2.972,578,2.972,579,2.082,580,1.809,581,2.496,582,2.972,583,2.972,584,2.972,585,2.972,586,2.972,587,2.972,588,4.344,589,2.972,590,2.972,591,2.972,592,2.972,593,2.972,594,2.972,595,3.946,596,2.972,597,2.972,598,2.699,599,2.972,600,2.333,601,1.668,602,2.972,603,2.198,604,2.972,605,2.972,606,2.972,607,2.972,608,2.972,609,2.972,610,2.972,611,2.972,612,2.972,613,2.972,614,2.972,615,2.972,616,2.972,617,2.972,618,2.972,619,2.972,620,2.972,621,2.972,622,4.344,623,2.972,624,2.699,625,2.699,626,2.699,627,2.699,628,2.198,629,2.972,630,2.972,631,2.972,632,2.972,633,4.344,634,2.972,635,2.972,636,2.972,637,2.972,638,2.972,639,2.972,640,4.344,641,2.972,642,2.972,643,2.972,644,2.972,645,2.972,646,2.972,647,2.972,648,2.972,649,2.972,650,2.972,651,2.972,652,2.972,653,2.972,654,2.972,932,3.386,933,3.386]],["title/interfaces/FileData.html",[0,0.072,870,2.439]],["body/interfaces/FileData.html",[0,0.101,2,1.232,3,0.272,4,0.272,5,0.235,7,0.29,8,0.607,11,0.484,12,0.011,13,0.372,75,0.009,76,0.009,156,1.793,281,4.197,456,1.355,734,5.443,863,3.789,864,3.036,869,3.789,870,4.12,934,3.441,935,5.409,936,5.409,937,5.409,938,5.409,939,6.477,940,5.409,941,5.409,942,5.409,943,5.409,944,5.409,945,5.409,946,5.409,947,5.409,948,5.409,949,5.409,950,5.409,951,5.409,952,5.409,953,5.409]],["title/components/FileDropOverlayComponent.html",[84,0.977,387,1.743]],["body/components/FileDropOverlayComponent.html",[3,0.161,4,0.161,5,0.217,7,0.314,8,0.43,11,0.401,12,0.011,13,0.172,16,1.706,21,1.307,39,1.899,75,0.006,76,0.006,80,1.511,83,0.313,84,1.366,86,0.671,89,0.497,123,1.307,138,1.958,143,0.451,144,1.412,145,2.392,146,1.545,152,2.05,156,0.888,336,1.458,337,1.685,338,1.507,339,1.507,340,1.507,344,3.2,345,3.261,347,1.458,350,1.41,375,1.507,376,2.087,377,1.787,378,1.287,379,2.908,380,1.507,381,1.507,382,1.458,383,1.144,384,1.507,385,1.458,386,1.507,387,2.66,388,3.282,389,1.507,390,1.287,391,1.327,392,1.327,393,2.156,394,1.458,395,2.749,396,1.458,397,1.507,398,1.458,399,1.327,400,1.507,401,1.458,402,1.507,403,1.368,404,1.458,405,1.458,406,1.507,407,1.458,408,1.412,409,1.507,410,1.458,411,1.507,412,1.458,413,1.958,414,1.458,415,1.458,416,1.458,417,1.412,418,1.458,419,1.507,434,1.169,451,1.328,455,1.912,456,1.121,469,1.381,470,2.373,550,2.519,601,3.01,627,2.914,696,4.592,704,3.756,722,3.396,733,2.796,828,2.519,843,3.756,954,3.655,955,5.411,956,6.444,957,7.341,958,7.341,959,3.655,960,6.109,961,3.966,962,3.605,963,5.231,964,6.109,965,5.231,966,6.109,967,6.109,968,5.231,969,5.231,970,5.231,971,7.87,972,3.655,973,5.231,974,3.655,975,5.231,976,3.655,977,3.655,978,6.109,979,3.655,980,3.208,981,3.655,982,3.655,983,3.655,984,3.655,985,3.655,986,3.655,987,3.655,988,3.655,989,3.655,990,3.655,991,3.655,992,5.231,993,7.056,994,3.655,995,5.231,996,5.231,997,3.655,998,5.231,999,3.655,1000,5.231,1001,5.231,1002,3.655,1003,5.231,1004,3.655,1005,2.373,1006,6.109,1007,5.362,1008,5.231,1009,3.655,1010,3.655,1011,5.231,1012,6.109,1013,3.208,1014,5.231,1015,3.655,1016,3.655,1017,3.655,1018,3.655,1019,3.655,1020,3.655,1021,3.208,1022,3.208,1023,5.231,1024,3.655,1025,5.231,1026,3.655,1027,3.655,1028,3.208,1029,3.208,1030,3.655,1031,3.655,1032,3.655,1033,3.655,1034,3.208,1035,4.592,1036,3.655,1037,3.208,1038,3.655,1039,3.208,1040,3.655,1041,5.231,1042,2.694]],["title/classes/FileLoaderService.html",[143,0.539,872,2.439]],["body/classes/FileLoaderService.html",[3,0.26,4,0.26,5,0.195,7,0.277,8,0.59,11,0.386,12,0.011,13,0.277,75,0.009,76,0.009,83,0.504,143,0.726,350,1.611,434,1.604,451,1.683,456,1.317,781,3.147,863,5.082,864,4.072,868,4.945,870,3.286,871,3.618,872,4.007,875,5.708,876,5.233,883,5.233,888,5.942,934,4.615,1043,5.884,1044,5.884,1045,8.813,1046,5.884,1047,5.884,1048,5.884,1049,5.884]],["title/interfaces/FrequencyBarsConfig.html",[0,0.072,307,2.24]],["body/interfaces/FrequencyBarsConfig.html",[0,0.137,2,0.997,3,0.22,4,0.22,5,0.135,7,0.235,8,0.532,10,1.635,11,0.538,12,0.011,13,0.402,18,2.862,19,1.033,22,1.606,25,2.498,75,0.008,76,0.008,290,2.784,291,2.784,292,3.741,293,2.917,294,2.917,295,2.917,296,2.665,297,2.556,298,2.665,299,2.665,300,2.665,301,2.665,302,2.665,303,2.665,304,2.665,305,2.784,306,2.784,307,3.315,308,4.204,309,4.033,310,4.033,311,4.033,312,2.556,313,3.315,314,2.665,315,2.853,316,2.853,317,3.315,318,2.665,319,2.665,320,2.556,321,2.784,322,2.917,323,2.457,324,3.535,325,2.665,326,2.457,327,4.007,328,3.067,329,2.665,330,3.315,331,3.601,332,3.601,333,2.365,334,3.315,335,3.741]],["title/interfaces/GamepadAction.html",[0,0.072,17,3.011]],["body/interfaces/GamepadAction.html",[0,0.125,1,3.28,2,1.01,3,0.223,4,0.223,5,0.137,6,3.28,7,0.381,8,0.536,9,3.482,10,1.547,11,0.547,12,0.011,13,0.397,14,4.954,15,3.725,16,1.411,17,5.259,18,3.044,19,0.982,20,4.954,21,1.906,22,2.326,23,5.414,24,3.28,25,2.519,26,3.482,27,3.482,28,3.28,29,2.956,30,3.482,31,3.28,32,3.28,33,3.28,34,3.107,35,3.107,36,4.807,37,2.956,38,3.482,39,2.367,40,3.482,41,2.688,42,3.482,43,3.093,44,3.482,45,3.815,46,3.482,47,3.107,48,3.482,49,3.28,50,3.482,51,3.28,52,3.482,53,3.28,54,3.482,55,3.107,56,3.482,57,3.28,58,3.482,59,2.956,60,3.482,61,3.107,62,3.482,63,3.28,64,3.482,65,3.28,66,3.482,67,3.28,68,3.482,69,3.28,70,3.107,71,3.482,72,3.482,73,3.482,74,3.482,75,0.008,76,0.008,456,1.401]],["title/injectables/GamepadService.html",[420,0.757,1050,2.836]],["body/injectables/GamepadService.html",[1,3.502,3,0.13,4,0.13,5,0.08,7,0.35,8,0.368,9,3.081,10,1.54,11,0.446,12,0.011,13,0.139,14,5.186,16,1.805,18,3.118,20,5.075,21,1.698,22,0.951,23,1.917,24,3.905,26,4.686,27,4.686,28,3.905,29,3.519,31,1.917,32,4.585,33,3.905,34,3.317,35,2.749,37,3.155,39,2.346,70,3.317,75,0.005,76,0.005,80,1.203,83,0.383,89,0.402,143,0.365,145,1.35,146,1.581,152,1.248,156,1.958,160,1.398,346,0.802,349,2.466,350,1.412,420,0.775,422,1.178,434,0.999,451,1.308,455,1.882,456,1.104,469,2.037,521,0.848,601,2.202,658,1.44,961,2.902,1005,1.917,1050,2.902,1051,2.953,1052,5.394,1053,5.394,1054,4.47,1055,4.47,1056,5.394,1057,4.47,1058,4.47,1059,4.47,1060,2.953,1061,7.59,1062,4.47,1063,2.953,1064,7.59,1065,2.953,1066,6.016,1067,2.953,1068,7.273,1069,4.47,1070,2.953,1071,2.953,1072,2.953,1073,2.953,1074,2.953,1075,2.953,1076,2.953,1077,2.953,1078,2.953,1079,2.953,1080,5.394,1081,2.953,1082,5.394,1083,2.953,1084,2.953,1085,6.016,1086,2.953,1087,2.953,1088,2.953,1089,2.953,1090,4.47,1091,5.394,1092,5.153,1093,4.47,1094,2.592,1095,4.47,1096,2.953,1097,2.953,1098,2.953,1099,2.953,1100,2.953,1101,4.47,1102,2.953,1103,2.953,1104,2.953,1105,2.592,1106,2.953,1107,2.953,1108,3.976,1109,6.463,1110,2.953,1111,2.953,1112,5.394,1113,2.953,1114,2.953,1115,2.953,1116,2.953,1117,1.816,1118,2.953,1119,2.953,1120,2.953,1121,4.47,1122,2.953,1123,2.953,1124,2.953,1125,2.953,1126,2.953,1127,2.953,1128,4.735,1129,4.47,1130,3.295,1131,4.47,1132,4.47,1133,2.953,1134,2.953,1135,2.953,1136,4.47,1137,2.953,1138,2.953,1139,2.953,1140,4.47,1141,4.47,1142,5.394,1143,5.394,1144,6.016,1145,4.454,1146,5.394,1147,2.953,1148,6.016,1149,2.953,1150,5.968,1151,4.47,1152,4.47,1153,4.47,1154,2.953,1155,6.016,1156,2.953,1157,2.953,1158,4.47,1159,2.953,1160,2.953,1161,4.47,1162,4.47,1163,2.953,1164,2.953,1165,2.953,1166,2.953]],["title/interfaces/Hotkey.html",[0,0.072,1167,3.011]],["body/interfaces/Hotkey.html",[0,0.095,2,0.848,3,0.187,4,0.187,5,0.115,7,0.2,8,0.478,11,0.467,12,0.011,13,0.312,19,1.107,75,0.007,76,0.007,83,0.66,86,0.779,89,0.577,102,1.408,143,0.524,146,1.323,156,1.978,160,1.533,177,2.244,184,3.243,217,1.589,248,1.367,346,1.153,355,2.61,356,2.091,377,2.547,390,1.494,391,2.108,392,1.541,420,1.006,438,2.925,471,3.883,521,1.219,561,2.755,601,2.862,658,1.871,716,2.755,890,3.571,1108,3.129,1130,3.129,1167,4.002,1168,3.384,1169,5.496,1170,5.116,1171,5.81,1172,4.002,1173,2.61,1174,3.129,1175,3.571,1176,2.483,1177,4.631,1178,4.002,1179,5.676,1180,3.384,1181,2.755,1182,2.61,1183,3.384,1184,3.384,1185,3.398,1186,3.129,1187,3.129,1188,4.281,1189,3.384,1190,3.384,1191,2.61,1192,3.384,1193,3.384,1194,3.384,1195,3.384,1196,3.384,1197,3.384,1198,3.384,1199,3.384,1200,4.631,1201,3.384,1202,4.631,1203,4.631,1204,4.631,1205,3.129,1206,3.384,1207,3.384,1208,3.384,1209,3.384,1210,4.002,1211,3.384,1212,3.384,1213,3.384,1214,3.384,1215,5.279,1216,3.384,1217,4.631,1218,3.384,1219,3.384,1220,4.631,1221,3.384,1222,3.384,1223,3.384,1224,3.384,1225,3.384,1226,3.384,1227,3.384,1228,4.631,1229,3.384,1230,3.384,1231,3.129,1232,3.384,1233,5.676,1234,3.384,1235,4.631,1236,3.384,1237,3.129,1238,3.384,1239,3.384,1240,2.925,1241,3.384,1242,3.384,1243,3.384]],["title/interfaces/HotkeyInfo.html",[0,0.072,1181,2.836]],["body/interfaces/HotkeyInfo.html",[0,0.096,2,0.861,3,0.19,4,0.19,5,0.117,7,0.203,8,0.482,11,0.385,12,0.011,13,0.314,19,1.077,75,0.007,76,0.007,83,0.663,86,0.791,89,0.586,102,1.429,143,0.532,146,1.334,156,1.984,160,1.541,177,2.267,184,3.277,217,1.613,248,1.388,346,1.17,355,2.65,356,2.123,377,2.005,390,1.517,391,2.13,392,1.564,420,1.017,438,2.97,471,3.899,521,1.238,561,2.797,601,2.891,658,1.89,716,2.797,1108,3.176,1130,3.176,1167,2.97,1168,3.436,1169,4.326,1170,5.137,1171,5.281,1172,4.044,1173,2.65,1174,3.176,1175,3.608,1176,2.521,1177,4.679,1178,4.044,1179,6.511,1180,3.436,1181,3.809,1182,2.65,1183,3.436,1184,3.436,1185,3.433,1186,3.176,1187,3.176,1188,4.326,1189,3.436,1190,3.436,1191,2.65,1192,3.436,1193,3.436,1194,3.436,1195,3.436,1196,3.436,1197,3.436,1198,3.436,1199,3.436,1200,4.679,1201,3.436,1202,4.679,1203,4.679,1204,4.679,1205,3.176,1206,3.436,1207,3.436,1208,3.436,1209,3.436,1210,4.044,1211,3.436,1212,3.436,1213,3.436,1214,3.436,1215,5.32,1216,3.436,1217,4.679,1218,3.436,1219,3.436,1220,4.679,1221,3.436,1222,3.436,1223,3.436,1224,3.436,1225,3.436,1226,3.436,1227,3.436,1228,4.679,1229,3.436,1230,3.436,1231,3.176,1232,3.436,1233,5.712,1234,3.436,1235,4.679,1236,3.436,1237,3.176,1238,3.436,1239,3.436,1240,2.97,1241,3.436,1242,3.436,1243,3.436]],["title/interfaces/HotkeysData.html",[0,0.072,1244,3.483]],["body/interfaces/HotkeysData.html",[0,0.095,2,1.162,3,0.256,4,0.256,5,0.158,7,0.274,8,0.586,11,0.381,12,0.011,13,0.335,75,0.009,76,0.009,83,0.718,84,1.592,86,1.067,89,0.791,99,4.624,100,3.774,111,2.98,113,2.658,138,2.176,140,2.658,142,2.176,143,0.718,160,1.195,184,4.3,248,1.873,344,2.176,345,2.246,390,2.047,391,2.795,392,2.914,1175,3.575,1176,3.401,1181,3.774,1185,3.401,1191,3.575,1240,5.532,1244,5.679,1245,5.103,1246,4.286,1247,4.286,1248,5.251,1249,5.103,1250,4.38,1251,3.652,1252,5.103,1253,4.286,1254,4.286,1255,4.286,1256,5.103,1257,5.103,1258,4.635,1259,5.103]],["title/components/HotkeysHelpDialogComponent.html",[84,0.977,390,1.538]],["body/components/HotkeysHelpDialogComponent.html",[0,0.068,3,0.184,4,0.184,5,0.156,7,0.196,8,0.472,12,0.011,13,0.27,16,1.165,21,1.434,41,2.913,43,2.722,75,0.007,76,0.007,80,1.413,83,0.656,84,1.467,86,0.766,89,0.567,95,2.366,99,4.259,100,2.708,111,2.139,113,1.907,123,1.434,138,2.148,140,2.624,142,2.148,143,0.515,144,1.611,160,0.858,184,2.329,248,2.113,336,1.664,337,1.849,338,1.719,339,1.719,340,1.719,344,3.247,345,3.317,347,1.664,350,1.413,375,1.719,376,2.289,377,1.961,378,1.469,379,2.913,380,1.719,381,1.719,382,1.664,383,1.305,384,1.719,385,1.664,386,1.719,387,1.664,388,1.562,389,1.719,390,2.488,391,2.847,392,3.033,393,2.366,394,1.664,395,2.913,396,1.664,397,1.719,398,1.664,399,1.514,400,1.719,401,1.664,402,1.719,403,1.562,404,1.664,405,1.664,406,1.719,407,1.664,408,1.611,409,1.719,410,1.664,411,1.719,412,1.664,413,1.562,414,1.664,415,1.664,416,1.664,417,1.611,418,1.664,419,1.719,434,1.283,447,4.576,451,0.907,469,1.516,1167,3.955,1175,2.565,1176,2.44,1181,2.708,1185,3.357,1191,4.035,1240,2.875,1244,3.326,1245,6.505,1246,3.075,1247,3.075,1248,4.837,1249,3.662,1250,4.035,1251,3.364,1252,5.038,1253,4.231,1254,4.231,1255,4.231,1256,6.505,1257,3.662,1258,5.635,1259,3.662,1260,4.172,1261,3.662,1262,4.172,1263,4.172,1264,4.172,1265,7.067,1266,7.658,1267,7.067,1268,5.739,1269,5.739,1270,7.067,1271,5.739,1272,5.739,1273,5.038,1274,5.038,1275,5.739,1276,5.739,1277,5.739]],["title/injectables/HotkeysService.html",[420,0.757,1182,2.687]],["body/injectables/HotkeysService.html",[0,0.088,3,0.168,4,0.168,5,0.103,7,0.179,8,0.442,11,0.47,12,0.011,13,0.294,16,2.001,19,1.063,21,1.696,75,0.007,76,0.007,80,1.075,83,0.637,86,0.698,89,0.517,102,1.261,143,0.469,146,1.248,156,1.93,160,1.473,177,2.412,184,3.79,217,2.014,248,1.225,346,1.033,350,1.628,355,2.338,356,1.874,377,2.133,390,1.339,391,2.464,392,1.38,420,0.932,422,1.517,434,1.203,438,4.678,451,1.617,455,1.684,456,1.246,469,1.793,471,3.914,521,1.092,561,4.407,601,2.651,658,1.733,716,3.493,1108,2.803,1130,2.803,1167,2.62,1168,3.032,1169,3.966,1170,4.407,1171,5.28,1172,3.708,1173,2.338,1174,2.803,1175,3.839,1176,2.224,1177,4.289,1178,3.708,1179,5.412,1180,3.032,1181,2.468,1182,3.308,1183,3.032,1184,3.032,1185,3.147,1186,2.803,1187,4.602,1188,5.28,1189,4.289,1190,4.978,1191,3.839,1192,4.978,1193,3.032,1194,3.032,1195,3.032,1196,3.032,1197,3.032,1198,3.032,1199,4.289,1200,4.289,1201,3.032,1202,4.289,1203,4.289,1204,4.289,1205,2.803,1206,3.032,1207,3.032,1208,3.032,1209,3.032,1210,3.708,1211,3.032,1212,3.032,1213,3.032,1214,3.032,1215,4.978,1216,3.032,1217,4.289,1218,3.032,1219,3.032,1220,4.289,1221,3.032,1222,3.032,1223,3.032,1224,3.032,1225,4.289,1226,3.032,1227,3.032,1228,4.289,1229,3.032,1230,3.032,1231,5.004,1232,5.412,1233,5.412,1234,3.032,1235,4.289,1236,3.032,1237,2.803,1238,3.032,1239,3.032,1240,2.62,1241,3.032,1242,3.032,1243,3.032,1278,5.38,1279,5.38,1280,3.803,1281,3.803,1282,3.803,1283,3.803,1284,3.803,1285,3.803,1286,3.803,1287,3.803,1288,3.803,1289,3.803,1290,3.803]],["title/interfaces/Id3CoverPicture.html",[0,0.072,728,2.687]],["body/interfaces/Id3CoverPicture.html",[0,0.121,2,1.23,3,0.271,4,0.271,5,0.167,7,0.289,8,0.606,10,1.353,11,0.484,12,0.011,13,0.347,19,1.168,75,0.009,76,0.009,77,1.981,81,3.153,83,0.527,95,2.535,123,1.536,176,2.454,203,2.101,248,2.636,326,3.889,728,4.853,729,3.782,732,4.785,733,3.287,738,3.968,744,2.232,756,2.302,1117,4.533,1291,5.399,1292,4.904]],["title/interfaces/Id3Tags.html",[0,0.072,756,1.635]],["body/interfaces/Id3Tags.html",[0,0.115,2,1.129,3,0.249,4,0.249,5,0.153,7,0.266,8,0.575,10,1.285,11,0.564,12,0.011,13,0.329,19,1.193,75,0.009,76,0.009,77,2.56,81,4.075,83,0.484,95,3.276,123,1.411,176,3.17,203,2.715,248,1.82,326,2.783,456,1.604,728,4.887,729,3.474,732,5.159,733,3.019,738,3.875,744,2.05,749,6.143,756,2.62,1117,4.304,1291,4.959,1292,6.337]],["title/injectables/Id3TagsService.html",[420,0.757,1293,3.483]],["body/injectables/Id3TagsService.html",[3,0.199,4,0.199,5,0.213,7,0.212,10,1.111,11,0.397,12,0.011,13,0.212,16,2.126,20,2.927,21,1.126,39,1.637,75,0.007,76,0.007,80,0.901,83,0.585,89,0.613,143,0.557,145,2.062,146,1.522,156,1.904,160,1.244,177,2.638,184,2.518,202,3.108,244,2.621,346,1.225,349,3.122,350,1.21,420,1.049,422,1.799,434,1.353,451,0.98,455,1.411,456,0.828,464,2.41,469,1.191,521,1.295,539,3.324,601,3.365,729,4.2,730,1.688,744,2.479,756,1.688,757,1.799,758,2.222,762,3.481,781,2.265,823,3.721,824,2.773,825,2.87,908,5.03,961,3.928,1005,2.927,1293,4.824,1294,4.509,1295,5.312,1296,4.509,1297,5.312,1298,7.299,1299,4.509,1300,6.051,1301,5.246,1302,4.509,1303,4.509,1304,7.613,1305,6.829,1306,3.958,1307,4.509,1308,3.958,1309,3.595,1310,4.509,1311,6.051,1312,4.509,1313,6.051,1314,4.509,1315,6.051,1316,4.509,1317,3.958,1318,4.509,1319,4.509,1320,4.509,1321,4.509,1322,3.958,1323,6.829,1324,4.509,1325,3.324,1326,4.509,1327,4.509,1328,4.509,1329,3.958,1330,6.051,1331,4.509,1332,4.509,1333,4.509,1334,4.509,1335,4.509,1336,4.509,1337,4.509,1338,6.829,1339,4.509,1340,4.509,1341,4.509,1342,4.509,1343,4.509,1344,6.051,1345,5.312,1346,4.509,1347,4.509,1348,4.509,1349,4.509,1350,4.509,1351,4.509,1352,4.509,1353,4.509,1354,4.509,1355,4.509]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.072,94,2.556]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.13,2,1.105,3,0.244,4,0.244,5,0.204,7,0.26,8,0.568,11,0.494,12,0.011,13,0.39,19,1.165,25,2.668,75,0.008,76,0.008,77,1.781,79,3.235,81,2.835,82,2.36,83,0.645,94,4.04,95,2.847,123,1.97,124,3.59,176,2.206,203,1.889,281,4.162,315,2.44,316,2.44,456,1.268,459,3.088,491,3.088,492,3.088,493,3.088,494,3.235,495,2.955,496,3.235,497,3.235,498,3.4,499,3.4,500,3.4,579,3.4,726,3.088,727,3.811,728,4.247,729,3.4,730,2.07,731,3.54,732,4.483,733,2.955,734,5.436,735,5.121,736,3.235,737,3.59,738,2.623,739,3.811,740,3.59,741,3.59,742,3.235]],["title/interfaces/LastfmAlbum.html",[0,0.072,1356,2.836]],["body/interfaces/LastfmAlbum.html",[0,0.122,2,0.937,3,0.207,4,0.207,5,0.127,7,0.221,8,0.511,10,0.861,11,0.486,12,0.011,13,0.221,19,1.165,75,0.008,76,0.008,77,2.388,80,1.482,82,2.122,83,0.679,86,0.861,89,0.638,101,1.999,102,1.556,143,0.579,146,1.584,152,1.735,156,1.801,160,1.688,176,3.077,177,1.812,217,2.887,233,1.944,235,1.933,237,1.651,243,1.999,244,2.388,248,2.243,346,1.274,420,1.076,521,1.347,721,2.224,730,1.756,738,2.224,744,1.702,747,3.653,750,2.506,751,2.404,755,2.404,756,2.325,757,1.871,758,2.311,759,2.404,760,2.506,772,3.32,774,2.404,775,2.506,776,2.506,780,2.506,781,2.325,782,2.404,783,3.184,787,2.506,795,2.506,807,1.999,810,1.933,1356,4.521,1357,3.045,1358,3.045,1359,4.813,1360,2.743,1361,2.743,1362,3.82,1363,3.82,1364,3.045,1365,4.032,1366,2.884,1367,3.232,1368,3.232,1369,3.232,1370,3.232,1371,3.232,1372,3.045,1373,3.232,1374,3.232,1375,3.232,1376,3.232,1377,3.232,1378,4.032,1379,3.232,1380,3.232,1381,3.232,1382,3.045,1383,3.232,1384,3.232,1385,3.045,1386,3.232,1387,3.232,1388,3.232,1389,3.232,1390,3.232,1391,3.232]],["title/interfaces/LastfmErrorResponse.html",[0,0.072,1363,2.687]],["body/interfaces/LastfmErrorResponse.html",[0,0.122,2,0.947,3,0.209,4,0.209,5,0.128,7,0.223,8,0.514,10,1.285,11,0.459,12,0.011,13,0.223,19,1.152,75,0.008,76,0.008,77,2.397,80,0.947,82,2.136,83,0.681,86,0.869,89,0.644,101,2.019,102,1.571,143,0.585,146,1.589,152,1.746,156,1.808,160,1.691,176,2.494,177,1.829,217,2.897,233,1.956,235,1.952,237,1.667,243,2.019,244,2.611,248,2.254,346,1.286,420,1.083,521,1.36,721,2.246,730,1.773,738,2.246,744,1.719,747,2.333,750,2.531,751,2.428,755,2.428,756,2.34,757,1.889,758,2.333,759,2.428,760,2.531,772,3.341,774,2.428,775,2.531,776,2.531,780,2.531,781,2.34,782,2.428,783,3.205,787,2.531,795,2.531,807,2.019,810,1.952,1356,4.058,1357,3.074,1358,3.074,1359,4.058,1360,2.77,1361,2.77,1362,3.844,1363,4.303,1364,4.832,1365,4.058,1366,2.912,1367,3.264,1368,3.264,1369,3.264,1370,3.264,1371,3.264,1372,3.074,1373,3.264,1374,3.264,1375,3.264,1376,3.264,1377,3.264,1378,4.058,1379,3.264,1380,3.264,1381,3.264,1382,3.074,1383,3.264,1384,3.264,1385,3.074,1386,3.264,1387,3.264,1388,3.264,1389,3.264,1390,3.264,1391,3.264]],["title/interfaces/LastfmImage.html",[0,0.072,1359,2.836]],["body/interfaces/LastfmImage.html",[0,0.122,2,0.947,3,0.209,4,0.209,5,0.128,7,0.223,8,0.514,10,0.869,11,0.459,12,0.011,13,0.223,19,1.166,75,0.008,76,0.008,77,2.397,80,0.947,82,2.136,83,0.681,86,0.869,89,0.644,101,2.019,102,1.571,143,0.585,146,1.589,152,1.746,156,1.808,160,1.691,176,2.494,177,1.829,217,2.897,233,1.956,235,1.952,237,1.667,243,2.019,244,2.397,248,2.254,346,1.286,420,1.083,521,1.36,721,2.246,730,1.773,738,2.246,744,1.719,747,2.333,750,2.531,751,2.428,755,2.428,756,2.34,757,1.889,758,2.333,759,2.428,760,2.531,772,3.341,774,2.428,775,2.531,776,2.531,780,2.531,781,2.34,782,2.428,783,3.205,787,2.531,795,2.531,807,2.019,810,1.952,1356,4.058,1357,3.074,1358,3.074,1359,4.543,1360,4.354,1361,4.354,1362,3.844,1363,3.844,1364,3.074,1365,4.058,1366,2.912,1367,3.264,1368,3.264,1369,3.264,1370,3.264,1371,3.264,1372,3.074,1373,3.264,1374,3.264,1375,3.264,1376,3.264,1377,3.264,1378,4.058,1379,3.264,1380,3.264,1381,3.264,1382,3.074,1383,3.264,1384,3.264,1385,3.074,1386,3.264,1387,3.264,1388,3.264,1389,3.264,1390,3.264,1391,3.264]],["title/injectables/LastfmMetadataService.html",[420,0.757,1366,2.687]],["body/injectables/LastfmMetadataService.html",[0,0.122,3,0.207,4,0.207,5,0.127,7,0.221,10,0.862,11,0.408,12,0.011,13,0.221,19,1.131,75,0.008,76,0.008,77,2.39,80,1.243,82,2.124,83,0.679,86,0.862,89,0.639,101,2.002,102,1.558,143,0.58,146,1.585,152,1.736,156,1.802,160,1.688,176,2.48,177,1.814,217,2.889,233,2.321,235,1.936,237,1.653,243,2.002,244,2.39,248,2.245,346,1.275,350,0.939,420,1.077,422,1.873,434,1.39,451,1.021,455,1.47,456,0.862,521,1.349,721,2.227,730,1.758,738,2.227,744,2.257,747,2.314,750,2.51,751,2.408,755,2.408,756,2.777,757,1.873,758,2.314,759,2.408,760,2.51,772,3.323,774,2.408,775,2.51,776,2.51,780,3.323,781,2.609,782,2.408,783,3.187,787,2.51,795,2.51,807,2.002,810,1.936,825,2.227,1356,4.036,1357,4.036,1358,3.049,1359,4.036,1360,2.747,1361,2.747,1362,3.823,1363,3.823,1364,3.049,1365,4.036,1366,3.823,1367,3.236,1368,3.236,1369,3.236,1370,3.236,1371,3.236,1372,3.049,1373,3.236,1374,3.236,1375,3.236,1376,3.236,1377,3.236,1378,4.036,1379,3.236,1380,3.236,1381,3.236,1382,3.049,1383,3.236,1384,3.236,1385,3.049,1386,3.236,1387,3.236,1388,3.236,1389,3.236,1390,3.236,1391,3.236,1392,5.457,1393,4.696]],["title/interfaces/LastfmSuccessResponse.html",[0,0.072,1362,2.687]],["body/interfaces/LastfmSuccessResponse.html",[0,0.123,2,0.956,3,0.211,4,0.211,5,0.13,7,0.225,8,0.517,10,0.878,11,0.413,12,0.011,13,0.225,19,1.135,75,0.008,76,0.008,77,2.617,80,0.956,82,2.15,83,0.683,86,0.878,89,0.651,101,2.039,102,1.586,143,0.59,146,1.593,152,1.757,156,1.815,160,1.695,176,2.51,177,1.847,217,2.906,233,1.969,235,1.971,237,1.684,243,2.039,244,2.407,248,2.265,346,1.299,420,1.09,521,1.374,721,2.268,730,1.79,738,2.268,744,1.736,747,2.356,750,2.556,751,2.452,755,2.452,756,2.355,757,1.908,758,2.356,759,2.452,760,2.556,772,3.363,774,2.452,775,2.556,776,2.556,780,2.556,781,2.355,782,2.452,783,3.226,787,2.556,795,2.556,807,2.039,810,1.971,1356,4.85,1357,3.105,1358,3.105,1359,4.085,1360,2.798,1361,2.798,1362,4.324,1363,3.869,1364,3.105,1365,4.085,1366,2.941,1367,3.296,1368,3.296,1369,3.296,1370,3.296,1371,3.296,1372,3.105,1373,3.296,1374,3.296,1375,3.296,1376,3.296,1377,3.296,1378,4.085,1379,3.296,1380,3.296,1381,3.296,1382,3.105,1383,3.296,1384,3.296,1385,3.105,1386,3.296,1387,3.296,1388,3.296,1389,3.296,1390,3.296,1391,3.296]],["title/injectables/LegacyFileLoaderService.html",[420,0.757,1394,3.835]],["body/injectables/LegacyFileLoaderService.html",[3,0.223,4,0.223,5,0.232,7,0.34,8,0.536,11,0.331,12,0.011,13,0.238,25,2.519,39,1.834,75,0.008,76,0.008,83,0.619,89,0.687,143,0.624,146,1.444,156,1.584,160,1.039,177,1.952,233,2.61,237,1.779,346,1.372,349,3.302,350,1.579,420,1.13,422,2.016,434,1.458,451,1.57,456,1.197,521,1.451,550,3.482,601,2.489,658,1.628,704,4.692,781,2.703,843,3.107,863,4.01,864,3.213,866,3.725,868,4.494,869,3.107,870,2.821,871,3.107,872,4.596,873,3.28,875,5.323,876,4.954,883,4.688,888,5.625,1317,4.435,1329,4.435,1394,5.725,1395,6.522,1396,5.053,1397,6.698,1398,5.053,1399,5.053,1400,5.053,1401,5.053,1402,5.053,1403,5.053,1404,5.053,1405,5.053,1406,5.053,1407,5.053,1408,5.053,1409,5.053,1410,5.053,1411,5.053,1412,5.053,1413,5.053,1414,5.053,1415,5.053,1416,5.053,1417,5.053,1418,5.053,1419,5.053,1420,5.053,1421,5.053]],["title/components/LibraryComponent.html",[84,0.977,144,1.688]],["body/components/LibraryComponent.html",[0,0.028,3,0.075,4,0.075,5,0.143,7,0.205,8,0.235,10,1.259,11,0.43,12,0.011,13,0.135,16,1.218,19,1.041,21,1.637,39,1.583,75,0.003,76,0.003,77,2.483,78,1.486,79,2.171,80,1.505,81,1.903,82,0.977,83,0.632,84,0.83,85,3.159,86,0.311,87,2.558,88,2.069,89,0.23,90,1.041,91,1.307,92,0.99,93,0.905,94,4.267,95,3.13,96,0.945,97,3.258,98,1.041,99,2.41,100,1.099,101,0.722,102,0.562,103,2.959,104,3.258,105,3.258,106,2.959,107,1.248,108,2.436,109,1.099,110,2.959,111,0.868,112,2.959,113,0.774,114,2.959,115,2.959,116,2.959,117,1.35,118,2.959,119,1.248,120,0.868,121,2.108,122,1.248,123,1.218,124,1.099,125,2.959,126,1.248,127,1.248,128,2.552,129,1.167,130,2.959,131,1.248,132,3.258,133,3.258,134,3.258,135,3.258,136,3.258,137,1.486,138,1.07,139,2.51,140,1.307,141,2.51,142,1.07,143,0.209,144,1.685,145,1.307,146,0.742,147,1.099,148,1.099,149,1.35,150,1.971,151,1.758,152,2.181,153,5.408,154,1.486,155,3.258,156,2.001,157,3.829,158,2.51,159,2.51,160,1.573,161,2.51,162,2.51,163,2.51,164,2.51,165,2.51,166,3.258,167,4.217,168,4.279,169,2.959,170,3.258,171,6.321,172,4.942,173,2.51,174,2.51,175,2.51,176,3.167,177,1.685,178,2.51,179,3.258,180,3.829,181,5.194,182,3.829,183,4.642,184,2.436,185,2.28,186,2.959,187,4.489,188,2.51,189,1.971,190,3.829,191,2.51,192,2.51,193,2.51,194,2.51,195,2.51,196,2.51,197,3.478,198,2.51,199,5.226,200,2.51,201,2.51,202,3.006,203,1.49,204,2.51,205,4.642,206,2.28,207,1.673,208,4.642,209,2.51,210,2.51,211,4.642,212,2.51,213,2.51,214,1.673,215,3.829,216,2.51,217,2.695,218,2.51,219,3.829,220,3.829,221,2.51,222,2.51,223,2.51,224,2.51,225,2.51,226,2.51,227,2.28,228,2.51,229,2.28,230,2.51,231,2.51,232,2.51,233,2.253,234,1.167,235,0.698,236,1.486,237,2.243,238,1.486,239,1.486,240,1.486,241,1.486,242,1.486,243,0.722,244,0.921,245,1.486,246,1.35,247,0.99,248,0.545,249,2.51,250,1.486,251,1.486,252,2.51,253,2.51,254,1.486,255,2.51,256,1.486,257,2.28,258,1.35,259,1.486,260,1.486,261,2.51,262,3.258,263,1.486,264,3.829,265,1.486,266,2.51,267,2.51,268,3.829,269,1.167,270,1.486,271,1.486,272,1.486,273,1.486,274,1.486,275,2.51,276,1.486,277,2.51,278,2.51,279,3.258,280,1.486,281,0.868,282,1.486,283,1.486,284,1.486,285,1.041,286,2.51,287,2.51,288,2.28,289,1.486,336,0.675,337,0.921,338,0.698,339,0.698,340,0.698,344,2.762,345,2.742,347,0.675,350,1.518,375,0.698,376,1.141,377,0.977,378,0.596,379,1.798,380,0.698,381,0.698,382,0.675,383,0.53,384,0.698,385,0.675,386,0.698,387,0.675,388,0.634,389,0.698,390,0.596,391,0.614,392,0.614,393,1.179,394,0.675,395,1.798,396,0.675,397,0.698,398,0.675,399,0.614,400,0.698,401,0.675,402,0.698,403,0.634,404,0.675,405,0.675,406,0.698,407,0.675,408,0.654,409,0.698,410,0.675,411,0.698,412,0.675,413,0.634,414,0.675,415,0.675,416,0.675,417,0.654,418,0.675,419,0.698,434,0.639,451,1.425,455,2.051,456,1.203,469,1.683,600,3.645,1422,2.859,1423,2.859,1424,2.859,1425,2.51,1426,2.859,1427,2.859,1428,2.859,1429,2.859,1430,2.859,1431,2.859,1432,2.51,1433,1.693,1434,1.693,1435,1.693,1436,1.693,1437,1.693,1438,1.693,1439,1.693,1440,1.693,1441,1.693,1442,1.693,1443,1.693,1444,1.693,1445,1.693,1446,1.693,1447,1.693,1448,1.693,1449,1.693,1450,1.693,1451,1.693,1452,1.693,1453,1.693,1454,2.859,1455,1.693,1456,2.51,1457,3.645,1458,2.859,1459,4.362,1460,2.859,1461,4.362,1462,4.362,1463,4.362,1464,1.693]],["title/interceptors/LoaderInterceptor.html",[1465,4.369,1466,3.483]],["body/interceptors/LoaderInterceptor.html",[3,0.264,4,0.264,5,0.162,7,0.281,11,0.392,12,0.011,13,0.281,75,0.009,76,0.009,80,1.195,83,0.711,86,1.097,89,0.813,102,1.983,143,0.738,145,2.733,146,1.195,160,1.229,350,1.195,420,1.255,434,1.62,451,1.3,455,1.87,456,1.097,751,3.064,908,4.119,1178,5.373,1466,5.776,1467,5.978,1468,5.978,1469,7.245,1470,7.245,1471,8.104,1472,6.843,1473,8.104,1474,5.978,1475,5.978,1476,7.245,1477,5.978,1478,5.247,1479,5.341,1480,5.978,1481,5.247,1482,5.978,1483,5.978,1484,5.978]],["title/injectables/LoaderService.html",[420,0.757,1479,3.221]],["body/injectables/LoaderService.html",[3,0.256,4,0.256,5,0.158,7,0.274,8,0.586,12,0.011,13,0.274,16,1.989,21,1.452,39,2.914,41,2.936,75,0.009,76,0.009,83,0.498,88,2.757,89,0.791,143,0.718,146,1.162,152,2.151,346,1.579,350,1.54,420,1.234,422,2.319,428,6.141,434,1.592,451,1.549,469,1.535,502,5.251,521,1.67,595,4.635,598,4.635,624,4.635,1479,5.251,1485,5.814,1486,8.237,1487,7.23,1488,5.814,1489,5.814,1490,5.814,1491,5.814,1492,8.237,1493,5.814,1494,5.814,1495,4.635]],["title/injectables/MediaSessionService.html",[420,0.757,1496,3.011]],["body/injectables/MediaSessionService.html",[3,0.204,4,0.204,5,0.125,7,0.218,10,1.449,11,0.484,12,0.011,13,0.218,16,2.205,29,4.492,75,0.008,76,0.008,80,1.474,83,0.527,86,0.849,89,0.629,123,1.156,143,0.571,146,1.23,156,1.681,177,1.787,235,2.537,243,2.624,244,1.983,346,1.256,349,3.163,350,1.535,420,1.067,421,3.033,422,1.845,425,5.82,426,5.082,434,1.376,451,1.603,455,2.307,456,1.354,470,3.003,521,1.329,540,3.688,890,3.785,924,2.706,1210,5.082,1496,4.242,1497,6.93,1498,6.295,1499,4.626,1500,6.155,1501,6.155,1502,6.155,1503,6.155,1504,4.626,1505,6.155,1506,6.918,1507,7.678,1508,6.473,1509,4.626,1510,6.155,1511,6.918,1512,4.626,1513,6.155,1514,4.626,1515,6.155,1516,4.626,1517,4.767,1518,4.626,1519,4.907,1520,5.403,1521,4.626,1522,3.688,1523,4.626,1524,4.626,1525,4.626,1526,4.626,1527,4.061,1528,4.626,1529,4.626,1530,6.155,1531,4.907,1532,5.403,1533,6.155,1534,4.626,1535,4.626,1536,4.061,1537,4.626,1538,4.626,1539,4.626,1540,4.626,1541,4.626,1542,4.626,1543,4.626]],["title/injectables/MetadataService.html",[128,2.556,420,0.757]],["body/injectables/MetadataService.html",[3,0.119,4,0.119,5,0.186,7,0.127,8,0.343,11,0.464,12,0.011,13,0.127,19,0.781,21,1.551,41,1.114,75,0.005,76,0.005,77,0.87,79,2.986,80,1.148,81,1.385,82,1.427,83,0.665,85,2.617,86,0.496,88,1.281,89,0.368,90,1.661,91,1.909,92,1.58,93,1.444,94,2.443,95,2.706,96,1.508,101,1.152,102,0.896,123,1.71,128,2.443,143,0.333,146,1.413,147,1.754,148,1.754,152,2.265,156,1.861,160,1.595,176,1.078,189,2.878,203,0.923,217,2.15,233,2.361,237,2.61,281,2.141,346,0.734,350,1.451,383,1.307,420,0.724,422,1.078,434,0.934,451,1.249,455,1.797,456,1.054,469,1.64,487,3.33,516,2.332,517,1.385,521,0.776,523,1.508,557,2.332,658,2.278,689,3.666,704,2.568,721,3.353,725,4.004,731,2.141,735,4.443,736,3.36,737,1.754,738,1.281,739,1.862,740,1.754,744,2.691,757,1.078,758,1.331,769,1.661,773,2.568,781,2.458,782,2.141,783,2.141,807,2.176,810,2.104,816,4.262,817,2.232,818,1.754,819,1.754,820,1.754,821,1.754,822,1.754,825,2.724,864,1.331,870,4.333,871,1.661,890,3.139,934,1.508,1293,3.33,1366,2.568,1544,2.371,1545,5.105,1546,5.105,1547,5.105,1548,5.105,1549,5.105,1550,3.666,1551,4.176,1552,4.176,1553,4.176,1554,2.702,1555,2.702,1556,2.371,1557,4.176,1558,4.176,1559,2.702,1560,4.07,1561,4.176,1562,2.702,1563,4.176,1564,2.702,1565,4.176,1566,2.702,1567,5.042,1568,4.176,1569,4.176,1570,2.702,1571,4.176,1572,2.702,1573,4.176,1574,2.702,1575,4.176,1576,2.702,1577,2.702,1578,2.371,1579,2.702,1580,2.371,1581,2.702,1582,2.702,1583,1.862,1584,2.702,1585,2.702,1586,2.371,1587,2.371,1588,2.702,1589,2.702,1590,2.702,1591,2.702,1592,2.702,1593,2.702,1594,2.702,1595,2.702,1596,2.702,1597,2.702,1598,2.702,1599,2.702,1600,2.702,1601,4.176,1602,2.154,1603,2.702,1604,2.702,1605,2.371,1606,2.702,1607,2.702,1608,2.702,1609,2.702,1610,2.702,1611,2.702,1612,4.176,1613,2.702,1614,2.702,1615,2.702,1616,4.176,1617,4.481,1618,2.702,1619,2.702,1620,4.176,1621,2.702,1622,5.744,1623,4.176,1624,4.176,1625,3.33,1626,3.666,1627,3.666,1628,5.105,1629,2.702,1630,2.702,1631,4.176,1632,5.105,1633,3.33,1634,2.702,1635,2.702,1636,2.702,1637,2.702,1638,6.21,1639,2.702,1640,2.702,1641,2.702,1642,2.702,1643,2.702,1644,2.702,1645,2.702,1646,6.21,1647,2.702,1648,4.176,1649,2.702,1650,4.176,1651,4.176,1652,2.702,1653,2.702,1654,2.702,1655,2.702,1656,2.702,1657,2.702,1658,2.702,1659,2.702,1660,2.702,1661,2.702,1662,2.702,1663,2.702,1664,2.702,1665,2.702,1666,2.702,1667,2.702,1668,2.702,1669,2.702,1670,2.702,1671,2.702,1672,2.702,1673,2.702,1674,2.702,1675,2.702,1676,2.371,1677,2.371,1678,2.702,1679,4.176,1680,2.702,1681,2.702,1682,2.702,1683,2.702,1684,2.702,1685,2.702,1686,2.702,1687,2.702,1688,2.702,1689,2.702,1690,2.371,1691,2.702,1692,2.702,1693,2.702,1694,2.702,1695,2.702,1696,2.702,1697,2.702,1698,2.702,1699,2.702,1700,2.702,1701,2.702,1702,2.702,1703,2.702]],["title/components/MetadataSettingsComponent.html",[84,0.977,394,1.743]],["body/components/MetadataSettingsComponent.html",[3,0.174,4,0.174,5,0.204,7,0.186,8,0.455,11,0.453,12,0.011,13,0.186,16,1.929,21,0.987,75,0.007,76,0.007,80,1.577,83,0.662,84,1.425,86,0.726,89,0.538,90,2.431,91,2.528,92,3.73,93,3.884,113,1.807,123,2.028,128,4.04,129,2.724,138,2.07,142,2.07,143,0.488,144,1.527,146,1.105,147,2.566,148,2.566,150,3.81,214,3.234,233,1.995,237,1.392,336,1.577,337,1.781,338,1.629,339,1.629,340,1.629,344,3.228,345,3.295,347,1.577,350,1.505,375,1.629,376,2.206,377,1.889,378,1.392,379,2.846,380,1.629,381,1.629,382,1.577,383,1.237,384,1.629,385,1.577,386,1.629,387,1.577,388,1.48,389,1.629,390,1.392,391,1.435,392,1.435,393,2.279,394,2.755,395,2.846,396,1.577,397,1.629,398,1.577,399,1.435,400,1.629,401,1.577,402,1.629,403,1.48,404,1.577,405,1.577,406,1.629,407,1.577,408,1.527,409,1.629,410,1.577,411,1.629,412,1.577,413,1.48,414,1.577,415,1.577,416,1.577,417,1.527,418,1.577,419,1.629,434,1.236,451,1.58,455,2.161,456,1.268,469,1.044,516,3.087,517,2.027,523,2.207,580,3.69,601,3.402,788,3.234,825,3.741,1145,3.81,1251,3.269,1372,3.589,1704,7.73,1705,6.786,1706,3.152,1707,5.084,1708,6.376,1709,4.076,1710,6.906,1711,5.529,1712,5.529,1713,5.529,1714,5.529,1715,3.953,1716,5.529,1717,8.344,1718,3.953,1719,5.529,1720,3.953,1721,5.529,1722,3.953,1723,5.529,1724,3.953,1725,3.953,1726,3.953,1727,3.47,1728,3.953,1729,3.152,1730,3.953,1731,3.953,1732,6.906,1733,3.953,1734,3.953,1735,3.953,1736,3.953,1737,3.953,1738,3.953,1739,3.953,1740,5.529,1741,6.062,1742,5.529,1743,4.853]],["title/interfaces/MusicbrainzReleaseGroup.html",[0,0.072,761,2.836]],["body/interfaces/MusicbrainzReleaseGroup.html",[0,0.118,2,0.875,3,0.193,4,0.193,5,0.119,7,0.206,8,0.488,10,0.803,11,0.441,12,0.011,13,0.206,19,1.17,22,1.409,75,0.007,76,0.007,77,1.409,82,1.495,83,0.681,86,0.803,89,0.595,101,1.865,102,1.451,143,0.54,146,1.506,152,1.656,156,1.93,160,1.703,203,2.463,207,4.218,217,2.974,233,2.105,235,2.772,237,2.538,243,2.867,244,2.502,248,1.409,285,2.691,346,1.188,383,1.369,420,1.028,456,1.089,521,1.257,658,1.409,721,2.812,730,1.638,743,3.849,744,1.588,745,3.015,746,3.015,747,2.156,748,3.015,750,2.338,751,2.243,752,3.015,753,2.841,754,2.841,755,3.448,756,2.22,757,1.745,758,2.156,759,2.243,760,2.338,761,4.366,762,3.445,763,5.043,764,4.433,765,2.841,766,4.086,767,3.015,768,3.015,769,2.691,770,2.841,771,2.841,772,2.338,773,2.691,774,2.243,775,2.338,776,2.338,777,3.015,778,3.015,779,3.015,780,2.338,781,2.518,782,2.243,783,3.04,784,4.086,785,3.015,786,3.015,787,3.169,788,2.56,789,3.015,790,3.015,791,3.015,792,3.015,793,3.015,794,3.015,795,3.169,796,4.086,797,3.015,798,3.015,799,2.841,800,3.015,801,3.015,802,3.015,803,3.015,804,4.086,805,3.015,806,3.015,807,1.865,808,3.015,809,3.015,810,2.444,811,3.015,812,3.015,813,3.015]],["title/interfaces/MusicbrainzResponse.html",[0,0.072,765,2.836]],["body/interfaces/MusicbrainzResponse.html",[0,0.119,2,0.888,3,0.196,4,0.196,5,0.121,7,0.209,8,0.493,10,1.245,11,0.393,12,0.011,13,0.209,19,1.13,22,1.432,75,0.007,76,0.007,77,1.432,82,1.518,83,0.684,86,0.816,89,0.605,101,1.895,102,1.474,143,0.549,146,1.514,152,1.674,156,1.938,160,1.708,203,1.518,207,2.6,217,2.986,233,2.121,235,2.794,237,2.555,243,2.89,244,2.514,248,1.432,285,2.733,346,1.207,383,1.391,420,1.038,521,1.277,658,1.432,721,2.842,730,1.664,743,3.89,744,1.613,745,3.063,746,3.063,747,2.19,748,3.063,750,2.375,751,2.278,752,3.063,753,2.885,754,2.885,755,3.475,756,2.243,757,1.773,758,2.19,759,2.278,760,2.375,761,4.71,762,2.74,763,5.066,764,2.733,765,3.89,766,5.22,767,5,768,3.063,769,2.733,770,2.885,771,2.885,772,2.375,773,2.733,774,2.278,775,2.375,776,2.375,777,3.063,778,3.063,779,3.063,780,2.375,781,2.538,782,2.278,783,3.072,784,4.13,785,3.063,786,3.063,787,3.202,788,2.6,789,3.063,790,3.063,791,3.063,792,3.063,793,3.063,794,3.063,795,3.202,796,4.13,797,3.063,798,3.063,799,2.885,800,3.063,801,3.063,802,3.063,803,3.063,804,4.13,805,3.063,806,3.063,807,1.895,808,3.063,809,3.063,810,2.47,811,3.063,812,3.063,813,3.063]],["title/injectables/MusicbrainzService.html",[420,0.757,773,2.687]],["body/injectables/MusicbrainzService.html",[0,0.119,3,0.196,4,0.196,5,0.12,7,0.209,10,0.814,11,0.291,12,0.011,13,0.209,19,1.13,22,1.428,75,0.007,76,0.007,77,1.428,80,0.886,82,1.515,83,0.683,86,0.814,89,0.603,101,1.89,102,1.47,143,0.547,146,1.513,152,1.671,156,1.937,160,1.707,203,1.515,207,2.593,217,2.984,233,2.368,235,2.791,237,2.552,243,2.886,244,2.512,248,1.428,285,2.726,346,1.204,350,0.886,383,1.387,420,1.037,422,1.768,434,1.337,451,0.964,455,1.387,456,0.814,521,1.273,658,1.428,721,2.837,730,1.659,743,3.883,744,2.171,745,3.055,746,3.055,747,2.184,748,3.055,750,2.369,751,2.272,752,3.055,753,2.878,754,2.878,755,3.471,756,2.713,757,1.768,758,2.184,759,2.272,760,2.369,761,3.883,762,2.735,763,4.395,764,2.726,765,2.878,766,4.122,767,3.055,768,3.055,769,2.726,770,2.878,771,2.878,772,2.369,773,3.678,774,2.272,775,2.369,776,2.369,777,3.055,778,3.055,779,3.055,780,3.197,781,2.713,782,2.272,783,3.067,784,4.122,785,3.055,786,3.055,787,3.197,788,2.593,789,3.055,790,3.055,791,3.055,792,3.055,793,3.055,794,3.055,795,3.197,796,4.122,797,3.055,798,3.055,799,2.878,800,3.055,801,3.055,802,3.055,803,3.055,804,4.122,805,3.055,806,3.055,807,1.89,808,3.055,809,3.055,810,2.466,811,3.055,812,3.055,813,3.055,825,2.102,1392,5.251,1744,4.433]],["title/injectables/NativeBrowserFileLoaderService.html",[420,0.757,874,3.483]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.073,3,0.197,4,0.197,5,0.217,7,0.21,8,0.494,10,0.82,11,0.293,12,0.011,13,0.21,25,2.323,41,2.479,75,0.007,76,0.007,83,0.65,86,0.82,89,0.608,90,2.747,91,2.043,92,2.614,93,2.388,101,1.905,102,1.482,143,0.552,146,0.893,147,2.9,148,2.9,156,1.941,160,1.642,233,2.625,235,1.842,237,2.859,243,1.905,244,1.937,281,2.29,346,1.213,350,1.454,356,2.201,420,1.042,422,1.782,434,1.344,451,1.478,456,1.104,471,2.963,521,1.283,557,2.495,658,1.937,704,2.747,762,2.749,781,2.841,862,3.562,863,2.747,864,2.201,865,3.562,866,3.293,867,5.23,868,5.23,869,2.747,870,4.06,871,2.747,872,4.46,873,2.9,874,4.795,875,5.011,876,4.72,877,5.797,878,3.922,879,5.967,880,3.922,881,5.967,882,3.922,883,4.72,884,3.922,885,3.922,886,3.922,887,3.922,888,5.36,889,3.922,890,3.698,891,3.562,892,3.922,893,3.922,894,3.922,895,3.562,896,3.562,897,3.922,898,3.922,899,3.922,900,3.562,901,3.922,902,3.562,903,3.922,904,3.922,905,3.922,906,3.922,907,3.562,908,3.079,909,5.967,910,4.795,911,3.562,912,3.922,913,3.922,914,3.922,1397,6.383,1745,4.468,1746,4.468,1747,4.468,1748,4.468]],["title/interfaces/OscVisualizerOptions.html",[0,0.072,334,2.24]],["body/interfaces/OscVisualizerOptions.html",[0,0.137,2,1.006,3,0.222,4,0.222,5,0.136,7,0.237,8,0.535,10,1.621,11,0.517,12,0.011,13,0.402,18,3.223,19,1.036,22,1.62,25,2.784,75,0.008,76,0.008,290,2.809,291,2.809,292,3.753,293,2.943,294,2.943,295,2.943,296,2.688,297,2.579,298,2.688,299,2.688,300,2.688,301,2.688,302,2.688,303,2.688,304,2.688,305,2.809,306,2.809,307,2.579,308,3.475,309,3.334,310,3.334,311,3.334,312,2.579,313,4.044,314,2.688,315,2.869,316,2.869,317,3.334,318,2.688,319,2.688,320,2.579,321,2.809,322,2.943,323,2.478,324,3.55,325,2.688,326,2.478,327,4.254,328,3.084,329,2.688,330,3.334,331,3.613,332,3.832,333,2.386,334,3.694,335,4.105]],["title/interfaces/OsciloscopeConfig.html",[0,0.072,312,2.24]],["body/interfaces/OsciloscopeConfig.html",[0,0.137,2,1.028,3,0.227,4,0.227,5,0.139,7,0.242,8,0.542,10,1.624,11,0.504,12,0.011,13,0.404,18,2.905,19,1.045,22,1.657,25,2.549,75,0.008,76,0.008,290,2.873,291,2.873,292,3.785,293,3.009,294,3.009,295,3.009,296,2.749,297,2.637,298,2.749,299,2.749,300,2.749,301,2.749,302,2.749,303,2.749,304,2.749,305,2.873,306,2.873,307,2.637,308,3.526,309,3.382,310,3.382,311,3.382,312,3.382,313,4.073,314,2.749,315,2.911,316,2.911,317,3.382,318,2.749,319,2.749,320,2.637,321,2.873,322,3.009,323,2.535,324,3.589,325,2.749,326,2.535,327,4.067,328,3.129,329,2.749,330,3.382,331,3.644,332,3.644,333,2.44,334,3.382,335,3.785]],["title/components/PlayerComponent.html",[84,0.977,396,1.743]],["body/components/PlayerComponent.html",[3,0.174,4,0.174,5,0.173,7,0.186,8,0.454,12,0.011,13,0.186,21,1.723,39,2.003,75,0.007,76,0.007,80,1.379,83,0.719,84,1.424,85,3.265,86,0.724,87,4.389,89,0.537,107,2.907,108,3.852,109,2.56,111,2.022,113,1.803,123,1.379,138,2.066,140,2.524,142,2.066,143,0.487,144,1.524,145,2.524,146,1.103,151,3.394,152,1.779,160,1.309,233,2.506,234,2.718,237,1.943,336,1.573,337,1.778,338,1.626,339,1.626,340,1.626,342,3.394,343,3.394,344,3.227,345,3.294,347,1.573,350,1.504,352,2.425,375,1.626,376,2.202,377,1.886,378,1.388,379,2.844,380,1.626,381,1.626,382,2.752,383,1.727,384,1.626,385,1.573,386,1.626,387,1.573,388,1.476,389,1.626,390,1.388,391,1.431,392,1.431,393,2.275,394,1.573,395,2.844,396,2.752,397,1.626,398,1.573,399,2.311,400,1.626,401,2.752,402,1.626,403,1.476,404,1.573,405,1.573,406,1.626,407,1.573,408,1.524,409,1.626,410,1.573,411,1.626,412,1.573,413,1.476,414,2.752,415,1.573,416,1.573,417,1.524,418,1.573,419,1.626,421,3.399,434,1.234,451,1.385,464,3.403,469,1.682,678,5.085,826,3.462,864,1.943,872,3.082,873,2.56,883,4.478,917,5.077,924,3.229,927,2.425,929,2.907,934,2.202,1250,3.916,1251,3.265,1749,3.944,1750,5.59,1751,5.077,1752,6.368,1753,5.52,1754,5.52,1755,7.261,1756,6.899,1757,3.944,1758,3.944,1759,3.944,1760,3.944,1761,5.52,1762,3.944,1763,3.944,1764,4.069,1765,3.462,1766,2.907,1767,3.144,1768,3.944,1769,3.944,1770,3.944,1771,3.462,1772,3.144,1773,3.944,1774,3.944,1775,3.944,1776,5.52,1777,3.462,1778,3.944,1779,3.944,1780,4.845,1781,4.845,1782,4.845]],["title/injectables/PlayerService.html",[108,2.439,420,0.757]],["body/injectables/PlayerService.html",[3,0.099,4,0.099,5,0.141,7,0.106,8,0.297,10,1.318,11,0.449,12,0.011,13,0.106,16,1.853,19,0.616,21,1.71,39,2.316,41,2.139,43,1.067,75,0.004,76,0.004,77,0.724,80,1.326,83,0.615,85,3.112,86,0.413,88,2.149,89,0.306,91,1.028,95,3.177,96,1.256,108,2.018,123,0.562,128,2.114,129,1.55,143,0.278,146,1.462,150,1.55,152,2.264,156,1.935,160,1.667,167,4.137,169,4.532,176,0.897,203,0.768,217,2.272,233,2.6,237,2.652,244,0.724,257,1.793,258,1.793,281,1.153,315,2.678,316,2.678,323,2.556,346,0.611,349,2.071,350,1.643,357,2.346,358,1.658,367,1.658,420,0.626,421,1.781,422,0.897,425,3.34,434,0.808,451,1.692,455,2.076,456,1.29,464,2.421,467,3.612,469,1.962,471,2.556,516,2.018,517,1.153,521,0.646,523,1.256,557,1.256,658,1.459,678,3.825,726,2.897,736,2.114,740,2.346,741,1.46,742,1.316,781,1.942,864,1.781,869,1.383,870,3.174,871,1.383,872,2.018,873,1.46,890,1.383,895,1.793,924,1.316,927,1.383,934,2.018,1273,1.974,1378,1.46,1425,3.172,1457,3.122,1472,4.989,1496,2.491,1498,1.793,1508,1.974,1517,2.491,1522,1.793,1527,3.172,1556,3.172,1772,1.793,1783,1.974,1784,4.531,1785,4.531,1786,3.614,1787,4.531,1788,4.531,1789,3.614,1790,5.189,1791,3.614,1792,3.614,1793,4.531,1794,3.172,1795,3.172,1796,5.189,1797,4.531,1798,3.614,1799,3.614,1800,4.555,1801,4.555,1802,2.249,1803,2.249,1804,2.249,1805,3.614,1806,2.249,1807,3.612,1808,2.249,1809,2.249,1810,2.249,1811,3.614,1812,2.249,1813,3.614,1814,2.249,1815,2.249,1816,3.614,1817,2.249,1818,5.189,1819,3.614,1820,2.249,1821,2.249,1822,2.249,1823,3.614,1824,2.249,1825,3.614,1826,2.249,1827,2.249,1828,2.249,1829,2.249,1830,3.614,1831,3.614,1832,3.614,1833,2.249,1834,2.249,1835,2.249,1836,6.38,1837,5.189,1838,3.614,1839,3.614,1840,2.249,1841,3.614,1842,2.249,1843,3.614,1844,2.249,1845,2.249,1846,3.614,1847,2.249,1848,1.658,1849,2.491,1850,2.249,1851,2.249,1852,2.249,1853,1.793,1854,1.658,1855,1.658,1856,2.249,1857,2.249,1858,1.793,1859,1.793,1860,3.614,1861,2.249,1862,4.531,1863,2.249,1864,2.249,1865,2.249,1866,2.249,1867,3.614,1868,2.249,1869,2.249,1870,2.249,1871,2.249,1872,2.249,1873,2.249,1874,2.249,1875,2.249,1876,2.249,1877,3.614,1878,2.249,1879,3.172,1880,2.249,1881,1.974,1882,2.249,1883,3.614,1884,2.249,1885,2.249,1886,2.249,1887,2.249,1888,2.249,1889,2.249,1890,2.249,1891,2.249,1892,2.249,1893,2.249,1894,2.249,1895,2.249,1896,2.249,1897,2.249,1898,2.249,1899,2.249,1900,2.249,1901,2.249,1902,2.249,1903,2.249,1904,2.249,1905,2.249,1906,2.249,1907,2.249,1908,2.249,1909,2.249,1910,2.249,1911,3.614,1912,2.249,1913,3.614,1914,2.249,1915,2.249,1916,2.249,1917,2.249,1918,1.974,1919,2.249,1920,2.249,1921,2.249,1922,2.249,1923,5.189,1924,2.249,1925,1.974,1926,3.614,1927,4.531,1928,2.249,1929,2.249,1930,3.614,1931,2.249,1932,2.249,1933,3.614,1934,3.614,1935,2.249,1936,2.249,1937,2.249,1938,1.974,1939,2.249,1940,5.189,1941,2.249,1942,2.249,1943,2.249,1944,2.249,1945,2.249,1946,2.249,1947,2.249,1948,3.614,1949,2.249,1950,2.249,1951,2.249,1952,3.614,1953,1.316,1954,2.249,1955,2.65,1956,2.249,1957,3.122,1958,2.249,1959,2.249,1960,2.249,1961,2.249,1962,2.249,1963,1.974,1964,3.612,1965,3.612,1966,2.249,1967,2.249,1968,1.793,1969,1.974,1970,2.249,1971,2.249,1972,2.249,1973,2.249]],["title/components/PlayerToolbarComponent.html",[84,0.977,398,1.743]],["body/components/PlayerToolbarComponent.html",[3,0.121,4,0.121,5,0.14,7,0.13,8,0.349,10,1.484,11,0.452,12,0.011,13,0.13,16,2.081,19,0.577,21,1.291,34,1.694,35,4.068,37,1.611,39,1.875,70,1.694,75,0.005,76,0.005,80,1.516,83,0.687,84,1.155,85,2.649,86,0.506,87,3.561,89,0.375,103,4.12,106,4.12,107,2.03,108,3.24,109,1.788,110,4.12,111,1.412,112,4.12,113,1.259,123,1.059,138,1.587,140,1.938,142,1.587,143,0.34,144,1.064,145,1.938,146,1.16,151,2.606,152,1.443,160,0.566,233,1.816,234,1.898,297,1.412,336,1.099,337,1.365,338,1.135,339,1.135,340,1.135,342,2.606,343,2.606,344,3.082,345,3.073,347,1.099,350,1.59,352,1.694,375,1.135,376,1.691,377,1.448,378,0.97,379,2.392,380,1.135,381,1.135,382,1.099,383,0.862,384,1.135,385,1.099,386,1.135,387,1.099,388,1.031,389,1.135,390,0.97,391,1,392,1,393,1.747,394,1.099,395,2.392,396,1.099,397,1.135,398,2.315,399,2.502,400,1.135,401,1.099,402,1.135,403,1.031,404,1.099,405,1.099,406,1.135,407,1.099,408,1.064,409,1.135,410,1.099,411,1.135,412,1.099,413,1.031,414,1.099,415,1.099,416,1.099,417,1.064,418,1.099,419,1.135,421,2.859,433,2.196,434,0.948,451,1.673,455,2.157,456,1.34,464,2.265,469,2.135,658,1.365,678,3.809,742,2.48,829,3.809,844,2.418,854,3.767,864,1.357,872,2.367,873,1.788,883,3.354,924,2.48,927,1.694,929,2.03,934,1.538,961,3.354,1005,1.788,1050,2.752,1117,1.694,1169,2.03,1170,1.788,1171,2.03,1173,1.694,1182,2.606,1766,2.03,1767,2.196,1772,2.196,1777,2.418,1794,3.721,1795,3.721,1800,4.536,1801,4.536,1953,2.48,1955,3.87,1974,8.022,1975,7.042,1976,2.754,1977,3.721,1978,5.167,1979,5.167,1980,5.167,1981,5.167,1982,5.167,1983,4.239,1984,4.239,1985,5.167,1986,4.239,1987,4.239,1988,4.239,1989,4.239,1990,4.239,1991,5.167,1992,2.754,1993,2.754,1994,2.754,1995,2.754,1996,2.754,1997,2.754,1998,2.754,1999,4.239,2000,2.754,2001,4.239,2002,2.754,2003,2.754,2004,2.754,2005,2.754,2006,2.754,2007,2.754,2008,2.754,2009,2.754,2010,2.754,2011,2.754,2012,2.754,2013,4.239,2014,2.754,2015,2.196,2016,2.418,2017,2.418,2018,2.418,2019,2.754,2020,2.418,2021,2.754,2022,2.754,2023,2.754,2024,2.754,2025,2.754,2026,2.754,2027,4.239,2028,4.239,2029,2.754,2030,2.754,2031,2.754,2032,2.754,2033,2.754,2034,2.754,2035,2.754,2036,2.754,2037,4.239,2038,2.754,2039,4.239,2040,5.167,2041,2.754,2042,2.754,2043,2.754,2044,2.754,2045,2.754,2046,2.754,2047,2.754,2048,4.239,2049,2.754,2050,4.239,2051,2.754,2052,2.754,2053,2.754,2054,2.754,2055,2.754,2056,2.754,2057,2.754,2058,2.754,2059,2.754,2060,2.754,2061,2.754,2062,2.754,2063,2.754,2064,2.754,2065,2.754,2066,2.754,2067,2.754,2068,2.754,2069,2.754,2070,2.754,2071,2.754,2072,2.754,2073,2.754,2074,2.754,2075,5.803,2076,2.754,2077,2.754,2078,3.721,2079,4.239,2080,4.239,2081,4.239,2082,4.239]],["title/components/PlaylistComponent.html",[84,0.977,401,1.743]],["body/components/PlaylistComponent.html",[3,0.117,4,0.117,5,0.112,7,0.194,8,0.339,10,0.928,11,0.374,12,0.011,13,0.125,16,0.743,19,0.562,21,1.423,39,1.498,41,1.702,43,2.398,45,1.557,75,0.005,76,0.005,80,1.406,83,0.688,84,1.13,85,2.592,86,0.489,88,3.095,89,0.362,95,3.286,96,1.486,99,3.283,100,1.728,108,3.181,109,1.728,111,1.364,113,1.217,114,4.032,115,4.032,116,4.032,117,2.122,118,4.032,119,1.962,120,1.364,123,1.263,125,4.032,126,3.043,127,1.962,128,3.333,129,1.834,130,4.032,131,1.962,138,1.545,140,1.887,142,1.545,143,0.329,144,1.028,146,1.139,150,2.845,151,2.538,152,1.591,156,1.978,160,1.4,214,1.557,233,1.582,288,3.291,336,1.062,337,1.33,338,1.097,339,1.097,340,1.097,342,2.538,343,2.538,344,3.066,345,3.104,347,1.062,349,2.312,350,1.444,352,1.637,375,1.097,376,1.647,377,1.41,378,0.937,379,2.349,380,1.097,381,1.097,382,1.062,383,0.833,384,1.097,385,1.062,386,1.097,387,1.062,388,0.996,389,1.097,390,0.937,391,0.966,392,0.966,393,1.702,394,1.062,395,2.349,396,1.062,397,1.097,398,1.062,399,0.966,400,1.097,401,2.273,402,1.097,403,0.996,404,1.062,405,1.062,406,1.097,407,1.062,408,1.028,409,1.097,410,1.062,411,1.097,412,1.062,413,0.996,414,1.062,415,1.062,416,1.062,417,2.201,418,1.062,419,1.097,421,2.807,431,4.543,434,0.923,451,1.239,455,1.783,456,1.046,469,1.505,502,1.962,556,1.962,601,2.807,770,1.728,781,1.545,846,5.001,910,3.291,924,2.415,927,1.637,1007,2.336,1013,3.623,1034,3.623,1035,3.623,1042,1.962,1173,1.637,1250,3.11,1251,2.592,1258,2.122,1322,3.623,1432,3.623,1456,3.623,1457,4.849,1517,3.927,1519,2.122,1520,4.439,1522,2.122,1602,2.122,1807,5.886,1848,1.962,1853,2.122,1854,1.962,1855,1.962,1858,2.122,1859,2.122,1918,3.623,1925,2.336,1938,3.623,2083,2.661,2084,4.439,2085,4.439,2086,5.057,2087,4.128,2088,4.128,2089,5.057,2090,4.128,2091,4.128,2092,2.661,2093,5.698,2094,2.661,2095,5.698,2096,2.661,2097,4.128,2098,2.661,2099,2.661,2100,2.661,2101,2.661,2102,2.661,2103,4.128,2104,2.661,2105,2.336,2106,2.661,2107,2.336,2108,2.661,2109,2.336,2110,2.661,2111,2.661,2112,5.728,2113,2.661,2114,4.439,2115,7.224,2116,5.057,2117,2.661,2118,2.661,2119,2.661,2120,4.128,2121,2.661,2122,4.128,2123,2.336,2124,2.661,2125,2.661,2126,4.128,2127,2.661,2128,3.623,2129,2.661,2130,2.122,2131,5.057,2132,2.661,2133,2.336,2134,2.336,2135,2.336,2136,2.661,2137,2.336,2138,4.128,2139,2.661,2140,2.661,2141,1.557,2142,2.336,2143,2.661,2144,2.661,2145,2.661,2146,5.057,2147,2.661,2148,5.698,2149,2.661,2150,2.661,2151,3.623,2152,2.661,2153,2.661,2154,2.661,2155,4.128,2156,4.128,2157,5.057,2158,2.661,2159,2.661,2160,4.128,2161,2.661,2162,2.661,2163,3.623,2164,2.661,2165,5.057,2166,2.661,2167,2.661,2168,4.128,2169,4.032,2170,4.128,2171,2.661,2172,5.057,2173,2.661,2174,2.122,2175,2.122,2176,4.128,2177,2.661,2178,2.661,2179,4.128,2180,2.661,2181,2.661,2182,4.128,2183,4.128,2184,5.698,2185,4.128,2186,4.128,2187,4.128]],["title/components/PromptDialogComponent.html",[84,0.977,403,1.635]],["body/components/PromptDialogComponent.html",[0,0.076,3,0.203,4,0.203,5,0.166,7,0.217,8,0.505,12,0.011,13,0.289,16,1.714,19,0.939,21,1.533,75,0.008,76,0.008,80,1.472,83,0.592,84,1.543,86,0.846,89,0.627,113,2.106,123,1.533,138,2.298,142,2.298,143,0.569,144,1.78,203,1.574,248,2.224,336,1.838,337,1.977,338,1.899,339,1.899,340,1.899,344,3.279,345,3.355,347,1.838,350,1.472,375,1.899,376,2.449,377,2.097,378,1.622,379,3.035,380,1.899,381,1.899,382,1.838,383,1.442,384,1.899,385,1.838,386,1.899,387,1.838,388,1.725,389,1.899,390,1.622,391,1.672,392,1.672,393,2.53,394,1.838,395,3.035,396,1.838,397,1.899,398,1.838,399,1.672,400,1.899,401,1.838,402,1.899,403,2.756,404,3.059,405,1.838,406,1.899,407,1.838,408,1.78,409,1.899,410,1.838,411,1.899,412,1.838,413,1.725,414,1.838,415,1.838,416,1.838,417,1.78,418,1.838,419,1.899,434,1.372,451,1.335,469,1.621,603,5.119,955,5.652,1175,2.833,1176,2.695,1185,3.591,1191,4.245,1246,3.396,1247,3.396,1248,5.089,1251,3.539,1253,4.525,1254,4.525,1255,4.525,1261,4.044,1360,2.695,2188,6.731,2189,6.731,2190,6.462,2191,4.607,2192,4.607,2193,4.607,2194,3.396,2195,3.673,2196,4.044,2197,4.044,2198,6.139,2199,6.139,2200,6.139]],["title/interfaces/PromptDialogData.html",[0,0.072,2194,3.221]],["body/interfaces/PromptDialogData.html",[0,0.096,2,1.172,3,0.259,4,0.259,5,0.159,7,0.276,8,0.589,11,0.507,12,0.011,13,0.337,19,1.177,75,0.009,76,0.009,83,0.662,84,1.601,86,1.076,89,0.798,113,2.681,138,2.195,142,2.195,143,0.724,203,2.751,248,1.889,344,2.195,345,2.265,403,2.195,404,2.857,603,3.807,955,4.323,1175,3.606,1176,3.43,1185,3.43,1191,3.606,1246,4.323,1247,4.323,1248,5.279,1251,3.671,1253,4.323,1254,4.323,1255,4.323,1360,4.71,2188,5.147,2189,5.147,2190,5.147,2194,5.279,2195,6.419,2196,5.147,2197,5.147]],["title/interfaces/RemoteCoverPicture.html",[0,0.072,82,1.493]],["body/interfaces/RemoteCoverPicture.html",[0,0.136,2,1.189,3,0.262,4,0.262,5,0.211,7,0.28,8,0.594,11,0.474,12,0.011,13,0.39,19,1.192,75,0.009,76,0.009,82,2.467,83,0.51,244,1.915,725,3.478,730,2.226,731,3.048,744,2.158,756,2.703,757,2.372,762,3.302,807,3.449,810,3.335,814,5.537,815,4.098,816,3.86,817,3.178,818,3.86,819,3.86,820,3.86,821,3.86,822,3.86,823,3.656,824,3.656,825,2.82]],["title/components/SettingsComponent.html",[84,0.977,405,1.743]],["body/components/SettingsComponent.html",[3,0.229,4,0.229,5,0.18,12,0.011,13,0.244,21,1.295,75,0.008,76,0.008,80,1.54,83,0.66,84,1.634,89,0.705,123,1.826,138,2.482,140,3.031,142,2.482,143,0.64,144,2.003,336,2.068,337,2.136,338,2.137,339,2.137,340,2.137,344,3.314,345,3.397,347,2.068,375,2.137,376,2.645,377,2.265,378,1.825,379,3.176,380,2.137,381,2.137,382,2.068,383,1.622,384,2.137,385,2.068,386,2.137,387,2.068,388,1.941,389,2.137,390,1.825,391,1.881,392,1.881,393,2.733,394,3.073,395,3.176,396,2.068,397,2.137,398,2.068,399,1.881,400,2.137,401,2.068,402,2.137,403,1.941,404,2.068,405,3.073,406,2.137,407,2.068,408,2.003,409,2.137,410,3.073,411,2.733,412,3.073,413,2.482,414,2.068,415,2.068,416,2.068,417,2.003,418,2.068,419,2.137,580,3.543,1705,4.55,1709,4.887,2201,5.184,2202,6.63,2203,4.55,2204,7.31,2205,4.55]],["title/components/ShellComponent.html",[84,0.977,347,1.743]],["body/components/ShellComponent.html",[3,0.158,4,0.158,5,0.198,7,0.168,8,0.423,11,0.338,12,0.011,13,0.168,16,0.998,19,0.821,21,1.82,75,0.006,76,0.006,80,1.456,83,0.725,84,1.349,86,0.656,89,0.486,99,3.916,100,2.32,102,1.186,108,2.874,111,1.832,113,1.634,120,1.832,121,3.795,122,2.635,123,1.286,126,2.635,138,1.927,140,2.353,142,1.927,143,0.441,144,1.381,146,1.319,149,2.85,151,2.198,152,2.186,160,0.735,184,1.996,233,1.888,247,3.011,336,1.426,337,1.658,338,1.473,339,1.473,340,1.473,344,3.191,345,3.251,347,2.633,350,1.501,375,1.473,376,2.053,377,1.759,378,1.258,379,2.721,380,1.473,381,1.473,382,1.426,383,1.118,384,1.473,385,1.426,386,1.473,387,2.633,388,1.927,389,1.473,390,1.258,391,1.297,392,1.297,393,2.122,394,1.426,395,2.721,396,1.426,397,1.473,398,2.633,399,2.19,400,1.473,401,1.426,402,1.473,403,1.338,404,1.426,405,1.426,406,1.473,407,1.426,408,1.381,409,1.473,410,1.426,411,1.473,412,1.426,413,1.338,414,1.426,415,1.426,416,1.426,417,1.381,418,1.426,419,1.473,434,1.151,451,1.119,455,1.611,456,0.945,464,1.91,469,1.924,471,3.252,580,2.751,704,2.198,864,1.761,869,3.71,871,2.198,916,4.104,934,1.996,956,3.138,962,2.463,1178,3.547,1250,3.71,1251,3.093,1478,3.138,1479,4.865,1481,4.519,1750,5.296,1764,4.865,1765,3.138,1767,2.85,1771,4.519,1854,2.635,1855,2.635,1975,3.138,2085,5.296,2105,3.138,2107,3.138,2206,3.574,2207,4.519,2208,6.033,2209,6.033,2210,5.148,2211,5.148,2212,6.033,2213,7.286,2214,5.296,2215,5.148,2216,5.148,2217,5.148,2218,6.995,2219,3.574,2220,3.138,2221,5.148,2222,3.574,2223,3.574,2224,5.148,2225,5.148,2226,3.574,2227,3.574,2228,5.148,2229,3.574,2230,3.574,2231,5.148,2232,3.574,2233,3.574,2234,3.574,2235,3.574,2236,5.148,2237,3.574,2238,3.574,2239,2.85,2240,3.574,2241,3.574,2242,3.574,2243,3.574,2244,3.574,2245,3.574,2246,3.574,2247,3.574,2248,3.574,2249,3.574,2250,3.574,2251,3.574,2252,3.574,2253,3.574,2254,3.574,2255,3.574,2256,6.6,2257,5.148]],["title/components/SlidePanelComponent.html",[84,0.977,407,1.743]],["body/components/SlidePanelComponent.html",[3,0.137,4,0.137,5,0.126,7,0.146,8,0.381,11,0.495,12,0.011,13,0.146,16,1.551,19,1.004,21,1.885,22,1.789,75,0.006,76,0.006,80,1.232,83,0.565,84,1.241,89,0.422,111,1.588,113,1.417,123,1.158,138,1.735,140,2.119,142,1.735,143,0.382,144,1.197,145,2.119,152,1.551,336,1.236,337,1.493,338,1.277,339,1.277,340,1.277,344,3.134,345,3.184,347,1.236,350,1.612,375,1.277,376,1.849,377,1.584,378,1.091,379,2.54,380,1.277,381,1.277,382,1.236,383,0.97,384,1.277,385,1.236,386,1.277,387,1.236,388,1.16,389,1.277,390,1.091,391,1.125,392,1.125,393,1.91,394,1.236,395,2.54,396,1.236,397,1.277,398,1.236,399,1.125,400,1.277,401,1.236,402,1.277,403,1.16,404,1.236,405,1.236,406,1.277,407,2.458,408,3.14,409,1.277,410,1.236,411,1.277,412,1.236,413,1.16,414,1.236,415,1.236,416,1.236,417,1.197,418,1.236,419,1.277,434,1.036,451,1.008,469,1.993,471,3.636,557,4.008,658,2.475,660,2.284,843,5.097,955,5.992,1173,1.905,1237,4.093,1250,3.415,1251,2.847,1751,4.427,1766,2.284,1953,2.711,1955,3.605,1957,4.772,2084,4.874,2114,4.874,2174,4.427,2258,7.135,2259,8.129,2260,3.098,2261,5.553,2262,5.664,2263,4.635,2264,4.635,2265,5.553,2266,5.553,2267,4.874,2268,6.163,2269,6.163,2270,3.695,2271,5.553,2272,6.598,2273,7.177,2274,5.553,2275,4.635,2276,4.635,2277,4.635,2278,3.098,2279,6.163,2280,3.098,2281,3.098,2282,6.924,2283,5.41,2284,3.098,2285,3.098,2286,3.098,2287,3.098,2288,4.635,2289,4.635,2290,3.098,2291,3.098,2292,3.098,2293,4.635,2294,4.635,2295,4.635,2296,4.635,2297,6.924,2298,7.177,2299,6.478,2300,2.72,2301,2.72,2302,3.098,2303,3.098,2304,6.924,2305,6.598,2306,6.924,2307,3.098,2308,3.098,2309,3.098,2310,3.098,2311,3.098,2312,2.72,2313,2.72,2314,3.098,2315,3.098,2316,3.098,2317,3.098,2318,3.098,2319,3.098,2320,5.553,2321,6.163,2322,6.163]],["title/components/StorageSettingsComponent.html",[84,0.977,410,1.743]],["body/components/StorageSettingsComponent.html",[3,0.219,4,0.219,5,0.175,7,0.233,12,0.011,13,0.233,16,1.384,75,0.008,76,0.008,80,1.514,83,0.649,84,1.6,86,0.91,89,0.674,91,2.266,113,2.266,123,1.609,138,2.411,142,2.411,143,0.612,144,1.915,146,0.991,336,1.977,337,2.075,338,2.043,339,2.043,340,2.043,344,3.301,345,3.382,347,1.977,350,0.991,375,2.043,376,2.569,377,2.201,378,1.745,379,3.123,380,2.043,381,2.043,382,1.977,383,1.551,384,2.043,385,1.977,386,2.043,387,1.977,388,1.856,389,2.043,390,1.745,391,1.799,392,1.799,393,2.655,394,1.977,395,3.123,396,1.977,397,2.043,398,1.977,399,1.799,400,2.043,401,1.977,402,2.043,403,1.856,404,1.977,405,1.977,406,2.043,407,1.977,408,1.915,409,2.043,410,3.022,411,3.378,412,1.977,413,1.856,414,1.977,415,1.977,416,1.977,417,1.915,418,1.977,419,2.043,434,1.44,451,1.078,516,2.768,517,2.541,523,2.768,580,4.301,581,3.654,1145,4.439,1251,3.668,1625,5.135,1706,3.952,1707,5.705,1709,4.748,1729,3.952,1743,5.654,2203,5.654,2323,6.441,2324,7.576,2325,4.351,2326,4.957]],["title/interfaces/TagsWorkerRequest.html",[0,0.072,823,2.687]],["body/interfaces/TagsWorkerRequest.html",[0,0.136,2,1.189,3,0.262,4,0.262,5,0.233,7,0.28,8,0.594,11,0.474,12,0.011,13,0.39,19,1.179,75,0.009,76,0.009,82,2.032,83,0.51,244,1.915,725,3.478,730,2.226,731,3.048,744,2.158,756,2.703,757,2.372,762,3.79,807,2.535,810,2.451,814,5.537,815,4.098,816,3.86,817,3.178,818,3.86,819,3.86,820,3.86,821,3.86,822,3.86,823,4.441,824,3.656,825,2.82]],["title/interfaces/TagsWorkerResponse.html",[0,0.072,824,2.687]],["body/interfaces/TagsWorkerResponse.html",[0,0.135,2,1.166,3,0.257,4,0.257,5,0.209,7,0.275,8,0.587,11,0.506,12,0.011,13,0.388,19,1.189,75,0.009,76,0.009,82,1.993,83,0.5,244,2.589,456,1.475,725,3.413,730,2.184,731,2.991,744,2.117,756,3.009,757,2.327,762,3.769,807,2.487,810,2.405,814,5.515,815,4.02,816,3.787,817,3.118,818,3.787,819,3.787,820,3.787,821,3.787,822,3.787,823,3.587,824,4.39,825,3.812]],["title/injectables/ThemeService.html",[357,2.836,420,0.757]],["body/injectables/ThemeService.html",[3,0.176,4,0.176,5,0.108,7,0.188,8,0.458,11,0.455,12,0.011,13,0.188,16,1.791,19,0.944,21,1.733,22,2.066,39,1.45,59,2.337,75,0.007,76,0.007,80,1.55,83,0.664,86,0.733,88,1.895,89,0.543,91,1.826,143,0.493,146,1.606,152,1.791,156,1.685,160,1.145,177,1.543,346,1.085,350,1.51,355,2.457,356,1.968,357,3.616,413,2.597,420,0.965,422,1.594,434,1.245,451,1.394,455,1.743,456,1.022,469,1.693,491,2.231,516,3.11,517,2.048,521,1.148,523,2.231,628,3.616,658,1.287,722,5.52,724,4.889,725,2.337,726,3.874,1028,3.507,1029,3.507,1037,4.889,1042,2.945,1560,4.441,1567,3.507,2327,3.995,2328,6.413,2329,7.296,2330,6.413,2331,6.937,2332,5.57,2333,5.57,2334,3.995,2335,5.57,2336,3.995,2337,4.106,2338,5.57,2339,3.995,2340,3.995,2341,5.57,2342,5.57,2343,6.937,2344,5.57,2345,3.995,2346,3.995,2347,5.629,2348,3.507,2349,3.995,2350,5.113,2351,5.113,2352,3.995,2353,3.995,2354,3.995,2355,3.995,2356,5.57,2357,3.995,2358,3.995,2359,3.995,2360,3.995,2361,3.995,2362,3.995,2363,3.995,2364,6.413,2365,5.57,2366,3.995,2367,5.57,2368,6.937,2369,3.995,2370,5.57,2371,5.57,2372,3.995,2373,3.995,2374,3.995,2375,3.995,2376,5.57,2377,3.995,2378,3.995,2379,5.57,2380,3.185,2381,3.995,2382,3.995,2383,8.503,2384,3.995,2385,3.995,2386,3.995,2387,3.995,2388,3.507,2389,3.995,2390,3.507,2391,3.995,2392,3.995,2393,3.995,2394,3.995,2395,3.995,2396,3.995,2397,3.995,2398,3.995,2399,3.995,2400,3.995,2401,3.995,2402,3.995,2403,3.995,2404,3.995,2405,3.995,2406,3.995,2407,3.995,2408,3.995,2409,3.995,2410,3.995,2411,3.995,2412,5.57,2413,3.507,2414,3.507,2415,3.995,2416,3.995,2417,3.995]],["title/components/ThemeSettingsComponent.html",[84,0.977,412,1.743]],["body/components/ThemeSettingsComponent.html",[3,0.214,4,0.214,5,0.172,7,0.228,8,0.522,11,0.318,12,0.011,13,0.228,16,1.353,18,2.531,21,1.21,75,0.008,76,0.008,80,1.558,83,0.643,84,1.582,86,0.889,89,0.659,123,1.585,138,2.375,142,2.375,143,0.598,144,1.871,336,1.932,337,2.044,338,1.997,339,1.997,340,1.997,344,3.294,345,3.374,347,1.932,350,1.268,357,4.874,358,3.571,367,4.677,375,1.997,376,2.531,377,2.168,378,1.705,379,3.095,380,1.997,381,1.997,382,1.932,383,1.516,384,1.997,385,1.932,386,1.997,387,1.932,388,1.813,389,1.997,390,1.705,391,1.758,392,1.758,393,2.615,394,1.932,395,3.095,396,1.932,397,1.997,398,1.932,399,1.758,400,1.997,401,1.932,402,1.997,403,1.813,404,1.932,405,1.932,406,1.997,407,1.932,408,1.871,409,1.997,410,1.932,411,1.997,412,2.995,413,3.051,414,1.932,415,1.932,416,1.932,417,1.871,418,1.932,419,1.997,434,1.418,451,1.053,455,1.516,456,0.889,469,1.279,580,3.391,601,2.387,1706,3.862,1707,5.642,1709,4.677,1729,3.862,2205,6.211,2325,4.252,2337,4.677,2380,5.059,2418,7.076,2419,7.076,2420,6.345,2421,6.345,2422,7.509,2423,4.844,2424,4.844,2425,4.844]],["title/pipes/TimePipe.html",[120,2.24,829,3.221]],["body/pipes/TimePipe.html",[3,0.267,4,0.267,5,0.164,10,1.44,11,0.398,12,0.011,13,0.285,19,0.994,75,0.009,76,0.009,80,1.568,83,0.626,89,0.825,98,3.728,120,3.746,123,1.514,143,0.748,145,2.772,160,1.246,217,2.936,350,1.212,434,1.355,451,1.318,455,1.897,456,1.113,464,3.24,469,1.601,657,6.414,658,2.623,659,5.036,660,4.469,661,5.826,662,6.885,664,5.826,829,5.387,854,4.744,2015,4.834,2016,5.322,2426,6.063,2427,6.063,2428,5.322]],["title/injectables/TitleService.html",[420,0.757,1764,3.221]],["body/injectables/TitleService.html",[3,0.268,4,0.268,5,0.165,7,0.286,8,0.601,11,0.398,12,0.011,13,0.286,16,1.696,19,1.068,21,1.517,75,0.009,76,0.009,80,1.214,83,0.627,86,1.115,88,3.723,89,0.826,143,0.75,146,1.214,152,2.192,203,2.849,346,1.649,350,1.462,355,3.735,356,2.993,420,1.268,422,2.423,434,1.635,451,1.321,455,1.901,456,1.115,469,1.604,521,1.745,1764,5.392,2429,6.074,2430,7.315,2431,7.315,2432,6.074,2433,6.074,2434,6.074,2435,6.074,2436,6.074,2437,6.074]],["title/interfaces/Track.html",[0,0.072,95,1.801]],["body/interfaces/Track.html",[0,0.129,2,1.084,3,0.239,4,0.239,5,0.229,7,0.255,8,0.561,11,0.53,12,0.011,13,0.388,19,1.161,25,2.095,75,0.008,76,0.008,77,1.747,79,3.173,81,2.781,82,2.331,83,0.64,94,3.173,95,3.077,123,2.089,124,3.521,176,2.164,203,1.853,281,4.138,315,2.393,316,2.393,456,1.253,459,3.029,491,3.029,492,3.029,493,3.029,494,3.173,495,2.899,496,3.173,497,3.173,498,3.335,499,3.335,500,3.335,579,3.335,726,3.029,727,3.738,728,4.196,729,3.335,730,2.03,731,3.498,732,4.429,733,2.899,734,5.398,735,5.24,736,3.173,737,3.521,738,2.572,739,3.738,740,3.521,741,3.521,742,3.173]],["title/interfaces/TrackMetadata.html",[0,0.072,735,2.836]],["body/interfaces/TrackMetadata.html",[0,0.124,2,0.981,3,0.216,4,0.216,5,0.193,7,0.231,8,0.526,11,0.565,12,0.011,13,0.378,19,1.205,25,1.895,75,0.008,76,0.008,77,2.431,79,4.414,81,3.869,82,2.578,83,0.61,94,2.87,95,3.226,123,1.885,124,3.185,176,3.01,203,2.578,281,3.28,315,2.165,316,2.165,456,1.573,459,2.74,491,2.74,492,2.74,493,2.74,494,2.87,495,2.622,496,2.87,497,2.87,498,3.017,499,3.017,500,3.017,579,3.017,726,2.74,727,3.381,728,4.64,729,3.017,730,1.837,731,3.869,732,4.899,733,2.622,734,4.41,735,4.899,736,4.414,737,4.899,738,3.579,739,5.2,740,4.899,741,3.185,742,2.87]],["title/injectables/UpdateService.html",[359,3.483,420,0.757]],["body/injectables/UpdateService.html",[3,0.217,4,0.217,5,0.134,7,0.232,12,0.011,13,0.232,75,0.008,76,0.008,83,0.689,86,0.905,89,0.67,101,2.101,102,1.635,143,0.608,146,1.426,156,1.734,160,1.467,177,1.904,203,1.684,214,2.883,233,2.514,248,2.298,346,1.338,349,3.262,350,1.426,359,5.116,403,1.845,420,1.112,422,1.966,434,1.434,451,1.395,471,2.428,521,1.416,603,4.907,628,4.907,658,1.587,781,2.83,876,4.907,1094,4.326,1174,3.633,1176,2.883,1185,2.883,1186,3.633,1301,3.396,1360,2.883,1605,4.326,1848,3.633,1853,3.929,1854,3.633,1855,3.633,1858,3.929,1859,3.929,1953,2.883,1955,4.174,1957,4.917,2194,4.73,2195,3.929,2239,3.929,2438,4.928,2439,7.559,2440,4.928,2441,4.928,2442,4.928,2443,6.417,2444,6.263,2445,4.326,2446,4.928,2447,4.928,2448,4.928,2449,4.928,2450,4.928,2451,4.928,2452,4.928,2453,4.928,2454,5.209,2455,6.417,2456,4.928,2457,4.928,2458,4.928,2459,4.928,2460,4.928,2461,4.928,2462,4.928,2463,4.928,2464,4.928,2465,4.928,2466,4.928,2467,4.928,2468,4.928,2469,4.928,2470,4.928,2471,4.928,2472,4.928,2473,4.928,2474,4.326,2475,4.928,2476,4.928,2477,4.928,2478,4.928]],["title/components/VisualizerComponent.html",[84,0.977,414,1.743]],["body/components/VisualizerComponent.html",[3,0.091,4,0.091,5,0.092,7,0.097,8,0.278,10,1.476,11,0.469,12,0.011,13,0.097,16,1.955,21,1.944,37,1.209,43,1.601,47,2.075,55,2.075,75,0.004,76,0.004,80,1.453,83,0.648,84,0.956,85,3.408,86,0.379,87,2.948,88,0.98,89,0.281,91,0.945,93,1.804,95,1.391,108,2.757,109,1.342,111,1.06,113,0.945,123,0.843,138,1.263,140,1.543,142,1.263,143,0.255,144,0.798,145,1.543,146,0.413,151,2.075,152,2.373,160,1.321,234,1.424,292,3.275,296,1.804,297,1.73,298,1.804,299,1.804,300,1.804,301,1.804,302,2.639,303,1.804,304,1.804,305,1.885,306,1.885,307,1.06,308,2.908,309,2.79,310,3.158,311,2.79,312,1.06,313,2.531,317,2.79,328,3.499,331,3.243,332,3.047,335,3.166,336,0.825,337,1.087,338,0.852,339,0.852,340,0.852,342,2.075,343,2.075,344,2.936,345,2.953,347,0.825,349,1.956,350,1.643,352,1.271,375,0.852,376,1.346,377,1.153,378,0.728,379,2.035,380,0.852,381,0.852,382,0.825,383,0.647,384,0.852,385,0.825,386,0.852,387,0.825,388,0.774,389,0.852,390,0.728,391,0.75,392,0.75,393,1.391,394,0.825,395,2.035,396,0.825,397,0.852,398,0.825,399,0.75,400,0.852,401,0.825,402,0.852,403,0.774,404,0.825,405,0.825,406,0.852,407,1.97,408,0.798,409,0.852,410,0.825,411,0.852,412,0.825,413,0.774,414,1.97,415,2.171,416,0.825,417,1.908,418,0.825,419,0.852,421,2.433,434,0.755,451,1.445,453,2.488,455,2.08,456,1.255,457,2.948,469,2.265,512,2.488,516,2.757,517,1.06,523,1.885,658,0.666,726,2.389,917,3.41,924,1.974,927,1.271,929,1.524,961,2.777,1005,1.342,1050,2.191,1117,5.104,1250,2.63,1251,2.193,1361,1.974,1751,3.41,1766,1.524,1953,1.974,1955,4,1965,2.691,2017,1.814,2018,1.814,2020,1.814,2078,2.963,2174,2.691,2239,1.648,2258,1.814,2262,1.524,2479,2.067,2480,4.278,2481,4.278,2482,3.375,2483,3.375,2484,3.755,2485,5.442,2486,4.278,2487,3.755,2488,3.755,2489,5.442,2490,5.442,2491,3.937,2492,3.375,2493,3.375,2494,3.375,2495,3.375,2496,3.375,2497,3.375,2498,3.375,2499,3.375,2500,3.375,2501,3.375,2502,3.375,2503,2.067,2504,3.375,2505,2.067,2506,3.375,2507,2.067,2508,3.375,2509,2.067,2510,3.375,2511,2.067,2512,3.375,2513,2.067,2514,3.375,2515,2.067,2516,3.375,2517,2.067,2518,3.375,2519,2.067,2520,3.375,2521,3.375,2522,2.067,2523,2.963,2524,2.067,2525,3.375,2526,2.691,2527,2.067,2528,3.375,2529,3.375,2530,3.375,2531,3.375,2532,2.067,2533,3.375,2534,2.067,2535,3.375,2536,2.067,2537,3.375,2538,3.375,2539,2.067,2540,2.067,2541,3.375,2542,2.067,2543,3.375,2544,2.067,2545,3.375,2546,2.067,2547,2.067,2548,3.375,2549,3.375,2550,2.067,2551,3.375,2552,2.067,2553,2.067,2554,3.375,2555,2.067,2556,3.375,2557,3.375,2558,2.067,2559,3.375,2560,2.067,2561,2.067,2562,2.067,2563,2.067,2564,2.067,2565,2.067,2566,3.375,2567,2.067,2568,3.375,2569,2.067,2570,3.375,2571,2.067,2572,2.067,2573,1.814,2574,2.067,2575,2.067,2576,2.067,2577,2.067,2578,2.067,2579,2.067,2580,2.067,2581,2.067,2582,2.067,2583,2.067,2584,2.067,2585,2.067,2586,2.067,2587,2.067,2588,2.067,2589,2.067,2590,2.067,2591,2.067,2592,2.067,2593,2.067,2594,2.067,2595,2.067,2596,3.375,2597,3.375,2598,5.125,2599,2.963,2600,4.938,2601,3.375]],["title/interfaces/VisualsColorConfig.html",[0,0.072,314,2.335]],["body/interfaces/VisualsColorConfig.html",[0,0.137,2,0.998,3,0.22,4,0.22,5,0.135,7,0.235,8,0.532,10,1.62,11,0.529,12,0.011,13,0.402,18,2.864,19,1.132,22,1.608,25,2.5,75,0.008,76,0.008,290,2.788,291,2.788,292,3.743,293,2.921,294,2.921,295,2.921,296,2.669,297,2.56,298,2.669,299,2.669,300,2.669,301,2.669,302,2.669,303,2.669,304,2.669,305,2.788,306,2.788,307,2.56,308,3.459,309,3.318,310,3.318,311,3.318,312,2.56,313,3.318,314,3.459,315,3.473,316,3.473,317,4.035,318,2.669,319,2.669,320,2.56,321,2.788,322,2.921,323,2.46,324,3.538,325,2.669,326,2.46,327,4.009,328,3.07,329,2.669,330,3.318,331,3.603,332,3.603,333,2.368,334,3.318,335,3.743,456,1.48]],["title/directives/VisualsDirective.html",[378,1.538,417,1.688]],["body/directives/VisualsDirective.html",[3,0.134,4,0.134,5,0.082,7,0.143,8,0.375,10,0.557,11,0.4,12,0.011,13,0.143,16,1.532,18,2.609,21,1.524,22,2.213,39,2.214,41,2.514,43,2.164,75,0.006,76,0.006,80,0.912,83,0.47,86,0.557,89,0.413,123,0.758,143,0.375,145,2.086,146,1.5,152,2.262,156,2.037,160,1.127,177,1.763,202,3.779,217,1.708,229,2.419,248,1.767,292,1.495,307,1.556,308,2.931,309,2.811,310,2.811,311,2.811,312,1.556,313,2.811,314,1.622,315,2.013,316,2.013,317,2.339,318,3.809,319,2.931,320,3.127,321,2.548,323,1.495,324,2.248,325,1.622,326,1.495,328,1.439,329,2.439,331,2.893,332,3.478,333,1.439,335,3.005,344,1.708,349,2.507,350,1.552,378,1.607,416,1.211,417,1.763,418,1.82,421,2.248,434,1.02,447,3.638,451,1.192,453,4.821,455,1.428,456,0.838,457,4.507,469,1.611,512,3.364,541,2.237,544,1.97,600,2.091,658,1.767,659,3.145,691,2.419,726,3.652,843,4.51,854,1.97,924,1.775,927,1.866,961,3.56,980,2.664,1005,1.97,1150,2.664,1301,3.779,1306,2.664,1308,2.664,1309,2.419,1361,1.775,1364,1.97,1517,3.145,1953,1.775,1955,3.568,1957,4.203,2270,3.638,2350,4.372,2351,4.372,2484,4.814,2488,4.814,2523,2.664,2526,3.638,2602,2.664,2603,6.1,2604,4.563,2605,4.563,2606,3.035,2607,4.563,2608,3.035,2609,4.563,2610,3.035,2611,4.563,2612,3.035,2613,3.035,2614,3.035,2615,4.563,2616,3.035,2617,3.035,2618,3.035,2619,3.035,2620,2.664,2621,2.664,2622,2.664,2623,2.664,2624,3.035,2625,3.035,2626,3.035,2627,3.035,2628,3.035,2629,4.563,2630,3.035,2631,3.035,2632,3.035,2633,3.035,2634,3.035,2635,3.035,2636,3.035,2637,3.035,2638,3.035,2639,7.128,2640,3.035,2641,3.035,2642,3.035,2643,3.035,2644,2.091,2645,4.563,2646,3.035,2647,3.035,2648,3.035,2649,3.035,2650,3.035,2651,3.035,2652,5.484,2653,3.035,2654,4.563,2655,4.563,2656,3.035,2657,2.664,2658,3.035,2659,6.1,2660,3.035,2661,3.035,2662,3.035,2663,3.035,2664,3.035,2665,3.035,2666,4.563,2667,3.035,2668,3.035,2669,3.035,2670,5.484,2671,6.1,2672,3.035,2673,3.035,2674,3.035,2675,3.035,2676,4.563,2677,4.563,2678,4.563,2679,5.484,2680,3.035,2681,3.035,2682,3.035,2683,3.035,2684,3.035,2685,3.035,2686,3.035,2687,3.035,2688,3.035,2689,6.257,2690,4.563,2691,4.563,2692,2.664,2693,2.664,2694,3.035,2695,3.035,2696,3.035,2697,3.035,2698,3.035,2699,4.563,2700,4.814,2701,4.563,2702,4.563,2703,3.035,2704,3.035,2705,3.035,2706,3.035,2707,3.035,2708,3.035,2709,3.035,2710,3.035,2711,3.035,2712,3.035,2713,3.035,2714,3.035,2715,4.563,2716,3.035,2717,3.035,2718,3.035,2719,2.664,2720,3.035,2721,2.664,2722,3.035,2723,3.035,2724,3.035]],["title/injectables/VisualsService.html",[420,0.757,2491,3.483]],["body/injectables/VisualsService.html",[3,0.247,4,0.247,5,0.152,7,0.263,8,0.572,11,0.367,12,0.011,13,0.263,16,1.562,21,1.397,75,0.009,76,0.009,83,0.649,86,1.027,88,2.653,89,0.761,91,2.557,143,0.691,146,1.118,152,2.114,328,3.299,331,3.756,332,3.756,335,3.902,346,1.519,350,1.39,420,1.205,422,2.231,434,1.555,451,1.216,469,1.477,516,3.884,517,2.868,521,1.607,523,3.123,1953,3.272,1955,4.765,1957,5.614,2491,5.546,2620,4.91,2725,5.594,2726,7.57,2727,7.92,2728,5.594,2729,6.956,2730,5.594,2731,8.42,2732,5.594,2733,5.594,2734,5.594]],["title/interfaces/VisualsWorkerMessage.html",[0,0.072,318,2.335]],["body/interfaces/VisualsWorkerMessage.html",[0,0.136,2,0.975,3,0.215,4,0.215,5,0.132,7,0.23,8,0.524,10,1.609,11,0.543,12,0.011,13,0.401,18,2.832,19,1.024,22,2.287,25,2.463,75,0.008,76,0.008,290,2.724,291,2.724,292,3.71,293,2.854,294,2.854,295,2.854,296,2.607,297,2.501,298,2.607,299,2.607,300,2.607,301,2.607,302,2.607,303,2.607,304,2.607,305,2.724,306,2.724,307,2.501,308,3.407,309,3.268,310,3.268,311,3.268,312,2.501,313,3.268,314,2.607,315,2.813,316,2.813,317,3.268,318,3.407,319,4.024,320,3.64,321,4.204,322,4.154,323,3.71,324,4.079,325,4.024,326,3.499,327,3.965,328,3.023,329,2.607,330,3.268,331,3.571,332,3.571,333,2.314,334,3.268,335,3.71,456,1.52]],["title/injectables/WakelockService.html",[420,0.757,1849,3.011]],["body/injectables/WakelockService.html",[3,0.253,4,0.253,5,0.156,7,0.27,8,0.581,11,0.377,12,0.011,13,0.27,75,0.009,76,0.009,83,0.492,89,0.782,143,0.709,146,1.148,160,1.454,233,2.65,235,2.368,237,2.023,243,2.449,244,1.851,346,1.56,349,3.503,350,1.598,420,1.225,422,2.292,434,1.581,451,1.537,456,1.298,464,3.779,521,1.65,1849,4.873,2735,5.745,2736,6.108,2737,7.995,2738,7.995,2739,7.072,2740,5.745,2741,5.745,2742,7.072,2743,7.661,2744,5.745,2745,5.745,2746,5.745,2747,5.745,2748,5.745,2749,5.745,2750,5.745,2751,5.745]],["title/changelog.html",[2752,2.528,2753,2.704,2754,3.22]],["body/changelog.html",[0,0.009,5,0.121,10,0.1,11,0.096,12,0.003,18,0.217,21,0.257,29,4.419,41,1.04,43,2.432,45,2.08,47,3.081,49,3.594,51,3.173,53,3.594,55,2.435,57,3.707,59,2.782,61,3.153,63,2.161,65,1.638,67,3.4,69,4.178,75,0.001,76,0.001,77,0.332,80,0.206,81,0.28,83,0.088,84,0.414,86,0.1,88,0.488,92,0.319,93,0.55,95,1.271,121,0.402,123,0.94,127,0.759,128,0.319,140,0.249,142,0.825,143,0.067,176,0.217,177,0.565,187,0.435,189,0.376,199,0.821,203,0.186,206,0.435,207,0.319,214,2.614,235,0.424,246,2.012,247,1.647,248,0.176,269,0.376,320,0.28,324,0.269,331,0.259,332,0.488,333,0.488,337,0.813,346,0.148,349,0.249,356,1.086,376,0.739,378,0.192,383,0.79,388,0.385,399,0.531,413,0.385,415,0.411,421,0.269,439,0.821,456,0.1,457,0.376,470,0.949,492,0.304,493,0.304,517,0.528,525,1.202,530,0.435,539,0.759,541,0.759,544,0.354,545,0.435,550,0.376,556,0.402,557,1.034,558,1.86,559,1.139,561,0.354,562,0.402,564,0.435,568,0.376,579,0.633,580,1.349,600,3.08,603,5.272,625,1.166,626,2.012,628,1.202,659,1.519,672,0.435,687,1.625,691,0.435,722,1.43,733,1.504,736,0.319,737,0.354,742,0.319,747,0.507,756,0.204,757,0.217,763,5.776,774,0.28,788,0.319,799,0.668,817,0.781,825,0.878,828,1.008,843,0.899,854,0.668,867,1.008,870,0.304,876,0.668,877,0.435,896,2.012,902,0.821,908,0.376,962,0.709,1021,0.904,1022,5.602,1039,0.479,1042,2.775,1092,0.821,1105,3.476,1128,1.284,1145,0.709,1170,0.354,1172,0.376,1187,0.759,1205,0.402,1210,0.376,1231,0.402,1274,0.479,1301,1.276,1309,1.166,1325,1.078,1345,0.479,1361,0.319,1382,0.354,1385,0.354,1457,2.854,1487,0.479,1495,0.435,1519,0.821,1531,0.821,1532,0.479,1536,0.479,1550,0.479,1583,1.519,1627,0.479,1633,0.435,1677,0.479,1727,0.479,1741,0.479,1780,0.479,1781,0.904,1782,0.479,1807,0.435,1848,0.402,1879,1.284,1881,2.215,1953,0.319,1964,0.435,1968,3.995,1969,1.625,1977,0.904,2109,0.479,2112,0.479,2123,0.479,2128,1.625,2130,0.435,2133,1.284,2134,0.479,2135,0.479,2141,0.602,2142,4.053,2151,0.479,2163,0.479,2169,0.435,2175,0.435,2207,0.479,2214,0.479,2267,0.479,2270,0.435,2299,2.215,2300,0.904,2312,0.904,2313,0.479,2337,0.402,2380,0.435,2388,3.635,2390,4.175,2413,0.479,2414,0.479,2444,0.904,2454,1.008,2474,4.399,2487,0.479,2526,4.414,2573,0.479,2598,0.479,2599,0.479,2623,0.479,2644,2.595,2657,0.479,2689,0.479,2692,3.121,2719,0.479,2721,0.479,2736,1.166,2754,1.284,2755,0.545,2756,2.815,2757,0.545,2758,0.545,2759,0.545,2760,0.545,2761,0.354,2762,0.545,2763,5.711,2764,6.27,2765,0.545,2766,0.545,2767,5.869,2768,3.082,2769,0.545,2770,1.462,2771,0.545,2772,2.815,2773,2.215,2774,1.029,2775,0.545,2776,0.545,2777,0.545,2778,3.765,2779,6.338,2780,6.674,2781,0.545,2782,0.545,2783,1.462,2784,0.545,2785,0.545,2786,0.545,2787,0.545,2788,5.944,2789,1.029,2790,0.545,2791,1.029,2792,0.545,2793,1.029,2794,0.545,2795,0.545,2796,0.545,2797,0.545,2798,0.545,2799,0.545,2800,4.617,2801,1.934,2802,2.922,2803,2.204,2804,0.545,2805,0.545,2806,4.501,2807,1.029,2808,0.545,2809,1.852,2810,0.545,2811,0.821,2812,0.545,2813,0.545,2814,6.147,2815,0.479,2816,2.204,2817,0.545,2818,1.462,2819,0.545,2820,1.029,2821,0.545,2822,1.029,2823,0.545,2824,0.545,2825,0.545,2826,0.545,2827,0.545,2828,0.545,2829,1.029,2830,0.545,2831,0.545,2832,0.545,2833,0.545,2834,0.545,2835,0.545,2836,0.545,2837,0.545,2838,0.545,2839,0.545,2840,0.545,2841,3.328,2842,0.545,2843,0.545,2844,0.545,2845,0.545,2846,0.545,2847,0.545,2848,0.545,2849,0.545,2850,0.545,2851,0.545,2852,3.082,2853,0.545,2854,1.029,2855,1.934,2856,1.462,2857,0.545,2858,0.545,2859,0.545,2860,1.029,2861,0.545,2862,0.545,2863,3.555,2864,0.545,2865,0.545,2866,0.545,2867,0.545,2868,0.545,2869,0.545,2870,0.545,2871,0.545,2872,0.545,2873,1.462,2874,5.869,2875,0.545,2876,0.545,2877,2.523,2878,4.311,2879,0.545,2880,0.545,2881,0.545,2882,0.545,2883,0.545,2884,0.545,2885,1.029,2886,0.545,2887,1.852,2888,0.545,2889,0.545,2890,0.545,2891,0.545,2892,0.545,2893,0.545,2894,0.545,2895,0.545,2896,0.545,2897,0.545,2898,0.545,2899,0.545,2900,0.545,2901,0.545,2902,0.545,2903,0.545,2904,0.545,2905,0.545,2906,0.545,2907,0.545,2908,0.545,2909,0.545,2910,0.545,2911,2.204,2912,0.545,2913,0.545,2914,0.545,2915,0.545,2916,0.545,2917,0.545,2918,0.545,2919,1.029,2920,0.545,2921,0.545,2922,1.934,2923,0.545,2924,1.462,2925,1.166,2926,1.462,2927,0.545,2928,0.545,2929,1.284,2930,0.545,2931,0.545,2932,1.284,2933,1.029,2934,1.029,2935,0.545,2936,0.545,2937,0.479,2938,0.545,2939,0.545,2940,0.545,2941,0.545,2942,0.545,2943,0.545,2944,0.545,2945,0.545,2946,1.029,2947,0.545,2948,0.545,2949,0.545,2950,0.545,2951,0.545,2952,0.545,2953,0.545,2954,1.029,2955,0.545,2956,0.545,2957,1.852,2958,1.462,2959,0.545,2960,0.545,2961,0.545,2962,0.545,2963,0.545,2964,1.462,2965,1.029,2966,0.545,2967,0.545,2968,0.545,2969,0.545,2970,0.545,2971,0.545,2972,1.029,2973,0.545,2974,0.479,2975,0.545,2976,0.545,2977,0.545,2978,0.545,2979,0.545,2980,0.545,2981,0.545,2982,0.904,2983,0.545,2984,0.545,2985,1.029,2986,0.545,2987,0.545,2988,0.545,2989,0.545,2990,0.545,2991,0.545,2992,0.545,2993,0.545,2994,0.545,2995,0.545,2996,0.545,2997,1.852,2998,5.238,2999,0.545,3000,0.545,3001,0.545,3002,0.545,3003,0.545,3004,0.545,3005,0.545,3006,2.204,3007,0.545,3008,0.545,3009,0.545,3010,0.545,3011,0.545,3012,0.545,3013,0.545,3014,0.545,3015,0.545,3016,0.545,3017,0.545,3018,0.545,3019,0.545,3020,0.545,3021,0.545,3022,2.815,3023,0.545,3024,0.545,3025,5.869,3026,0.545,3027,0.545,3028,0.435,3029,0.545,3030,0.545,3031,0.545,3032,0.545,3033,0.545,3034,0.545,3035,0.545,3036,0.545,3037,0.545,3038,0.821,3039,0.545,3040,0.545,3041,0.545,3042,0.545,3043,6.692,3044,0.545,3045,0.545,3046,0.545,3047,0.545,3048,0.545,3049,0.545,3050,0.545,3051,0.545,3052,0.545,3053,0.545,3054,0.545,3055,0.545,3056,0.545,3057,0.545,3058,0.545,3059,0.545,3060,0.545,3061,0.545,3062,0.545,3063,1.462,3064,0.545,3065,0.545,3066,0.545,3067,0.545,3068,0.545,3069,0.545,3070,0.545,3071,0.545,3072,6.27,3073,0.545,3074,0.479,3075,0.545,3076,0.545,3077,0.545,3078,0.545,3079,0.545,3080,0.545,3081,6.798,3082,0.545,3083,0.545,3084,0.545,3085,1.029,3086,0.545,3087,0.545,3088,0.545,3089,0.545,3090,0.545,3091,1.852,3092,0.545,3093,0.545,3094,0.545,3095,0.545,3096,0.545,3097,0.545,3098,0.545,3099,0.545,3100,0.545,3101,0.545,3102,0.545,3103,0.545,3104,0.545,3105,0.545,3106,0.545,3107,7.855,3108,7.456,3109,0.545,3110,0.545,3111,0.545,3112,0.545,3113,0.545,3114,0.545,3115,0.545,3116,3.815,3117,0.545,3118,0.545,3119,0.545,3120,0.545,3121,0.545,3122,1.852,3123,1.029,3124,1.462,3125,0.545,3126,0.545,3127,0.545,3128,0.545,3129,0.545,3130,0.545,3131,0.545,3132,0.545,3133,0.545,3134,6.014,3135,0.479,3136,0.545,3137,1.852,3138,1.852,3139,0.545,3140,0.545,3141,2.204,3142,2.815,3143,0.545,3144,0.545,3145,0.545,3146,0.545,3147,0.545,3148,0.545,3149,1.284,3150,0.545,3151,0.545,3152,0.545,3153,0.545,3154,0.545,3155,0.545,3156,0.545,3157,0.545,3158,0.545,3159,0.545,3160,1.029,3161,0.545,3162,0.545,3163,0.545,3164,2.523,3165,0.545,3166,0.545,3167,0.545,3168,0.545,3169,2.815,3170,1.029,3171,0.545,3172,1.029,3173,1.029,3174,0.545,3175,0.545,3176,0.545,3177,0.545,3178,0.545,3179,0.545,3180,3.555,3181,0.545,3182,0.545,3183,0.545,3184,0.545,3185,0.545,3186,0.545,3187,0.545,3188,2.706,3189,0.545,3190,0.545,3191,0.545,3192,0.545,3193,0.545,3194,3.765,3195,0.545,3196,0.545,3197,0.545,3198,0.545,3199,7.107,3200,0.545,3201,0.545,3202,1.852,3203,2.215,3204,0.545,3205,0.545,3206,0.545,3207,0.545,3208,1.852,3209,0.545,3210,0.545,3211,0.545,3212,0.545,3213,0.545,3214,0.545,3215,0.545,3216,0.545,3217,0.545,3218,0.545,3219,0.545,3220,0.545,3221,0.545,3222,0.545,3223,0.545,3224,0.545,3225,0.545,3226,0.545,3227,0.545,3228,0.545,3229,0.545,3230,4.887,3231,0.545,3232,0.545,3233,0.545,3234,0.545,3235,0.545,3236,0.545,3237,0.545,3238,0.479,3239,0.545,3240,0.545,3241,0.545,3242,0.545,3243,0.545,3244,0.545,3245,0.545,3246,0.545,3247,0.545,3248,0.545,3249,3.328,3250,7.345,3251,0.545,3252,0.545,3253,0.545,3254,0.545,3255,0.545,3256,0.545,3257,0.545,3258,0.545,3259,0.545,3260,0.545,3261,0.545,3262,0.545,3263,0.545,3264,0.545,3265,0.545,3266,0.545,3267,0.545,3268,0.545,3269,1.029,3270,1.462,3271,1.462,3272,0.545,3273,0.545,3274,0.545,3275,0.545,3276,0.545,3277,1.029,3278,0.545,3279,0.545,3280,0.545,3281,0.545,3282,0.545,3283,0.545,3284,0.545,3285,0.545,3286,0.545,3287,0.545,3288,0.545,3289,0.545,3290,0.545,3291,0.545,3292,0.545,3293,0.545,3294,1.462,3295,1.029,3296,1.029,3297,0.545,3298,0.545,3299,0.545,3300,0.545,3301,0.545,3302,0.545,3303,0.545,3304,0.545,3305,0.545,3306,0.545,3307,0.545,3308,0.545,3309,0.545,3310,0.545,3311,0.545,3312,0.545,3313,0.545,3314,1.029,3315,0.545,3316,0.545,3317,0.545,3318,0.545,3319,0.545,3320,0.545,3321,0.545,3322,0.545,3323,0.545,3324,2.815,3325,6.082,3326,0.545,3327,0.545,3328,0.545,3329,0.545,3330,0.545,3331,0.545,3332,0.545,3333,0.545,3334,0.545,3335,0.545,3336,0.545,3337,0.545,3338,0.545,3339,0.545,3340,0.545,3341,1.029,3342,0.545,3343,0.545,3344,0.545,3345,0.545,3346,0.545,3347,0.545,3348,0.545,3349,0.545,3350,0.545,3351,0.545,3352,0.545,3353,0.545,3354,0.545,3355,4.887,3356,0.545,3357,0.545,3358,0.545,3359,0.545,3360,0.545,3361,0.545,3362,0.545,3363,0.545,3364,0.545,3365,0.545,3366,0.545,3367,0.545,3368,0.545,3369,0.545,3370,0.545,3371,0.545,3372,0.545,3373,0.545,3374,0.545,3375,0.545,3376,0.545,3377,0.545,3378,0.545,3379,0.545,3380,0.545,3381,0.545,3382,0.545,3383,0.545,3384,0.545,3385,1.029,3386,0.545,3387,1.029,3388,0.545,3389,0.545,3390,0.545,3391,0.545,3392,0.545,3393,0.545,3394,0.545,3395,0.545,3396,0.545,3397,0.545,3398,0.545,3399,0.545,3400,0.545,3401,0.545,3402,0.545,3403,0.545,3404,0.545,3405,0.545,3406,0.545,3407,0.545,3408,0.545,3409,0.545,3410,2.204,3411,0.545,3412,0.545,3413,0.545,3414,0.545,3415,4.756,3416,5.128,3417,0.545,3418,0.545,3419,0.545,3420,0.545,3421,0.545,3422,0.545,3423,0.545,3424,0.545,3425,0.545,3426,0.545,3427,0.545,3428,0.545,3429,0.545,3430,0.545,3431,0.545,3432,0.545,3433,0.545,3434,0.545,3435,0.545,3436,0.479,3437,0.545,3438,0.545,3439,0.545,3440,0.545,3441,0.545,3442,1.852,3443,1.462,3444,0.545,3445,0.545,3446,0.545,3447,0.545,3448,0.545,3449,0.545,3450,0.545,3451,0.545,3452,1.029,3453,0.545,3454,0.545,3455,0.545,3456,0.545,3457,0.545,3458,0.545,3459,0.545,3460,0.545,3461,0.545,3462,0.545,3463,0.545,3464,0.545,3465,0.545,3466,0.545,3467,1.029,3468,0.545,3469,0.545,3470,0.545,3471,1.029,3472,0.545,3473,0.545,3474,0.545,3475,0.545,3476,0.545,3477,0.545,3478,0.545,3479,0.545,3480,0.545,3481,0.545,3482,0.545,3483,0.545,3484,1.462,3485,0.545,3486,0.545,3487,0.545,3488,0.545,3489,0.545,3490,0.545,3491,0.545,3492,0.545,3493,0.545,3494,0.545,3495,0.545,3496,0.545,3497,0.545,3498,0.545,3499,0.545,3500,0.545,3501,0.479,3502,0.545,3503,0.545,3504,0.545,3505,0.545,3506,0.545,3507,0.545,3508,7.607,3509,1.029,3510,0.545,3511,0.545,3512,0.545,3513,0.545,3514,0.545,3515,0.545,3516,0.545,3517,0.545,3518,0.545,3519,0.545,3520,0.545,3521,0.545,3522,0.545,3523,0.545,3524,0.545,3525,0.545,3526,0.545,3527,1.462,3528,1.462,3529,0.545,3530,0.545,3531,0.545,3532,0.545,3533,0.545,3534,0.545,3535,0.545,3536,0.545,3537,0.545,3538,0.545,3539,1.029,3540,0.545,3541,0.545,3542,0.545,3543,1.029,3544,1.934,3545,0.545,3546,0.545,3547,0.545,3548,0.545,3549,1.029,3550,0.545,3551,0.545,3552,0.545,3553,0.545,3554,0.545,3555,0.545,3556,0.545,3557,0.545,3558,0.545,3559,0.545,3560,0.545,3561,0.545,3562,0.545,3563,0.545,3564,0.545,3565,0.545,3566,0.545,3567,2.815,3568,0.545,3569,0.545,3570,0.545,3571,1.029,3572,0.545,3573,0.545,3574,0.545,3575,0.545,3576,0.545,3577,0.545,3578,0.545,3579,0.545,3580,0.545,3581,0.545,3582,0.545,3583,0.545,3584,0.545,3585,0.545,3586,0.545,3587,0.545,3588,1.462,3589,0.545,3590,0.545,3591,0.545,3592,0.545,3593,0.545,3594,0.545,3595,0.545,3596,0.545,3597,0.545,3598,1.029,3599,0.545,3600,0.545,3601,0.545,3602,0.545,3603,0.545,3604,0.545,3605,0.545,3606,0.545,3607,0.545,3608,0.545,3609,0.545,3610,0.545,3611,0.545,3612,0.545,3613,0.545,3614,0.545,3615,1.029,3616,0.545,3617,0.545,3618,0.545,3619,0.545,3620,0.545,3621,0.545,3622,0.545,3623,0.545,3624,0.545,3625,0.545,3626,0.545,3627,0.545,3628,0.545,3629,0.545,3630,0.545,3631,0.545,3632,0.545,3633,0.545,3634,0.545,3635,0.545,3636,0.545,3637,0.545,3638,0.545,3639,0.545,3640,0.545,3641,0.545,3642,0.545,3643,0.545,3644,4.141,3645,0.545,3646,0.545,3647,1.029,3648,1.029,3649,0.545,3650,0.545,3651,0.545,3652,0.545,3653,0.545,3654,0.545,3655,0.545,3656,0.545,3657,0.545,3658,0.545,3659,0.545,3660,0.545,3661,0.545,3662,0.545,3663,0.545,3664,0.545,3665,0.545,3666,2.815,3667,0.545,3668,1.029,3669,1.029,3670,0.545,3671,0.545,3672,0.545,3673,0.545,3674,0.545,3675,0.545,3676,0.545,3677,0.545,3678,0.545,3679,0.545,3680,0.545,3681,0.545,3682,0.545,3683,0.545,3684,0.545,3685,0.545,3686,0.545,3687,0.545,3688,0.545,3689,0.545,3690,0.545,3691,0.545,3692,0.545,3693,0.545,3694,0.545,3695,1.029,3696,0.545,3697,0.545,3698,0.545,3699,0.545,3700,0.545,3701,0.545,3702,0.545,3703,0.545,3704,0.545,3705,0.545,3706,0.545,3707,0.545,3708,0.545,3709,0.545,3710,0.545,3711,0.545,3712,0.545,3713,0.545,3714,0.545,3715,0.545,3716,0.545,3717,0.545,3718,0.545,3719,0.545,3720,0.545,3721,0.545,3722,0.545,3723,0.545,3724,0.545,3725,0.545,3726,0.545,3727,0.545,3728,1.029,3729,0.545,3730,0.545,3731,0.545,3732,0.545,3733,0.545,3734,0.545,3735,0.545,3736,0.709,3737,1.276,3738,0.545,3739,0.545,3740,0.545,3741,0.545,3742,0.545,3743,0.545,3744,0.545,3745,0.545,3746,0.545,3747,0.545,3748,0.545,3749,0.545,3750,0.545,3751,0.545,3752,0.545,3753,0.545,3754,0.545,3755,0.545,3756,0.545,3757,0.545,3758,0.545,3759,1.852,3760,0.545,3761,0.545,3762,0.545,3763,0.545,3764,0.545,3765,1.029,3766,0.545,3767,0.545,3768,0.545,3769,0.545,3770,0.545,3771,0.545,3772,0.545,3773,0.545,3774,0.545,3775,0.545,3776,0.545,3777,0.545,3778,0.545,3779,0.545,3780,0.545,3781,0.545,3782,0.545,3783,0.545,3784,0.545,3785,0.545,3786,0.545,3787,0.545,3788,0.545,3789,0.545,3790,0.545,3791,0.545,3792,0.545,3793,0.545,3794,0.545,3795,0.545,3796,0.545,3797,0.545,3798,0.545,3799,0.545,3800,0.545,3801,0.545,3802,0.545,3803,0.545,3804,0.545,3805,0.545,3806,0.545,3807,0.545,3808,0.545,3809,0.545,3810,0.479,3811,0.545,3812,0.545,3813,0.545,3814,0.545,3815,0.545,3816,0.545,3817,0.545,3818,0.545,3819,0.545,3820,0.545,3821,0.545,3822,0.545,3823,0.545,3824,0.545,3825,0.545,3826,0.545,3827,0.545,3828,0.545,3829,0.545,3830,0.545,3831,0.545,3832,0.545,3833,0.545,3834,0.545,3835,0.545,3836,1.029,3837,0.545,3838,0.545,3839,0.545,3840,0.545,3841,0.545,3842,0.545,3843,0.545,3844,0.545,3845,0.545,3846,0.545,3847,0.545,3848,0.545,3849,0.545,3850,0.545,3851,0.545,3852,0.545,3853,0.545,3854,0.545,3855,0.545,3856,0.545,3857,0.545,3858,0.545,3859,0.545,3860,0.545,3861,0.545,3862,0.545,3863,0.545,3864,0.545,3865,0.545,3866,0.545,3867,0.545,3868,0.545,3869,0.545,3870,0.545,3871,0.545,3872,0.545,3873,0.545,3874,2.523,3875,0.545,3876,0.545,3877,0.545,3878,0.545,3879,0.545,3880,0.545,3881,0.545,3882,0.545,3883,1.029,3884,0.545,3885,0.545,3886,0.545,3887,0.545,3888,0.545,3889,1.852,3890,0.545,3891,0.545,3892,0.545,3893,0.545,3894,0.545,3895,0.545,3896,0.545,3897,0.545,3898,0.545,3899,0.545,3900,0.545,3901,0.479,3902,0.545,3903,0.545,3904,1.934,3905,0.545,3906,0.545,3907,7.689,3908,0.545,3909,0.545,3910,0.545,3911,0.545,3912,0.545,3913,0.545,3914,0.545,3915,0.545,3916,0.545,3917,0.545,3918,0.545,3919,0.545,3920,0.545,3921,0.545,3922,0.545,3923,0.545,3924,1.029,3925,0.545,3926,0.545,3927,0.545,3928,0.545,3929,0.545,3930,0.545,3931,0.545,3932,0.545,3933,0.545,3934,0.545,3935,0.545,3936,0.545,3937,0.545,3938,0.545,3939,0.545,3940,0.545,3941,0.545,3942,0.545,3943,0.545,3944,0.545,3945,0.545,3946,0.545,3947,0.545,3948,0.545,3949,0.545,3950,0.545,3951,0.545,3952,0.545,3953,0.545,3954,0.545,3955,1.029,3956,0.545,3957,0.545,3958,0.545,3959,0.545,3960,2.815,3961,0.545,3962,0.545,3963,0.545,3964,0.545,3965,2.815,3966,0.545,3967,0.545,3968,0.545,3969,0.545,3970,0.545,3971,0.545,3972,0.545,3973,0.545,3974,0.545,3975,0.545,3976,0.545,3977,0.545,3978,0.545,3979,1.029,3980,0.545,3981,0.545,3982,0.545,3983,0.545,3984,0.545,3985,0.545,3986,0.545,3987,0.545,3988,0.545,3989,0.545,3990,0.545,3991,0.545,3992,0.545,3993,2.204,3994,0.545,3995,0.545,3996,0.545,3997,0.545,3998,1.029,3999,0.545,4000,0.545,4001,0.545,4002,0.545,4003,1.029,4004,0.545,4005,0.545,4006,0.545,4007,0.545,4008,0.545,4009,1.029,4010,0.545,4011,0.545,4012,0.545,4013,0.545,4014,0.545,4015,0.545,4016,0.545,4017,0.545,4018,0.545,4019,0.545,4020,0.545,4021,0.545,4022,2.523,4023,0.545,4024,1.029,4025,1.934,4026,0.545,4027,0.545,4028,0.545,4029,0.545,4030,0.545,4031,0.545,4032,0.545,4033,0.545,4034,0.545,4035,1.462,4036,0.545,4037,0.545,4038,0.545,4039,0.545,4040,0.545,4041,0.545,4042,0.545,4043,0.545,4044,0.545,4045,0.545,4046,1.462,4047,0.545,4048,0.545,4049,0.545,4050,0.545,4051,0.545,4052,0.545,4053,0.545,4054,0.545,4055,0.545,4056,0.479,4057,0.545,4058,1.029,4059,0.545,4060,0.545,4061,0.545,4062,0.545,4063,0.545,4064,0.545,4065,0.545,4066,0.545,4067,0.545,4068,0.545,4069,0.545,4070,0.545,4071,0.545,4072,0.545,4073,0.545,4074,0.545,4075,0.545,4076,0.545,4077,1.029,4078,1.029,4079,0.545,4080,1.029,4081,0.545,4082,0.545,4083,0.545,4084,0.545,4085,0.545,4086,0.545,4087,0.545,4088,0.545,4089,0.545,4090,0.545,4091,0.545,4092,0.545,4093,0.545,4094,0.545,4095,0.545,4096,0.545,4097,0.545,4098,0.545,4099,0.545,4100,0.545,4101,0.545,4102,0.479,4103,0.545,4104,0.545,4105,1.029,4106,0.545,4107,0.545,4108,0.545,4109,0.545,4110,0.545,4111,0.545,4112,0.545,4113,0.545,4114,0.545,4115,0.545,4116,0.545,4117,0.545,4118,0.545,4119,0.545,4120,0.545,4121,0.545,4122,0.545,4123,0.545,4124,0.435,4125,0.545,4126,0.545,4127,0.545,4128,0.545,4129,0.545,4130,0.545,4131,0.545,4132,0.545,4133,0.545,4134,0.545,4135,0.545,4136,0.545,4137,0.545,4138,0.545,4139,0.545,4140,0.545,4141,0.545,4142,0.545,4143,0.545,4144,0.545,4145,0.545,4146,0.545,4147,0.479,4148,0.545,4149,0.545,4150,0.545,4151,1.462,4152,0.545,4153,0.545,4154,0.545,4155,0.545,4156,0.545,4157,0.545,4158,0.545,4159,0.545,4160,0.545,4161,0.545,4162,0.545,4163,0.545,4164,1.852,4165,0.545,4166,0.545,4167,0.545,4168,0.545,4169,0.545,4170,2.815,4171,2.204,4172,0.545,4173,0.545,4174,0.545,4175,0.545,4176,0.545,4177,0.545,4178,0.545,4179,0.545,4180,0.545,4181,0.545,4182,0.545,4183,0.545,4184,0.545,4185,0.545,4186,1.029,4187,0.545,4188,0.545,4189,0.545,4190,0.545,4191,0.545,4192,0.545,4193,0.545,4194,0.545,4195,0.545,4196,0.545,4197,0.545,4198,0.545,4199,0.545,4200,0.545,4201,0.545,4202,0.545,4203,0.545,4204,0.545,4205,0.545,4206,0.545,4207,0.545,4208,0.545,4209,0.545,4210,0.545,4211,0.545,4212,0.545,4213,0.545,4214,1.029,4215,0.545,4216,0.545,4217,0.545,4218,0.545,4219,0.545,4220,0.545,4221,0.545,4222,0.545,4223,0.545,4224,0.545,4225,0.545,4226,0.545,4227,0.545,4228,0.545,4229,0.545,4230,0.545,4231,0.545,4232,0.545,4233,0.545,4234,0.545,4235,0.545,4236,0.545,4237,0.545,4238,0.545,4239,0.545,4240,0.545,4241,0.545,4242,0.545,4243,1.852,4244,0.545,4245,0.545,4246,0.545,4247,0.545,4248,0.545,4249,1.029,4250,0.545,4251,0.545,4252,0.545,4253,0.545,4254,0.545,4255,0.545,4256,0.545,4257,0.545,4258,0.545,4259,0.545,4260,0.545,4261,0.545,4262,0.545,4263,0.545,4264,0.545,4265,0.545,4266,0.545,4267,0.545,4268,0.545,4269,0.545,4270,0.545,4271,0.545,4272,0.545,4273,0.545,4274,0.545,4275,0.545,4276,0.545,4277,0.545,4278,0.545,4279,0.545,4280,0.545,4281,0.545,4282,0.545,4283,2.204,4284,2.204,4285,0.545,4286,0.545,4287,0.545,4288,0.545,4289,0.545,4290,0.545,4291,0.545,4292,0.545,4293,0.545,4294,0.545,4295,0.545,4296,0.545,4297,0.545,4298,0.545,4299,0.545,4300,0.545,4301,0.545,4302,0.545,4303,0.545,4304,0.545,4305,0.545,4306,0.545,4307,0.545,4308,0.545,4309,0.545,4310,0.545,4311,0.545,4312,0.545,4313,0.545,4314,0.545,4315,0.545,4316,0.545,4317,0.545,4318,0.545,4319,0.545,4320,0.545,4321,0.545,4322,0.545,4323,0.545,4324,0.545,4325,0.545,4326,0.545,4327,0.545,4328,0.545,4329,0.545,4330,7.572,4331,0.545,4332,0.545,4333,0.545,4334,0.545,4335,0.545,4336,0.545,4337,0.545,4338,0.545,4339,0.545,4340,0.545,4341,0.545,4342,0.479,4343,1.462,4344,0.545,4345,0.545,4346,0.545,4347,0.479,4348,0.545,4349,0.545,4350,0.545,4351,0.545,4352,0.545,4353,0.545,4354,0.545,4355,0.545,4356,0.545,4357,0.545,4358,0.545,4359,0.545,4360,0.545,4361,0.545,4362,0.545,4363,0.545,4364,0.545,4365,0.904,4366,0.545,4367,0.545,4368,0.545,4369,0.545,4370,0.545,4371,0.545,4372,0.545,4373,0.545,4374,0.545,4375,1.029,4376,0.545,4377,0.545,4378,0.545,4379,0.545,4380,0.545,4381,0.545,4382,0.545,4383,0.545,4384,0.545,4385,0.545,4386,0.545,4387,0.545,4388,0.545,4389,0.545,4390,0.545,4391,0.545,4392,0.545,4393,0.545,4394,0.545,4395,0.545,4396,0.545,4397,0.545,4398,0.545,4399,0.545,4400,0.545,4401,0.545,4402,0.545,4403,0.545,4404,0.545,4405,0.545,4406,0.545,4407,0.545,4408,0.545,4409,0.545,4410,0.545,4411,0.545,4412,0.545,4413,0.545,4414,0.545,4415,0.545,4416,0.545,4417,0.545,4418,0.545,4419,0.545,4420,0.545,4421,0.545,4422,0.545,4423,0.545,4424,0.545,4425,0.545,4426,0.545,4427,0.545,4428,0.545,4429,0.545,4430,0.545,4431,0.545,4432,0.545,4433,0.545,4434,0.545,4435,0.545,4436,0.545,4437,0.545,4438,0.545,4439,0.545,4440,0.545,4441,0.545,4442,0.545,4443,0.545,4444,0.545,4445,0.545,4446,0.545,4447,0.545,4448,0.545,4449,0.545,4450,0.545,4451,0.545,4452,0.545,4453,0.545,4454,0.545,4455,0.545,4456,0.545,4457,0.545,4458,0.545,4459,0.545,4460,0.545,4461,0.545,4462,0.545,4463,0.545,4464,0.545,4465,0.545,4466,0.545,4467,0.545,4468,0.545,4469,0.545,4470,0.545,4471,0.545,4472,1.029,4473,0.545,4474,0.545,4475,0.545,4476,0.545,4477,0.545,4478,0.545,4479,0.545,4480,0.545,4481,0.545,4482,0.545,4483,0.545,4484,0.545,4485,0.545,4486,0.545,4487,0.545,4488,0.545,4489,0.545,4490,0.545,4491,0.545,4492,0.545,4493,0.545,4494,0.545,4495,0.545,4496,0.545,4497,0.545,4498,0.545,4499,0.545,4500,0.545,4501,0.545,4502,0.545,4503,0.545,4504,0.545,4505,0.545,4506,0.545,4507,1.029,4508,0.545,4509,0.545,4510,0.545,4511,0.545,4512,0.545,4513,1.029,4514,1.029,4515,1.029,4516,0.545,4517,0.545,4518,0.545,4519,0.545,4520,0.545,4521,0.545,4522,0.545,4523,1.029,4524,1.029,4525,0.545,4526,0.545,4527,0.545,4528,0.545,4529,0.545,4530,0.545,4531,0.545,4532,0.545,4533,0.545,4534,0.545,4535,0.545,4536,0.545,4537,0.545,4538,0.545,4539,0.545,4540,0.545,4541,0.545,4542,0.545,4543,0.545,4544,0.545,4545,0.545,4546,0.545,4547,0.545,4548,0.545,4549,0.545,4550,0.545,4551,0.545,4552,0.545,4553,0.545,4554,0.545,4555,0.545,4556,0.545,4557,0.545,4558,0.545,4559,0.545,4560,0.545,4561,0.545,4562,0.545,4563,0.545,4564,0.545,4565,0.545,4566,0.545,4567,0.545,4568,0.545,4569,0.545,4570,0.545,4571,0.545,4572,0.545,4573,0.545,4574,0.545,4575,0.545,4576,0.545,4577,0.545,4578,0.545,4579,0.545,4580,0.545,4581,0.545,4582,0.545,4583,0.545,4584,0.545,4585,0.545,4586,0.545,4587,0.545,4588,0.545,4589,0.545,4590,0.545,4591,0.545,4592,0.545,4593,0.545,4594,0.545,4595,0.545,4596,0.545,4597,0.545,4598,0.545,4599,0.545,4600,0.545,4601,0.545,4602,0.545,4603,0.545,4604,0.545,4605,0.545,4606,0.545,4607,0.545,4608,0.545,4609,0.545,4610,0.545,4611,0.545,4612,0.545,4613,0.545,4614,0.545,4615,0.545,4616,0.545,4617,0.545,4618,0.545,4619,0.545,4620,0.545,4621,0.545,4622,0.545,4623,1.029,4624,0.545,4625,1.029,4626,0.545,4627,1.029,4628,1.462,4629,0.545,4630,0.545,4631,1.029,4632,0.545,4633,1.029,4634,8.208,4635,0.545,4636,0.545,4637,1.029,4638,0.545,4639,0.545,4640,0.545,4641,1.029,4642,0.545,4643,1.029,4644,0.545,4645,1.029,4646,0.545,4647,1.029,4648,0.545,4649,1.029,4650,0.545,4651,0.545,4652,0.545,4653,0.545,4654,1.029,4655,0.545,4656,1.029,4657,0.545,4658,1.029,4659,0.545,4660,1.029,4661,0.545,4662,1.029,4663,0.545,4664,1.029,4665,0.545,4666,1.029,4667,0.545,4668,1.029,4669,0.545,4670,0.545,4671,1.029,4672,1.029,4673,0.545,4674,0.545,4675,1.029,4676,0.545,4677,1.029,4678,0.545,4679,1.029,4680,0.545,4681,1.029,4682,0.545,4683,0.545,4684,1.029,4685,0.545,4686,0.545,4687,0.545,4688,1.029,4689,0.479,4690,0.545,4691,0.545,4692,1.029,4693,0.545,4694,1.029,4695,0.904,4696,0.545,4697,0.545,4698,1.029,4699,1.029,4700,0.545,4701,0.545,4702,1.029,4703,1.462,4704,1.852,4705,0.545,4706,0.545,4707,0.545,4708,1.029,4709,0.545,4710,1.029,4711,0.545,4712,0.545,4713,1.029,4714,0.545,4715,1.029,4716,0.545,4717,1.029,4718,0.545,4719,1.029,4720,0.545,4721,1.029,4722,0.545,4723,1.029,4724,0.545,4725,0.545,4726,1.029,4727,0.545,4728,1.029,4729,0.545,4730,1.029,4731,0.545,4732,1.029,4733,0.545,4734,1.029,4735,0.545,4736,1.029,4737,0.545,4738,1.029,4739,0.545,4740,1.029,4741,0.545,4742,0.545,4743,1.029,4744,0.545,4745,0.545,4746,0.545,4747,1.029,4748,0.545,4749,0.545,4750,0.545,4751,1.029,4752,0.545,4753,0.376,4754,0.545,4755,0.545,4756,0.545,4757,1.462,4758,0.545,4759,1.029,4760,0.545,4761,1.029,4762,1.029,4763,1.029,4764,1.852,4765,1.029,4766,0.545,4767,0.545,4768,0.545,4769,0.545,4770,0.545,4771,0.545,4772,0.545,4773,1.029,4774,1.029,4775,0.545,4776,0.545,4777,1.029,4778,0.545,4779,0.545,4780,1.029,4781,0.545,4782,1.029,4783,0.545,4784,1.029,4785,0.545,4786,1.029,4787,0.545,4788,1.029,4789,1.462,4790,0.545,4791,0.545,4792,0.545,4793,1.029,4794,0.545,4795,1.029,4796,0.545,4797,1.462,4798,0.545,4799,0.545,4800,0.545,4801,1.029,4802,0.545,4803,1.029,4804,0.545,4805,0.545,4806,0.545,4807,0.545,4808,0.545,4809,0.545,4810,0.545,4811,1.029,4812,0.545,4813,1.029,4814,0.545,4815,1.029,4816,0.545,4817,1.029,4818,0.545,4819,1.029,4820,0.545,4821,1.029,4822,0.545,4823,1.029,4824,0.545,4825,1.029,4826,0.545,4827,1.029,4828,0.545,4829,1.029,4830,0.545,4831,1.029,4832,0.545,4833,1.029,4834,0.545,4835,1.029,4836,0.545,4837,1.029,4838,0.545,4839,1.029,4840,0.545,4841,1.029,4842,0.545,4843,1.029,4844,0.545,4845,1.029,4846,0.545,4847,1.029,4848,0.545,4849,0.545,4850,0.545,4851,0.545,4852,1.029,4853,0.545,4854,0.545,4855,0.545,4856,0.545,4857,1.029,4858,1.852,4859,1.029,4860,0.545,4861,1.462,4862,0.545,4863,0.545,4864,0.545,4865,1.029,4866,0.545,4867,0.759,4868,0.545,4869,0.545,4870,0.545,4871,0.545,4872,1.029,4873,0.545,4874,0.545,4875,0.545,4876,1.029,4877,0.545,4878,1.029,4879,0.545,4880,1.029,4881,0.545,4882,1.029,4883,0.545,4884,1.029,4885,0.545,4886,1.029,4887,0.545,4888,1.029,4889,1.029,4890,0.545,4891,0.545,4892,1.029,4893,0.545,4894,0.545,4895,1.029,4896,0.545,4897,0.545,4898,1.029,4899,0.545,4900,0.545,4901,1.029,4902,0.545,4903,0.545,4904,0.545,4905,0.545,4906,0.545,4907,0.545,4908,0.545,4909,0.545,4910,0.545,4911,0.545,4912,0.545,4913,1.029,4914,0.545,4915,0.545,4916,1.029,4917,0.545,4918,0.545,4919,1.029,4920,0.545,4921,0.545,4922,1.029,4923,0.545,4924,0.545,4925,0.545,4926,1.029,4927,0.545,4928,0.545,4929,0.545,4930,1.029,4931,0.545,4932,1.029,4933,0.545,4934,0.545,4935,0.545,4936,0.545,4937,1.029,4938,0.545,4939,1.029,4940,0.545,4941,1.029,4942,0.545,4943,1.029,4944,0.545,4945,0.545,4946,0.545,4947,0.545,4948,0.545,4949,1.029,4950,0.545,4951,1.029,4952,0.545,4953,0.545,4954,1.029,4955,0.545,4956,1.029,4957,0.545,4958,0.545,4959,0.545,4960,0.545,4961,0.545,4962,0.545,4963,1.029,4964,0.545,4965,0.545,4966,0.545,4967,1.029,4968,0.545,4969,0.545,4970,0.545,4971,0.545,4972,0.545,4973,0.479,4974,0.545,4975,1.029,4976,0.545,4977,1.029,4978,0.545,4979,0.479,4980,0.545,4981,0.545,4982,0.545,4983,0.545,4984,1.029,4985,0.545,4986,1.029,4987,0.545,4988,1.029,4989,0.545,4990,0.545,4991,1.029,4992,0.545,4993,0.545,4994,1.029,4995,0.545,4996,0.545,4997,0.545,4998,1.029,4999,0.545,5000,1.029,5001,0.545,5002,1.029,5003,0.545,5004,1.029,5005,0.545,5006,1.029,5007,0.545,5008,1.029,5009,0.545,5010,1.029,5011,0.545,5012,1.029,5013,0.545,5014,1.029,5015,0.545,5016,1.029,5017,0.545,5018,1.029,5019,0.545,5020,0.545,5021,0.545,5022,0.545,5023,0.545]],["title/dependencies.html",[2644,3.614,2925,2.924]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,89,0.796,91,3.679,92,3.424,93,3.128,98,3.6,102,1.942,119,4.315,120,3.001,122,4.315,123,1.462,131,4.315,355,4.399,356,3.525,517,3.001,733,3.128,753,3.8,754,3.8,755,3.001,764,4.399,817,3.128,1173,3.6,1301,4.034,1578,5.138,1583,4.034,1586,5.138,1587,5.138,2347,5.138,2348,5.138,2445,5.138,2644,4.034,3074,5.138,3135,7.59,3188,5.138,3238,5.138,3810,5.138,4102,5.138,4342,5.138,4347,5.138,5024,5.854,5025,5.854,5026,7.154,5027,5.854,5028,5.854,5029,5.854,5030,7.154,5031,5.854,5032,5.854,5033,5.854,5034,5.854,5035,5.854,5036,5.854,5037,5.854,5038,5.854]],["title/miscellaneous/enumerations.html",[5039,2.146,5040,4.603]],["body/miscellaneous/enumerations.html",[6,3.867,7,0.28,12,0.011,37,4.229,38,4.105,40,4.105,41,2.98,42,4.105,43,3.429,44,4.105,45,4.229,46,4.105,47,3.663,48,4.105,49,3.867,50,4.105,51,3.867,52,4.105,53,3.867,54,4.105,55,3.663,56,4.105,57,3.867,58,4.105,59,3.484,60,4.105,61,3.663,62,4.105,63,3.867,64,4.105,65,3.867,66,4.105,67,3.867,68,4.105,69,3.867,70,4.446,71,4.105,72,4.105,73,4.105,74,4.105,75,0.009,76,0.009,469,2.357,5039,3.484,5040,5.229,5041,6.346]],["title/miscellaneous/functions.html",[2811,4.181,5039,2.146]],["body/miscellaneous/functions.html",[5,0.222,7,0.204,10,1.319,11,0.543,12,0.011,19,1.079,21,1.085,22,2.315,75,0.007,76,0.007,80,1.669,324,3.819,330,2.226,334,2.226,356,3.301,451,1.876,455,2.612,456,1.532,469,1.558,658,1.399,716,4.349,721,2.798,744,2.431,759,3.024,781,2.508,863,3.627,864,2.906,865,3.462,866,4.938,867,2.992,868,4.953,891,3.462,907,3.462,934,2.425,1050,2.819,1117,4.419,1182,2.67,1295,5.178,1297,3.811,1496,2.992,1497,3.811,1498,3.462,1544,3.811,1676,3.811,1690,3.811,1783,3.811,1849,2.992,1963,3.811,1964,4.703,1965,3.462,2015,4.703,2428,3.811,2811,3.462,5039,2.54,5042,6.699,5043,7.18,5044,6.699,5045,6.699,5046,6.699,5047,6.699,5048,4.342,5049,5.899,5050,5.899,5051,4.342,5052,5.88,5053,3.811,5054,5.899,5055,4.342,5056,5.899,5057,5.88,5058,5.899,5059,5.899,5060,5.899,5061,5.899,5062,5.899,5063,4.342,5064,5.88,5065,5.899,5066,6.699,5067,5.899,5068,6.699,5069,6.699,5070,6.699,5071,5.899,5072,6.699,5073,5.899,5074,6.699,5075,5.899,5076,5.88,5077,5.899,5078,5.899,5079,5.88,5080,3.811,5081,3.811,5082,4.342,5083,4.342,5084,4.342,5085,4.342,5086,4.342,5087,4.342,5088,4.342,5089,5.899,5090,4.342,5091,3.811,5092,4.342,5093,4.342]],["title/index.html",[7,0.173,2752,2.528,2753,2.704]],["body/index.html",[5,0.191,12,0.011,59,3.338,75,0.009,76,0.009,77,1.838,123,1.992,176,2.276,189,3.932,203,1.95,356,2.812,383,2.204,399,2.071,413,2.136,520,4.853,525,4.572,580,3.05,581,4.206,628,3.704,722,3.704,733,3.05,788,3.338,817,3.05,825,2.706,843,4.33,916,4.55,1092,4.55,1145,3.932,1292,4.55,1325,4.206,1531,4.55,1580,5.009,1583,3.932,1625,4.55,1633,5.615,2337,5.191,2644,3.932,2736,4.55,2752,3.932,2761,3.704,2773,5.009,2802,5.009,2815,5.009,2929,6.705,2932,5.009,2937,5.009,2974,5.009,2982,5.009,3544,6.182,3904,6.182,4025,5.009,4689,5.009,4979,5.009,5094,5.009,5095,6.182,5096,5.009,5097,5.706,5098,5.706,5099,5.706,5100,5.706,5101,5.706,5102,7.042,5103,7.042,5104,5.706,5105,5.706,5106,5.706,5107,5.706,5108,5.706,5109,5.706,5110,5.706,5111,5.706,5112,5.706,5113,5.706,5114,5.706,5115,5.706,5116,5.706,5117,5.706,5118,5.706,5119,5.706,5120,5.706,5121,5.706]],["title/license.html",[2752,2.528,2753,2.704,4867,2.704]],["body/license.html",[10,0.842,12,0.006,29,3.579,61,1.878,75,0.006,76,0.006,197,2.435,202,2.104,203,1.043,214,4.178,227,3.655,248,0.984,350,0.61,378,1.614,426,3.16,464,1.632,518,3.38,544,1.982,568,2.104,683,2.681,690,2.681,747,1.505,764,1.878,769,1.878,810,1.89,828,2.104,854,2.976,900,5.228,911,2.435,1172,4.519,1188,2.251,1325,2.251,1495,5.695,1517,2.104,1602,4.878,1955,2.682,2137,4.025,2283,2.681,2301,2.681,2454,2.104,2700,2.681,2779,2.681,2801,6.824,2855,2.681,3028,2.435,3203,2.681,3436,2.681,4056,4.832,4124,2.435,4867,5.077,4973,4.025,5122,7.143,5123,7.348,5124,6.558,5125,7.143,5126,3.054,5127,3.054,5128,3.054,5129,7.348,5130,3.054,5131,4.585,5132,3.054,5133,3.054,5134,3.054,5135,3.054,5136,5.505,5137,3.054,5138,5.505,5139,5.505,5140,3.054,5141,6.119,5142,3.054,5143,5.505,5144,3.054,5145,3.054,5146,3.054,5147,3.054,5148,7.348,5149,3.054,5150,3.054,5151,4.585,5152,4.585,5153,3.054,5154,3.054,5155,4.585,5156,7.774,5157,8.425,5158,4.585,5159,4.585,5160,3.054,5161,3.054,5162,3.054,5163,4.585,5164,8.535,5165,3.054,5166,5.505,5167,4.585,5168,3.054,5169,4.585,5170,3.054,5171,4.585,5172,3.054,5173,5.505,5174,3.054,5175,4.585,5176,4.585,5177,6.119,5178,3.054,5179,3.054,5180,3.054,5181,6.119,5182,4.585,5183,3.054,5184,3.054,5185,4.585,5186,3.054,5187,3.054,5188,3.054,5189,3.054,5190,5.505,5191,6.558,5192,7.516,5193,6.558,5194,5.505,5195,3.054,5196,3.054,5197,3.054,5198,4.585,5199,3.054,5200,4.585,5201,3.054,5202,3.054,5203,3.054,5204,3.054,5205,3.054,5206,3.054,5207,3.054,5208,2.104,5209,3.054,5210,3.054,5211,4.585,5212,3.054,5213,7.774,5214,6.558,5215,3.054,5216,3.054,5217,4.585,5218,3.054,5219,4.585,5220,7.143,5221,3.054,5222,3.054,5223,3.054,5224,3.054,5225,3.054,5226,3.054,5227,3.054,5228,3.054,5229,3.054,5230,3.054,5231,3.054,5232,3.054,5233,3.054,5234,3.054,5235,6.119,5236,3.054,5237,3.054,5238,3.054,5239,3.054,5240,5.505,5241,3.054,5242,3.054,5243,3.054,5244,4.585,5245,3.054,5246,3.054,5247,5.505,5248,4.585,5249,3.054,5250,3.054,5251,3.054,5252,3.054,5253,4.585,5254,3.054,5255,3.054,5256,3.054,5257,3.054,5258,3.054,5259,6.558,5260,3.054,5261,3.054,5262,3.054,5263,3.054,5264,3.054,5265,3.054,5266,3.054,5267,3.054,5268,4.585,5269,3.054,5270,5.505,5271,3.054,5272,3.054,5273,3.054,5274,3.054,5275,3.054,5276,3.054,5277,3.054,5278,7.143,5279,5.505,5280,3.054,5281,7.143,5282,4.585,5283,4.585,5284,3.054,5285,5.505,5286,3.054,5287,4.585,5288,3.054,5289,3.054,5290,3.054,5291,3.054,5292,3.054,5293,6.887,5294,4.585,5295,5.505,5296,4.585,5297,3.054,5298,3.054,5299,6.558,5300,4.585,5301,4.585,5302,5.505,5303,4.585,5304,4.585,5305,4.585,5306,4.585,5307,3.054,5308,3.054,5309,3.054,5310,3.054,5311,3.054,5312,3.054,5313,6.119,5314,3.054,5315,3.054,5316,3.054,5317,3.054,5318,3.054,5319,3.054,5320,3.054,5321,3.054,5322,3.054,5323,6.119,5324,5.505,5325,3.054,5326,4.585,5327,5.505,5328,4.585,5329,4.585,5330,4.585,5331,3.054,5332,3.054,5333,3.054,5334,3.054,5335,4.585,5336,3.054,5337,6.119,5338,3.054,5339,3.054,5340,3.054,5341,3.054,5342,4.585,5343,3.054,5344,3.054,5345,3.054,5346,3.054,5347,3.054,5348,3.054,5349,3.054,5350,3.054,5351,3.054,5352,3.054,5353,4.585,5354,3.054,5355,3.054,5356,3.054,5357,3.054,5358,3.054,5359,3.054,5360,3.054,5361,3.054,5362,3.054,5363,3.054,5364,3.054,5365,3.054,5366,3.054,5367,3.054,5368,3.054,5369,3.054,5370,3.054,5371,3.054,5372,4.585,5373,3.054,5374,3.054,5375,3.054,5376,3.054,5377,3.054,5378,3.054,5379,3.054,5380,3.054,5381,4.585,5382,3.054,5383,3.054,5384,3.054,5385,3.054,5386,3.054,5387,3.054,5388,3.054,5389,3.054,5390,3.054,5391,3.054,5392,3.054,5393,3.054,5394,3.054]],["title/modules.html",[3038,4.723]],["body/modules.html",[12,0.01,75,0.01,76,0.01,3038,5.558]],["title/overview.html",[5395,5.199]],["body/overview.html",[2,1.36,12,0.01,41,3.224,45,3.98,75,0.01,76,0.01,98,4.184,143,0.84,337,2.192,378,2.395,422,2.714,2806,6.865,5395,5.972,5396,6.804]],["title/properties.html",[8,0.431,2925,2.924]],["body/properties.html",[8,0.552,12,0.011,75,0.009,76,0.009,399,2.435,525,4.356,1170,4.356,2454,4.624,4147,5.89,4867,4.946,5095,5.89,5096,5.89,5397,6.71,5398,6.71,5399,6.71,5400,6.71,5401,6.71,5402,6.71]],["title/todo.html",[557,2.048,2752,2.528,2753,2.704]],["body/todo.html",[5,0.179,12,0.01,18,2.64,75,0.009,76,0.009,214,3.871,525,4.296,817,3.537,825,3.139,1457,4.561,1560,5.277,1583,4.561,2922,5.809,4365,5.809,4695,5.809,5403,6.618,5404,6.618,5405,6.618,5406,6.618,5407,6.618,5408,6.618,5409,5.809,5410,6.618,5411,6.618,5412,6.618,5413,6.618,5414,6.618,5415,6.618,5416,6.618]],["title/miscellaneous/typealiases.html",[5039,2.146,5417,5.244]],["body/miscellaneous/typealiases.html",[6,3.723,7,0.27,11,0.376,12,0.011,14,4.586,23,4.586,30,3.952,31,3.723,32,4.586,33,3.723,34,3.527,35,3.527,75,0.009,76,0.009,291,3.202,292,3.481,296,3.065,297,2.94,298,3.065,299,3.065,300,3.065,301,3.065,302,3.065,303,3.065,304,3.065,324,3.481,328,3.35,330,2.94,331,3.35,332,3.35,334,2.94,335,3.481,459,3.944,491,3.202,492,3.202,493,3.202,494,3.355,495,3.065,496,3.355,497,3.355,727,3.952,741,4.586,742,3.355,744,2.082,890,3.527,1357,3.723,1358,4.586,1362,3.527,1363,3.527,1365,4.586,5039,3.355,5041,6.72,5418,5.735,5419,7.656,5420,7.064,5421,5.735,5422,5.735,5423,5.735,5424,5.735,5425,5.735,5426,5.735]],["title/miscellaneous/variables.html",[5039,2.146,5427,4.603]],["body/miscellaneous/variables.html",[7,0.141,10,1.483,11,0.571,12,0.011,18,1.801,19,0.965,21,2.107,39,1.086,43,1.419,75,0.006,76,0.006,77,1.454,80,1.366,90,1.84,176,1.801,185,3.6,186,5.182,203,1.858,292,2.224,309,2.315,310,2.315,311,2.315,313,2.315,315,1.992,316,1.992,317,2.315,319,2.413,320,1.534,325,2.413,326,1.474,328,1.419,329,2.413,333,2.141,383,0.936,399,1.639,423,2.385,459,1.671,469,2.227,470,1.942,471,3.367,491,1.671,492,1.671,493,1.671,494,1.75,495,1.599,496,1.75,497,1.75,498,1.84,499,1.84,500,1.84,519,3.328,562,3.328,580,1.599,658,2.201,681,3.963,716,4.219,736,3.181,762,1.368,828,2.062,863,1.84,864,1.474,867,3.111,869,2.776,872,1.671,934,1.671,935,4.773,936,2.626,937,2.626,938,2.626,939,3.963,940,2.626,941,2.626,942,2.626,943,2.626,944,2.626,945,2.626,946,2.626,947,3.963,948,2.626,949,2.626,950,2.626,951,2.626,952,2.626,953,2.626,1050,1.942,1117,1.84,1182,1.84,1466,2.385,1496,2.062,1617,2.626,1626,3.963,1849,2.062,2130,2.385,2169,2.385,2175,3.6,2220,2.626,2350,4.828,2351,4.828,2454,2.062,2602,2.626,2621,3.963,2622,3.963,2693,3.963,3028,3.6,3043,2.626,3901,2.626,4124,5.656,5039,1.75,5043,7.453,5052,2.626,5053,3.963,5057,2.626,5064,2.626,5076,2.626,5079,2.626,5080,2.626,5081,4.773,5091,2.626,5094,2.626,5427,2.626,5428,4.515,5429,4.515,5430,4.515,5431,4.515,5432,4.515,5433,4.515,5434,4.515,5435,4.515,5436,6.056,5437,2.992,5438,2.992,5439,4.515,5440,5.437,5441,4.515,5442,2.992,5443,4.515,5444,4.515,5445,2.992,5446,4.515,5447,6.5,5448,4.515,5449,4.515,5450,5.437,5451,4.515,5452,4.515,5453,4.515,5454,4.515,5455,4.515,5456,4.515,5457,4.515,5458,4.515,5459,2.992,5460,4.515,5461,2.992,5462,2.992,5463,2.992,5464,2.992,5465,2.992,5466,2.992,5467,2.992,5468,2.992,5469,2.992,5470,2.992,5471,2.992,5472,2.992,5473,2.992,5474,2.992,5475,2.992,5476,2.992,5477,2.992,5478,2.992,5479,2.992,5480,2.992,5481,2.992,5482,2.992,5483,2.992,5484,2.992,5485,6.5,5486,2.992,5487,2.992,5488,2.992,5489,2.992,5490,2.992,5491,2.992,5492,2.992,5493,2.992,5494,2.992,5495,2.992,5496,2.992,5497,2.992,5498,4.515,5499,7.094,5500,4.515,5501,4.515,5502,2.992,5503,2.992,5504,2.992,5505,2.992,5506,2.992,5507,2.992,5508,2.992,5509,2.992,5510,2.992,5511,2.992,5512,2.992,5513,2.992,5514,2.992,5515,2.992,5516,2.992,5517,2.992,5518,2.992,5519,2.992,5520,2.992,5521,2.992,5522,2.992,5523,2.992,5524,6.834,5525,4.515,5526,2.992,5527,2.992,5528,6.056,5529,2.992,5530,2.992,5531,2.992,5532,2.992,5533,2.992,5534,2.992]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.061,337,0.72,388,0.836,962,1.539,2141,1.307,4753,1.539,5208,1.539]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.21,12,0.009,75,0.009,76,0.009,247,3.91,337,2.493,388,2.898,559,4.11,962,5.334,2141,4.528,2761,4.339,3116,5.334,3736,4.606,3737,5.334,5535,4.927,5536,5.706,5537,4.927]],["title/additional-documentation/ui-components-slide-panel.html",[337,0.798,408,0.956,2141,1.448,2262,1.825,4753,1.706,5208,1.706]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.009,75,0.009,76,0.009,247,3.925,337,2.499,408,2.997,559,4.126,2141,4.538,2262,5.719,2761,4.356,3116,5.346,3736,4.624,3737,5.346,5535,4.946,5536,5.719,5537,4.946]],["title/additional-documentation/ui-components-dialogs.html",[337,0.894,2141,1.624,4753,1.913,5208,1.913,5538,2.437]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,247,3.941,337,2.505,559,4.142,2141,4.549,2761,4.373,3116,5.359,3736,4.642,3737,5.359,5535,4.966,5536,5.732,5537,4.966,5538,6.826]],["title/additional-documentation/helpers.html",[4753,2.528,5208,2.528,5539,3.22]],["body/additional-documentation/helpers.html",[12,0.009,75,0.009,76,0.009,247,3.879,559,4.078,1968,5.287,2761,4.305,3116,5.613,3149,5.821,3501,7.15,3736,5.31,3737,5.31,5409,6.764,5535,5.68,5536,5.68,5537,5.68,5539,7.15]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":1076,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.2",{"_index":2077,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["0.5",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.7",{"_index":2557,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":2521,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0038838",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["00399df",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["006b52c",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["009b48d",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["00b47ed",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["00d5b5e",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["0107dc5",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["0129566",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["013e987",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["0174ddf",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["019de24",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["025a430",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["027ad79",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["02bde5d",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["02c06cb",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["02d4bfb",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["02e548c",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["0325a08",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["0338bd7",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["03a0491",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["045b043",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["0486e25",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["04b4812",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["04dca08",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["0581767",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["05a441e",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["05b4ddd",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["05ddceb",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["0629b20",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["063950a",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["063d395",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["0674adf",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["067bbea",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["072caca",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["07d6959",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["07de52a",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["07ec810",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["0843a41",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["0858a77",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["08b1238",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["0903cd2",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["092dc60",{"_index":4995,"title":{},"body":{"changelog.html":{}}}],["0960760",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["097fe6b",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["09ae300",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["09eba6b",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["0a9aedc",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["0b2a071",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["0b30a9f",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["0ba1f5d",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["0bde446",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["0c889a3",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["0c91659",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["0cabcad",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["0cec276",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["0d0dfcb",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["0d76c85",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["0dc096d",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["0e060af",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["0e6195d",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["0f45127",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["0f6c72b",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["0f8326e",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["0f8e394",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":5126,"title":{},"body":{"license.html":{}}}],["1.0.1",{"_index":5031,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":5024,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["1.2.4",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["10.0.1",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["10.0.2",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["10.0.3",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["10.0.4",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["10.1",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["10.1.0",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["10.2.5",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["10.2.7",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["10.3.1",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["10.3.2",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1567,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["101bbd0",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["1024",{"_index":301,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["108",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["1081f8e",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["1098d6a",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["10_000",{"_index":665,"title":{},"body":{"pipes/BandPipe.html":{}}}],["10bf971",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.0.0",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["11.0.2",{"_index":5032,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["11.1.2",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["11.3.0",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["11.3.1",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["11.4.0",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["11.4.1",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["11.4.10",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["11.4.11",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["11.4.2",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["11.4.3",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["11.4.5",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["11.4.6",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["11.4.8",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["11.4.9",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["11.5.0",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["11.5.1",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["11.5.10",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["11.5.11",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["11.5.12",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["11.5.13",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["11.5.14",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["11.5.4",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["11.5.5",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["11.5.6",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["11.5.7",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["11.5.8",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["11.5.9",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["112db1a",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["11ae344",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.0",{"_index":4102,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["12.0.1",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["12.0.10",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["12.0.11",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["12.0.12",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["12.0.13",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["12.0.15",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["12.0.16",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["12.0.3",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["12.0.4",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["12.0.5",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["12.0.6",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["12.0.7",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["12.0.8",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["12.0.9",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["12000",{"_index":5424,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["120476b",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["120f02a",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["122856c",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["128",{"_index":298,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["128a3c3",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["12_000",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["12a71dd",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["13.0.0",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["13.0.1",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["13.0.10",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["13.0.11",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["13.0.12",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["13.0.13",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["13.0.16",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["13.0.18",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["13.0.19",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["13.0.2",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["13.0.20",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["13.0.3",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["13.0.5",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["13.0.6",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["13.0.7",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["13.0.8",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["13.0.9",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["13.1.0",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["13.1.1",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["13.1.10",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["13.1.11",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["13.1.12",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["13.1.2",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["13.1.3",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["13.1.4",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["13.1.5",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["13.1.6",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["13.1.7",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["13.1.8",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["13.1.9",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["13.2",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["13.2.0",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["13.2.1",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["13.2.2",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["13.2.3",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["13.2.4",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["13.2.5",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["13.2.6",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["13.3.0",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["13.3.1",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["13.3.2",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["13.3.3",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["13.3.4",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["13.3.5",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["131",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["133059f",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["1333d05",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["135",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["1385586",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["139",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["13bf8e2",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["14.0.0",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["14.0.10",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["14.0.11",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["14.0.12",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["14.0.13",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["14.0.2",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["14.0.3",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["14.0.4",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["14.0.5",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["14.0.6",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["14.0.7",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["14.0.8",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["14.0.9",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["14.1.0",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["14.1.1",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["14.1.10",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["14.1.11",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["14.1.12",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["14.1.13",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["14.1.14",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["14.1.15",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["14.1.16",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["14.1.17",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["14.1.18",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["14.1.19",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["14.1.2",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["14.1.20",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["14.1.23",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["14.1.3",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["14.1.4",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["14.1.5",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["14.1.6",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["14.1.7",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["14.1.8",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["14.1.9",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["140",{"_index":2123,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["14000",{"_index":5425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["141",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["14148e0",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["142",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["144",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["1455d32",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["146",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["147",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["14768e6",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["14_000",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["14a5bd3",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["15.0.0",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["15.0.1",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["15.0.2",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["15.0.3",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["15.0.4",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["15.0.5",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["15.0.6",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["15.0.7",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["15.0.8",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["15.0.9",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["15.1.1",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["15.1.10",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["15.1.11",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["15.1.12",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["15.1.13",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["15.1.14",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["15.1.16",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["15.1.17",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["15.1.2",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["15.1.3",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["15.1.4",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["15.1.5",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["15.1.6",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["15.1.7",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["15.1.8",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["15.1.9",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":2413,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["155e1fd",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["15dded8",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1105,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["16.0.1",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["16.0.2",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["16.0.3",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["16.0.4",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["16.0.5",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["16.0.6",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["16000",{"_index":5426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1604161",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["162acda",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["16384",{"_index":5422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["164",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["166c79d",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["16925cf",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["16_000",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":305,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["16d8b1b",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2806,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["17.0.10",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["17.0.11",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["17.0.12",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["17.0.13",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["17.0.14",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["17.0.15",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["17.0.16",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["17.0.17",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["17.0.18",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["17.0.2",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["17.0.3",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["17.0.4",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["17.0.5",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["17.0.6",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["17.0.7",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["17.0.8",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["17.0.9",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["170",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["170ea47",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["171",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["172",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["17266a3",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["1730f16",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["1745489",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["17a1677",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["17e4083",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["17ed8a6",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["18.0.1",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["18.1.0",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["18.1.1",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["18.2.0",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["18.2.2",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["18.2.3",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["18.2.4",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["18.2.5",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["18.2.6",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["18.2.7",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["181",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["184a834",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["1857720",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["18a45bd",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["18cab80",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["19.0.1",{"_index":3238,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.0.10",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["19.0.2",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["19.0.3",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["19.0.4",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["19.0.5",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["19.0.6",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["19.0.7",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["19.0.8",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["19.0.9",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["19.1.0",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["19.1.1",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["19.2.0",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["19.2.1",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["19.2.10",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["19.2.2",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["19.2.3",{"_index":3135,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.4",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["19.2.5",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["19.2.6",{"_index":5026,"title":{},"body":{"dependencies.html":{}}}],["19.2.7",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["19.2.8",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["19.2.9",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["19.2.x",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["19.3.0",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["19.4.0",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["19.4.1",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["19.4.10",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["19.4.11",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["19.4.12",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["19.4.13",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["19.4.14",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["19.4.15",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["19.4.2",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["19.4.3",{"_index":3074,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.4.4",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["19.4.5",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["19.4.6",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["19.4.7",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["19.4.8",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["19.4.9",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["19.5.0",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["19.5.1",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["19.5.3",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["19.5.4",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["194199c",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["1989419",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["199",{"_index":1032,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":5265,"title":{},"body":{"license.html":{}}}],["19bf065",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["1a30a33",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["1a33b93",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["1a65661",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["1a92061",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["1c4c67e",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["1c7fa4e",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["1c876b6",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["1c9fedf",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["1d0b823",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["1de2a3c",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["1e340e1",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["1e4fd87",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["1e660c9",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["1e96bc3",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["1ebb626",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["1ffd91e",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["2.8.1",{"_index":5038,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1042,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["20.0.0",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["20.1.0",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["20.1.1",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["20.1.2",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["20.1.3",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["20.1.4",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["20.2.1",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["20.2.10",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["20.2.11",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["20.2.12",{"_index":5397,"title":{},"body":{"properties.html":{}}}],["20.2.2",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["20.2.3",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["20.2.4",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["20.2.5",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["20.2.6",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["20.2.7",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["20.2.9",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["200",{"_index":2414,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["20050dc",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["20110c3",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["2011e46",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":302,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["206",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["20cf16a",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["20d1b8b",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["20rem",{"_index":2279,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["2119d47",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["220",{"_index":2573,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["220c7f4",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["221781e",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["223",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["228ee85",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["22afab3",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["22da5c7",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["22ec300",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["23061dd",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["2346f13",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["235",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["2389739",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2526,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["240",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["241",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["242",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["2427749",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["2434ec6",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["24e4c9a",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2388,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["250",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["2500235",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["250d7f9",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["251",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":1041,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["26",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["261",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["2708806",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["272",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["275e54d",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["27acba5",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["27fdc57",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["28465d6",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["28548eb",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["286",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["287",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["287138c",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["288",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["289",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["289ec3d",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["28cff25",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["292ed5a",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["29878bc",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["29f1cbe",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["29f2b37",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["2a4184c",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["2a427ed",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["2a99961",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["2ab7cc1",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["2b942c4",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["2bb0e78",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["2bb5430",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["2bcfefb",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["2bdc500",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["2bfabd0",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["2c0f612",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["2ce3664",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["2d68f3b",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["2db5dc7",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["2e2cf66",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["2e5b003",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["2eb6cae",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["2f0d555",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["2f592f3",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["2f67e34",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.0.2",{"_index":5037,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":5036,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":5029,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":5033,"title":{},"body":{"dependencies.html":{}}}],["3.9.17",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["3.9.19",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":2390,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["300",{"_index":1074,"title":{},"body":{"injectables/GamepadService.html":{}}}],["3000",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["301",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["305aec6",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["308b3e5",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["308bd9f",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["30_000",{"_index":1300,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["30fec73",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["30fps",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["310",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["312",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["314f02a",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3233ed1",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["32570e0",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["32768",{"_index":5423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":306,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["32c3f4d",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["32e3ad6",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["331bb8f",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["337a109",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["338",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["339af30",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["339bd87",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["339d07b",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["33bb6c8",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["33d73d9",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["34663be",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":2392,"title":{},"body":{"injectables/ThemeService.html":{}}}],["358",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["3597f8b",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["35a78e4",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["360px",{"_index":1238,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["362",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["362d9db",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["368",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["372",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["3773370",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["3797092",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["37f76dc",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["37fa04d",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["381",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["389407a",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["38d27f1",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["392b41d",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["395",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["397399b",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1368,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3a9067b",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["3acc7bf",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["3bccffb",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["3ccea4c",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["3ce805f",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["3d1f63c",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["3e58c71",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["3e7b9a4",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["3e8e5d0",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["3f2c562",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["3f449ec",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["3f668a5",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["3f73f6e",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["3fbfb97",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["3ff6d19",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":5255,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":5034,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":3810,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.1.1",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["4.4",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":2394,"title":{},"body":{"injectables/ThemeService.html":{}}}],["401",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["402",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["4035819",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["403737f",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["4040b59",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["4096",{"_index":303,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["40cc765",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":5396,"title":{},"body":{"overview.html":{}}}],["411",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["4164d59",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["418b524",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["419",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["41e632f",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["422fc8e",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["423",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["424242",{"_index":2621,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["42a58d9",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["42f56c1",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["431",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["431a9ad",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["43463ab",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["438",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["43a40a4",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["43d9b1f",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["440hz",{"_index":711,"title":{},"body":{"interfaces/Chainable.html":{}}}],["448",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["450",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["452f074",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["455",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["457",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["460",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["465",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["466",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["467",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["468",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["4695772",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["469a890",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["46c60ce",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["46e627b",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["473",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["4781958",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["47842e1",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["478c88a",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["47b6776",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["47e3527",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["483",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["49a76e8",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["49b1735",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["49d8293",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["4a42a18",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["4a4b1c4",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["4a66bde",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["4bdbceb",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["4c16c1e",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["4c272db",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["4c8c0ad",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["4c8f851",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["4d47689",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["4d9ca69",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["4dbf4b8",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["4df45ed",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["4e27dea",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["4e72fcd",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["4e9a327",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["4eac2a7",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["4ec2e90",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["4ef0700",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["4f1794f",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["4f70846",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["4f91524",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["4feefcd",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":1029,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":768,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["5059439",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["505e77f",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["5061051",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["50b7005",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["50dbff9",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["5101ea6",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["511",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["51154fe",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":1910,"title":{},"body":{"injectables/PlayerService.html":{}}}],["51304c2",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["51a51dd",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["51e219a",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["521e049",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["522",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["5273759",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["529",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["52afb10",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["52bf10d",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["52d642b",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["5302fb4",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["532",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["5321e86",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["53749c8",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["53818e8",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["539",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["53a8631",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["540",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["540fdd8",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["541",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["5467c6f",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["547",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["549",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["549bfa1",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["55e56b8",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["55f3319",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["569161e",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["56a3899",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["572a9f8",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["5742e12",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["57f591d",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["580c58d",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["5824006",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["586ef29",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["58fb13b",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["592ac3b",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["592cb7a",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["597ee4f",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["59f1df2",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["59f4ac4",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["5a61397",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["5a7054c",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["5a92c07",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["5aecee8",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["5aed853",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["5af2ad7",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["5bab2a7",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["5c1346d",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["5cbeb5b",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["5cec62d",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["5e77b33",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["5ed4032",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["5effed4",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["5f1d097",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["5fe0756",{"_index":4993,"title":{},"body":{"changelog.html":{}}}],["5ffbd62",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["5sec.mp3",{"_index":712,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["6.3.0",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["6.3.1",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["6.4.1",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["6.5.0",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["6.5.1",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["6.5.2",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["6.5.3",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["6.5.5",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["6.5.6",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["6.5.7",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["6.5.8",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["6.5.9",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["6.6.1",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["6.6.2",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["6.6.4",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["6.6.5",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["6.6.6",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["6.6.7",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["6.7.0",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["6.7.1",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["6.7.2",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["6.7.3",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["6.7.4",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["6000",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600f7e6",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["60d5b05",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["60dbedc",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["61721ca",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["61eb69b",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["620afb8",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["62c64c5",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["62cfee7",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["62f7474",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["635e855",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["63600c3",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["63f69d0",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["646c494",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["64a34dc",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["64d30e1",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["654bac2",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["667c54e",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["667f875",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["669facb",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["670b3af",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["6756668",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["6782ecd",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["678aef6",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["67a17ee",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["681d4cd",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["6841a21",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["6878f22",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["68d9939",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["68e8dc6",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["6926167",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["6966d17",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["69ed6f4",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["6a6ec18",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["6a8d3be",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["6aed158",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["6b0ec83",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["6b2d8b8",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["6b5e613",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["6b9ff38",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["6bc0773",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["6bd60c5",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["6bf609d",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["6bfb6ba",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["6c219df",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["6c27523",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["6c63788",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["6c6f88c",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["6cab435",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["6cd086c",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["6cee32d",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["6d26668",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["6d2a8fe",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["6d52ad4",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["6d67484",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["6d6f310",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["6ee2324",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["6f12a37",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["6f1cdb4",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["6f6ac17",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["6fc1434",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["6fdfa5a",{"_index":4279,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1026,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["7.0.3",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["7.0.4",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["7.0.5",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["7.0.6",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["7.1.0",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["7.1.1",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["7.8.2",{"_index":5035,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2398,"title":{},"body":{"injectables/ThemeService.html":{}}}],["707a0cb",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["70990de",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["71bd586",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["71e1d6c",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":2173,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["72075fe",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["722901c",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["72575f6",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["726da93",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["72be3d3",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["72dafd7",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["72fa061",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":2549,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["73050ff",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["7353f84",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["7362da7",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["73b9b59",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["73bd100",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["73ed2ca",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["7440340",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["7445539",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["7445cc4",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["7484f35",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["748a302",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["7493e98",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["74e7c83",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["7522583",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["7528cd4",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["752aa76",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["7553170",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["7560dfa",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["756dc90",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["7593825",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["75fc12c",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["764711a",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["7667c50",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["76ace70",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["77091b9",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["774ffed",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["7762874",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["77707fb",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["7785053",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["77c544b",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["78fcf7a",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["79c83aa",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["79d861d",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["79fee74",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["7a1bbe5",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["7a66d5a",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["7a6f294",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["7a838a9",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["7a8645a",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["7b38580",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["7b491de",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["7b8cdeb",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["7bebf2d",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["7c00473",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["7c5bbe5",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["7ccbc95",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["7cf10f9",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["7d3846a",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["7d9d809",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["7def043",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["7defe9b",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["7e11361",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["7e45969",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["7f1e3c1",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["7f8ad27",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["7f90220",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["7fa33e8",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["7fb56e0",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["7fcd244",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["8.0.0",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["8.0.1",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["8.1.0",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["8.1.1",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["8.1.10",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["8.1.2",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["8.1.3",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["8.1.4",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["8.1.5",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["8.1.6",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["8.1.7",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["8.1.8",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["8.1.9",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["80",{"_index":2400,"title":{},"body":{"injectables/ThemeService.html":{}}}],["800",{"_index":5489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800fdae",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["801cd46",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["80553e8",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["80b42ce",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["80d5e14",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["8192",{"_index":304,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["81bb449",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["822ff08",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["8264f64",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["8268a8b",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["826cbe5",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["828148a",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["8337321",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["834f706",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["8377116",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["839a546",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["8448134",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["845189d",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["84a2466",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["84ac04c",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["84e91e3",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["8515368",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["858ff56",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["8596088",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["85d2a14",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["85eb0ba",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["8626722",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["862a41d",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["864d7e1",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["866de3e",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["869dddb",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["86a18bb",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["86a63af",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["86bda79",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["86be7eb",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["870e50b",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["8738efc",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["87adc2c",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["892689d",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["8a371a0",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["8aabc76",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["8b184a4",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["8b6bfeb",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["8b9fdf5",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["8c297a1",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["8c47814",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["8c56320",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["8c75c5f",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["8c90a58",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["8c9c5c3",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["8cab1e2",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["8d072f1",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["8d3ed72",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["8d47dd4",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["8d5f783",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["8d61f2e",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["8da74bb",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["8df3910",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["8dfc611",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["8e2ff5a",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["8e36da3",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["8e7ecec",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["8ebff84",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["8ec046f",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["8ee0628",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["8f60273",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["9.0.0",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["9.0.1",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["9.0.10",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["9.0.11",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["9.0.2",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["9.0.3",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["9.0.4",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["9.0.5",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["9.0.6",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["9.0.7",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["9.0.8",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["9.0.9",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["9.1.1",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["9.1.2",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["9.1.3",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["9.2.3",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["9.2.4",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":2402,"title":{},"body":{"injectables/ThemeService.html":{}}}],["901f502",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["908f395",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["90df676",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["90e9f96",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["91d4a54",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["9280e3a",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["92d89c3",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["930dc28",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["934d323",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["939f6b8",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["9458a12",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["949055a",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["94b7001",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2404,"title":{},"body":{"injectables/ThemeService.html":{}}}],["953bf76",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["95902bb",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["96/9/ec",{"_index":5261,"title":{},"body":{"license.html":{}}}],["965f5d8",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["96bcdfc",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["96dbdf6",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["972b1ee",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["9767a1a",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["9767ad0",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["97ccbb6",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["97d68d0",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["98",{"_index":2406,"title":{},"body":{"injectables/ThemeService.html":{}}}],["986dd30",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["98a793b",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2408,"title":{},"body":{"injectables/ThemeService.html":{}}}],["99126c0",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["9934470",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["998ad7c",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["9b0ad09",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["9b11a20",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["9c56a21",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["9ce5e31",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["9d2ef7e",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["9d81efd",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["9dfd762",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["9e95c2d",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["9ea103a",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["9eb089c",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["9fa1a37",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["9fb4192",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["9fb859e",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["_audiocontext",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audioelement",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audiosourcenode",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_connectedanalyzers",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_eqgainnode",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_frequencyfilters",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_gainnode",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_hasended",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_internalanalyzer",{"_index":2625,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1192,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.year.localecompare(b.year",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a00ccd1",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["a04aa39",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["a0517fe",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["a0aa269",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["a0c15a4",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["a0e7ce7",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["a10893b",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["a11eb42",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["a12f9c3",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["a19a09f",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["a1a074f",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["a1da736",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["a280f97",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["a2a4811",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["a2b1db1",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["a358906",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["a3ae7df",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["a409033",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["a40c9e8",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["a457b9c",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["a4b6dab",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["a4de6d4",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["a552ea9",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["a555517",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["a5849e4",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["a6386d2",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["a7cf166",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["a7f82ab",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["a8073a9",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["a84cb97",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["a867afe",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["a8bb04b",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["a90639a",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["a948ad5",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["a9a8e68",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["a9a9c0b",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ab311db",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["ab5a0f8",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["ab89f63",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["ab98677",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["abandoned",{"_index":5360,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":5291,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2200,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["abc0b07",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["abccf03",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":5490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":5372,"title":{},"body":{"license.html":{}}}],["abstacted",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":1045,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1148,"title":{},"body":{"injectables/GamepadService.html":{}}}],["ac02523",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["ac62dde",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["accent",{"_index":1028,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":2355,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":2328,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accepts",{"_index":899,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":2642,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["accessors",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":5333,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":5375,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1112,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":5391,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"license.html":{}}}],["action(details",{"_index":1535,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["actions/cache",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["actions/checkout",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["actions/setup",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["actions/upload",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["activated",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["activatewakelock",{"_index":2737,"title":{},"body":{"injectables/WakelockService.html":{}}}],["activeaxescaches",{"_index":1079,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad57b9c",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["ad6497d",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["ad7e0f1",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["ada5e83",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["ada6807",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["adapt",{"_index":5231,"title":{},"body":{"license.html":{}}}],["add",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["addalbumtoplaylist",{"_index":1422,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":266,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1423,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["added",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1084,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1087,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1550,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1595,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1554,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":1789,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":1920,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":1803,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":5334,"title":{},"body":{"license.html":{}}}],["additional",{"_index":5208,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["adds",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["addtrackstoplaylist",{"_index":1424,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":277,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1425,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":1805,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":275,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":5105,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":5305,"title":{},"body":{"license.html":{}}}],["ae202ad",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["ae93b7a",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["aefd739",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["af0ef42",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["af2926f",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["af8a6b4",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["affected",{"_index":5335,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":5213,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":5293,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5350,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":1896,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":1894,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":960,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["again",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":5249,"title":{},"body":{"license.html":{}}}],["agents",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["aiff",{"_index":939,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1458,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":268,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1459,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["albumtracks",{"_index":272,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["aliases",{"_index":5418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1033,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allex/crc32",{"_index":1578,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["allowed_extensions",{"_index":947,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":869,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":895,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1412,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":2212,"title":{},"body":{"components/ShellComponent.html":{}}}],["allowedcommonjsdeps",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["allowedtypes",{"_index":966,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":317,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["alpha.40",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["amended",{"_index":5271,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["analyser.disconnect",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["analyserconfig",{"_index":290,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":325,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analysers",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["analyservalue",{"_index":2670,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyze",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["analyzer",{"_index":2721,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["and/or",{"_index":5166,"title":{},"body":{"license.html":{}}}],["android",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["angular",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["angular.json",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":5025,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4342,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2233,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":1173,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":751,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["angular/compiler",{"_index":5027,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":1854,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":131,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4347,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":113,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1729,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2424,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2563,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1176,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2108,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":137,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["angular/material/list",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["angular/material/progress",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2564,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2235,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1726,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":929,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":1767,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":1766,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2445,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angularmaterial",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["angulartitleservice",{"_index":2434,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2627,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["api",{"_index":902,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["api_key",{"_index":1383,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":776,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["apis",{"_index":5097,"title":{},"body":{"index.html":{}}}],["app",{"_index":628,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":336,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":5428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["applicable",{"_index":5278,"title":{},"body":{"license.html":{}}}],["application",{"_index":2300,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["applicationconfig",{"_index":5465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":5345,"title":{},"body":{"license.html":{}}}],["apply",{"_index":5217,"title":{},"body":{"license.html":{}}}],["apps",{"_index":5106,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":5429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":5450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":5459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":5442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../default",{"_index":5439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":5437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":5438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":5053,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":5058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":5041,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":5065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../lastfm",{"_index":5421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":5071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":5048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":5050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":5051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":5061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":5447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":5063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":5420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../settings.po.ts",{"_index":5445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":5441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":5419,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":5043,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":5075,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":5516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":5509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":5505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":5464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":5523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:136",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:143",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:151",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:158",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:164",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:172",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:178",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:186",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:191",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:199",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:203",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:211",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:219",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:34",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:37",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:43",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:45",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:8",{"_index":933,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":670,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":656,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:10",{"_index":663,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":915,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14",{"_index":925,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":926,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18",{"_index":923,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":863,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:113",{"_index":1451,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:164",{"_index":1439,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:170",{"_index":1438,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:175",{"_index":1440,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:181",{"_index":1437,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:189",{"_index":1434,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:198",{"_index":1433,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:215",{"_index":1436,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:224",{"_index":1435,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:241",{"_index":1442,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:245",{"_index":1441,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:249",{"_index":1443,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:54",{"_index":1445,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:55",{"_index":1446,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:57",{"_index":1447,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:61",{"_index":1444,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:74",{"_index":1449,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:75",{"_index":1448,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:76",{"_index":1450,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:78",{"_index":1453,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:86",{"_index":1452,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":744,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player",{"_index":1974,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":1749,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:36",{"_index":1763,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:37",{"_index":1760,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:43",{"_index":1758,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:48",{"_index":1762,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:50",{"_index":1759,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:55",{"_index":1757,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":1783,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:107",{"_index":1808,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:112",{"_index":1806,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:118",{"_index":1804,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:124",{"_index":1826,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:130",{"_index":1842,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:134",{"_index":1840,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:142",{"_index":1824,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:146",{"_index":1812,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:158",{"_index":1810,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:174",{"_index":1827,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:183",{"_index":1809,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:204",{"_index":1815,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:222",{"_index":1814,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:231",{"_index":1821,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:249",{"_index":1822,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:25",{"_index":1835,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:266",{"_index":1817,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":1845,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:270",{"_index":1820,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:284",{"_index":1828,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":1834,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:303",{"_index":1829,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":1844,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:32",{"_index":1847,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":1833,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:39",{"_index":1802,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":727,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2083,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:142",{"_index":2094,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:148",{"_index":2096,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:154",{"_index":2098,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:159",{"_index":2099,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:41",{"_index":2102,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:42",{"_index":2100,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:43",{"_index":2101,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:46",{"_index":2104,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:48",{"_index":2092,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2426,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:10",{"_index":2427,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2479,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2511,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2505,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2509,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2507,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2515,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2513,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2540,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2524,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2553,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2560,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2547,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2558,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2550,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2522,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2527,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2542,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2536,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2544,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2534,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2546,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2501,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2555,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2539,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2532,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2552,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2519,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2517,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2503,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2602,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105",{"_index":2610,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126",{"_index":2612,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2616,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2613,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188",{"_index":2608,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2617,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2614,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23",{"_index":2607,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33",{"_index":2606,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93",{"_index":2619,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2725,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2730,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2728,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":5080,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":5090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1051,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1070,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1063,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1067,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1060,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":1071,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1058,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1245,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":5092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1168,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100",{"_index":1283,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104",{"_index":1284,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26",{"_index":1287,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30",{"_index":1290,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32",{"_index":1289,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34",{"_index":1288,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36",{"_index":1286,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38",{"_index":1280,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48",{"_index":1282,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85",{"_index":1285,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96",{"_index":1281,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1468,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1474,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1485,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1489,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1488,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1490,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1497,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2429,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2433,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2432,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":5093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2735,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2740,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2741,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2739,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1704,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2201,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2323,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2418,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2206,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:40",{"_index":2230,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:41",{"_index":2227,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:43",{"_index":2223,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:52",{"_index":2226,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:54",{"_index":2229,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:56",{"_index":2219,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:61",{"_index":2222,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":5504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":2327,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:20",{"_index":2345,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:22",{"_index":2346,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:23",{"_index":2340,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:25",{"_index":2334,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:31",{"_index":2339,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:37",{"_index":2336,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":723,"title":{},"body":{"interfaces/Color.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2438,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2440,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2442,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2441,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":5502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":5503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["april",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["arguments_",{"_index":662,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["arising",{"_index":5260,"title":{},"body":{"license.html":{}}}],["arrays",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["art",{"_index":1633,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["artifact",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["artist",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist/album",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["artist:${luceneescapequery.escape(artist",{"_index":791,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["artwork",{"_index":1905,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2439,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":5352,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1592,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":5294,"title":{},"body":{"license.html":{}}}],["associating",{"_index":5212,"title":{},"body":{"license.html":{}}}],["async",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1557,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":5132,"title":{},"body":{"license.html":{}}}],["audio",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["audio.service",{"_index":927,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":943,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":936,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":945,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":937,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":940,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":946,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":942,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":941,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":944,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":938,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audiocontext.creategain",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audioelement.autoplay",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.controls",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.id",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.loop",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.preload",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.style.display",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.volume",{"_index":553,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioservice",{"_index":421,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["audioservice.isplaying",{"_index":2078,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiosource.connect(eqgain",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audit",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["auf",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":5401,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":5238,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":5165,"title":{},"body":{"license.html":{}}}],["auto",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["autofix",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["autofixes",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["autoincrement",{"_index":5500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":5153,"title":{},"body":{"license.html":{}}}],["autoscroll",{"_index":2129,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2707,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2698,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2708,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avatar",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1318,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2167,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["axis.valueof",{"_index":1155,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1160,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1159,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1052,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1158,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1161,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1061,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b04ce8b",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["b0d0fe4",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["b20fd36",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["b241b46",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["b286be9",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["b2b5088",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["b2dcbb8",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["b2ed530",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["b3905a0",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["b416bff",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["b4d909a",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["b599685",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["b5dfb18",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["b5f68a1",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["b65204b",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["b6729e6",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["b6bd950",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["b708169",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["b7303ed",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["b73ce66",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["b7bb801",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["b7be438",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["b7e8f76",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["b80e2ea",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["b820bf4",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["b8a2ac7",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["b8ad144",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["b925747",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["b9445d4",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["b99bf0c",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ba13cfe",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["ba2a28a",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["ba634aa",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["babdb9f",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{}}}],["background",{"_index":1039,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["backgroundcolor",{"_index":832,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["badges",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["band",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"index.html":{}}}],["band.pipe",{"_index":928,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bandfrequency",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":651,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandgains[bandfrequency",{"_index":653,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandpipe",{"_index":655,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{}}}],["bands",{"_index":920,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["barcount",{"_index":308,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["bark",{"_index":2933,"title":{},"body":{"changelog.html":{}}}],["barkscalebandenergy",{"_index":5430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":331,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2484,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":330,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":5431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":710,"title":{},"body":{"interfaces/Chainable.html":{}}}],["based",{"_index":5277,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["basesubscribingclass",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["basevisualizeroptions",{"_index":327,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":5137,"title":{},"body":{"license.html":{}}}],["bb34f11",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["bb4a1a8",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["bb4ded8",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["bb4e0ce",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["bb8466d",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["bba9cb0",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["bbda480",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["bc4e4dc",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["bcbcbc",{"_index":2622,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["bd0ddc3",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["bd67275",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["bda90a4",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["be025cd",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["be57fa9",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["be7f8fc",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["be90110",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["bef3e3e",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":2159,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["below",{"_index":5158,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":5307,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":1876,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1130,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["better",{"_index":2692,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["bf7b3a9",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["bfd28ec",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["bfd4685",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["bffc736",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["bigger",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["biquadfilternode",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bitrate",{"_index":672,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"changelog.html":{}}}],["bitrate.pipe",{"_index":845,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":669,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1674,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1629,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1652,"title":{},"body":{"injectables/MetadataService.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2296,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["bootstrap",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["border",{"_index":1025,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2114,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":1023,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["branch",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":1957,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2231,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2232,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2249,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2248,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2247,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2250,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browserlist",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["btrack",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2689,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["buffer.buffer",{"_index":2714,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":329,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2694,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2691,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2688,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bugs",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3203,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["buildapiurl(method",{"_index":1377,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["builds",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1128,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["button.pressed",{"_index":1141,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1143,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1053,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1146,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1151,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1064,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2195,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2265,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":5380,"title":{},"body":{"license.html":{}}}],["c.islight",{"_index":2417,"title":{},"body":{"injectables/ThemeService.html":{}}}],["c042ae8",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["c08196a",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["c0c9413",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["c0d5ae4",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["c20efb2",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["c2c0b8f",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["c3062ed",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["c31aaa6",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["c3208e7",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["c339811",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["c35bc38",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["c363f4e",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["c398655",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["c3bb2d1",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["c3d7490",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["c4668f1",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["c51af5f",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["c550911",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["c64cd79",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["c6dff5e",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["c73a2ce",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["c78b2bf",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["c82e02b",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["c86decf",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["c9dcf09",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["ca80a43",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["ca87d69",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["cace929",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":1145,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1153,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1147,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1152,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cacheable",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["calculate",{"_index":2156,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["calculating",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1169,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["called",{"_index":1494,"title":{},"body":{"injectables/LoaderService.html":{}}}],["cancel",{"_index":2190,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2717,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":5316,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":319,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvasgradient",{"_index":5462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":5432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvaswidth",{"_index":5433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2600,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":311,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":309,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":5434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":5507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":1955,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":5476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1346,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":5295,"title":{},"body":{"license.html":{}}}],["cb01a92",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["cb19d50",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["cb797bc",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["cbab637",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["cbc6e41",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["cbef1c8",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["cc0",{"_index":5125,"title":{},"body":{"license.html":{}}}],["ccbf388",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["cd2a934",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["cd5831f",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["cd620b6",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["cdb5380",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["cdf04e9",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":116,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["ce588f9",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["ce621ee",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["cea2824",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["cefa1f1",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":1035,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":5168,"title":{},"body":{"license.html":{}}}],["cf00688",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["cf13446",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["chainable",{"_index":676,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2133,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changed",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["changedarkmode",{"_index":2420,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2421,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changelog",{"_index":2754,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2128,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["check",{"_index":898,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1138,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1077,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":713,"title":{},"body":{"interfaces/Chainable.html":{}}}],["child(${link",{"_index":5519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chore",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["chore(config",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["chromaprint",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":5101,"title":{},"body":{"index.html":{}}}],["ci",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":332,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":5181,"title":{},"body":{"license.html":{}}}],["class",{"_index":143,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"overview.html":{}}}],["class.closed",{"_index":2276,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2277,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1043,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["clear",{"_index":1743,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":5382,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1166,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1118,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1710,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2324,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1330,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["cli",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":5133,"title":{},"body":{"license.html":{}}}],["close",{"_index":1258,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2266,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2476,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2268,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closing",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["clr",{"_index":2367,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.hex",{"_index":2371,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.name",{"_index":2370,"title":{},"body":{"injectables/ThemeService.html":{}}}],["code",{"_index":2301,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":722,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"index.html":{}}}],["color.getbrightness",{"_index":2416,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.tohexstring(false",{"_index":2415,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":726,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2678,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2676,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2677,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorful",{"_index":5398,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":2337,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["colors.ts",{"_index":5440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":2305,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["command",{"_index":701,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":5194,"title":{},"body":{"license.html":{}}}],["committen",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":1978,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["commons",{"_index":5123,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":5233,"title":{},"body":{"license.html":{}}}],["compare",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compatibility",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["compensation",{"_index":5210,"title":{},"body":{"license.html":{}}}],["competition",{"_index":5251,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2135,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["compodoc",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["component_template",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":337,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2446,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2188,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":956,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{}}}],["components/slide",{"_index":2258,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{}}}],["compressed",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["computecolors(hex",{"_index":2382,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":5366,"title":{},"body":{"license.html":{}}}],["confer",{"_index":5154,"title":{},"body":{"license.html":{}}}],["config",{"_index":2474,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["config).afterclosed",{"_index":2478,"title":{},"body":{"injectables/UpdateService.html":{}}}],["configuration",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["connected",{"_index":1096,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1089,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":5386,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":5209,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["console.error('error",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('file",{"_index":284,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1343,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["console.log('button",{"_index":1107,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":1884,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1113,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":887,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1111,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1124,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1120,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2457,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2453,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2464,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1115,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1094,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2637,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1097,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1608,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('hash",{"_index":1613,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('id3tags",{"_index":1635,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('vibrant",{"_index":1648,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('webcover",{"_index":1640,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1610,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('hash",{"_index":1615,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('id3tags",{"_index":1637,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('vibrant",{"_index":1650,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('webcover",{"_index":1643,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1127,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1135,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":787,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('loaderservice",{"_index":1493,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('missing",{"_index":1644,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('no",{"_index":813,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2749,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1202,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1530,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["constructor",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["contemplated",{"_index":5322,"title":{},"body":{"license.html":{}}}],["content",{"_index":1037,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":5354,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":5284,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":5195,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":5174,"title":{},"body":{"license.html":{}}}],["control",{"_index":2312,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["controls",{"_index":5109,"title":{},"body":{"index.html":{}}}],["converter",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["converttobarkscale",{"_index":5042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":5304,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1010,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":5156,"title":{},"body":{"license.html":{}}}],["core",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["corporation",{"_index":5128,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2657,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["corresponding",{"_index":5276,"title":{},"body":{"license.html":{}}}],["council",{"_index":5264,"title":{},"body":{"license.html":{}}}],["count",{"_index":767,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["cover",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cover_api_url",{"_index":778,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverart",{"_index":1741,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["coverartimage",{"_index":743,"title":{"interfaces/CoverArtImage.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverartresponse",{"_index":771,"title":{"interfaces/CoverArtResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":833,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":814,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":731,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":740,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":1831,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":1832,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":803,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":805,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdisplay",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["coverdisplaycomponent",{"_index":382,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":804,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":809,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["covers",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1638,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.original",{"_index":1647,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc",{"_index":736,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["crc32",{"_index":1577,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc32(hashstring",{"_index":1686,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1110,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1106,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1551,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1558,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1552,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1561,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":5122,"title":{},"body":{"license.html":{}}}],["creator",{"_index":5160,"title":{},"body":{"license.html":{}}}],["crossing",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["css",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["cultural",{"_index":5175,"title":{},"body":{"license.html":{}}}],["culture",{"_index":5199,"title":{},"body":{"license.html":{}}}],["current",{"_index":2137,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["currentalbum",{"_index":271,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentalbum.name",{"_index":273,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentanalyser",{"_index":2653,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2647,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2651,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":875,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2160,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2318,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":1784,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2645,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2649,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":1785,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":1940,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":846,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{}}}],["currenttrack.metadata?.crc",{"_index":2150,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":848,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":850,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":849,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":857,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":856,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":855,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":853,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":858,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":847,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":851,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["custom",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":706,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":5511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":5521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":5514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":5515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":5512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":5522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":5506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":5510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":5518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":703,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":718,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":714,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":702,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":719,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":5389,"title":{},"body":{"license.html":{}}}],["d0b8d34",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["d0cd94f",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["d1b4f51",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["d200e57",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["d254989",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["d2765b8",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["d29b113",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["d2e1df8",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["d2f46f8",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["d3",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["d38c534",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["d3bca3a",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["d489b64",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["d4abfdc",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["d505863",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["d50fcd7",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["d516e97",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["d562368",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["d597302",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["d5cd7ea",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["d612735",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["d6210df",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["d629a20",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["d641392",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["d64a3c3",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["d690072",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["d78443f",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["d7b3ea2",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["d895f0f",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["d8a2bf9",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["d8bf0e7",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["d933c1e",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["d954540",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["d9677d0",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":5145,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2380,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{}}}],["dark)').matches",{"_index":2344,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":724,"title":{},"body":{"interfaces/Color.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":2329,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":820,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":819,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2471,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1027,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["data.album.image",{"_index":1388,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2199,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2198,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":796,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["database",{"_index":5167,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":5435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":5267,"title":{},"body":{"license.html":{}}}],["date",{"_index":764,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"license.html":{}}}],["dateien",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["dates",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["db",{"_index":93,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["db2122c",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["db48fe2",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["dbb788d",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["dbc354f",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["dbconfig",{"_index":5495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":278,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":282,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":280,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":279,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dc41223",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["dc45fe1",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["dc55360",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["dd93cb1",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["ddab2f3",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["de5bda9",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["december",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["declare",{"_index":698,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorator",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":2293,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":1986,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["decreasevolume(value",{"_index":1992,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["deemed",{"_index":5343,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1075,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1073,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1187,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["defects",{"_index":5374,"title":{},"body":{"license.html":{}}}],["defined",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1277,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2139,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dep",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":2644,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["depicted",{"_index":5246,"title":{},"body":{"license.html":{}}}],["deploy",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":3043,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1054,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1059,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1055,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1062,"title":{},"body":{"injectables/GamepadService.html":{}}}],["description",{"_index":1170,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"changelog.html":{},"properties.html":{}}}],["desktop",{"_index":5113,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":1858,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1354,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":1848,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["details",{"_index":1507,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":1951,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":1950,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2134,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["determine",{"_index":2158,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":5309,"title":{},"body":{"license.html":{}}}],["dev",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["devcontainer.json",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["dfa400c",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":1185,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1180,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1253,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1252,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1246,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2192,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2193,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1262,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1261,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1264,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2191,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1260,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2189,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1191,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1235,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1242,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":5538,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":913,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1196,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dir",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":378,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":901,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":1782,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["dirhandle",{"_index":5091,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dirhandle.values",{"_index":892,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":862,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":886,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":1969,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["disableclose",{"_index":2475,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabled",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["disabletooltipinteractivity",{"_index":5491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":5355,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":5143,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2719,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["disconnectallanalyzers",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnectanalysernode",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnected",{"_index":1116,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1114,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":5378,"title":{},"body":{"license.html":{}}}],["display",{"_index":828,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":1769,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":830,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":831,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":827,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":842,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":840,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":838,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":671,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":673,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":826,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayed",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["displayfunction",{"_index":921,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":922,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1217,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":5319,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":5257,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2157,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":5219,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":5131,"title":{},"body":{"license.html":{}}}],["document",{"_index":1172,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["document.body.append(this.fileinput",{"_index":1414,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1406,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.setproperty",{"_index":2368,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2462,"title":{},"body":{"injectables/UpdateService.html":{}}}],["documented",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":322,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["dotenv",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["double",{"_index":897,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["doubleclick",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["download",{"_index":1740,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2658,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drag",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["dragend",{"_index":1002,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":989,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":994,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":986,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":971,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":999,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":988,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":997,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":987,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":2699,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":5044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":5045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":5046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawosc",{"_index":5047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":388,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":970,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":990,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":717,"title":{},"body":{"interfaces/Chainable.html":{}}}],["dummy",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["duplicates",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["duration",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":1786,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2472,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":5393,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":5028,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1211,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2315,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1213,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1214,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e102482",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["e11e3bd",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["e218808",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["e252172",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["e2a0794",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["e2e1eb4",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["e336db1",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["e34b732",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["e36192c",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["e42b61f",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["e486f52",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["e4b565b",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["e4d8e7c",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["e4ec6c1",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["e5de213",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["e615145",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["e6660e2",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["e6d7fd2",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["e6fc6eb",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["e7032e1",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["e727ac0",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["e7aa58d",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["e7c9ada",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["e844d5d",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["e933c61",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["e96ef56",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["e992cb4",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["e99d4f2",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["ea0dd16",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["ea1fc76",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["ea63800",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["ea688e0",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["ea932ef",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["eaa27a6",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["eab1d35",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["eac8dd6",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1602,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["eaeb47a",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["eaf46cf",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["eaf70a8",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["eb5338b",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["ebab8da",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["ec067ee",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["ec1f94a",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["eccaa4a",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["ecf45e6",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["ed57248",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["ee83304",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["ee8b31b",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["ef11066",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["ef22e4a",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["ef650c5",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["efc9aad",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["eff95d0",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1517,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":5344,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":5204,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1131,"title":{},"body":{"injectables/GamepadService.html":{}}}],["electron",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["elects",{"_index":5216,"title":{},"body":{"license.html":{}}}],["element",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":980,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["elementscrolled",{"_index":2117,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2630,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2633,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embedded",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["embeddedpicture",{"_index":739,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["empty",{"_index":1273,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2111,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2130,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1376,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1375,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":709,"title":{},"body":{"interfaces/Chainable.html":{}}}],["endings",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["enhance",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["enjoyment",{"_index":5321,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2704,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2140,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":759,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(coverimage.image",{"_index":812,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails.large",{"_index":811,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails['500",{"_index":808,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(images[1]['#text",{"_index":1390,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(images[5]['#text",{"_index":1391,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(url",{"_index":5086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entfernt",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["entries",{"_index":1455,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries@if",{"_index":1464,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries[0].contentrect",{"_index":2668,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":877,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["entry.getfile",{"_index":894,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.handle",{"_index":882,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":893,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":5040,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":5436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":5471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["eqgain",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.connect(eqinput",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.gain.value",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqinput",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput.connect(gain",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equalizer",{"_index":916,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":918,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":919,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":385,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":427,"title":{"interfaces/EqualizerGainValues.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equitable",{"_index":5318,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":5275,"title":{},"body":{"license.html":{}}}],["error",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{}}}],["error('metadata",{"_index":1315,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1353,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1339,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1348,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2750,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1342,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":5377,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1670,"title":{},"body":{"injectables/MetadataService.html":{}}}],["erweitert",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["es",{"_index":1274,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"changelog.html":{}}}],["esbuild",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["escape",{"_index":754,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["eslint",{"_index":1968,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"additional-documentation/helpers.html":{}}}],["eslint/utils",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["eslintrc",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["establish",{"_index":2643,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["etag",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["european",{"_index":5262,"title":{},"body":{"license.html":{}}}],["event",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.checked",{"_index":1732,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.currentversion.hash",{"_index":2458,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1336,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2695,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2696,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":1009,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":1008,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2466,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1095,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2459,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":1006,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.stoppropagation",{"_index":1007,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2451,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2455,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventcoalescing",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["eventmanager",{"_index":1177,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusions",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["exclusive",{"_index":5155,"title":{},"body":{"license.html":{}}}],["execute",{"_index":5537,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["executor",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["exercise",{"_index":5342,"title":{},"body":{"license.html":{}}}],["existing",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["exists",{"_index":2722,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["exit",{"_index":629,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["expect",{"_index":1880,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":5207,"title":{},"body":{"license.html":{}}}],["expected",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":5404,"title":{},"body":{"todo.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":5323,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2314,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":4973,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["extent",{"_index":5214,"title":{},"body":{"license.html":{}}}],["extract",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["extractcolorswithnodevibrant",{"_index":5049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.original",{"_index":1649,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1654,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1690,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1387,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extraction",{"_index":1325,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":5104,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1295,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1297,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["f038069",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["f0442a7",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["f06b116",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["f076ced",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["f0ae911",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["f0f7618",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["f12cad8",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["f154aed",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["f1580e8",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["f18fa1f",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["f1b02b7",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["f1cad4d",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["f1f709b",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["f201082",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["f209ddb",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["f24dcc7",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["f278040",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["f2cfbcc",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["f306ca1",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["f31886e",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["f3351c2",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["f34b7cf",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["f36895a",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["f37d715",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["f386a36",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["f3a09c7",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["f3a3520",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["f3f4ae7",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["f3f93f6",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["f401a49",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["f4324a4",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["f4928f5",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["f4f50ef",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["f52095f",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["f54702d",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["f591692",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["f5c6154",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["f5ee0e6",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["f69d368",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["f78467f",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["f7913c1",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["f8b7451",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["f8cbc65",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["f908dd2",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["f954f07",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["f9c114e",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["f9c93ce",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["fall",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["fallback",{"_index":5325,"title":{},"body":{"license.html":{}}}],["fallback_accent_color",{"_index":2350,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":2351,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2601,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2166,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{}}}],["fb05c12",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["fc633d2",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["fc998b4",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["fd18536",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["fd45c70",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["fdad632",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["fe15d24",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["fe4ebfa",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["fear",{"_index":5179,"title":{},"body":{"license.html":{}}}],["feat",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5098,"title":{},"body":{"index.html":{}}}],["february",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["fee270f",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["fee5161",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["fefaba0",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["fetchalbuminfo(artist",{"_index":1373,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":800,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ff778a5",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["ff7cdad",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["ffa9bb5",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["ffc8723",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["ffe5da9",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["ffnet",{"_index":1195,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2597,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2485,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":292,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2109,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.arraybuffer",{"_index":1689,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.lastmodified",{"_index":1685,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.name",{"_index":1682,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.size",{"_index":1684,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.type",{"_index":1683,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":870,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["filedata.file",{"_index":1611,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1656,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1612,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":903,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedata.push(...subfiles",{"_index":906,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1556,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1599,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1596,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":387,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":281,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":1890,"title":{},"body":{"injectables/PlayerService.html":{}}}],["fileinput",{"_index":1402,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":1018,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":872,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice:11",{"_index":1401,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:18",{"_index":1748,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:20",{"_index":1745,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:27",{"_index":1398,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:29",{"_index":1399,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:30",{"_index":1747,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:40",{"_index":1746,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:46",{"_index":1400,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservicefactory",{"_index":5052,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":737,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["filepath",{"_index":707,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":704,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["filesdroped",{"_index":967,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filestoprocess",{"_index":1594,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":868,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":734,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["fill",{"_index":2709,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":269,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["filter((artist",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter.gain.value",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["filtered",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredbyserchterm",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtering",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":1477,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["findreleasegroupid(artist",{"_index":789,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":2697,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1123,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebase",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["firebuttonaction(index",{"_index":1119,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":5130,"title":{},"body":{"license.html":{}}}],["first",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["firstvaluefrom",{"_index":101,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2477,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":795,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('metatags",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('dirhandle",{"_index":878,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('metatags",{"_index":1618,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":5370,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["fix(deps",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["fix(eslint",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":1022,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["flac",{"_index":949,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flat",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1021,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["float32array",{"_index":5081,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2313,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["fns",{"_index":5030,"title":{},"body":{"dependencies.html":{}}}],["folders",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":5229,"title":{},"body":{"license.html":{}}}],["font",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":5189,"title":{},"body":{"license.html":{}}}],["format",{"_index":738,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formating",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["formatlabel",{"_index":1987,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formatlabel(value",{"_index":1994,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formats",{"_index":5100,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":2015,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":2428,"title":{},"body":{"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatting",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["found",{"_index":285,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":5198,"title":{},"body":{"license.html":{}}}],["freely",{"_index":5187,"title":{},"body":{"license.html":{}}}],["frequency",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["frequency_bands",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["frequencyband",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["frequencybarsconfig",{"_index":307,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":5443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":746,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["full",{"_index":5527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":5415,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":5287,"title":{},"body":{"license.html":{}}}],["function",{"_index":890,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":2811,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["funkt",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["further",{"_index":5200,"title":{},"body":{"license.html":{}}}],["future",{"_index":5299,"title":{},"body":{"license.html":{}}}],["für",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["gain",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gain.gain.value",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainnode",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainvalue",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gamepad",{"_index":1092,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1139,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1072,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":2041,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":2051,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":2042,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1085,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1090,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1093,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1050,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":5057,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":310,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gax",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["gblaster",{"_index":5094,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1673,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":2761,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":5059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1676,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1614,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generatefilehashmd5(file",{"_index":1687,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["generator.bitdroid.de/#section",{"_index":5118,"title":{},"body":{"index.html":{}}}],["generierte",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["getanalysernode",{"_index":2618,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getaudiofilesfromdirhandle",{"_index":5060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":891,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":905,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(this.currentfolderhandle",{"_index":889,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2686,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2687,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":5444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcolorobject(value",{"_index":2410,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getcoverdisplay",{"_index":5446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1392,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":780,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1416,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gethasended",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1263,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":705,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1553,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1563,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":5448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":5062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":1937,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":1963,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":5449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":5451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2752,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettoolbartitle",{"_index":5452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":5453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":2074,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["getvolumeslider",{"_index":5454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gh",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2656,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":1878,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":1882,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":2342,"title":{},"body":{"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":1099,"title":{},"body":{"injectables/GamepadService.html":{}}}],["google",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["gp",{"_index":1101,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1100,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1102,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":5455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":914,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":879,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":911,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["greater",{"_index":5202,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5282,"title":{},"body":{"license.html":{}}}],["group/${releasegroupid",{"_index":802,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["group?query=${query}&limit=5&fmt=json",{"_index":794,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":766,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":797,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":798,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["grpc/grpc",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["hack",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":867,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.requestpermission",{"_index":912,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":1017,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1341,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlemessage",{"_index":1334,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1210,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["handles",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["hanging",{"_index":1319,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1239,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["hashing",{"_index":1679,"title":{},"body":{"injectables/MetadataService.html":{}}}],["hashstring",{"_index":1681,"title":{},"body":{"injectables/MetadataService.html":{}}}],["height",{"_index":2174,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":5310,"title":{},"body":{"license.html":{}}}],["held",{"_index":5358,"title":{},"body":{"license.html":{}}}],["help",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":5539,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1190,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":696,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":5285,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":5142,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":5147,"title":{},"body":{"license.html":{}}}],["hex",{"_index":725,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":1014,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1409,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1486,"title":{},"body":{"injectables/LoaderService.html":{}}}],["hilfe",{"_index":1197,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["history",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["hk",{"_index":1228,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1230,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hooks",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["hopefully",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":1019,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2297,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2311,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2294,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2295,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2307,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2310,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2308,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2309,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2275,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":982,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hosting",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["hotkey",{"_index":1167,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1266,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1269,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1272,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1181,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1256,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1249,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1244,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":390,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1182,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":5064,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["htmlaudioelement",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["htmlcanvaselement",{"_index":2626,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlinputelement",{"_index":1403,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":774,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["http_interceptors",{"_index":5492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":750,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["httpevent",{"_index":1475,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1473,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1476,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1471,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":5117,"title":{},"body":{"index.html":{}}}],["https://coverartarchive.org",{"_index":779,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://github.com/motabass/gblaster",{"_index":5400,"title":{},"body":{"properties.html":{}}}],["https://musicbrainz.org/ws/2",{"_index":777,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://on.cypress.io/custom",{"_index":697,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":5119,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/20917710/fast",{"_index":1680,"title":{},"body":{"injectables/MetadataService.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1369,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["husky",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":3544,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["iconregistry",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3904,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["id",{"_index":762,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":757,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3coverpicture",{"_index":728,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":756,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3tagsservice",{"_index":1293,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":5197,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":732,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ignore",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["ignores",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["ii",{"_index":5235,"title":{},"body":{"license.html":{}}}],["iii",{"_index":5240,"title":{},"body":{"license.html":{}}}],["image",{"_index":747,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"license.html":{}}}],["image.front",{"_index":806,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images",{"_index":772,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images[5]?.['#text",{"_index":1389,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["iml",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":5269,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":5280,"title":{},"body":{"license.html":{}}}],["implements",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":5367,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":5531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":5533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":5529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":5534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1308,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["imports",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["improve",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3436,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["including",{"_index":5192,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":5184,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":1988,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["increasevolume(value",{"_index":1996,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":932,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["indexed",{"_index":92,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":4689,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["indexeddbservice",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":94,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ineffective",{"_index":5330,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":5347,"title":{},"body":{"license.html":{}}}],["inferred",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":5136,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5182,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":1397,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["init",{"_index":876,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["initbarkscale",{"_index":5066,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["initializetheme",{"_index":2331,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2225,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["inject(audioservice",{"_index":924,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2244,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":1859,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1184,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":983,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1183,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":1772,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["inject(gamepadservice",{"_index":2020,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":2021,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["inject(httpclient",{"_index":775,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["inject(id3tagsservice",{"_index":1588,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1589,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(loaderservice",{"_index":1481,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1255,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1186,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":1857,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":2353,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1590,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(ngzone",{"_index":2624,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject(playerservice",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":985,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2447,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2435,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":1771,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2559,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":1856,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2631,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1254,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":420,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":843,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('bars",{"_index":2615,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["input.required",{"_index":841,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2270,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["inset",{"_index":1030,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2465,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":5115,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2165,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["instead",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["integriert",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["intended",{"_index":5224,"title":{},"body":{"license.html":{}}}],["intending",{"_index":5312,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1469,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1470,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1465,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1467,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["intergrated",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["internal",{"_index":2720,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":1855,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":1164,"title":{},"body":{"injectables/GamepadService.html":{}}}],["introducing",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":5329,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":5348,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":5346,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":5340,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":5288,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2090,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2093,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2110,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1154,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":5067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":5082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":5068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2213,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":5069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ismediasessionsupported",{"_index":5070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnan(atrack",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isnan(btrack",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isoscvisualizeroptions",{"_index":5073,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":5083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["isplaying",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2095,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isplaylistempty",{"_index":1755,"title":{},"body":{"components/PlayerComponent.html":{}}}],["isstopped",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ist",{"_index":1203,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":5074,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1604,"title":{},"body":{"injectables/MetadataService.html":{}}}],["item",{"_index":2169,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":5520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1034,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2172,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":5247,"title":{},"body":{"license.html":{}}}],["january",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["jb",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":3149,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["js",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1385,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["judged",{"_index":5327,"title":{},"body":{"license.html":{}}}],["july",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["jurisdictions",{"_index":5150,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1036,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["k",{"_index":667,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kb/s",{"_index":675,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["keine",{"_index":1276,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":5107,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1212,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1208,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":5499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1171,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["keys.replaceall",{"_index":1227,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":5365,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5222,"title":{},"body":{"license.html":{}}}],["known",{"_index":5297,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1671,"title":{},"body":{"injectables/MetadataService.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":769,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["last",{"_index":1781,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["last.fm",{"_index":1372,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1580,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1367,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1356,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1363,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1359,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1366,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1365,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1362,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2702,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["late",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["latencyhint",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["latent",{"_index":5373,"title":{},"body":{"license.html":{}}}],["later",{"_index":5180,"title":{},"body":{"license.html":{}}}],["latest",{"_index":2802,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["launch",{"_index":1885,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":1883,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":1889,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":1888,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":1877,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":5129,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5149,"title":{},"body":{"license.html":{}}}],["layout",{"_index":2773,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layouts",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["lazy",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["leadingminutezero",{"_index":5089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":968,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":973,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2282,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1394,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":5124,"title":{},"body":{"license.html":{}}}],["legally",{"_index":5328,"title":{},"body":{"license.html":{}}}],["legend",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":5144,"title":{},"body":{"license.html":{}}}],["lib",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":139,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":141,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":144,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libs",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["libs/.../helpers",{"_index":5055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/helpers",{"_index":5088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":955,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":4867,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["license.md",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["licensed",{"_index":5362,"title":{},"body":{"license.html":{}}}],["light",{"_index":2381,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":822,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":2412,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":821,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":5245,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":5193,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":5253,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5228,"title":{},"body":{"license.html":{}}}],["line",{"_index":1970,"title":{},"body":{"injectables/PlayerService.html":{}}}],["linethickness",{"_index":2486,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":5517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3501,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["linting",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":2175,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lite",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":749,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/Id3Tags.html":{}}}],["load",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["loadcomponent",{"_index":5528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["loadedtrack",{"_index":1933,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":864,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":871,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loader.helpers.ts",{"_index":935,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1480,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":873,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loader.service.abstract.ts",{"_index":1044,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:4",{"_index":1046,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1048,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1049,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1047,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":5054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":866,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:13",{"_index":1396,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1466,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1479,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2257,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loading",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["loadingcounter",{"_index":1491,"title":{},"body":{"injectables/LoaderService.html":{}}}],["local",{"_index":1625,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localization",{"_index":5416,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["lock.json",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["locking",{"_index":5110,"title":{},"body":{"index.html":{}}}],["logic",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["lookup",{"_index":1645,"title":{},"body":{"injectables/MetadataService.html":{}}}],["loop",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lowersearchterm",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["lucene",{"_index":753,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":752,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["made",{"_index":5225,"title":{},"body":{"license.html":{}}}],["main",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["main_audio",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["maincolor",{"_index":315,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["make",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":5138,"title":{},"body":{"license.html":{}}}],["management",{"_index":5406,"title":{},"body":{"todo.html":{}}}],["manifest.json",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2251,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mapping",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["march",{"_index":2779,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["maskable",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["mat",{"_index":5513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1247,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":5486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1251,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1707,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2422,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2419,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1174,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2443,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1248,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1175,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":2929,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["matformfield",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matformfieldmodule",{"_index":2086,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2162,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":1966,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2161,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(math.random",{"_index":1973,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":1967,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":1839,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.max(0",{"_index":2177,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":1841,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.round(value",{"_index":674,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["mathint",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticon",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonbutton",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonmodule",{"_index":1250,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matlistmodule",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matmenucontent",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":1752,"title":{},"body":{"components/PlayerComponent.html":{}}}],["matmenutrigger",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matoptionmodule",{"_index":2481,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprefix",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressbar",{"_index":125,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["matprogressspinnermodule",{"_index":2085,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2480,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2234,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2208,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslider",{"_index":1979,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidermodule",{"_index":917,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matsliderthumb",{"_index":1980,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidetogglechange",{"_index":1717,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1708,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matsuffix",{"_index":136,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mattoolbar",{"_index":1981,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattoolbarmodule",{"_index":1750,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltip",{"_index":1982,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattooltipmodule",{"_index":1751,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":1964,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":5302,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1587,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["mdc",{"_index":3901,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":5223,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2122,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["meatadata",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1531,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["mediametadata(metadata",{"_index":1540,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1511,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasession",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["mediasessionaction",{"_index":1506,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1508,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1542,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1496,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":5076,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":5303,"title":{},"body":{"license.html":{}}}],["member",{"_index":5308,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["menus",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":5369,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1205,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["merged.description",{"_index":1223,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1224,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1364,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1335,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":1560,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl.original",{"_index":1665,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.original.startswith('blob",{"_index":1666,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.thumb.startswith('blob",{"_index":1668,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1664,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1675,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1662,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":760,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1581,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1358,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1393,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":758,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1617,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["metadatacache.coverurl.thumb",{"_index":1621,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1619,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1630,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":128,"title":{"injectables/MetadataService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["metadataservice.processionpercent",{"_index":1456,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["metadatasettingscomponent",{"_index":394,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["metatags",{"_index":5497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meter",{"_index":5111,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":5456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1382,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["methods",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":5411,"title":{},"body":{"todo.html":{}}}],["migrate",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["migrated",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["migrating",{"_index":2306,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2299,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["min",{"_index":1965,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2487,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["mindecibels",{"_index":294,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["miscellaneous",{"_index":5039,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":4147,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["mobile",{"_index":4025,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mobx",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modes",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":5183,"title":{},"body":{"license.html":{}}}],["module",{"_index":1309,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["modules",{"_index":3038,"title":{"modules.html":{}},"body":{"changelog.html":{},"modules.html":{}}}],["monochrome",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["monochrome.svg",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["monorepo",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["moral",{"_index":5236,"title":{},"body":{"license.html":{}}}],["more",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["motabass",{"_index":5402,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":2016,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":2239,"title":{},"body":{"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":5206,"title":{},"body":{"license.html":{}}}],["moved",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["mp3",{"_index":948,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":953,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":5494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":733,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":788,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1582,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzreleasegroup",{"_index":761,"title":{"interfaces/MusicbrainzReleaseGroup.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzresponse",{"_index":765,"title":{"interfaces/MusicbrainzResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":773,"title":{"injectables/MusicbrainzService.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":818,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Color.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":699,"title":{},"body":{"interfaces/Chainable.html":{}}}],["nan",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["narrowing",{"_index":2317,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":5268,"title":{},"body":{"license.html":{}}}],["native",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["nativebrowserfileloaderservice",{"_index":874,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigates",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["navigateto",{"_index":2215,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2217,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigation",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["navigator.getgamepads",{"_index":1091,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1539,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1543,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1534,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1529,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1538,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1537,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2746,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2747,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":852,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nearby",{"_index":2164,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["nearly",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":5385,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":5227,"title":{},"body":{"license.html":{}}}],["neu",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["newsize",{"_index":321,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["next",{"_index":1472,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1483,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1302,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2731,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ng",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["ng11",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["ng15",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["ngafterviewinit",{"_index":991,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngarraypipesmodule",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ngclass",{"_index":2084,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2316,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2319,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":1005,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngoptimizedimage",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["ngx",{"_index":91,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":90,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1108,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1583,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["node_modules",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["nodes",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["non",{"_index":5337,"title":{},"body":{"license.html":{}}}],["none",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"changelog.html":{}}}],["notable",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["notes.md",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1886,"title":{},"body":{"injectables/PlayerService.html":{}}}],["notification",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["november",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["now",{"_index":2700,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["npm",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["npmrc",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["nrwl",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["nrwl/nx",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":1117,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1082,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1080,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(duration",{"_index":1526,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number_",{"_index":930,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["numbers",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["nx",{"_index":3116,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["obeservable",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1626,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":5496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1632,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":5394,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1178,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1209,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1221,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2246,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2666,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1216,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2669,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtaining",{"_index":5384,"title":{},"body":{"license.html":{}}}],["october",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["offers",{"_index":5363,"title":{},"body":{"license.html":{}}}],["offline",{"_index":5114,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":320,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":5461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":2176,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ogg",{"_index":950,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["ohne",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["oldsource",{"_index":632,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["onchanges",{"_index":2261,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ondestroy",{"_index":961,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":742,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["onfilesdropped",{"_index":2216,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped(files",{"_index":2221,"title":{},"body":{"components/ShellComponent.html":{}}}],["oninit",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1711,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1716,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onreload",{"_index":1756,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onsliderpositionchanged",{"_index":1989,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":1999,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1712,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1719,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1713,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1721,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1714,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1723,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":1990,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onvolumechange(value",{"_index":2001,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["open",{"_index":2267,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["openedstate",{"_index":2271,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":888,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2269,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["optimizations",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["optimize",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":2598,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["optional",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":716,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1200,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1207,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":952,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["origin",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["original",{"_index":810,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"license.html":{}}}],["originalfn",{"_index":720,"title":{},"body":{"interfaces/Chainable.html":{}}}],["os",{"_index":5108,"title":{},"body":{"index.html":{}}}],["osc",{"_index":335,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2488,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":2974,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["oscilloscopepath",{"_index":5457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":312,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":334,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":5116,"title":{},"body":{"index.html":{}}}],["others",{"_index":5205,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1327,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["output",{"_index":978,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2154,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":969,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":975,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":962,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":965,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":964,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":959,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":977,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":979,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:38",{"_index":976,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:48",{"_index":974,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:54",{"_index":972,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":958,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":957,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overrides",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["overtly",{"_index":5286,"title":{},"body":{"license.html":{}}}],["overview",{"_index":5395,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["overwritten",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["owner",{"_index":5163,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":5162,"title":{},"body":{"license.html":{}}}],["owners",{"_index":5169,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2713,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":2925,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["packgr",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":4753,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["palette",{"_index":1646,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1700,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1701,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1694,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1695,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1702,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1703,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1696,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1697,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1698,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1699,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1692,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1693,"title":{},"body":{"injectables/MetadataService.html":{}}}],["panel",{"_index":2262,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2263,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2264,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2260,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2281,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2278,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2286,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2287,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2280,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2284,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2285,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2292,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2288,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2289,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2291,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2290,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2259,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":5254,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1378,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":700,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":5263,"title":{},"body":{"license.html":{}}}],["part",{"_index":4056,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["partial",{"_index":1188,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":5371,"title":{},"body":{"license.html":{}}}],["party",{"_index":5392,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["passed",{"_index":2705,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":5357,"title":{},"body":{"license.html":{}}}],["path",{"_index":5524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":5463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":5526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":316,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1344,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1303,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["per",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["perform",{"_index":5232,"title":{},"body":{"license.html":{}}}],["performance",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["performance.now",{"_index":1150,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":5239,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5171,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":5379,"title":{},"body":{"license.html":{}}}],["permission",{"_index":909,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":5387,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5283,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":2815,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["person",{"_index":5211,"title":{},"body":{"license.html":{}}}],["person's",{"_index":5244,"title":{},"body":{"license.html":{}}}],["persons",{"_index":5383,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":5243,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1292,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["pin",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":120,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2118,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{},"overview.html":{}}}],["pipetransform",{"_index":664,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1591,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["play/pause",{"_index":2026,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playback",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["player",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":1753,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":1754,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1518,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":5530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/file",{"_index":2241,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/library",{"_index":5532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1728,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["player/player",{"_index":2242,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.service",{"_index":2240,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.types",{"_index":2352,"title":{},"body":{"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":396,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":108,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":2079,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.currenttime",{"_index":2080,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.repeat",{"_index":2082,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playertoolbarcomponent",{"_index":398,"title":{"components/PlayerToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playing",{"_index":1519,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["playlist",{"_index":1457,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2087,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2088,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.find((playlisttrack",{"_index":1943,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.findindex((track",{"_index":2149,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":1941,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":1938,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":1770,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":401,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.crc",{"_index":1917,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlisttrack.metadata?.crc",{"_index":1944,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":1790,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2091,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2097,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":1791,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":1811,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":5099,"title":{},"body":{"index.html":{}}}],["playstate",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["playtrack",{"_index":1426,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["playtrackbycrc",{"_index":1792,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playtrackbycrc(crc",{"_index":1813,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{}}}],["plug",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["pluginnewanalysernode",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["plugins",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":1020,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["polfills",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["polyfills",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["pool",{"_index":2690,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":1838,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":5188,"title":{},"body":{"license.html":{}}}],["postcss",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["prdefinded",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["pre",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["precommit",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["prefertagembeddedpicture",{"_index":1545,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefetch",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":5477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preparations",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":5376,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":5331,"title":{},"body":{"license.html":{}}}],["preset",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["pressedbuttonscaches",{"_index":1078,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prettier",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":2303,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":1793,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":715,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":2369,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":2354,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":2330,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":792,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1742,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":5242,"title":{},"body":{"license.html":{}}}],["private",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["prive",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["problems",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["process",{"_index":2703,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["processing",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["processionpercent",{"_index":1546,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":3028,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":781,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1317,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.reject(new",{"_index":1314,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1320,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promote",{"_index":5196,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":5306,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":403,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2194,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["props",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":5226,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":5248,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5266,"title":{},"body":{"license.html":{}}}],["protobufjs",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":4124,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":5479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":5141,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["provideexperimentalzonelesschangedetection",{"_index":5467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":5480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":5468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":5474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":5482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":5466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":5135,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":5469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":5177,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":5241,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5218,"title":{},"body":{"license.html":{}}}],["pure",{"_index":657,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":5148,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":5191,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":5096,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quality",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["query",{"_index":755,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["queryparams",{"_index":1380,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["queue",{"_index":1887,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":5320,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":1972,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":1936,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2151,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["rate",{"_index":860,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["read",{"_index":695,"title":{},"body":{"interfaces/Chainable.html":{}}}],["readded",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["reader",{"_index":5121,"title":{},"body":{"index.html":{}}}],["readme",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1605,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["real",{"_index":1678,"title":{},"body":{"injectables/MetadataService.html":{}}}],["realkeys",{"_index":1226,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":5326,"title":{},"body":{"license.html":{}}}],["record",{"_index":1379,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2659,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["recursive",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["redirectto",{"_index":5525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":5186,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["reenabled",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":5140,"title":{},"body":{"license.html":{}}}],["regards",{"_index":5252,"title":{},"body":{"license.html":{}}}],["register",{"_index":1278,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1199,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1056,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1065,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1057,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1069,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1240,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":5473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":5472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1204,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registry",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["reinstall",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["reject",{"_index":1304,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1332,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1324,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":2801,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["relationship",{"_index":5134,"title":{},"body":{"license.html":{}}}],["release",{"_index":763,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["release:${luceneescapequery.escape(album",{"_index":790,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":784,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2738,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":5178,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":5172,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1780,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["remainder",{"_index":5349,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":5351,"title":{},"body":{"license.html":{}}}],["remember",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":1631,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverpicture",{"_index":82,"title":{"interfaces/RemoteCoverPicture.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":896,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["removed",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["renderer",{"_index":984,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":981,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rendering",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["renew",{"_index":1624,"title":{},"body":{"injectables/MetadataService.html":{}}}],["renovate",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["renovate.json",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":1787,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":741,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":1677,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["replaced",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["report",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":5399,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":5364,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":5230,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":5201,"title":{},"body":{"license.html":{}}}],["request",{"_index":908,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["request.reject(new",{"_index":1338,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1340,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe(draw",{"_index":2716,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1345,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["requestwakelock",{"_index":2745,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":5388,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":5315,"title":{},"body":{"license.html":{}}}],["resizeobserver",{"_index":2629,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2667,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1329,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1331,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1420,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["respect",{"_index":5353,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":5381,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":5112,"title":{},"body":{"index.html":{}}}],["result",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.map((tag",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.matches",{"_index":2252,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":5146,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1231,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["retained",{"_index":5237,"title":{},"body":{"license.html":{}}}],["return",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":5185,"title":{},"body":{"license.html":{}}}],["revert",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["revocation",{"_index":5314,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["rgb(255",{"_index":1040,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":837,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["rid",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":2283,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":5157,"title":{},"body":{"license.html":{}}}],["root",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2693,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["rounding",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":2220,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["routeroutlet",{"_index":2209,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":5458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":5336,"title":{},"body":{"license.html":{}}}],["rule",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":3736,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":5535,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1478,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":859,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":333,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sandbox",{"_index":5120,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["saving",{"_index":5408,"title":{},"body":{"todo.html":{}}}],["scale",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":2343,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scientific",{"_index":5176,"title":{},"body":{"license.html":{}}}],["screen",{"_index":4979,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scroll",{"_index":2112,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollbehavior",{"_index":2168,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2124,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2163,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollposition",{"_index":2120,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2113,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2144,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2147,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2089,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scss",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":799,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["searchterm",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["searchterm.tolowercase",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["seconds",{"_index":1818,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seeking",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["seekleft",{"_index":1794,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekleft(seconds",{"_index":1816,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":2003,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekright",{"_index":1795,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekright(seconds",{"_index":1819,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":2005,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekto",{"_index":1536,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["seektohandler(details",{"_index":1949,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["seektto",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1427,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1428,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["selectedalbum",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selection",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["selectnext",{"_index":1796,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":1797,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":1798,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":1823,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1429,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["self",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["semantics",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":2711,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1121,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separate",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":5475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seperated",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["september",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["service/file",{"_index":934,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":729,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1357,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1395,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":5085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":129,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["service/metadata.service.ts",{"_index":1544,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:150",{"_index":1559,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1576,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1574,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:28",{"_index":1572,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:29",{"_index":1566,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:33",{"_index":1570,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:37",{"_index":1555,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:52",{"_index":1562,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:67",{"_index":1564,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":815,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":5087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":745,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:40",{"_index":1744,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":865,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":2855,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":2018,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":2017,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":2019,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["services/loader/loader.service",{"_index":2237,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":1851,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":1765,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":1850,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1532,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["session.service",{"_index":1852,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":5072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1499,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1509,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1514,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1516,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1512,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1504,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1498,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["set(filtered",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor(color",{"_index":2374,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1500,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1505,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2492,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2502,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2493,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2504,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1501,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1510,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2494,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2506,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2495,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2508,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2332,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":2335,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2333,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":2338,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2496,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2510,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setfrequencybandgain",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setgap",{"_index":2497,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2512,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2498,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2514,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setmindb",{"_index":2499,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2516,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setoverlayclass",{"_index":2378,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setplaybackstate(state",{"_index":1541,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor(color",{"_index":2363,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":1799,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":1825,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1502,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1513,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2500,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2518,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1322,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["setting",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["settings",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2204,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1709,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2202,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1706,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2423,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2325,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":1725,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1724,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":1722,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1720,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":1718,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":1715,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1705,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2203,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2205,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":405,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2430,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2431,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2665,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":5077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":5084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["several",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":5313,"title":{},"body":{"license.html":{}}}],["share",{"_index":5412,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2236,"title":{},"body":{"components/ShellComponent.html":{}}}],["shas",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["shell",{"_index":2207,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["shell'},{'name",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2210,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2211,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":347,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1194,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":2025,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["show",{"_index":1487,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{}}}],["showdelay",{"_index":5488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":884,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showpicker",{"_index":883,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["shows",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2489,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":1788,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2272,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":2214,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["signal",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["signal(0",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(false",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2520,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2525,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2533,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2535,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":2341,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2541,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2543,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2545,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2548,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1565,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":1843,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":1846,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2556,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1571,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1573,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1575,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2729,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.storageservice.retrieve('basegain",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(this.storageservice.retrieve('volume",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(true",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(undefined",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["signalös",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":5274,"title":{},"body":{"license.html":{}}}],["simpler",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["simplified",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["sind",{"_index":1275,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1361,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["sizes",{"_index":1909,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":1024,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2218,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2298,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":5460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":408,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":407,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["slider",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["sliders",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":770,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{}}}],["smaller",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["smooth",{"_index":2146,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2490,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":295,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["snyk",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["soll",{"_index":2470,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["sonarjs/pseudo",{"_index":1971,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":1807,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["song.file.name",{"_index":2186,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2182,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2183,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.crc",{"_index":2181,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.crc",{"_index":1918,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2187,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2185,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2184,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1603,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["sortable",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":5407,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["spark",{"_index":1586,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["sparkmd5",{"_index":1585,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5.arraybuffer.hash(await",{"_index":1688,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spectrogram",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":2107,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["splashscreen",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1907,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stable",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":659,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["standing",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2753,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starts",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["startvisualization(getdatamethod",{"_index":2685,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":5324,"title":{},"body":{"license.html":{}}}],["statt",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["statutory",{"_index":5368,"title":{},"body":{"license.html":{}}}],["steps",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":323,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2603,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storageservice",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["storagesettingscomponent",{"_index":410,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":5498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":5501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structures",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["stuff",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["stylelint",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":954,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":140,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":963,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styling",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1220,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":904,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"license.html":{}}}],["sublicensable",{"_index":5339,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2119,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1179,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":5161,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1268,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1271,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":5272,"title":{},"body":{"license.html":{}}}],["successors",{"_index":5311,"title":{},"body":{"license.html":{}}}],["such",{"_index":5259,"title":{},"body":{"license.html":{}}}],["suche",{"_index":5405,"title":{},"body":{"todo.html":{}}}],["super",{"_index":1404,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["support",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":1533,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":5102,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":5361,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":5292,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":637,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["svg",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["svgo",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["swc/core",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["switch",{"_index":1953,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["switched",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["swupdate",{"_index":2444,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["swupdate.activateupdate().then",{"_index":2461,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2449,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2450,"title":{},"body":{"injectables/UpdateService.html":{}}}],["syntax",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":4695,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["tag",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["tag.album",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.album?.tolowercase().includes(lowersearchterm",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist?.tolowercase().includes(lowersearchterm",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.filename?.tolowercase().includes(lowersearchterm",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.title?.tolowercase().includes(lowersearchterm",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":825,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":783,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":782,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1660,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1651,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1653,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1579,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1294,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1299,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1296,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1657,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1658,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":730,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1291,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1659,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagswithoptionalbloburls",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tagsworkerrequest",{"_index":823,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":824,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":1853,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":5332,"title":{},"body":{"license.html":{}}}],["target",{"_index":5413,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":2148,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1265,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":708,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templates",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["templateurl",{"_index":138,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["temporarily",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["termination",{"_index":5317,"title":{},"body":{"license.html":{}}}],["terms",{"_index":5221,"title":{},"body":{"license.html":{}}}],["territories",{"_index":5300,"title":{},"body":{"license.html":{}}}],["test",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3737,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1360,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":816,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thebespokepixel/es",{"_index":2348,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["theme",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{}}}],["theme.types",{"_index":2349,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice",{"_index":357,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":412,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":5270,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":313,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["this._audiocontext",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.createanalyser",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.resume",{"_index":638,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.state",{"_index":636,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.currenttime",{"_index":648,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.fastseek(position",{"_index":647,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.loop",{"_index":645,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.pause",{"_index":641,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.play",{"_index":639,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.src",{"_index":633,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode.connect(analyser",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.clear",{"_index":631,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.foreach((analyser",{"_index":630,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._eqgainnode",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[band",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":650,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._gainnode",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.asobservable",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.next(true",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._internalanalyzer",{"_index":2671,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1215,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":2375,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":2376,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1163,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":1915,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(file",{"_index":1891,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.filteredbyserchterm",{"_index":265,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":276,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterpausedorstopped",{"_index":1930,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":1913,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.alpha",{"_index":2538,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2582,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2654,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2566,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2572,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2570,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2568,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2680,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2679,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2710,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2436,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2715,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}/release",{"_index":793,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1386,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2460,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.currenttime",{"_index":1527,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2723,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2577,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1525,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":1892,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":1923,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1522,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1520,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":1837,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pause",{"_index":1929,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":1911,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2523,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2681,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":1899,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":1960,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":1958,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(value",{"_index":2073,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.audioservice.stop",{"_index":1931,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1083,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1136,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1134,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1125,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.barcount",{"_index":2528,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2586,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2648,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2672,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2675,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2674,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2673,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.breakpointobserver",{"_index":2245,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1374,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1081,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1132,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1126,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1140,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1149,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1122,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2632,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2660,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2638,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.capfalldown",{"_index":2531,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2590,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2529,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2588,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1104,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1103,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1165,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1098,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2322,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.colorconfig",{"_index":2652,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":2377,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":2366,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1086,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":801,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1137,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1133,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1663,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1634,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1600,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":881,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":1836,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":1830,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.crc",{"_index":1924,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":1912,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(undefined",{"_index":1932,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":1934,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":1946,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":1916,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":1919,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.darkmode",{"_index":2379,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":2359,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1257,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":2043,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.default_deadspace",{"_index":1156,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1068,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1206,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1236,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1243,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1259,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2197,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2196,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1234,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1088,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1189,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":1001,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":992,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":998,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":996,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drop.bind(this",{"_index":1004,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":1003,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues",{"_index":652,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[band",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":649,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":654,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1218,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1371,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1370,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":786,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2567,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2584,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fileinput",{"_index":1405,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1411,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1419,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1418,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1417,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1408,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1413,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1410,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1407,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.currentfolderhandle",{"_index":1775,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.init",{"_index":1774,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.openfiles",{"_index":1914,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.fileloaderservice.showpicker",{"_index":1778,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.files",{"_index":1421,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1415,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filestoprocess",{"_index":1568,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1598,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1606,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredbyserchterm",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.filteredbyserchterm().filter((track",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":785,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1162,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1142,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":2028,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":2069,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":2071,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":2070,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":2057,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":2058,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":2065,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":2064,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":2067,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":2061,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":2066,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":2062,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":2063,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":2068,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":2059,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":2060,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":2040,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":2029,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":2030,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":2049,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":2047,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":2054,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":2036,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":2052,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":2038,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":2045,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":2056,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":2032,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":2034,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2576,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2574,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2530,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2594,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getcolorobject(new",{"_index":2383,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getmetadata(filedata",{"_index":1609,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":2013,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer?.files",{"_index":1016,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1313,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlemessage",{"_index":1311,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1233,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1241,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1219,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1201,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1229,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1222,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":2022,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":2023,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.register",{"_index":2024,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1636,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":2044,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.indexeddbservice.add('metatags",{"_index":1661,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('metatags').topromise",{"_index":1739,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('dirhandle",{"_index":885,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.indexeddbtracks().filter((tag",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.indexeddbtracks.set(tagswithoptionalbloburls",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.isautoscrollenabled",{"_index":2126,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2127,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1157,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":646,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(false",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(true",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying",{"_index":640,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(false",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(true",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(false",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(true",{"_index":644,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.lastfm_api_key",{"_index":1384,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1641,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":1015,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":1000,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.linethickness",{"_index":2551,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2592,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1484,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1482,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadfiles",{"_index":1776,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.loadingcounter",{"_index":1492,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2326,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2583,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2587,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2591,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2589,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":2360,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2585,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2595,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2593,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2581,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1738,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2579,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1736,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1734,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1731,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2734,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":1860,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":1866,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":1863,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":1861,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":1868,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":1870,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":1872,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":1864,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":1901,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":1874,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.meta.addtag",{"_index":2372,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.meta.updatetag",{"_index":2373,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":1921,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(tag",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1737,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1735,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1733,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1730,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2571,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2580,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2646,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1642,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":1867,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1316,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2321,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2320,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2650,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2683,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":995,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":642,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.pendingrequests.clear",{"_index":1355,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1323,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1347,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1337,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1328,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1352,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1622,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":2255,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":283,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2537,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2138,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.crc",{"_index":2179,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2131,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist().length",{"_index":1761,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":2081,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.loadfiles",{"_index":1779,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.next",{"_index":2053,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpause",{"_index":2027,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2180,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.playtrackbycrc(track.crc",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.previous",{"_index":2055,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectnext",{"_index":2050,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":2048,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":2072,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.stop",{"_index":2031,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playpause",{"_index":1862,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":1939,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":1945,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":1942,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.selectedtrack",{"_index":1928,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":1926,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1623,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1144,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":1869,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":2364,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":2365,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.register",{"_index":1193,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":993,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":1011,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":1954,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":1956,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":1961,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":1959,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2744,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2640,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2718,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2254,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.scrolltobottom",{"_index":2136,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2143,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2116,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.seekleft(10",{"_index":1871,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":2037,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seekright(10",{"_index":1873,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":2039,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seektohandler(details",{"_index":1875,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":643,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.selectedalbum",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":1927,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(song",{"_index":1922,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":1947,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectsong(track",{"_index":1898,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setaccentcolor(colors.peakcolor",{"_index":2362,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setaccentcolor(this.accentcolor",{"_index":2358,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setoverlayclass",{"_index":2356,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setplaybackstate('none",{"_index":1524,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1523,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1521,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setprimarycolor(colors.maincolor",{"_index":2361,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setprimarycolor(this.primarycolor",{"_index":2357,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setseekposition(details.seektime",{"_index":1952,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":1948,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2641,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showpicker",{"_index":1777,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["this.shuffle",{"_index":1935,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":1962,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2253,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2569,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2578,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2682,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2684,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":1865,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2655,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.storageservice.retrieve('equalizergainvalues",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.swupdate",{"_index":2448,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2468,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2467,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.darkmode",{"_index":834,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":1893,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2425,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2437,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":1773,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1198,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":2046,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.togglerepeat",{"_index":2035,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.toggleshuffle",{"_index":2033,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1569,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1607,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1597,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.track()?.metadata?.covercolors?.darkmuted?.hex",{"_index":835,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.covercolors?.lightmuted?.hex",{"_index":836,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.coverurl?.original",{"_index":839,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.uniquealbums",{"_index":270,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1528,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.usetagembeddedpicture",{"_index":1620,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1616,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1639,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2661,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2664,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2662,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2663,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2634,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2639,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2724,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2732,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2733,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2575,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2554,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":554,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.wakelock",{"_index":2743,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2748,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2751,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":1895,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":1897,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1305,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1312,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1310,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2636,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1333,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1350,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1349,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1351,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":5173,"title":{},"body":{"license.html":{}}}],["threads.js",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["through",{"_index":5203,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":5151,"title":{},"body":{"license.html":{}}}],["thum",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["thumb",{"_index":807,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thumbnails",{"_index":748,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["time",{"_index":854,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["time.pipe",{"_index":844,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["time.ts",{"_index":5056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timed",{"_index":1326,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1321,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1298,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":829,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2701,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["tinycolor",{"_index":2347,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["tinycolor(hex",{"_index":2395,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(10",{"_index":2397,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(15",{"_index":2399,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(18",{"_index":2401,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(21",{"_index":2403,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(24",{"_index":2405,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(27",{"_index":2407,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(30",{"_index":2409,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(5",{"_index":2396,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(15",{"_index":2393,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(20",{"_index":2391,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(25",{"_index":2389,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(30",{"_index":2387,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(35",{"_index":2386,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(45",{"_index":2385,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(55",{"_index":2384,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(value",{"_index":2411,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":5508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":1764,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2256,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":557,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["todo.md",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["todos",{"_index":4365,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["toggle",{"_index":1727,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["togglehelpdialog",{"_index":1232,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2273,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":1991,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["togglerepeat",{"_index":1800,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["toggleshuffle",{"_index":1801,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["togglevisualmode",{"_index":2727,"title":{},"body":{"injectables/VisualsService.html":{}}}],["token",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["toolbar",{"_index":1977,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["toolbar'},{'name",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["toolbar.component",{"_index":2243,"title":{},"body":{"components/ShellComponent.html":{}}}],["toolbar.component.html",{"_index":1983,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":1984,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":1976,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:105",{"_index":2000,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:111",{"_index":2002,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:122",{"_index":1995,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:126",{"_index":2009,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:130",{"_index":2010,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:134",{"_index":2007,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:139",{"_index":1998,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:143",{"_index":2004,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:147",{"_index":2006,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:151",{"_index":1997,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:155",{"_index":1993,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:159",{"_index":2008,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2012,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":2011,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:33",{"_index":2014,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar/player",{"_index":1975,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["tools",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["tooltips",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":2274,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2238,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2224,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1267,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1593,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1270,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":95,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["track();@let",{"_index":861,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track.album",{"_index":267,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1460,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.crc",{"_index":289,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1463,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":1900,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":1904,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":1903,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.original",{"_index":1908,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.original",{"_index":1906,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":1902,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.crc",{"_index":1925,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1462,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1461,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackby",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["trackbyalbum",{"_index":1430,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":287,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1431,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":286,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbycrc",{"_index":1432,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbycrc(index",{"_index":288,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["tracking",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["trackmetadata",{"_index":735,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["tracks().length",{"_index":1454,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tracks.push(...albumtracks",{"_index":274,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trademark",{"_index":5356,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":5338,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2712,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":660,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":661,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["transitions",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["translate",{"_index":5234,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2599,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["treaty",{"_index":5279,"title":{},"body":{"license.html":{}}}],["tree",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trial",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["trials",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":658,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["ts",{"_index":1879,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["tsconfig",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":3188,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tslint",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["ttry",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1066,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5417,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1881,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["types/node",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["typing",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["ubuntu",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2141,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":326,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["um",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["unconditional",{"_index":5341,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":5289,"title":{},"body":{"license.html":{}}}],["und",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":5220,"title":{},"body":{"license.html":{}}}],["understands",{"_index":5390,"title":{},"body":{"license.html":{}}}],["uneeded",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["unfair",{"_index":5250,"title":{},"body":{"license.html":{}}}],["unicorn",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["unit",{"_index":5536,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":5127,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1279,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1225,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["unsubscribe",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["update.service",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":2142,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["updateinterval",{"_index":2706,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1503,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1515,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updates",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["updateservice",{"_index":359,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":5159,"title":{},"body":{"license.html":{}}}],["url",{"_index":721,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1307,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2635,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":634,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["url.createobjecturl(new",{"_index":1628,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.original",{"_index":1667,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumb",{"_index":1669,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1655,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":635,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["urls",{"_index":1627,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["urlsearchparams",{"_index":1381,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["usage",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["useclass",{"_index":5493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2304,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":5485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":910,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":5410,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":5103,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1547,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1548,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":5487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1549,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":2937,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utc",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":5256,"title":{},"body":{"license.html":{}}}],["v0.10.0",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["v0.11.0",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["v0.12.0",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["v0.13.0",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["v0.14.0",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["v0.15.0",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["v0.16.0",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["v0.17.0",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["v0.18.0",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["v0.19.0",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["v0.20.0",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["v0.21.0",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["v0.22.0",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["v0.23.0",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["v0.24.0",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["v0.25.0",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["v0.28.0",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["v0.29.0",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["v0.4.0",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["v0.5.0",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["v0.6.0",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["v0.7.0",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["v0.8.0",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["v0.9.0",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["v1.0.1",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["v1.10.0",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["v1.11.0",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["v1.11.1",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["v1.11.10",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["v1.11.11",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["v1.11.12",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["v1.11.2",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["v1.11.3",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["v1.11.4",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["v1.11.5",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["v1.11.6",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["v1.11.7",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["v1.11.8",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["v1.11.9",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["v1.12.0",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["v1.13.0",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["v1.14.0",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["v1.15.0",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["v1.16.0",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["v1.17.0",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["v1.18.0",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["v1.19.0",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["v1.2.2",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["v1.3.0",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["v1.4.0",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["v1.4.1",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["v1.6.1",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["v1.6.2",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["v1.6.3",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["v1.6.4",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["v1.7.1",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["v1.9.1",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["v10.0.0",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["v10.0.1",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["v10.0.2",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["v10.0.3",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["v10.0.4",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["v10.1.0",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["v10.2.0",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["v10.3.0",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["v10.3.1",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["v10.3.2",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["v11.0.0",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["v11.0.2",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["v11.1.0",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["v11.1.1",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["v11.1.2",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["v11.18.0",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["v11.2.0",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["v11.20.0",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["v11.22.0",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["v11.24.1",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["v11.3.0",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["v11.3.1",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["v11.30.1",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["v11.4.0",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["v11.4.1",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["v11.4.10",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["v11.4.11",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["v11.4.2",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["v11.4.3",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["v11.4.5",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["v11.4.6",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["v11.4.7",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["v11.4.8",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["v11.4.9",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["v11.5.0",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["v11.5.1",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["v11.5.10",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["v11.5.11",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["v11.5.12",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["v11.5.13",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["v11.5.14",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["v11.5.2",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["v11.5.3",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["v11.5.4",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["v11.5.5",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["v11.5.6",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["v11.5.7",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["v11.5.8",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["v11.5.9",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["v12.0.0",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["v12.0.1",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["v12.0.10",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["v12.0.11",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["v12.0.12",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["v12.0.13",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["v12.0.14",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["v12.0.15",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["v12.0.16",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["v12.0.2",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["v12.0.3",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["v12.0.4",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["v12.0.5",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["v12.0.6",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["v12.0.7",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["v12.0.8",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["v12.0.9",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["v12.2.13",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["v12.2.5",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["v12.3.0",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["v12.6.2",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["v12.8.0",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["v12.9.0",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["v13.0.0",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["v13.0.1",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["v13.0.10",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["v13.0.11",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["v13.0.12",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["v13.0.13",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["v13.0.16",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["v13.0.18",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["v13.0.19",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["v13.0.2",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["v13.0.20",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["v13.0.3",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["v13.0.5",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["v13.0.6",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["v13.0.7",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["v13.0.8",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["v13.0.9",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["v13.1.1",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["v13.1.10",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["v13.1.11",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["v13.1.12",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["v13.1.2",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["v13.1.3",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["v13.1.4",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["v13.1.5",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["v13.1.6",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["v13.1.7",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["v13.1.8",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["v13.1.9",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["v13.10.1",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["v13.11.2",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["v13.11.4",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["v13.13.0",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["v13.14.2",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["v13.15.1",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["v13.2.0",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["v13.2.1",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["v13.2.2",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["v13.2.3",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["v13.2.4",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["v13.2.5",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["v13.2.6",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["v13.22.0",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["v13.24.2",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["v13.26.0",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["v13.28.0",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["v13.29.1",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["v13.29.3",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["v13.3.0",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["v13.3.1",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["v13.3.2",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["v13.3.3",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["v13.3.4",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["v13.3.5",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["v13.31.2",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["v13.32.0",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["v13.33.0",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["v13.34.0",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["v13.35.0",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["v13.35.1",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["v13.5.1",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["v13.7.2",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["v13.7.5",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["v14.0.0",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["v14.0.1",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["v14.0.10",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["v14.0.11",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["v14.0.12",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["v14.0.13",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["v14.0.2",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["v14.0.3",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["v14.0.4",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["v14.0.5",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["v14.0.6",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["v14.0.7",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["v14.0.8",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["v14.0.9",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["v14.1.0",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["v14.1.1",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["v14.1.10",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["v14.1.11",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["v14.1.12",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["v14.1.13",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["v14.1.14",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["v14.1.15",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["v14.1.16",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["v14.1.17",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["v14.1.18",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["v14.1.19",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["v14.1.2",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["v14.1.20",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["v14.1.23",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["v14.1.3",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["v14.1.4",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["v14.1.5",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["v14.1.6",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["v14.1.7",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["v14.1.8",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["v14.1.9",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["v15",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["v15.0.0",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["v15.0.1",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["v15.0.2",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["v15.0.3",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["v15.0.4",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["v15.0.5",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["v15.0.6",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["v15.0.7",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["v15.0.8",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["v15.0.9",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["v15.1.0",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["v15.1.1",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["v15.1.10",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["v15.1.11",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["v15.1.12",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["v15.1.13",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["v15.1.14",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["v15.1.16",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["v15.1.17",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["v15.1.2",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["v15.1.3",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["v15.1.4",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["v15.1.5",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["v15.1.6",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["v15.1.7",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["v15.1.8",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["v15.1.9",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["v15.4.4",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["v16.0.0",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["v16.0.1",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["v16.0.2",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["v16.0.3",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["v16.0.4",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["v16.0.5",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["v16.0.6",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["v17.0.1",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["v17.0.10",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["v17.0.11",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["v17.0.12",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["v17.0.13",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["v17.0.14",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["v17.0.15",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["v17.0.16",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["v17.0.17",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["v17.0.18",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["v17.0.2",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["v17.0.3",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["v17.0.4",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["v17.0.5",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["v17.0.6",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["v17.0.7",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["v17.0.8",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["v17.0.9",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["v18.0.0",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["v18.0.1",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["v18.1.0",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["v18.1.1",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["v18.16.5",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["v18.2.0",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["v18.2.2",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["v18.2.3",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["v18.2.4",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["v18.2.5",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["v18.2.6",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["v18.2.7",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["v19",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["v19.0.0",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["v19.0.1",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["v19.0.10",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["v19.0.2",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["v19.0.3",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["v19.0.4",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["v19.0.5",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["v19.0.6",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["v19.0.7",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["v19.0.8",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["v19.0.9",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["v19.1.0",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["v19.1.1",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["v19.2.0",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["v19.2.1",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["v19.2.10",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["v19.2.2",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["v19.2.3",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["v19.2.4",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["v19.2.5",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["v19.2.6",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["v19.2.7",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["v19.2.8",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["v19.2.9",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["v19.3.0",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["v19.4.0",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["v19.4.1",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["v19.4.10",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["v19.4.11",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["v19.4.12",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["v19.4.13",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["v19.4.14",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["v19.4.15",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["v19.4.2",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["v19.4.3",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["v19.4.4",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["v19.4.5",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["v19.4.6",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["v19.4.7",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["v19.4.8",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["v19.4.9",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["v19.5.0",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["v19.5.1",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["v19.5.3",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["v19.5.4",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["v2.0.2",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["v2.5.0",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["v2.5.3",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["v2.6.0",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["v2.6.1",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["v2.6.2",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["v2.6.3",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["v2.7.0",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["v2.8.1",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["v20.0.0",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["v20.0.1",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["v20.1.0",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["v20.1.1",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["v20.1.2",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["v20.1.3",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["v20.1.4",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["v20.2.0",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["v20.2.1",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["v20.2.10",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["v20.2.11",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["v20.2.12",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["v20.2.2",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["v20.2.3",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["v20.2.4",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["v20.2.5",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["v20.2.6",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["v20.2.7",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["v20.2.8",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["v20.2.9",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["v20.8.6",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["v24",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["v3.0.3",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["v3.0.4",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["v3.0.5",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["v3.0.6",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["v3.0.7",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["v3.0.8",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["v3.0.9",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["v3.10.0",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["v3.11.0",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["v3.4.0",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["v3.4.1",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["v3.5.0",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["v3.5.1",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["v3.6.0",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["v3.7.0",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["v3.8.0",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["v3.8.1",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["v3.9.0",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["v4.2.0",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["v4.3.1",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["v4.4.0",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["v4.5.0",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["v4.6.0",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["v4.7.0",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["v5.1.0",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["v5.2.0",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["v5.2.1",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["v5.2.10",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["v5.2.11",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["v5.2.12",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["v5.2.2",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["v5.2.3",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["v5.2.4",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["v5.2.5",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["v5.2.6",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["v5.2.7",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["v5.2.8",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["v5.2.9",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["v5.48.0",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["v6.0.0",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["v6.0.1",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["v6.1.0",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["v6.1.1",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["v6.2.0",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["v6.2.1",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["v6.2.2",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["v6.2.3",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["v6.2.4",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["v6.2.5",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["v6.2.6",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["v6.3.0",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["v6.3.1",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["v6.4.0",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["v6.4.1",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["v6.5.0",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["v6.5.1",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["v6.5.2",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["v6.5.3",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["v6.5.4",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["v6.5.5",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["v6.5.6",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["v6.5.7",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["v6.5.8",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["v6.5.9",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["v6.6.0",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["v6.6.1",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["v6.6.2",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["v6.6.3",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["v6.6.4",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["v6.6.5",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["v6.6.6",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["v6.6.7",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["v6.7.0",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["v6.7.1",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["v6.7.2",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["v6.7.3",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["v6.7.4",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["v7.0.0",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["v7.0.1",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["v7.0.2",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["v7.0.3",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["v7.0.4",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["v7.0.5",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["v7.0.6",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["v7.1.1",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["v7.13.1",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["v7.13.3",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["v7.13.4",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["v8.0.0",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["v8.0.1",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["v8.0.3",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["v8.1.0",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["v8.1.1",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["v8.1.10",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["v8.1.3",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["v8.1.4",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["v8.1.5",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["v8.1.6",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["v8.1.7",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["v8.1.8",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["v8.1.9",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["v8.26.1",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["v8.31.0",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["v8.4.21",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["v8.6.0",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["v9.0.10",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["v9.0.11",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["v9.0.2",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["v9.0.3",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["v9.0.4",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["v9.0.5",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["v9.0.6",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["v9.0.7",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["v9.0.8",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["v9.0.9",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["v9.1.0",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["v9.1.1",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["v9.1.2",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["v9.1.3",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["v9.2.0",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["v9.2.1",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["v9.2.2",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["v9.2.3",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["v9.2.4",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":931,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":668,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value.tostring().slice(0",{"_index":666,"title":{},"body":{"pipes/BandPipe.html":{}}}],["var",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":5427,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.scss",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["variant",{"_index":2076,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["various",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verfügbar",{"_index":2469,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":5078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle",{"_index":880,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":907,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2454,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2452,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2463,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2456,"title":{},"body":{"injectables/UpdateService.html":{}}}],["versions",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["very",{"_index":2125,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vi",{"_index":5258,"title":{},"body":{"license.html":{}}}],["via",{"_index":5409,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":817,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["vibrant.from(url).getpalette",{"_index":1691,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1584,"title":{},"body":{"injectables/MetadataService.html":{}}}],["view",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":2105,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2228,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2103,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport",{"_index":2115,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2153,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2171,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2121,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2145,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2178,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2170,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":5273,"title":{},"body":{"license.html":{}}}],["virtual",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1012,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":1013,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2152,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2155,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":2932,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["visualizefrequencybars",{"_index":2604,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2609,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2605,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2611,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["visualizer.component.html",{"_index":2482,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2483,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":1768,"title":{},"body":{"components/PlayerComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2106,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":414,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":328,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":324,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizers",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["visualizerworker",{"_index":2628,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2726,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":2922,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["visuals.types",{"_index":2620,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2565,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2562,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2561,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":314,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":417,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2491,"title":{"injectables/VisualsService.html":{}},"body":{"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2596,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":318,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["vm2",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":2075,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["volume",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlayerToolbarComponent.html":{}}}],["volumeicon",{"_index":1985,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["voluntarily",{"_index":5215,"title":{},"body":{"license.html":{}}}],["vulnerabilities",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["w9jds/firebase",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":2132,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":5359,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5281,"title":{},"body":{"license.html":{}}}],["waives",{"_index":5290,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2736,"title":{},"body":{"injectables/WakelockService.html":{},"changelog.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2742,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":1849,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":5079,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["warns",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":5139,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["wav",{"_index":951,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["waveform",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["web",{"_index":5095,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webmanifest",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["webpack",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["webstorage",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"dependencies.html":{}}}],["webworker",{"_index":5403,"title":{},"body":{"todo.html":{}}}],["well",{"_index":5298,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1672,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2473,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":5190,"title":{},"body":{"license.html":{}}}],["whether",{"_index":5296,"title":{},"body":{"license.html":{}}}],["white",{"_index":1038,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["whitelist",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":1237,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window.showopenfilepicker",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":5170,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":5483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":5481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":5478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1495,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{},"license.html":{}}}],["withviewtransitions",{"_index":5484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":5164,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1301,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1306,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":5470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2982,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":900,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":5152,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":5301,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["writes",{"_index":2302,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":5414,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":1129,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["yield",{"_index":1601,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1031,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zone",{"_index":2623,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["zoneless",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["zu",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["zugewiesen",{"_index":1109,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    MatProgressBar,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private router = inject(Router);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  readonly searchTerm = signal('');\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    let filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.year.localeCompare(b.year));\n  });\n\n  readonly tracks = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n    const searchTerm = this.searchTerm();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('metatags'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByCrc(track.crc);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByCrc(index: number, track: IndexedDbTrackMetadata): string {\n    return track.crc;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  templateUrl: './app.component.html',\n  imports: [ShellComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      analyser.disconnect();\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      analyser.disconnect();\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true,\n  standalone: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand, ...arguments_: unknown[]): string {\n    if (!value) {\n      return '';\n    }\n\n    if (value = 1000 && value = 10_000) {\n      return value.toString().slice(0, 2) + 'K';\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  standalone: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | undefined): string {\n    if (!value) {\n      return '0';\n    }\n    const bitrate = Math.round(value / 1000);\n    return `${bitrate} kb/s`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtImage.html":{"url":"interfaces/CoverArtImage.html","title":"interface - CoverArtImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            thumbnails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnails:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtResponse.html":{"url":"interfaces/CoverArtResponse.html","title":"interface - CoverArtResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            images\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         CoverArtImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverArtImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                    Readonly\n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.track()?.metadata?.coverUrl?.original)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        track\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, input } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\nimport { Track } from '../player.types';\nimport { BitratePipe } from './bitrate.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [TimePipe, BitratePipe]\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n\n  readonly track = input.required();\n\n  readonly coverUrl = computed(() => this.track()?.metadata?.coverUrl?.original);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = track();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = track();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService extends FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  async init() {\n    const entry = await firstValueFrom(this.indexedDbService.getByID('dirHandle', 1));\n    if (entry) {\n      const granted = await verifyPermission(entry.handle);\n      if (granted) {\n        this.currentFolderHandle = entry.handle;\n      }\n    }\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle = handle;\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    if (this.currentFolderHandle) {\n      return getAudioFilesFromDirHandle(this.currentFolderHandle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                            BandPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { AudioService, FREQUENCY_BANDS } from '../audio.service';\nimport { BandPipe } from './band.pipe';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@Component({\n  selector: 'mtb-equalizer',\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  imports: [MatSliderModule, BandPipe],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n\n  BANDS = FREQUENCY_BANDS;\n\n  displayFunction(value: number): string {\n    const number_ = value.toFixed(1);\n    return number_ + ' dB';\n  }\n}\n\n    \n\n    \n        \n  \n    @for (band of BANDS; track band; let i = $index) {\n      \n        \n          {{ band | band }}\n          \n        \n      \n    }\n\n    \n      \n        GAIN\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (band of BANDS; track band; let i = $index) {                        {{ band | band }}                            }                  GAIN                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EqualizerGainValues.html":{"url":"interfaces/EqualizerGainValues.html","title":"interface - EqualizerGainValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EqualizerGainValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [band: number]:        number\n\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      analyser.disconnect();\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      analyser.disconnect();\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer?.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (let index = 0; index \n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                init\n                            \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle?: FileSystemDirectoryHandle;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n  abstract init(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:27\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:46\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService extends FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  private files: File[] = [];\n\n  constructor() {\n    super();\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  async init() {}\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            NgArrayPipesModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatHint\n                            MatProgressBar\n                            FormsModule\n                            MatFormField\n                            MatInput\n                            MatPrefix\n                            MatSuffix\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                filteredBySerchterm\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Readonly\n                                selectedArtist\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByCrc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:189\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:215\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:245\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:241\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByCrc\n                        \n                    \n                \n            \n            \n                \ntrackByCrc(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:249\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredBySerchterm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedArtist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n    const searchTerm = this.searchTerm();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.year.localeCompare(b.year));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:78\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    MatProgressBar,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private router = inject(Router);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  readonly searchTerm = signal('');\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    let filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.year.localeCompare(b.year));\n  });\n\n  readonly tracks = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n    const searchTerm = this.searchTerm();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('metatags'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByCrc(track.crc);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByCrc(index: number, track: IndexedDbTrackMetadata): string {\n    return track.crc;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ tracks().length }} entries\n\n\n@if (metadataService.processionPercent() \n}\n\n\n  \n    \n      \n        (All)\n        \n          \n            \n           \n      \n        {{ artist }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        (All)\n        \n          \n            \n           \n      \n        \n          @if (album && album.coverUrl) {\n            \n          }\n        \n        {{ album.name }}{{ album.year ? ' | ' + album.year : '' }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        (All)\n        \n          \n            \n          \n        \n      \n      \n        \n          @if (track && track.coverUrl) {\n            \n          }\n        \n        @if (selectedAlbum()) {\n          {{ track.track ? track.track + '. ' : '' }}{{ track.title || track.fileName }}\n        } @else {\n          {{ track.title || track.fileName }}\n        }\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (searchTerm()) {                }  {{ tracks().length }} entries@if (metadataService.processionPercent() }                    (All)                                                       {{ artist }}                                                                          Add to Playlist                          (All)                                                                 @if (album && album.coverUrl) {                      }                {{ album.name }}{{ album.year ? \\' | \\' + album.year : \\'\\' }}                                                                          Add to Playlist                          (All)                                                                              @if (track && track.coverUrl) {                      }                @if (selectedAlbum()) {          {{ track.track ? track.track + \\'. \\' : \\'\\' }}{{ track.title || track.fileName }}        } @else {          {{ track.title || track.fileName }}        }                                                                          Add to Playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { crc32 } from '@allex/crc32';\nimport { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\n\n// import * as SparkMD5 from 'spark-md5';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    // console.time('hash');\n    const crc = generateFileHash(fileData.file);\n    // console.timeEnd('hash');\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('metatags', crc));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumb === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    // console.time('id3tags');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n    // console.timeEnd('id3tags');\n    if (!tags) {\n      // if no tags\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverPicture | undefined;\n\n    if (this.useWebMetainfos()) {\n      if (tags.artist && tags.album) {\n        // console.time('webcover');\n        coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n        if (!coverUrls) {\n          coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n        }\n        // console.timeEnd('webcover');\n      } else {\n        // console.warn('Missing tags for lookup');\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n\n    if (coverUrls?.original) {\n      // console.time('vibrant');\n      palette = await extractColorsWithNodeVibrant(coverUrls.original);\n      // console.timeEnd('vibrant');\n    } else if (tags.picture) {\n      // console.time('vibrant');\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithNodeVibrant(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n      // console.timeEnd('vibrant');\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      crc: crc,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumb: this.PLACEHOLDER_URL, original: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('metatags', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.original === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl.original.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.original);\n      }\n      if (meta.coverUrl.thumb.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumb);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nfunction generateFileHash(file: File): string {\n  // TODO: replace with real file hashing? https://stackoverflow.com/questions/20917710/fast-file-hashing-of-large-files\n  const hashString: string = file.name + file.type + file.size + file.lastModified;\n  return crc32(hashString, 'hex') as string;\n}\n//\n// async function generateFileHashMD5(file: File): Promise {\n//   return SparkMD5.ArrayBuffer.hash(await file.arrayBuffer());\n// }\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  const palette = await Vibrant.from(url).getPalette();\n  return {\n    vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n    darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n    lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n    muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n    darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n    lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  templateUrl: './metadata-settings.component.html',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule]\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('metatags').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzReleaseGroup.html":{"url":"interfaces/MusicbrainzReleaseGroup.html","title":"interface - MusicbrainzReleaseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzReleaseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            first-release-date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first-release-date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first-release-date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzResponse.html":{"url":"interfaces/MusicbrainzResponse.html","title":"interface - MusicbrainzResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            release-groups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release-groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release-groups:         MusicbrainzReleaseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MusicbrainzReleaseGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:20\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:40\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService extends FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  async init() {\n    const entry = await firstValueFrom(this.indexedDbService.getByID('dirHandle', 1));\n    if (entry) {\n      const granted = await verifyPermission(entry.handle);\n      if (granted) {\n        this.currentFolderHandle = entry.handle;\n      }\n    }\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle = handle;\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    if (this.currentFolderHandle) {\n      return getAudioFilesFromDirHandle(this.currentFolderHandle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                                VisualizerComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                isPlaylistEmpty\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                onReload\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onReload\n                        \n                    \n                \n            \n            \n                \n                        \n                    onReload()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaylistEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentPlaylist().length === 0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { VisualizerComponent } from './visualizer/visualizer.component';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    PlaylistComponent,\n    MatButtonModule,\n    MatIconModule,\n    CoverDisplayComponent,\n    VisualizerComponent,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatMenuModule\n  ]\n})\nexport default class PlayerComponent implements OnInit {\n  private titleService = inject(TitleService);\n  private fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n  }\n\n  async onReload() {\n    await this.fileLoaderService.init();\n    return this.fileLoaderService.currentFolderHandle ? this.loadFiles() : this.showPicker();\n  }\n\n  readonly isPlaylistEmpty = computed(() => this.playerService.currentPlaylist().length === 0);\n\n  async showPicker() {\n    await this.fileLoaderService.showPicker();\n    return this.loadFiles();\n  }\n\n  async loadFiles() {\n    return this.playerService.loadFiles();\n  }\n}\n\n    \n\n    \n        \n  @if (isPlaylistEmpty()) {\n    \n       Reload last directory\n    \n  }\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (isPlaylistEmpty()) {           Reload last directory      }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                playTrackByCrc\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrackByCrc\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrackByCrc(crc: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                crc\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:266\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:270\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:231\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:249\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:284\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:303\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n        for (const fileHandle of launchParameters.files) {\n          const file = await fileHandle.getFile();\n          if (ALLOWED_MIMETYPES.includes(file.type)) {\n            await this.addFilesToPlaylist(file);\n          }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.original ? [{ src: track.metadata.coverUrl.original, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.crc === song.metadata?.crc)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  selectSong(song: Track) {\n    this.selectedTrack.set(song);\n  }\n\n  async playPauseTrack(track: Track) {\n    if (this.audioService.isLoading()) {\n      return;\n    }\n\n    if (this.currentlyLoadedTrack()?.metadata?.crc === track.metadata?.crc) {\n      await this.playPause();\n      return;\n    }\n    await this.playTrack(track);\n  }\n\n  async playPause() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      if (this.selectedTrack()) {\n        await this.playTrack(this.selectedTrack());\n      }\n      return;\n    }\n    if (this.audioService.isPaused()) {\n      await this.audioService.play();\n      await this.afterPlayLoaded();\n    } else {\n      this.audioService.pause();\n      await this.afterPausedOrStopped();\n    }\n  }\n\n  async stop() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      return;\n    }\n    this.audioService.stop();\n    this.currentlyLoadedTrack.set(undefined);\n    await this.afterPausedOrStopped();\n  }\n\n  async next(): Promise {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async playTrackByCrc(crc: string) {\n    const playlist = this.currentPlaylist();\n\n    const track = playlist.find((playlistTrack) => playlistTrack.metadata?.crc === crc);\n    if (track) {\n      await this.playTrack(track);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerToolbarComponent.html":{"url":"components/PlayerToolbarComponent.html","title":"component - PlayerToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-toolbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            MatIcon\n                            MatIconButton\n                            MatMenu\n                            MatSlider\n                            MatSliderThumb\n                            MatToolbar\n                            MatTooltip\n                            TimePipe\n                            MatMenuTrigger\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player-toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { TimePipe } from '../time.pipe';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { PlayerService } from '../player.service';\nimport { AudioService } from '../audio.service';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { GamepadAxes, GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { HotkeysService } from '../../services/hotkeys/hotkeys.service';\nimport { FileLoaderService } from '../file-loader-service/file-loader.service.abstract';\n\n@Component({\n  selector: 'player-toolbar',\n  imports: [CommonModule, MatIcon, MatIconButton, MatMenu, MatSlider, MatSliderThumb, MatToolbar, MatTooltip, TimePipe, MatMenuTrigger],\n  templateUrl: './player-toolbar.component.html',\n  styleUrl: './player-toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayerToolbarComponent implements OnInit, OnDestroy {\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  private fileLoaderService = inject(FileLoaderService);\n\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  readonly volumeIcon = computed(() => this.getVolumeIconForLevel(this.audioService.volume()));\n\n  ngOnInit() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showPicker());\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol \n    \n\n    \n        \n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (audioService.isPlaying()) {          } @else {          }                                      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            FormsModule\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByCrc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByCrc\n                        \n                    \n                \n            \n            \n                \ntrackByCrc(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    FormsModule,\n    MatProgressBar\n  ]\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  metadataService = inject(MetadataService);\n  private destroRef = inject(DestroyRef);\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.playerService.currentPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.playerService.currentPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.playerService.currentPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.crc === currentTrack.metadata?.crc);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByCrc(index: number, song: Track): string {\n    return song.metadata.crc;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying) {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n@if (metadataService.processionPercent() \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (song && song.metadata && song.metadata.coverUrl) {                            }        @let songPlaying = isPlaying(song)();        @if (songPlaying) {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }      @if (metadataService.processionPercent() }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverPicture.html":{"url":"interfaces/RemoteCoverPicture.html","title":"interface - RemoteCoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            original\n                                        \n                                \n                                \n                                        \n                                            thumb\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        original\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumb:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent]\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                                FileDropOverlayComponent\n                                PlayerToolbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { PlayerService } from '../player/player.service';\nimport { ALLOWED_MIMETYPES } from '../player/file-loader-service/file-loader.helpers';\nimport { PlayerToolbarComponent } from '../player/player-toolbar/player-toolbar.component';\n\n@Component({\n  selector: 'mtb-shell',\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss',\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterOutlet,\n    FileDropOverlayComponent,\n    PlayerToolbarComponent\n  ]\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  private playerService = inject(PlayerService);\n  private router = inject(Router);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n      @if (loaderService.isLoading()) {\n        \n      }\n    \n\n    \n\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  templateUrl: './storage-settings.component.html',\n  imports: [MatCardModule, MatButtonModule]\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { TinyColor } from '@thebespokepixel/es-tinycolor';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Color } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private primaryColor = FALLBACK_PRIMARY_COLOR;\n\n  private accentColor = FALLBACK_ACCENT_COLOR;\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  primaryColorPalette: Color[] = [];\n  accentColorPalette: Color[] = [];\n\n  initializeTheme() {\n    this.setOverlayClass();\n    this.setPrimaryColor(this.primaryColor);\n    this.setAccentColor(this.accentColor);\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n    this.localStorageService.store('darkMode', darkMode);\n    this.setOverlayClass();\n  }\n\n  setColors(colors: ColorConfig) {\n    this.setPrimaryColor(colors.mainColor);\n    this.setAccentColor(colors.peakColor);\n  }\n\n  private setPrimaryColor(color?: string) {\n    this.primaryColor = color || FALLBACK_PRIMARY_COLOR;\n    this.primaryColorPalette = this.computeColors(this.primaryColor);\n\n    for (const clr of this.primaryColorPalette) {\n      document.documentElement.style.setProperty(`--theme-primary-${clr.name}`, clr.hex);\n    }\n\n    this.meta.addTag({ name: 'theme-color', content: this.primaryColor }, true);\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor });\n  }\n\n  private setAccentColor(color?: string) {\n    this.accentColor = color || FALLBACK_ACCENT_COLOR;\n    this.accentColorPalette = this.computeColors(this.accentColor);\n\n    for (const clr of this.accentColorPalette) {\n      document.documentElement.style.setProperty(`--theme-accent-${clr.name}`, clr.hex);\n    }\n  }\n\n  private setOverlayClass() {\n    if (this.darkMode()) {\n      document.documentElement.style.setProperty('--app-color-scheme', 'dark');\n    } else {\n      document.documentElement.style.setProperty('--app-color-scheme', 'light');\n    }\n  }\n\n  private computeColors(hex: string): Color[] {\n    return [\n      this.getColorObject(new TinyColor(hex).lighten(55), '0'),\n      this.getColorObject(new TinyColor(hex).lighten(45), '10'),\n      this.getColorObject(new TinyColor(hex).lighten(35), '20'),\n      this.getColorObject(new TinyColor(hex).lighten(30), '25'),\n      this.getColorObject(new TinyColor(hex).lighten(25), '30'),\n      this.getColorObject(new TinyColor(hex).lighten(20), '35'),\n      this.getColorObject(new TinyColor(hex).lighten(15), '40'),\n      this.getColorObject(new TinyColor(hex), '50'),\n      this.getColorObject(new TinyColor(hex).darken(5), '60'),\n      this.getColorObject(new TinyColor(hex).darken(10), '70'),\n      this.getColorObject(new TinyColor(hex).darken(15), '80'),\n      this.getColorObject(new TinyColor(hex).darken(18), '90'),\n      this.getColorObject(new TinyColor(hex).darken(21), '95'),\n      this.getColorObject(new TinyColor(hex).darken(24), '98'),\n      this.getColorObject(new TinyColor(hex).darken(27), '99'),\n      this.getColorObject(new TinyColor(hex).darken(30), '100')\n    ];\n  }\n\n  private getColorObject(value: TinyColor, name: string): Color {\n    const color = new TinyColor(value);\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name: name,\n      hex: color.toHexString(false),\n      darkContrast: color.getBrightness() > lightnessLimit\n      // darkContrast: c.isLight()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  templateUrl: './theme-settings.component.html',\n  imports: [MatCardModule, MatCheckboxModule]\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true,\n  standalone: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            crc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule]\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]',\n  standalone: true\n})\nexport class VisualsDirective implements OnDestroy {\n  // private zone = inject(NgZone);\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\nv20.2.12\n\nchore(deps): update w9jds/firebase-action action to v13.35.1 #549\nfeat: refactor player component and extract toolbar into a separate component 7e11361\nfeat: enhance layout and styling of player and library components, player toolbar in shell, fixed layouts 9fb859e\n\nv20.2.11\n\n22 March 2025\n\n\nRelease 20.2.11 be7f8fc\nfeat: update track playback method to play by CRC instead of last track in playlist 862a41d\n\nv20.2.10\n\n22 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.35.0 #547\nchore: remove search functionality from playlist and add it to library 99126c0\nfeat: enhance library and playlist components with improved track selection and rendering 7667c50\nRelease 20.2.10 b8a2ac7\n\nv20.2.9\n\n22 March 2025\n\n\nRelease 20.2.9 d933c1e\nchore: update Angular and related dependencies to latest versions 9ea103a\n\nv20.2.8\n\n17 March 2025\n\n\nfeat: refactor progress tracking to use MetadataService and improve track rendering with trackBy functions, use generator for addFilesToLibrary ea0dd16\nfix: fix settings persistence, support etag embedded cover pictures again 5effed4\nfeat: update cover display to use background image for album covers and improve styling 7fa33e8\n\nv20.2.7\n\n16 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.34.0 #541\nfeat: add progress bar for file processing and enhance artist/album display in library, add an add all artist button, show track number and year in library, remove console warns, remember filename in metadata 7353f84\nRelease 20.2.7 dfa400c\n\nv20.2.6\n\n15 March 2025\n\n\nRelease 20.2.6 34663be\nfix: correct formatting in .npmrc for registry configuration f37d715\n\nv20.2.5\n\n15 March 2025\n\n\nRelease 20.2.5 452f074\n\nv20.2.4\n\n15 March 2025\n\n\nRelease 20.2.4 7d3846a\n\nv20.2.3\n\n15 March 2025\n\n\nRelease 20.2.3 0107dc5\nfeat: enhance file handling by introducing FileData interface and updating related services, save file handles in indexed db, fix library and add context menu to tracks c3bb2d1\nfeat: implement virtual scrolling for artists, albums, and tracks; add menus for album and track actions, add (All) option, doubleclick adds and navigates eb5338b\n\nv20.2.2\n\n15 March 2025\n\n\nchore(deps): update Angular and related dependencies to latest versions f0442a7\nRelease 20.2.2 f3f93f6\n\nv20.2.1\n\n11 March 2025\n\n\nfix(deps): update dependency music-metadata to v11.0.2 #540\nchore(deps): update typescript-eslint monorepo to v8.26.1 #529\nRelease 20.2.1 c6dff5e\n\nv20.2.0\n\n11 March 2025\n\n\nfeat: scroll to track when playing starts and its not in view b9445d4\nfeat: remove polyfills from project configuration a0517fe\nfeat: add search functionality to playlist with input field and filtering logic b925747\n\nv20.1.4\n\n11 March 2025\n\n\nrefactor: replace BaseSubscribingClass with DestroyRef 72be3d3\nRelease 20.1.4 5e77b33\nfeat: add view transitions to router configuration b2dcbb8\n\nv20.1.3\n\n9 March 2025\n\n\nfeat: enhance ID3 tags extraction and improve metadata handling, refactorings a11eb42\nRelease 20.1.3 305aec6\n\nv20.1.2\n\n9 March 2025\n\n\nRelease 20.1.2 ba13cfe\nrefactor: change to zoneless change detection 3f668a5\n\nv20.1.1\n\n9 March 2025\n\n\nfeat: update typography settings and optimize font loading in HTML 722901c\nRelease 20.1.1 858ff56\n\nv20.1.0\n\n9 March 2025\n\n\nRelease 20.1.0 d78443f\nfeat: refactor cover and playlist components for improved performance, performance hack für visuals f1580e8\nchore: update dependencies in package.json and package-lock.json 9e95c2d\n\nv20.0.1\n\n9 March 2025\n\n\nfeat: updated to material 3 theme, fixed dark mode handling 9b0ad09\nfeat: implement circular waveform visualization and initialize bark scale mapping 46e627b\nfeat: optimize image loading in cover and playlist components using NgOptimizedImage 79c83aa\n\nv20.0.0\n\n8 March 2025\n\n\nfeat: enhance ESLint configuration with Angular rules and TypeScript support 2b942c4\nRelease 20.0.0 d641392\nfeat: update ESLint configuration with TypeScript and SonarJS support, add custom rule overrides ef11066\n\nv19.5.4\n\n8 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.33.0 #539\nRelease 19.5.4 86a63af\nchore: update dependencies and add eslint packages c9dcf09\nfeat:  nearly complete signal refactoring also fixing long standing bugs f3a3520\n\nv19.5.3\n\n2 March 2025\n\n\nfeat: use @let syntax in templates, better VisualizerOptions types b7bb801\nRelease 19.5.3 eac8dd6\n\nv19.5.1\n\n2 March 2025\n\n\nRelease 19.5.1 8ebff84\nfeat: add circular visualization modes for frequency bars and oscilloscope 4e27dea\nfix: make gamepad and wakelock services optional to improve compatibility bb8466d\n\nv19.5.0\n\n2 March 2025\n\n\nRelease 19.5.0 3f2c562\nfix: fix file drop overlay not working as expected 94b7001\nfix: add postcss-html dependency to package.json and package-lock.json 85d2a14\n\nv19.4.15\n\n2 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.32.0 #532\nchore: update dependencies to latest versions b0d0fe4\nRelease 19.4.15 a2b1db1\nfix: update HTML components to self-closing tags 7785053\n\nv19.4.14\n\n27 February 2025\n\n\nchore: update Angular and related dependencies to version 19.2.x d8a2bf9\nRelease 19.4.14 0c889a3\n\nv19.4.13\n\n24 February 2025\n\n\nchore(deps): update actions/upload-artifact action to v4 #527\nRelease 19.4.13 9fb4192\nfix: eslint unicorn autofixes f154aed\nfeat: enhance visuals worker by optimizing data structures and pre-calculating arrays fee270f\n\nv19.4.12\n\n24 February 2025\n\n\nRelease 19.4.12 6c63788\nrefactor: remove unused dependencies 12a71dd\n\nv19.4.11\n\n23 February 2025\n\n\nRelease 19.4.11 d505863\nfix: update ESLint configuration inputs and production exclusions 6bfb6ba\n\nv19.4.10\n\n23 February 2025\n\n\nRelease 19.4.10 17e4083\n\nv19.4.9\n\n23 February 2025\n\n\nRelease 19.4.9 cf13446\nrefactor: us prive functions instead of modules c31aaa6\n\nv19.4.8\n\n23 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.31.2 #522\nrefactor: update ESLint configuration to use ES module syntax and cleanup deps 4dbf4b8\nRelease 19.4.8 0f45127\nchore: update project configuration and add dotenv-cli dependency 063d395\n\nv19.4.7\n\n23 February 2025\n\n\nRelease 19.4.7 4d9ca69\nchore: update HTML templates and ESLint configuration for consistency 33bb6c8\n\nv19.4.6\n\n23 February 2025\n\n\nchore(deps): update Angular and ESLint dependencies to latest versions 00d5b5e\nRelease 19.4.6 ab5a0f8\n\nv19.4.5\n\n4 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.3 #511\nchore(deps): update @swc/core, @types/node, and @typescript-eslint packages to latest versions 4df45ed\nRelease 19.4.5 f52095f\n\nv19.4.4\n\n2 February 2025\n\n\nchore: deps 76ace70\nRelease 19.4.4 072caca\n\nv19.4.3\n\n27 January 2025\n\n\nchore: deps a04aa39\nRelease 19.4.3 e844d5d\n\nv19.4.2\n\n24 January 2025\n\n\nchore: deps d50fcd7\nRelease 19.4.2 2e2cf66\n\nv19.4.1\n\n21 January 2025\n\n\nchore: deps c3062ed\nRelease 19.4.1 e96ef56\nchore: mise 7b8cdeb\n\nv19.4.0\n\n17 January 2025\n\n\nchore: deps 37fa04d\nRelease 19.4.0 155e1fd\nchore: readme, mise, deps 726da93\n\nv19.3.0\n\n14 January 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.1 #483\nchore: update to latest node-vibrant f306ca1\nRelease 19.3.0 ca87d69\n\nv19.2.10\n\n11 January 2025\n\n\nchore: deps a280f97\nRelease 19.2.10 15dded8\n\nv19.2.9\n\n3 January 2025\n\n\nRelease 19.2.9 bd67275\n\nv19.2.8\n\n14 December 2024\n\n\nRelease 19.2.8 af0ef42\n\nv19.2.7\n\n14 December 2024\n\n\nRelease 19.2.7 7d9d809\n\nv19.2.6\n\n11 December 2024\n\n\nchore: deps c042ae8\nchore: updated config to latest nx defaults 0a9aedc\nchore: updated config to latest nx defaults a555517\n\nv19.2.5\n\n7 December 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.28.0 #473\nRevert \"fix: disable npm caching\" f908dd2\nfix: disable npm caching 1a33b93\nRelease 19.2.5 4a42a18\n\nv19.2.4\n\n7 December 2024\n\n\nchore: deps 1a65661\nRelease 19.2.4 a19a09f\n\nv19.2.3\n\n21 November 2024\n\n\nRelease 19.2.3 dc45fe1\nfeat: migrate to application executor 0325a08\n\nv19.2.2\n\n21 November 2024\n\n\nfix: stylelint fixes 2500235\nRelease 19.2.2 b416bff\n\nv19.2.1\n\n21 November 2024\n\n\nRelease 19.2.1 8cab1e2\nfix: migrate jest and eslint to inferred plugins ee8b31b\n\nv19.2.0\n\n21 November 2024\n\n\nchore: input signal migration f8cbc65\nRelease 19.2.0 c363f4e\nfix: pass sampleRate 56a3899\n\nv19.1.1\n\n21 November 2024\n\n\nchore(deps): update angular monorepo to v19 #466\nchore(deps): update w9jds/firebase-action action to v13.26.0 #465\nchore(deps): update angularmaterial monorepo to v19 #467\nchore(config): migrate config renovate.json #468\nchore: use ng-packgr-lite builds, fix jest-preset-angular config b599685\nfix: revert ng-packgr temporarily bb34f11\nRelease 19.1.1 ada6807\n\nv19.1.0\n\n21 November 2024\n\n\nchore: ng 19 0ba1f5d\nRelease 19.1.0 d2765b8\nchore: remove console time 7b38580\n\nv19.0.10\n\n9 November 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.24.2 #460\nfix(deps): update dependency tslib to v2.8.1 #457\nRelease 19.0.10 1333d05\n\nv19.0.9\n\n9 November 2024\n\n\nchore: updates e42b61f\nRelease 19.0.9 fc998b4\n\nv19.0.8\n\n15 October 2024\n\n\nRelease 19.0.8 e4b565b\nfix: do webpack build again 10bf971\n\nv19.0.7\n\n15 October 2024\n\n\nRelease 19.0.7 308bd9f\nfix: use browser-esbuild executor fe4ebfa\n\nv19.0.6\n\n15 October 2024\n\n\nRelease 19.0.6 953bf76\nfix: use browser-esbuild executor a12f9c3\n\nv19.0.5\n\n15 October 2024\n\n\nfix(deps): update dependency tslib to v2.7.0 #450\nchore(deps): update dependency ubuntu to v24 #455\nchore(deps): update w9jds/firebase-action action to v13.22.0 #448\nRelease 19.0.5 592ac3b\n\nv19.0.4\n\n15 October 2024\n\n\nRelease 19.0.4 27acba5\nchore: eslint update (config todo) 97ccbb6\n\nv19.0.3\n\n15 October 2024\n\n\nchore: migrate to inject() 43a40a4\nfix: removed unused angular imports a0e7ce7\nRelease 19.0.3 972b1ee\n\nv19.0.2\n\n15 October 2024\n\n\nRelease 19.0.2 b8ad144\n\nv19.0.1\n\n15 October 2024\n\n\nRelease 19.0.1 7528cd4\n\nv19.0.0\n\n15 October 2024\n\n\nRelease 19.0.0 2bb5430\n\nv18.2.7\n\n15 October 2024\n\n\nchore(deps): updates ad57b9c\nRelease 18.2.7 8448134\nchange to application executor e2e1eb4\n\nv18.2.6\n\n26 August 2024\n\n\ndeps 0174ddf\nRelease 18.2.6 f0ae911\n\nv18.2.5\n\n15 August 2024\n\n\nsignals for coverdisplay, add item to playlist on by one d489b64\nRelease 18.2.5 4a66bde\n\nv18.2.4\n\n15 August 2024\n\n\nRelease 18.2.4 bbda480\nfix: big layout 8d61f2e\n\nv18.2.3\n\n15 August 2024\n\n\nchore: nx update ec1f94a\nRelease 18.2.3 72fa061\n\nv18.2.2\n\n15 August 2024\n\n\nanalyze and report esbuild bundles d597302\nRelease 18.2.2 681d4cd\nanalyze and report esbuild bundles 8626722\n\nv18.2.0\n\n15 August 2024\n\n\nfix test css class, select first in playlist after load when none selected 7a838a9\nRelease 18.2.0 38d27f1\n\nv18.1.1\n\n15 August 2024\n\n\nfeat: better axis handling for gamepad 4d47689\nmore signalös 019de24\nRelease 18.1.1 0f8e394\n\nv18.1.0\n\n15 August 2024\n\n\nRelease 18.1.0 ff778a5\nfeat: removed mobx, use signals for many things 5824006\n\nv18.0.1\n\n15 August 2024\n\n\nchore(deps): update, import types with import type e252172\nchore(deps): update e7aa58d\nRelease 18.0.1 7560dfa\n\nv18.0.0\n\n10 August 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.15.1 #438\nRelease 18.0.0 0858a77\nfix(eslint): older unused imports plugin cdb5380\n\nv17.0.18\n\n10 August 2024\n\n\nchore(deps): update 6878f22\nRelease 17.0.17 027ad79\nRelease 17.0.18 6756668\n\nv17.0.17\n\n10 August 2024\n\n\nUpdate w9jds/firebase-action action to v13.14.2 #431\nchore(deps): update 592cb7a\nRelease 17.0.17 2db5dc7\n\nv17.0.16\n\n29 July 2024\n\n\nmusic-metadata 10 7f90220\nRelease 17.0.16 80d5e14\nremoved webpack 908f395\n\nv17.0.15\n\n29 July 2024\n\n\ndeps ffe5da9\ndeps 469a890\nRelease 17.0.15 80553e8\n\nv17.0.14\n\n11 July 2024\n\n\ndeps 389407a\nRelease 17.0.14 30fec73\n\nv17.0.13\n\n7 July 2024\n\n\nUpdate dependency @typescript-eslint/utils to v8.0.0-alpha.40 #369\nUpdate w9jds/firebase-action action to v13.13.0 #423\ndeps 2389739\nRelease 17.0.13 4040b59\ndeps a0c15a4\n\nv17.0.12\n\n4 July 2024\n\n\ndeps 892689d\nRelease 17.0.12 af8a6b4\n\nv17.0.11\n\n23 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.4 #419\ndeps babdb9f\nRelease 17.0.11 5273759\n\nv17.0.10\n\n23 June 2024\n\n\ndeps 05a441e\nRelease 17.0.10 3e7b9a4\n\nv17.0.9\n\n12 June 2024\n\n\nRelease 17.0.9 a948ad5\ndeps, webstorage update 0e6195d\n\nv17.0.8\n\n12 June 2024\n\n\ndeps, webstorage update 1e660c9\nRelease 17.0.8 64a34dc\n\nv17.0.7\n\n9 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.2 #409\nUpdate dependency tslib to v2.6.3 #411\nRelease 17.0.7 2bb0e78\n\nv17.0.6\n\n9 June 2024\n\n\nnx + deps a1da736\nRelease 17.0.6 41e632f\n\nv17.0.5\n\n25 May 2024\n\n\nUpdate angularmaterial monorepo to v18 #402\nRelease 17.0.4 549bfa1\nRelease 17.0.5 ea932ef\n\nv17.0.4\n\n25 May 2024\n\n\nUpdate angular monorepo to v18 #401\nUpdate w9jds/firebase-action action to v13.10.1 #395\nRelease 17.0.4 f591692\nswitched to node 22 4f70846\n\nv17.0.3\n\n25 May 2024\n\n\nRelease 17.0.3 cb19d50\nenabled eventCoalescing e6fc6eb\n\nv17.0.2\n\n25 May 2024\n\n\nRelease 17.0.2 96bcdfc\nfixed theme 3ce805f\n\nv17.0.1\n\n25 May 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.5 #390\nng 18 7fcd244\nfixed eslint 2346f13\nnx update 4164d59\n\nv16.0.6\n\n28 April 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.2 #381\ndeps 308b3e5\nRelease 16.0.6 3233ed1\naudit fix 2f67e34\n\nv16.0.5\n\n14 April 2024\n\n\ndeps 84ac04c\nRelease 16.0.5 1a30a33\n\nv16.0.4\n\n7 April 2024\n\n\nRelease 16.0.4 5bab2a7\n\nv16.0.3\n\n16 March 2024\n\n\nRelease 16.0.3 0338bd7\nnew browserlist 013e987\nonly include Buffer in Node Polfills d7b3ea2\n\nv16.0.2\n\n16 March 2024\n\n\nRelease 16.0.2 0629b20\nfixed nx cloud token 870e50b\n\nv16.0.1\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.5.1 #372\nRelease 16.0.1 fe15d24\nfixed nx cloud token 6d2a8fe\n\nv16.0.0\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.3.1 #368\ndeps updated 11ae344\nnx update 0b2a071\nangular update c35bc38\n\nv15.1.17\n\n24 February 2024\n\n\nRelease 15.1.17 f18fa1f\n\nv15.1.16\n\n24 February 2024\n\n\nRelease 15.1.16 d2e1df8\n\nv15.1.14\n\n10 February 2024\n\n\nUpdate nrwl/nx-set-shas action to v4 #362\nUpdate w9jds/firebase-action action to v13.2.1 #358\nRelease 15.1.14 09eba6b\nRevert \"try nx agents\" 90e9f96\ntry nx agents 7362da7\n\nv15.1.13\n\n10 February 2024\n\n\ndeps cace929\nRelease 15.1.13 04dca08\nremoved last modules 0486e25\n\nv15.1.12\n\n4 February 2024\n\n\nnx update ccbf388\nRelease 15.1.12 7a8645a\n\nv15.1.11\n\n28 January 2024\n\n\nUpdate w9jds/firebase-action action to v13.1.0 #338\nUpdate actions/cache action to v4 #343\nRelease 15.1.11 1e340e1\n\nv15.1.10\n\n28 January 2024\n\n\ndeps 64d30e1\nRelease 15.1.10 a9a8e68\n\nv15.1.9\n\n20 January 2024\n\n\nRelease 15.1.9 8596088\n\nv15.1.8\n\n10 January 2024\n\n\nstylelint fixes ac02523\nRelease 15.1.8 4c8c0ad\nlint fixes 764711a\n\nv15.1.7\n\n9 January 2024\n\n\ndeps 362d9db\nRelease 15.1.7 92d89c3\n\nv15.1.6\n\n28 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #312\nRelease 15.1.6 339bd87\n\nv15.1.5\n\n28 December 2023\n\n\ndeps 4ef0700\nRelease 15.1.5 8ee0628\n\nv15.1.4\n\n15 December 2023\n\n\ndeps 998ad7c\nRelease 15.1.4 5c1346d\n\nv15.1.3\n\n10 December 2023\n\n\nRelease 15.1.3 d0b8d34\ndeps 6966d17\nnx update 678aef6\n\nv15.1.2\n\n8 December 2023\n\n\nfix seeking with slider, @switch statt @if 9934470\nRelease 15.1.2 1ebb626\n\nv15.1.1\n\n8 December 2023\n\n\nRelease 15.1.1 586ef29\nfix deploy f36895a\n\nv15.1.0\n\n8 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #310\noptimizations and typing f5c6154\noptimizations 05ddceb\noptimized icon set converter 6bd60c5\n\nv15.0.9\n\n8 December 2023\n\n\ndeps 02d4bfb\ntsconfig refactoring 7445539\nRelease 15.0.9 58fb13b\n\nv15.0.8\n\n30 November 2023\n\n\ntsconfig refactoring 275e54d\nRelease 15.0.8 f3351c2\n\nv15.0.7\n\n30 November 2023\n\n\nUpdate w9jds/firebase-action action to v12.9.0 #301\nRelease 15.0.7 7e45969\n\nv15.0.6\n\n30 November 2023\n\n\nRelease 15.0.6 063950a\ndeps 7522583\n\nv15.0.5\n\n13 November 2023\n\n\ndeps, prettier cbc6e41\nRelease 15.0.5 3bccffb\n\nv15.0.4\n\n10 November 2023\n\n\nRelease 15.0.4 1c4c67e\n\nv15.0.3\n\n10 November 2023\n\n\nRelease 15.0.3 90df676\n\nv15.0.2\n\n10 November 2023\n\n\nRelease 15.0.2 29878bc\neslint flat config 8c297a1\n\nv15.0.1\n\n10 November 2023\n\n\nNEW control flow syntax 84e91e3\nRelease 15.0.1 9dfd762\nstyleUrl instead of urls aefd739\n\nv15.0.0\n\n9 November 2023\n\n\nUpdate angular monorepo to v17 (major) #288\nUpdate angularmaterial monorepo to v17 (major) #289\nUpdate w9jds/firebase-action action to v12.8.0 #286\nUpdate actions/setup-node action to v4 #287\nRelease 15.0.0 7f1e3c1\nUpdate angular monorepo to v17 43d9b1f\nnodejs 20 builds 6f6ac17\n\nv14.1.23\n\n9 November 2023\n\n\nnx update a358906\nRelease 14.1.23 55f3319\nnx update dbc354f\n\nv14.1.20\n\n14 October 2023\n\n\nRelease 14.1.20 8d072f1\n\nv14.1.19\n\n14 October 2023\n\n\nUpdate dependency @types/node to v20.8.6 #242\nUpdate w9jds/firebase-action action to v12.6.2 #272\nRelease 14.1.19 314f02a\nRelease 14.1.18 7cf10f9\n\nv14.1.18\n\n14 October 2023\n\n\nRelease 14.1.18 a8bb04b\n\nv14.1.17\n\n14 October 2023\n\n\nRelease 14.1.17 7a66d5a\n\nv14.1.16\n\n14 October 2023\n\n\nRelease 14.1.16 4ec2e90\n\nv14.1.15\n\n7 October 2023\n\n\nRelease 14.1.15 3f73f6e\n\nv14.1.14\n\n7 October 2023\n\n\nRelease 14.1.14 db2122c\n\nv14.1.13\n\n7 October 2023\n\n\nRelease 14.1.13 a3ae7df\n\nv14.1.12\n\n7 October 2023\n\n\nRelease 14.1.12 0d0dfcb\n\nv14.1.11\n\n7 October 2023\n\n\nRelease 14.1.11 5aecee8\n\nv14.1.10\n\n7 October 2023\n\n\nRelease 14.1.10 d200e57\n\nv14.1.9\n\n23 September 2023\n\n\nRelease 14.1.9 29f1cbe\nupdated from deprecated SwUpdate props bef3e3e\n\nv14.1.8\n\n23 September 2023\n\n\nupdated from deprecated SwUpdate props 2f592f3\nRelease 14.1.8 07d6959\n\nv14.1.7\n\n23 September 2023\n\n\ndeps 1ffd91e\nRelease 14.1.7 6fc1434\n\nv14.1.6\n\n23 September 2023\n\n\nRelease 14.1.6 8b184a4\n\nv14.1.5\n\n21 September 2023\n\n\nRelease 14.1.5 4695772\nfix build fc633d2\n\nv14.1.4\n\n7 September 2023\n\n\nBump protobufjs and google-gax #261\nUpdate dependency tslib to v2.6.2 #262\nUpdate actions/checkout action to v4 #264\nRelease 14.1.4 a6386d2\nfix build b7303ed\n\nv14.1.3\n\n7 September 2023\n\n\nBump word-wrap from 1.2.3 to 1.2.4 #250\nUpdate dependency tslib to v2.6.1 #251\nRelease 14.1.3 9ce5e31\n\nv14.1.2\n\n3 August 2023\n\n\nRelease 14.1.2 8f60273\n\nv14.1.1\n\n7 July 2023\n\n\nUpdate dependency tslib to v2.6.0 #241\nBump @grpc/grpc-js and google-gax #240\nUpdate w9jds/firebase-action action to v12 #235\nRelease 14.1.1 f78467f\nprettier 3ff6d19\n\nv14.1.0\n\n7 July 2023\n\n\nprettier 3 + precommit hooks cd5831f\nRelease 14.1.0 d612735\nprettier 08b1238\n\nv14.0.13\n\n17 June 2023\n\n\nRelease 14.0.13 a10893b\nremoved unused type polyfills af2926f\n\nv14.0.12\n\n17 June 2023\n\n\nRelease 14.0.12 ea688e0\n\nv14.0.11\n\n17 June 2023\n\n\nRelease 14.0.11 32c3f4d\n\nv14.0.10\n\n17 June 2023\n\n\ndeps 8c90a58\nRelease 14.0.10 1d0b823\n\nv14.0.9\n\n8 June 2023\n\n\ndeps fdad632\nRelease 14.0.9 331bb8f\n\nv14.0.8\n\n3 June 2023\n\n\nBump vm2 from 3.9.17 to 3.9.19 #220\nUpdate dependency tslib to v2.5.3 #223\nRelease 14.0.8 8b9fdf5\n\nv14.0.7\n\n3 June 2023\n\n\nuse run-many for tests 97d68d0\nRelease 14.0.7 c82e02b\n\nv14.0.6\n\n3 June 2023\n\n\ndeps 752aa76\nRelease 14.0.6 f038069\n\nv14.0.5\n\n13 May 2023\n\n\ndeps 28cff25\nRelease 14.0.5 20cf16a\n\nv14.0.4\n\n6 May 2023\n\n\nremoved unused js file 5ffbd62\nRelease 14.0.4 7fb56e0\n\nv14.0.3\n\n6 May 2023\n\n\nUpdate dependency jest-preset-angular to v13.1.0 #208\nUpdate dependency @types/node to v18.16.5 #206\nRelease 14.0.3 cdf04e9\ne2e fixed 2708806\n\nv14.0.2\n\n6 May 2023\n\n\nUpdate w9jds/firebase-action action to v11.30.1 #207\ne2e fixed and removed separate project 74e7c83\nRelease 14.0.1 f386a36\nRelease 14.0.2 1081f8e\n\nv14.0.1\n\n6 May 2023\n\n\ne2e fixed and removed separate project d0cd94f\nRelease 14.0.1 bb4e0ce\n\nv14.0.0\n\n6 May 2023\n\n\nnx 16, angular 16, deps 826cbe5\nRelease 14.0.0 ec067ee\nmusic metadata removed 2eb6cae\n\nv13.3.5\n\n13 April 2023\n\n\nBump vm2 #200\nUpdate dependency music-metadata to v7.13.4 #195\nRelease 13.3.5 845189d\n\nv13.3.4\n\n13 April 2023\n\n\nRelease 13.3.4 eab1d35\n\nv13.3.3\n\n10 April 2023\n\n\nRelease 13.3.3 0129566\n\nv13.3.2\n\n25 March 2023\n\n\nRelease 13.3.2 5a92c07\n\nv13.3.1\n\n25 March 2023\n\n\nRelease 13.3.1 42a58d9\n\nv13.3.0\n\n18 March 2023\n\n\nUpdate w9jds/firebase-action action to v11.24.1 #181\ndeps + sidenav fixes e11e3bd\nRelease 13.3.0 3acc7bf\n\nv13.2.6\n\n15 March 2023\n\n\ndeps 0dc096d\nRelease 13.2.6 6d67484\n\nv13.2.5\n\n5 March 2023\n\n\nstandalone bootstrap 6aed158\nRelease 13.2.5 4c272db\n\nv13.2.4\n\n5 March 2023\n\n\nBump http-cache-semantics from 4.1.0 to 4.1.1 #170\nBump cacheable-request from 10.2.5 to 10.2.7 #171\nUpdate dependency tslib to v2.5.0 #164\nRelease 13.2.4 392b41d\ndeps a4b6dab\n\nv13.2.3\n\n5 March 2023\n\n\nRelease 13.2.3 f54702d\n\nv13.2.2\n\n5 March 2023\n\n\nRelease 13.2.2 d9677d0\n\nv13.2.1\n\n22 February 2023\n\n\ndeps 1730f16\nRelease 13.2.1 ba634aa\nuse nx for all 51a51dd\n\nv13.2.0\n\n22 February 2023\n\n\nUpdate w9jds/firebase-action action to v11.22.0 #172\nRelease 13.2.0 4035819\nstandalone migration steps 1 and 2 32e3ad6\nstandalone migration steps 1 and 2 a40c9e8\n\nv13.1.12\n\n22 February 2023\n\n\nRelease 13.1.12 53818e8\n\nv13.1.11\n\n28 January 2023\n\n\ndeps b4d909a\nRelease 13.1.11 d8bf0e7\n\nv13.1.10\n\n22 January 2023\n\n\nRelease 13.1.10 1c7fa4e\n\nv13.1.9\n\n20 January 2023\n\n\ndeps 4781958\nRelease 13.1.9 505e77f\n\nv13.1.8\n\n15 January 2023\n\n\nRelease 13.1.8 580c58d\n\nv13.1.7\n\n15 January 2023\n\n\nUpdate dependency music-metadata to v7.13.3 #150\ndeps 8b6bfeb\nRelease 13.1.7 d516e97\n\nv13.1.6\n\n13 January 2023\n\n\nRelease 13.1.6 166c79d\ndeps 8ec046f\n\nv13.1.5\n\n7 January 2023\n\n\nlayout fixes f3f4ae7\nRelease 13.1.5 eaa27a6\n\nv13.1.4\n\n7 January 2023\n\n\nRelease 13.1.4 49d8293\nfixed e2e 33d73d9\n\nv13.1.3\n\n7 January 2023\n\n\nUpdate dependency firebase-tools to v11.20.0 #147\nUpdate dependency postcss to v8.4.21 #146\nUpdate dependency eslint-config-prettier to v8.6.0 #139\nUpdate angularmaterial monorepo to v15.0.4 #144\nUpdate dependency husky to v8.0.3 #140\nUpdate w9jds/firebase-action action to v11.18.0 #131\nUpdate dependency cypress to v12.3.0 #141\nUpdate nrwl monorepo to v15.4.4 #135\nUpdate dependency eslint to v8.31.0 #138\nUpdate typescript-eslint monorepo to v5.48.0 #58\nUpdate dependency music-metadata to v7.13.1 #142\nRelease 13.1.3 5302fb4\ndeps 801cd46\nmdc migration, vertical sliders, icons size directive removed ffa9bb5\n\nv13.1.2\n\n30 December 2022\n\n\nRelease 13.1.2 c339811\n\nv13.1.1\n\n23 December 2022\n\n\nvisualizers plug their own analyser cea2824\nunsubscribe and disconnect analysers 6a8d3be\nRelease 13.1.1 72575f6\n\nv13.1.0\n\n23 December 2022\n\n\nRelease 13.1.0 1989419\nrenamed song to track, us playState obeservable for better input and CD handling 47b6776\n\nv13.0.20\n\n23 December 2022\n\n\ntransparency control for visuals 7445cc4\nRelease 13.0.20 62cfee7\n\nv13.0.19\n\n23 December 2022\n\n\nstandalone components 620afb8\nno max db slider, mindb range changed, better default f7913c1\nRelease 13.0.19 9280e3a\n\nv13.0.18\n\n22 December 2022\n\n\nRelease 13.0.18 4c16c1e\n\nv13.0.16\n\n22 December 2022\n\n\nRelease 13.0.16 77707fb\n\nv13.0.13\n\n22 December 2022\n\n\nRelease 13.0.13 6f12a37\n\nv13.0.12\n\n19 December 2022\n\n\nremoved d3, use bark scale for bar spectrogram 2bcfefb\nRelease 13.0.12 e336db1\n\nv13.0.11\n\n18 December 2022\n\n\nmerged readme 3f449ec\nRelease 13.0.11 47e3527\nbadges 5f1d097\n\nv13.0.10\n\n17 December 2022\n\n\nRelease 13.0.10 62c64c5\nmoved style to component 006b52c\ntodo 28548eb\n\nv13.0.9\n\n17 December 2022\n\n\nfixed audioContext resume, added gain to eq cb797bc\nRelease 13.0.9 8c56320\n\nv13.0.8\n\n17 December 2022\n\n\nRelease 13.0.8 6f1cdb4\n\nv13.0.7\n\n17 December 2022\n\n\nRelease 13.0.7 d895f0f\n\nv13.0.6\n\n17 December 2022\n\n\nRelease 13.0.6 17266a3\n\nv13.0.5\n\n17 December 2022\n\n\nUpdate angularmaterial monorepo to v15 (major) #108\nRelease 13.0.5 ddab2f3\nremoved uneeded ts-ignores a1a074f\nUpdate angularmaterial monorepo to v15 a4de6d4\n\nv13.0.3\n\n17 December 2022\n\n\nRelease 13.0.3 7f8ad27\nuse config file without .json endings bfd4685\n\nv13.0.2\n\n17 December 2022\n\n\nrefactored type imports and fixed offscreencanvas types 067bbea\nRelease 13.0.2 292ed5a\ncustom typings moved to folders c3208e7\n\nv13.0.1\n\n17 December 2022\n\n\nRelease 13.0.1 667c54e\nfixed debug version bf7b3a9\nfixed debug version 6cee32d\n\nv13.0.0\n\n16 December 2022\n\n\nRelease 13.0.0 b3905a0\nfixed playlist bulk loading 834f706\n\nv12.0.16\n\n16 December 2022\n\n\nRelease 12.0.16 1de2a3c\nfixed playlist bulk loading 8e7ecec\n\nv12.0.15\n\n16 December 2022\n\n\nRelease 12.0.15 5a7054c\nfixed test 9eb089c\n\nv12.0.14\n\n16 December 2022\n\n\nabstacted all audio stuff in audio service 403737f\neq auf mobile funkt auf mobile, flex layout refactoring eccaa4a\nreplaced angular-flex-layout with css 03a0491\n\nv12.0.13\n\n15 December 2022\n\n\nmaterial 15 migration dc55360\nRelease 12.0.13 37f76dc\nsimpler lib 86be7eb\n\nv12.0.12\n\n15 December 2022\n\n\nlibrary ohne filter 8dfc611\nRelease 12.0.12 6d26668\n\nv12.0.11\n\n14 December 2022\n\n\nRelease 12.0.11 635e855\ndeps, eslintrc, vibrant-wasm entfernt 431a9ad\n\nv12.0.10\n\n12 December 2022\n\n\nRelease 12.0.10 f954f07\nappend audioElement to document ce588f9\n\nv12.0.9\n\n12 December 2022\n\n\nseperated audio part into AudioService 0f8326e\nsimplified init of audio 869dddb\nRelease 12.0.9 17a1677\n\nv12.0.8\n\n11 December 2022\n\n\nfixed smaller things, no prdefinded samplerate 986dd30\nRelease 12.0.8 6b9ff38\ntodo 2bdc500\n\nv12.0.7\n\n11 December 2022\n\n\nRelease 12.0.7 a0aa269\nmoved init of seekto handler to constructor 2434ec6\n\nv12.0.6\n\n11 December 2022\n\n\nRelease 12.0.6 14768e6\n\nv12.0.5\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 8738efc\nRelease 12.0.4 fee5161\nRelease 12.0.5 23061dd\n\nv12.0.4\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 81bb449\nRelease 12.0.4 025a430\nUpdate TODO.md 009b48d\n\nv12.0.3\n\n11 December 2022\n\n\nRelease 12.0.3 c398655\n\nv12.0.2\n\n11 December 2022\n\n\nRelease 12.0.2 2bfabd0\n\nv12.0.1\n\n11 December 2022\n\n\nmoved id3tags extraction to worker 9b11a20\nRelease 12.0.1 6c27523\nUpdate devcontainer.json b286be9\n\nv12.0.0\n\n10 December 2022\n\n\nRelease 12.0.0 6ee2324\nadded deps vibrant-wasm and custom webpack config to ttry threads.js 8337321\ncustom webpack config for threads.js workers (still not working, disabled) 55e56b8\n\nv11.5.14\n\n7 December 2022\n\n\nstylelint fixes and config 52d642b\nRelease 11.5.14 b5dfb18\n\nv11.5.13\n\n7 December 2022\n\n\nRelease 11.5.13 a867afe\nstylelint fixes and config 122856c\n\nv11.5.12\n\n7 December 2022\n\n\nRelease 11.5.12 c4668f1\nmusic meatadata, file-drop-overlay as standalone component 2e5b003\nprovide all services in root ca80a43\n\nv11.5.11\n\n7 December 2022\n\n\nRelease 11.5.11 930dc28\n\nv11.5.10\n\n7 December 2022\n\n\ndeps a552ea9\nRelease 11.5.10 d29b113\n\nv11.5.9\n\n6 December 2022\n\n\nRelease 11.5.9 18a45bd\ntags + eslint rule 864d7e1\n\nv11.5.8\n\n6 December 2022\n\n\ndep graph in gh pages, release-it config erweitert um neu generierte dateien mit zu committen 73bd100\nlibs cleanup 59f4ac4\nRelease 11.5.8 24e4c9a\n\nv11.5.7\n\n6 December 2022\n\n\nlibs cleanup 60dbedc\nRelease 11.5.7 2d68f3b\n\nv11.5.6\n\n6 December 2022\n\n\nremoved all dummy tests 7defe9b\nRelease 11.5.6 d1b4f51\nrun tests in github actions 14148e0\n\nv11.5.5\n\n6 December 2022\n\n\nRelease 11.5.5 73b9b59\n\nv11.5.4\n\n6 December 2022\n\n\ncompodoc reenabled 7c00473\nsvgo updated 19bf065\nRelease 11.5.4 8df3910\n\nv11.5.3\n\n6 December 2022\n\n\ncompodoc reenabled 540fdd8\nRelease 11.5.3 7c5bbe5\n\nv11.5.2\n\n5 December 2022\n\n\ncompodoc reenabled 2ce3664\ncompodoc reenabled b7be438\ncompodoc reenabled 29f2b37\n\nv11.5.1\n\n5 December 2022\n\n\nautofix unused imports, removed tslint 71bd586\nautofix unused imports 6d6f310\nRelease 11.5.1 77091b9\n\nv11.5.0\n\n5 December 2022\n\n\nbetter thum quality, bigger coverart in playlist, tooltips, better button color handling bffc736\nRelease 11.5.0 670b3af\n\nv11.4.11\n\n5 December 2022\n\n\nRelease 11.4.11 e615145\n\nv11.4.10\n\n5 December 2022\n\n\nreinstall 418b524\nRelease 11.4.10 eaf46cf\n\nv11.4.9\n\n5 December 2022\n\n\nRelease 11.4.9 3e58c71\n\nv11.4.8\n\n5 December 2022\n\n\nRelease 11.4.8 a409033\nservices in app integriert 1857720\n\nv11.4.7\n\n5 December 2022\n\n\nremoved storybook 9d81efd\nservices in app integriert ce621ee\nmoved visuals lib to app e992cb4\n\nv11.4.6\n\n5 December 2022\n\n\nRelease 11.4.6 f9c93ce\n\nv11.4.5\n\n5 December 2022\n\n\nRelease 11.4.5 839a546\n\nv11.4.3\n\n5 December 2022\n\n\nRelease 11.4.3 50b7005\n\nv11.4.2\n\n5 December 2022\n\n\nRelease 11.4.2 0674adf\n\nv11.4.1\n\n5 December 2022\n\n\nRelease 11.4.1 7ccbc95\n\nv11.4.0\n\n5 December 2022\n\n\nrefactored libs to app, fixed time slider 133059f\nRelease 11.4.0 68d9939\n\nv11.3.1\n\n4 December 2022\n\n\nRelease 11.3.1 7493e98\nprevent lib crossing 3fbfb97\n\nv11.3.0\n\n4 December 2022\n\n\nRelease 11.3.0 ecf45e6\nbetter color usage 965f5d8\nbetter color usage f209ddb\n\nv11.2.0\n\n4 December 2022\n\n\ndeps, better default colors 569161e\nRelease 11.2.0 efc9aad\n\nv11.1.2\n\n4 December 2022\n\n\nRelease 11.1.2 8d47dd4\nfixed visualizer color updating too late e99d4f2\n\nv11.1.1\n\n4 December 2022\n\n\nRelease 11.1.1 287138c\n\nv11.1.0\n\n4 December 2022\n\n\noptimized musicbrainz requests, fixed embedded cover handling 7bebf2d\nRelease 11.1.0 707a0cb\n\nv11.0.0\n\n4 December 2022\n\n\nfixed several metadata related problems, setting for use of embedded tag covers 1745489\nRelease 11.0.0 6c219df\ntodo chromaprint-wasm 2c0f612\n\nv10.3.2\n\n1 December 2022\n\n\nRelease 10.3.2 6fdfa5a\n\nv10.3.1\n\n1 December 2022\n\n\nRelease 10.3.1 05b4ddd\nupdated firebase hosting config and actions for deployment f201082\nupdated firebase hosting config and actions for deployment 0c91659\n\nv10.3.0\n\n1 December 2022\n\n\nRelease 10.3.0 50dbff9\nupdated firebase hosting config and actions for deployment 1455d32\n\nv10.2.0\n\n30 November 2022\n\n\nRelease 10.2.0 7593825\nupdated firebase hosting config and actions for deployment b80e2ea\n\nv10.1.0\n\n30 November 2022\n\n\nupdated firebase hosting config and actions for deployment 02bde5d\nRelease 10.1.0 ffc8723\nupdated github actions 86bda79\n\nv10.0.4\n\n30 November 2022\n\n\ncypress migration to 11 16d8b1b\nRelease 10.0.4 6bf609d\nupdate nodejs to 18 for github actions 16925cf\n\nv10.0.3\n\n30 November 2022\n\n\ngot rid of variables.scss ad7e0f1\nRelease 10.0.3 63f69d0\n\nv10.0.2\n\n30 November 2022\n\n\nRelease 10.0.2 2a99961\n\nv10.0.1\n\n30 November 2022\n\n\nRelease 10.0.1 a9a9c0b\n\nv10.0.0\n\n30 November 2022\n\n\nng15 521e049\nng 15 cleanup, mobx update 0f6c72b\nmaterial 14 1e96bc3\n\nv9.2.4\n\n19 March 2022\n\n\nupdated deps eaeb47a\nRelease 9.2.4 61721ca\njb env 4bdbceb\n\nv9.2.3\n\n19 December 2021\n\n\nupdates 5061051\nRelease 9.2.3 a7f82ab\n\nv9.2.2\n\n9 December 2021\n\n\nupdates 2427749\nRelease 9.2.2 934d323\n\nv9.2.1\n\n20 November 2021\n\n\nRelease 9.2.1 60d5b05\n\nv9.2.0\n\n20 November 2021\n\n\nUpdate dependency @angular/cdk to v12.2.13 #21\nPin dependencies #20\nUpdate dependency ng-packagr to v12.2.5 #17\nUpdate dependency @angular/material to v12.2.13 #15\nUpdate angular monorepo to v12.2.13 #13\nConfigure Renovate #11\nnx 13.2 02e548c\nRelease 9.2.0 22ec300\nmain branch 63600c3\n\nv9.1.3\n\n16 November 2021\n\n\nnx update, nx-stylelint, nx-compodoc f06b116\nRelease 9.1.3 de5bda9\n\nv9.1.2\n\n20 October 2021\n\n\nupdates 8268a8b\nRelease 9.1.2 ab89f63\ntodos e486f52\n\nv9.1.1\n\n4 October 2021\n\n\nprevent duplicates in playlist, drag handle on avatar b6729e6\nRelease 9.1.1 eff95d0\n\nv9.1.0\n\n4 October 2021\n\n\nfile handling api with origin trial d3bca3a\nRelease 9.1.0 6cab435\n\nv9.0.11\n\n2 October 2021\n\n\nupdates 397399b\nRelease 9.0.11 96dbdf6\n\nv9.0.10\n\n5 September 2021\n\n\nRelease 9.0.10 112db1a\n\nv9.0.9\n\n5 September 2021\n\n\nRelease 9.0.9 9458a12\n\nv9.0.8\n\n19 August 2021\n\n\nRelease 9.0.8 cd620b6\n\nv9.0.7\n\n19 August 2021\n\n\nRelease 9.0.7 600f7e6\n\nv9.0.6\n\n19 August 2021\n\n\nRelease 9.0.6 c08196a\ndeps 6b5e613\n\nv9.0.5\n\n19 August 2021\n\n\nRelease 9.0.5 c51af5f\n\nv9.0.4\n\n19 August 2021\n\n\ndeps 43463ab\nRelease 9.0.4 cf00688\n\nv9.0.3\n\n24 July 2021\n\n\ndeps, nx-cloud ada5e83\nRelease 9.0.3 bb4a1a8\n\nv9.0.2\n\n24 July 2021\n\n\ndeps, nx-cloud 5cbeb5b\nRelease 9.0.2 49a76e8\n\nv9.0.1\n\n24 July 2021\n\n\ndeps b99bf0c\nRelease 9.0.1 cbab637\n\nv9.0.0\n\n9 July 2021\n\n\nfixed release-it 8d3ed72\nRelease 9.0.0 5467c6f\n\nv8.1.10\n\n9 July 2021\n\n\nRelease 8.1.10 be90110\n\nv8.1.9\n\n9 July 2021\n\n\nfixed release-it a90639a\nRelease 8.1.9 6d52ad4\n\nv8.1.8\n\n9 July 2021\n\n\nts 4.4, media session types intergrated in ts, deps fd45c70\nRelease 8.1.8 ff7cdad\n\nv8.1.7\n\n8 July 2021\n\n\nRelease 8.1.7 0bde446\n\nv8.1.6\n\n8 July 2021\n\n\ndeps 128a3c3\nRelease 8.1.6 d64a3c3\n\nv8.1.5\n\n2 July 2021\n\n\nRelease 8.1.5 ef22e4a\nlayout fixed dbb788d\n\nv8.1.4\n\n2 July 2021\n\n\nrefactored scss to @use, fixed build 6b0ec83\nRelease 8.1.4 ebab8da\n\nv8.1.3\n\n2 July 2021\n\n\nRelease 8.1.3 0843a41\n\nv8.1.2\n\n2 July 2021\n\n\nfixed types 07de52a\nRelease 8.1.2 00b47ed\n\nv8.1.1\n\n2 July 2021\n\n\nmigrated to eslint and per project config 4feefcd\nRelease 8.1.1 7762874\n\nv8.1.0\n\n26 June 2021\n\n\nupdates e2a0794\nRelease 8.1.0 86a18bb\n\nv8.0.1\n\n26 May 2021\n\n\nRelease 8.0.1 52bf10d\n\nv8.0.0\n\n26 May 2021\n\n\nRelease 7.1.1 c78b2bf\nRelease 8.0.0 2f0d555\n\nv7.2.0\n\n26 May 2021\n\n\nRelease 7.2.0 73ed2ca\nupdates 774ffed\n\nv7.1.1\n\n26 May 2021\n\n\nupdates 2a427ed\nRelease 7.1.1 b73ce66\n\nv7.1.0\n\n9 May 2021\n\n\n30fps visualizer, sortable playlist cd2a934\nRelease 7.1.0 8377116\n\nv7.0.6\n\n9 May 2021\n\n\nRelease 7.0.6 84a2466\nbitrate rounding cbef1c8\n\nv7.0.5\n\n9 May 2021\n\n\nRelease 7.0.5 9c56a21\n\nv7.0.4\n\n9 May 2021\n\n\nbetter title display 51154fe\nRelease 7.0.4 72dafd7\n\nv7.0.3\n\n9 May 2021\n\n\ndeps e36192c\nRelease 7.0.3 7553170\ntodos 51e219a\n\nv7.0.2\n\n9 May 2021\n\n\nfixed navigation 9767ad0\nRelease 7.0.2 59f1df2\n\nv7.0.1\n\n9 May 2021\n\n\nmetadata settings and ui cleanup 3797092\nRelease 6.7.3 6841a21\nRelease 7.0.0 0d76c85\n\nv7.0.0\n\n9 May 2021\n\n\nmetadata settings and ui cleanup b2b5088\nRelease 7.0.0 8c47814\n\nv6.7.4\n\n7 May 2021\n\n\nRelease 6.7.4 2ab7cc1\ncypress studio activated 4eac2a7\ncypress studio activated 6bc0773\n\nv6.7.3\n\n7 May 2021\n\n\nRelease 6.7.3 6841a21\nignore iml e5de213\n\nv6.7.2\n\n5 May 2021\n\n\ngithub actions with node_modules cache 4f91524\nRelease 6.7.2 07ec810\n\nv6.7.1\n\n5 May 2021\n\n\ncypress updated and window.showOpenFilePicker overwritten 32570e0\nRelease 6.7.1 fd18536\n\nv6.7.0\n\n4 May 2021\n\n\ndev deps dc41223\nRelease 6.7.0 f34b7cf\n\nv6.6.7\n\n25 April 2021\n\n\nfixed cypress tests and mobx 00399df\nRelease 6.6.7 bd0ddc3\n\nv6.6.6\n\n25 April 2021\n\n\nRelease 6.6.6 d690072\n\nv6.6.5\n\n25 April 2021\n\n\nRelease 6.6.5 ea63800\n\nv6.6.4\n\n25 April 2021\n\n\ndeps and husky updated 120476b\nRelease 6.6.4 20110c3\n\nv6.6.3\n\n20 April 2021\n\n\nRelease 6.6.3 ee83304\nreadme badges 09ae300\n\nv6.6.2\n\n15 April 2021\n\n\nRelease 6.6.2 e933c61\n\nv6.6.1\n\n15 April 2021\n\n\nRelease 6.6.1 221781e\n\nv6.6.0\n\n14 April 2021\n\n\nRelease 6.6.0 d254989\n\nv6.5.9\n\n11 March 2021\n\n\ndependencies 2119d47\nRelease 6.5.9 c64cd79\n\nv6.5.8\n\n4 March 2021\n\n\nRelease 6.5.8 f401a49\n\nv6.5.7\n\n4 March 2021\n\n\nRelease 6.5.7 49b1735\n\nv6.5.6\n\n4 February 2021\n\n\nRelease 6.5.6 045b043\n\nv6.5.5\n\n1 February 2021\n\n\nRelease 6.5.5 f4324a4\n\nv6.5.4\n\n29 January 2021\n\n\nfixed test 0038838\nRelease 6.5.4 8c75c5f\n\nv6.5.3\n\n28 January 2021\n\n\nRelease 6.5.3 13bf8e2\n\nv6.5.2\n\n21 January 2021\n\n\nRelease 6.5.2 1c876b6\nfixed build d2f46f8\n\nv6.5.1\n\n21 January 2021\n\n\nupdates 120f02a\nRelease 6.5.1 46c60ce\n\nv6.5.0\n\n14 January 2021\n\n\nRelease 6.5.0 e4ec6c1\n\nv6.4.1\n\n14 January 2021\n\n\nchangelog d629a20\nRelease 6.4.1 3d1f63c\n\nv6.4.0\n\n14 January 2021\n\n\nremoved token 51304c2\nRelease 6.4.0 756dc90\n\nv6.3.1\n\n14 January 2021\n\n\nRelease 6.3.1 e727ac0\n\nv6.3.0\n\n14 January 2021\n\n\nrelease-it 5321e86\nRelease 6.3.0 db48fe2\n\nv6.2.6\n\n14 January 2021\n\n\nrelease v6.2.6 ae202ad\n\nv6.2.5\n\n14 January 2021\n\n\nrelease v6.2.5 c20efb2\n\nv6.2.4\n\n14 January 2021\n\n\nci cd 8da74bb\nrelease v6.2.4 f12cad8\n\nv6.2.3\n\n12 January 2021\n\n\nrelease v6.2.3 78fcf7a\n\nv6.2.2\n\n20 December 2020\n\n\nnrwl 11 b2ed530\nrelease v6.2.2 73050ff\n\nv6.2.1\n\n15 December 2020\n\n\nnrwl 11 f1f709b\nrelease v6.2.1 5101ea6\nnrwl 11 8a371a0\n\nv6.2.0\n\n12 December 2020\n\n\nrelease v6.2.0 ef650c5\n\nv6.1.1\n\n8 December 2020\n\n\nrelease v6.1.1 e6660e2\n\nv6.1.0\n\n3 December 2020\n\n\nrelease v6.1.0 f8b7451\n\nv6.0.1\n\n21 November 2020\n\n\nrelease v6.0.1 c0d5ae4\n\nv6.0.0\n\n21 November 2020\n\n\nng11 0960760\nprettier ab98677\nrelease v6.0.0 79d861d\n\nv5.2.12\n\n28 October 2020\n\n\nrelease v5.2.12 40cc765\n\nv5.2.11\n\n28 October 2020\n\n\nrelease v5.2.11 c0c9413\n\nv5.2.10\n\n28 October 2020\n\n\nrelease v5.2.10 f4928f5\n\nv5.2.9\n\n28 October 2020\n\n\nrelease v5.2.9 04b4812\n\nv5.2.8\n\n28 October 2020\n\n\nrelease v5.2.8 4c8f851\n\nv5.2.7\n\n28 October 2020\n\n\nrelease v5.2.7 b65204b\n\nv5.2.6\n\n28 October 2020\n\n\nrelease v5.2.6 f24dcc7\n\nv5.2.5\n\n28 October 2020\n\n\nrelease v5.2.5 6c6f88c\nprettier b20fd36\n\nv5.2.4\n\n28 October 2020\n\n\nMediaSession service 5742e12\nrelease v5.2.4 5059439\n\nv5.2.3\n\n27 October 2020\n\n\nrelease v5.2.3 d4abfdc\n\nv5.2.2\n\n27 October 2020\n\n\nrelease v5.2.2 478c88a\n\nv5.2.1\n\n26 October 2020\n\n\nrelease v5.2.1 e218808\n\nv5.2.0\n\n23 October 2020\n\n\nrelease v5.2.0 62f7474\nreload button be57fa9\n\nv5.1.0\n\n23 October 2020\n\n\nsimplified dir handle save, fixed test f278040\nrelease v5.1.0 9767a1a\n\nv5.0.0\n\n23 October 2020\n\n\nsave latest directory handle to indexeddb 597ee4f\nrelease v5.0.0 5a61397\n\nv4.7.0\n\n23 October 2020\n\n\nrelease v4.7.0 c86decf\n\nv4.6.0\n\n23 October 2020\n\n\ntypes added for mediasession and file-system bfd28ec\nrelease v4.6.0 e4d8e7c\n\nv4.5.0\n\n23 October 2020\n\n\nfix media reporting 220c7f4\nrelease v4.5.0 337a109\n\nv4.4.0\n\n23 October 2020\n\n\nupdates und native file stable changes 939f6b8\nrelease v4.4.0 77c544b\n\nv4.3.1\n\n12 October 2020\n\n\nrelease v4.3.1 3a9067b\n\nv4.3.0\n\n12 October 2020\n\n\nrelease v4.3.0 7def043\nanalyzer report 4a4b1c4\n\nv4.2.0\n\n12 October 2020\n\n\nrelease v4.2.0 866de3e\n\nv4.1.0\n\n6 October 2020\n\n\nrelease v4.1.0 98a793b\n\nv4.0.0\n\n6 October 2020\n\n\nrelease v4.0.0 d38c534\n\nv3.11.0\n\n6 October 2020\n\n\nrelease v3.11.0 2a4184c\n\nv3.10.0\n\n6 October 2020\n\n\nrelease v3.10.0 d562368\n\nv3.9.0\n\n6 October 2020\n\n\ntoggle to disable extraction of color from cover art a84cb97\nrelease v3.9.0 748a302\n\nv3.8.1\n\n6 October 2020\n\n\nrelease v3.8.1 bda90a4\n\nv3.8.0\n\n5 October 2020\n\n\nrelease v3.8.0 c73a2ce\n\nv3.7.0\n\n20 September 2020\n\n\nrelease v3.7.0 61eb69b\n\nv3.6.0\n\n9 September 2020\n\n\nrelease v3.6.0 22da5c7\n\nv3.5.1\n\n2 September 2020\n\n\nrelease v3.5.1 70990de\n\nv3.5.0\n\n2 September 2020\n\n\nrelease v3.5.0 3ccea4c\n\nv3.4.1\n\n30 August 2020\n\n\nrelease v3.4.1 5ed4032\n\nv3.4.0\n\n30 August 2020\n\n\noptimize loading of service worker and caching 5cec62d\nrelease v3.4.0 1385586\n\nv3.3.0\n\n30 August 2020\n\n\noptimize bundles 6cd086c\nrelease v3.3.0 27fdc57\noptimize loading of service worker f1cad4d\n\nv3.2.1\n\n23 August 2020\n\n\nrelease v3.2.1 bb4ded8\nicons compressed c550911\n\nv3.2.0\n\n23 August 2020\n\n\nstart page a7cf166\nrelease v3.2.0 14a5bd3\nlang and description in webmanifest 1e4fd87\n\nv3.1.2\n\n23 August 2020\n\n\nrelease v3.1.2 69ed6f4\n\nv3.1.1\n\n23 August 2020\n\n\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 800fdae\nrelease v3.1.1 7440340\n\nv3.1.0\n\n23 August 2020\n\n\ndeps 3597f8b\nnx 10.1 20050dc\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 0cec276\n\nv3.0.9\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest 8d5f783\nrelease v3.0.9 f3a09c7\n\nv3.0.8\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest b708169\nrelease v3.0.8 7a1bbe5\n\nv3.0.7\n\n21 August 2020\n\n\nrelease v3.0.7 1a92061\n\nv3.0.6\n\n21 August 2020\n\n\nrelease v3.0.6 f31886e\n\nv3.0.5\n\n21 August 2020\n\n\nrelease v3.0.5 e7c9ada\n\nv3.0.4\n\n21 August 2020\n\n\nrelease v3.0.4 20d1b8b\n\nv3.0.3\n\n21 August 2020\n\n\nrelease v3.0.2 ea1fc76\nrelease v3.0.3 f4f50ef\n\nv3.0.2\n\n21 August 2020\n\n\nrelease v3.0.2 bc4e4dc\n\nv3.0.1\n\n21 August 2020\n\n\nrelease v3.0.1 339d07b\n\nv3.0.0\n\n21 August 2020\n\n\nrelease v3.0.0 57f591d\nrelease v2.0.0 6a6ec18\nrelease v1.19.0 d6210df\n\nv2.0.2\n\n21 August 2020\n\n\nrelease v2.0.2 7b491de\n\nv2.0.1\n\n21 August 2020\n\n\nrelease v2.0.1 b820bf4\n\nv2.0.0\n\n21 August 2020\n\n\nreadded polyfills, prefetch, manifest.json, splashscreen e102482\nrelease v2.0.0 c3d7490\n\nv1.18.0\n\n21 August 2020\n\n\nrelease v1.18.0 5aed853\n\nv1.17.0\n\n21 August 2020\n\n\nrelease v1.17.0 901f502\n\nv1.16.0\n\n21 August 2020\n\n\nrelease v1.16.0 5af2ad7\n\nv1.15.0\n\n21 August 2020\n\n\nrelease v1.15.0 abccf03\n\nv1.14.0\n\n21 August 2020\n\n\nrelease v1.14.0 339af30\n\nv1.13.0\n\n21 August 2020\n\n\nrelease v1.13.0 fb05c12\n\nv1.12.0\n\n21 August 2020\n\n\nrelease v1.12.0 67a17ee\n\nv1.11.12\n\n21 August 2020\n\n\nrelease v1.11.12 bba9cb0\n\nv1.11.11\n\n21 August 2020\n\n\nrelease v1.11.11 ba2a28a\n\nv1.11.10\n\n21 August 2020\n\n\nrelease v1.11.10 b7e8f76\n\nv1.11.9\n\n21 August 2020\n\n\nrelease v1.11.9 52afb10\n\nv1.11.8\n\n21 August 2020\n\n\nrelease v1.11.8 e6d7fd2\n\nv1.11.7\n\n21 August 2020\n\n\nrelease v1.11.7 c2c0b8f\n\nv1.11.6\n\n21 August 2020\n\n\nrelease v1.11.6 91d4a54\n\nv1.11.5\n\n21 August 2020\n\n\nrelease v1.11.5 822ff08\n\nv1.11.4\n\n21 August 2020\n\n\nrelease v1.11.4 8c9c5c3\n\nv1.11.3\n\n21 August 2020\n\n\nrelease v1.11.3 8aabc76\n\nv1.11.2\n\n21 August 2020\n\n\nrelease v1.11.2 71e1d6c\n\nv1.11.1\n\n21 August 2020\n\n\nrelease v1.11.1 ed57248\nremove commonjs whitelist entry ad6497d\n\nv1.11.0\n\n19 August 2020\n\n\ndeps and polyfills removed 3e8e5d0\nrelease v1.11.0 289ec3d\ndisable zone for requestAnimationFrame 422fc8e\n\nv1.10.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\nrelease v1.10.0 f9c114e\nrelease v1.9.1 6b2d8b8\n\nv1.9.1\n\n17 August 2020\n\n\nrelease v1.9.0 68e8dc6\nrelease v1.9.1 d5cd7ea\n\nv1.9.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\n\nv1.8.0\n\n17 August 2020\n\n\nrelease v1.8.0 7484f35\nCreate LICENSE f69d368\nRename LICENSE to LICENSE.md 3773370\n\nv1.7.3\n\n30 July 2020\n\n\ndeps a00ccd1\nrelease v1.7.3 47842e1\nnode 14 build f5ee0e6\n\nv1.7.2\n\n24 July 2020\n\n\nrelease v1.7.2 101bbd0\n\nv1.7.1\n\n24 July 2020\n\n\nrelease v1.7.1 28465d6\n\nv1.7.0\n\n24 July 2020\n\n\nrelease v1.7.0 b5f68a1\n\nv1.6.4\n\n24 July 2020\n\n\nrelease v1.6.4 646c494\n\nv1.6.3\n\n24 July 2020\n\n\nrelease v1.6.3 17ed8a6\n\nv1.6.2\n\n18 July 2020\n\n\ndeps 667f875\nRevert \"support for seeking to position on android notification\" f2cfbcc\nrelease v1.6.2 85eb0ba\n\nv1.6.1\n\n10 July 2020\n\n\ndeps 228ee85\nrelease v1.6.1 949055a\n\nv1.6.0\n\n3 July 2020\n\n\nsupport for seeking to position on android notification 9fa1a37\nrelease v1.6.0 4f1794f\n\nv1.5.0\n\n3 July 2020\n\n\ndeps und position reporting to browser 7a6f294\nrelease v1.5.0 f076ced\n\nv1.4.1\n\n26 June 2020\n\n\nangular.json schema und allowedCommonJsDeps 654bac2\nrelease v1.4.1 250d7f9\n\nv1.4.0\n\n26 June 2020\n\n\ndeps fix 4e72fcd\nng 10 update b6bd950\nadded missing decorator 8515368\n\nv1.3.0\n\n4 June 2020\n\n\nnew icons for visualization modes a8073a9\nrelease v1.3.0 b241b46\n\nv1.2.2\n\n28 May 2020\n\n\ndeps 87adc2c\nrelease v1.2.2 abc0b07\n\nv1.2.1\n\n20 May 2020\n\n\ndeps be025cd\nrelease v1.2.1 0b30a9f\n\nv1.2.0\n\n10 May 2020\n\n\nname changes, native file service refactored 170ea47\nrelease v1.2.0 cb01a92\nname changes, native file service refactored 8264f64\n\nv1.1.0\n\n8 May 2020\n\n\nrelease v1.1.0 a2a4811\nopen folders recursive 1c9fedf\n\nv1.0.5\n\n8 May 2020\n\n\nrelease v1.0.5 1604161\n\nv1.0.4\n\n5 May 2020\n\n\nfix: package.json, package-lock.json & .snyk to reduce vulnerabilities #2\nrelease v1.0.4 8e2ff5a\n\nv1.0.3\n\n2 May 2020\n\n\nrelease v1.0.3 8e36da3\n\nv1.0.2\n\n2 May 2020\n\n\nrelease v1.0.2 6926167\n\nv1.0.1\n\n2 May 2020\n\n\nrelease v1.0.1 194199c\n\nv1.0.0\n\n2 May 2020\n\n\nremoved electron, added compodoc 22afab3\nrelease v1.0.0 18cab80\nUpdate README.md 0e060af\n\nv0.29.0\n\n25 April 2020\n\n\nrelease v0.29.0 669facb\n\nv0.28.0\n\n25 April 2020\n\n\ndeps 9d2ef7e\nrelease v0.28.0 eaf70a8\n\nv0.25.0\n\n15 April 2020\n\n\nrelease v0.25.0 0581767\n\nv0.24.0\n\n15 April 2020\n\n\nrelease v0.24.0 a457b9c\ndeps linting formating b04ce8b\nUpdate NOTES.md 0903cd2\n\nv0.23.0\n\n4 April 2020\n\n\nci d954540\nrelease v0.23.0 95902bb\nci 53a8631\n\nv0.22.0\n\n4 April 2020\n\n\nrelease v0.22.0 f0f7618\n\nv0.21.0\n\n31 March 2020\n\n\ndependencies e34b732\nreadme e7032e1\nfile extensions list 53749c8\n\nv0.20.0\n\n30 March 2020\n\n\nrelease v0.20.0 572a9f8\n\nv0.19.0\n\n30 March 2020\n\n\nrelease v0.19.0 72075fe\nscreen wakelock when playing, navigation fixed especially for mobile ae93b7a\norigin trials for native file system and wakelock api a5849e4\n\nv0.18.0\n\n29 March 2020\n\n\nrelease v0.18.0 fefaba0\nprevent browser history 097fe6b\n\nv0.17.0\n\n29 March 2020\n\n\nprevent browser history 80b42ce\nrelease v0.17.0 4e9a327\n\nv0.16.0\n\n29 March 2020\n\n\ndeps f1b02b7\nrelease v0.16.0 5fe0756\n\nv0.15.0\n\n29 March 2020\n\n\ndeps 092dc60\nnx tags 6782ecd\nrelease v0.15.0 0cabcad\n\nv0.14.0\n\n24 March 2020\n\n\nrelease v0.14.0 dd93cb1\n\nv0.13.0\n\n24 March 2020\n\n\nrelease v0.13.0 162acda\n\nv0.12.0\n\n24 March 2020\n\n\nrelease v0.12.0 79fee74\n\nv0.11.0\n\n24 March 2020\n\n\nrelease v0.11.0 828148a\n\nv0.10.0\n\n24 March 2020\n\n\nrelease v0.10.0 35a78e4\n\nv0.9.0\n\n24 March 2020\n\n\nrelease v0.9.0 2011e46\n\nv0.8.0\n\n24 March 2020\n\n\nrelease v0.8.0 02c06cb\n\nv0.7.0\n\n24 March 2020\n\n\nrelease v0.7.0 75fc12c\n\nv0.6.0\n\n24 March 2020\n\n\nrelease v0.6.0 184a834\n\nv0.5.0\n\n24 March 2020\n\n\nrelease v0.5.0 ab311db\n\nv0.4.0\n\n24 March 2020\n\n\nrelease v0.4.0 42f56c1\nfixed visuals cefa1f1\nplay rewrite and project preparations 1098d6a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @allex/crc32 : ^1.0.4\n        \n            @angular/animations : 19.2.3\n        \n            @angular/cdk : 19.2.6\n        \n            @angular/common : 19.2.3\n        \n            @angular/compiler : 19.2.3\n        \n            @angular/core : 19.2.3\n        \n            @angular/forms : 19.2.3\n        \n            @angular/material : 19.2.6\n        \n            @angular/platform-browser : 19.2.3\n        \n            @angular/platform-browser-dynamic : 19.2.3\n        \n            @angular/router : 19.2.3\n        \n            @angular/service-worker : 19.2.3\n        \n            @thebespokepixel/es-tinycolor : ^3.1.0\n        \n            date-fns : ^4.1.0\n        \n            lucene-escape-query : ^1.0.1\n        \n            music-metadata : 11.0.2\n        \n            ngx-date-fns : 12.0.0\n        \n            ngx-indexed-db : 19.4.3\n        \n            ngx-pipes : 3.2.2\n        \n            ngx-webstorage : 19.0.1\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            spark-md5 : ^3.0.2\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../helpers-time.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/helpers-time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    41 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.2.12\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : MIT\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nuse webworker for node-vibrant\nAudio-File explorer + Suche\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \"60\" | \"170\" | \"310\" | \"600\" | \"1000\" | \"3000\" | \"6000\" | \"12000\" | \"14000\" | \"16000\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../app.config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../audio.service.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideExperimentalZonelessChangeDetection(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideAnimations(),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'metadataCache',\n  version: 2,\n  objectStoresMeta: [\n    {\n      store: 'metatags',\n      storeConfig: { keyPath: 'crc', autoIncrement: false },\n      storeSchema: [\n        { name: 'crc', keypath: 'crc', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'dirHandle',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/audio.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FrequencyBand[]\n\n                    \n                \n                \n                    \n                        Default value : [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
